
build/main.elf:     file format elf32-littleriscv


Disassembly of section .text:

80000000 <__start>:

.section .init
__start:
la sp,  __stack_top
80000000:	00008117          	auipc	sp,0x8
80000004:	c8010113          	addi	sp,sp,-896 # 80007c80 <pxReadyTasksLists>
add s0,sp,x0
80000008:	00010433          	add	s0,sp,zero
j main
8000000c:	0040006f          	jal	zero,80000010 <main>

80000010 <main>:
#include <stdint.h>
#include <stddef.h>

int i = 0;

void main(void){
80000010:	ff010113          	addi	sp,sp,-16
80000014:	00112623          	sw	ra,12(sp)
80000018:	00812423          	sw	s0,8(sp)
8000001c:	01010413          	addi	s0,sp,16
    while(1) {
        i = i+1;
80000020:	800097b7          	lui	a5,0x80009
80000024:	9007a783          	lw	a5,-1792(a5) # 80008900 <i>
80000028:	00178713          	addi	a4,a5,1
8000002c:	800097b7          	lui	a5,0x80009
80000030:	90e7a023          	sw	a4,-1792(a5) # 80008900 <i>
80000034:	fedff06f          	jal	zero,80000020 <main+0x10>

80000038 <vApplicationIdleHook>:
    }


}

void vApplicationIdleHook(void) {
80000038:	ff010113          	addi	sp,sp,-16
8000003c:	00112623          	sw	ra,12(sp)
80000040:	00812423          	sw	s0,8(sp)
80000044:	01010413          	addi	s0,sp,16
    // Custom idle task behavior
}
80000048:	00000013          	addi	zero,zero,0
8000004c:	00c12083          	lw	ra,12(sp)
80000050:	00812403          	lw	s0,8(sp)
80000054:	01010113          	addi	sp,sp,16
80000058:	00008067          	jalr	zero,0(ra)

8000005c <vApplicationTickHook>:

void vApplicationTickHook(void) {
8000005c:	ff010113          	addi	sp,sp,-16
80000060:	00112623          	sw	ra,12(sp)
80000064:	00812423          	sw	s0,8(sp)
80000068:	01010413          	addi	s0,sp,16
    // Custom tick hook behavior
}
8000006c:	00000013          	addi	zero,zero,0
80000070:	00c12083          	lw	ra,12(sp)
80000074:	00812403          	lw	s0,8(sp)
80000078:	01010113          	addi	sp,sp,16
8000007c:	00008067          	jalr	zero,0(ra)

80000080 <vApplicationStackOverflowHook>:
// TaskHandle_t xTask, char *pcTaskName
void vApplicationStackOverflowHook(void) {
80000080:	ff010113          	addi	sp,sp,-16
80000084:	00112623          	sw	ra,12(sp)
80000088:	00812423          	sw	s0,8(sp)
8000008c:	01010413          	addi	s0,sp,16
    // Handle stack overflow
}
80000090:	00000013          	addi	zero,zero,0
80000094:	00c12083          	lw	ra,12(sp)
80000098:	00812403          	lw	s0,8(sp)
8000009c:	01010113          	addi	sp,sp,16
800000a0:	00008067          	jalr	zero,0(ra)

800000a4 <vApplicationGetIdleTaskMemory>:
// StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize
void vApplicationGetIdleTaskMemory(void) {
800000a4:	ff010113          	addi	sp,sp,-16
800000a8:	00112623          	sw	ra,12(sp)
800000ac:	00812423          	sw	s0,8(sp)
800000b0:	01010413          	addi	s0,sp,16
    // Provide memory for the idle task
}
800000b4:	00000013          	addi	zero,zero,0
800000b8:	00c12083          	lw	ra,12(sp)
800000bc:	00812403          	lw	s0,8(sp)
800000c0:	01010113          	addi	sp,sp,16
800000c4:	00008067          	jalr	zero,0(ra)

800000c8 <vApplicationGetTimerTaskMemory>:
// StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize
void vApplicationGetTimerTaskMemory(void) {
800000c8:	ff010113          	addi	sp,sp,-16
800000cc:	00112623          	sw	ra,12(sp)
800000d0:	00812423          	sw	s0,8(sp)
800000d4:	01010413          	addi	s0,sp,16
    // Provide memory for the timer task
}
800000d8:	00000013          	addi	zero,zero,0
800000dc:	00c12083          	lw	ra,12(sp)
800000e0:	00812403          	lw	s0,8(sp)
800000e4:	01010113          	addi	sp,sp,16
800000e8:	00008067          	jalr	zero,0(ra)

800000ec <vListInitialise>:
/*-----------------------------------------------------------
* PUBLIC LIST API documented in list.h
*----------------------------------------------------------*/

void vListInitialise( List_t * const pxList )
{
800000ec:	fe010113          	addi	sp,sp,-32
800000f0:	00112e23          	sw	ra,28(sp)
800000f4:	00812c23          	sw	s0,24(sp)
800000f8:	02010413          	addi	s0,sp,32
800000fc:	fea42623          	sw	a0,-20(s0)
    traceENTER_vListInitialise( pxList );

    /* The list structure contains a list item which is used to mark the
     * end of the list.  To initialise the list the list end is inserted
     * as the only list entry. */
    pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );
80000100:	fec42783          	lw	a5,-20(s0)
80000104:	00878713          	addi	a4,a5,8
80000108:	fec42783          	lw	a5,-20(s0)
8000010c:	00e7a223          	sw	a4,4(a5)

    listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( &( pxList->xListEnd ) );

    /* The list end value is the highest possible value in the list to
     * ensure it remains at the end of the list. */
    pxList->xListEnd.xItemValue = portMAX_DELAY;
80000110:	fec42783          	lw	a5,-20(s0)
80000114:	fff00713          	addi	a4,zero,-1
80000118:	00e7a423          	sw	a4,8(a5)

    /* The list end next and previous pointers point to itself so we know
     * when the list is empty. */
    pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );
8000011c:	fec42783          	lw	a5,-20(s0)
80000120:	00878713          	addi	a4,a5,8
80000124:	fec42783          	lw	a5,-20(s0)
80000128:	00e7a623          	sw	a4,12(a5)
    pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );
8000012c:	fec42783          	lw	a5,-20(s0)
80000130:	00878713          	addi	a4,a5,8
80000134:	fec42783          	lw	a5,-20(s0)
80000138:	00e7a823          	sw	a4,16(a5)
        pxList->xListEnd.pxContainer = NULL;
        listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( &( pxList->xListEnd ) );
    }
    #endif

    pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
8000013c:	fec42783          	lw	a5,-20(s0)
80000140:	0007a023          	sw	zero,0(a5)
     * configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
    listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
    listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );

    traceRETURN_vListInitialise();
}
80000144:	00000013          	addi	zero,zero,0
80000148:	01c12083          	lw	ra,28(sp)
8000014c:	01812403          	lw	s0,24(sp)
80000150:	02010113          	addi	sp,sp,32
80000154:	00008067          	jalr	zero,0(ra)

80000158 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
80000158:	fe010113          	addi	sp,sp,-32
8000015c:	00112e23          	sw	ra,28(sp)
80000160:	00812c23          	sw	s0,24(sp)
80000164:	02010413          	addi	s0,sp,32
80000168:	fea42623          	sw	a0,-20(s0)
    traceENTER_vListInitialiseItem( pxItem );

    /* Make sure the list item is not recorded as being on a list. */
    pxItem->pxContainer = NULL;
8000016c:	fec42783          	lw	a5,-20(s0)
80000170:	0007a823          	sw	zero,16(a5)
     * configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
    listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
    listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );

    traceRETURN_vListInitialiseItem();
}
80000174:	00000013          	addi	zero,zero,0
80000178:	01c12083          	lw	ra,28(sp)
8000017c:	01812403          	lw	s0,24(sp)
80000180:	02010113          	addi	sp,sp,32
80000184:	00008067          	jalr	zero,0(ra)

80000188 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList,
                     ListItem_t * const pxNewListItem )
{
80000188:	fd010113          	addi	sp,sp,-48
8000018c:	02112623          	sw	ra,44(sp)
80000190:	02812423          	sw	s0,40(sp)
80000194:	03010413          	addi	s0,sp,48
80000198:	fca42e23          	sw	a0,-36(s0)
8000019c:	fcb42c23          	sw	a1,-40(s0)
    ListItem_t * const pxIndex = pxList->pxIndex;
800001a0:	fdc42783          	lw	a5,-36(s0)
800001a4:	0047a783          	lw	a5,4(a5)
800001a8:	fef42623          	sw	a5,-20(s0)
    listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

    /* Insert a new list item into pxList, but rather than sort the list,
     * makes the new list item the last item to be removed by a call to
     * listGET_OWNER_OF_NEXT_ENTRY(). */
    pxNewListItem->pxNext = pxIndex;
800001ac:	fd842783          	lw	a5,-40(s0)
800001b0:	fec42703          	lw	a4,-20(s0)
800001b4:	00e7a223          	sw	a4,4(a5)
    pxNewListItem->pxPrevious = pxIndex->pxPrevious;
800001b8:	fec42783          	lw	a5,-20(s0)
800001bc:	0087a703          	lw	a4,8(a5)
800001c0:	fd842783          	lw	a5,-40(s0)
800001c4:	00e7a423          	sw	a4,8(a5)

    /* Only used during decision coverage testing. */
    mtCOVERAGE_TEST_DELAY();

    pxIndex->pxPrevious->pxNext = pxNewListItem;
800001c8:	fec42783          	lw	a5,-20(s0)
800001cc:	0087a783          	lw	a5,8(a5)
800001d0:	fd842703          	lw	a4,-40(s0)
800001d4:	00e7a223          	sw	a4,4(a5)
    pxIndex->pxPrevious = pxNewListItem;
800001d8:	fec42783          	lw	a5,-20(s0)
800001dc:	fd842703          	lw	a4,-40(s0)
800001e0:	00e7a423          	sw	a4,8(a5)

    /* Remember which list the item is in. */
    pxNewListItem->pxContainer = pxList;
800001e4:	fd842783          	lw	a5,-40(s0)
800001e8:	fdc42703          	lw	a4,-36(s0)
800001ec:	00e7a823          	sw	a4,16(a5)

    ( pxList->uxNumberOfItems ) = ( UBaseType_t ) ( pxList->uxNumberOfItems + 1U );
800001f0:	fdc42783          	lw	a5,-36(s0)
800001f4:	0007a783          	lw	a5,0(a5)
800001f8:	00178713          	addi	a4,a5,1
800001fc:	fdc42783          	lw	a5,-36(s0)
80000200:	00e7a023          	sw	a4,0(a5)

    traceRETURN_vListInsertEnd();
}
80000204:	00000013          	addi	zero,zero,0
80000208:	02c12083          	lw	ra,44(sp)
8000020c:	02812403          	lw	s0,40(sp)
80000210:	03010113          	addi	sp,sp,48
80000214:	00008067          	jalr	zero,0(ra)

80000218 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList,
                  ListItem_t * const pxNewListItem )
{
80000218:	fd010113          	addi	sp,sp,-48
8000021c:	02112623          	sw	ra,44(sp)
80000220:	02812423          	sw	s0,40(sp)
80000224:	03010413          	addi	s0,sp,48
80000228:	fca42e23          	sw	a0,-36(s0)
8000022c:	fcb42c23          	sw	a1,-40(s0)
    ListItem_t * pxIterator;
    const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
80000230:	fd842783          	lw	a5,-40(s0)
80000234:	0007a783          	lw	a5,0(a5)
80000238:	fef42423          	sw	a5,-24(s0)
     * new list item should be placed after it.  This ensures that TCBs which are
     * stored in ready lists (all of which have the same xItemValue value) get a
     * share of the CPU.  However, if the xItemValue is the same as the back marker
     * the iteration loop below will not end.  Therefore the value is checked
     * first, and the algorithm slightly modified if necessary. */
    if( xValueOfInsertion == portMAX_DELAY )
8000023c:	fe842703          	lw	a4,-24(s0)
80000240:	fff00793          	addi	a5,zero,-1
80000244:	00f71a63          	bne	a4,a5,80000258 <vListInsert+0x40>
    {
        pxIterator = pxList->xListEnd.pxPrevious;
80000248:	fdc42783          	lw	a5,-36(s0)
8000024c:	0107a783          	lw	a5,16(a5)
80000250:	fef42623          	sw	a5,-20(s0)
80000254:	0340006f          	jal	zero,80000288 <vListInsert+0x70>
        *   5) If the FreeRTOS port supports interrupt nesting then ensure that
        *      the priority of the tick interrupt is at or below
        *      configMAX_SYSCALL_INTERRUPT_PRIORITY.
        **********************************************************************/

        for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext )
80000258:	fdc42783          	lw	a5,-36(s0)
8000025c:	00878793          	addi	a5,a5,8
80000260:	fef42623          	sw	a5,-20(s0)
80000264:	0100006f          	jal	zero,80000274 <vListInsert+0x5c>
80000268:	fec42783          	lw	a5,-20(s0)
8000026c:	0047a783          	lw	a5,4(a5)
80000270:	fef42623          	sw	a5,-20(s0)
80000274:	fec42783          	lw	a5,-20(s0)
80000278:	0047a783          	lw	a5,4(a5)
8000027c:	0007a783          	lw	a5,0(a5)
80000280:	fe842703          	lw	a4,-24(s0)
80000284:	fef772e3          	bgeu	a4,a5,80000268 <vListInsert+0x50>
            /* There is nothing to do here, just iterating to the wanted
             * insertion position. */
        }
    }

    pxNewListItem->pxNext = pxIterator->pxNext;
80000288:	fec42783          	lw	a5,-20(s0)
8000028c:	0047a703          	lw	a4,4(a5)
80000290:	fd842783          	lw	a5,-40(s0)
80000294:	00e7a223          	sw	a4,4(a5)
    pxNewListItem->pxNext->pxPrevious = pxNewListItem;
80000298:	fd842783          	lw	a5,-40(s0)
8000029c:	0047a783          	lw	a5,4(a5)
800002a0:	fd842703          	lw	a4,-40(s0)
800002a4:	00e7a423          	sw	a4,8(a5)
    pxNewListItem->pxPrevious = pxIterator;
800002a8:	fd842783          	lw	a5,-40(s0)
800002ac:	fec42703          	lw	a4,-20(s0)
800002b0:	00e7a423          	sw	a4,8(a5)
    pxIterator->pxNext = pxNewListItem;
800002b4:	fec42783          	lw	a5,-20(s0)
800002b8:	fd842703          	lw	a4,-40(s0)
800002bc:	00e7a223          	sw	a4,4(a5)

    /* Remember which list the item is in.  This allows fast removal of the
     * item later. */
    pxNewListItem->pxContainer = pxList;
800002c0:	fd842783          	lw	a5,-40(s0)
800002c4:	fdc42703          	lw	a4,-36(s0)
800002c8:	00e7a823          	sw	a4,16(a5)

    ( pxList->uxNumberOfItems ) = ( UBaseType_t ) ( pxList->uxNumberOfItems + 1U );
800002cc:	fdc42783          	lw	a5,-36(s0)
800002d0:	0007a783          	lw	a5,0(a5)
800002d4:	00178713          	addi	a4,a5,1
800002d8:	fdc42783          	lw	a5,-36(s0)
800002dc:	00e7a023          	sw	a4,0(a5)

    traceRETURN_vListInsert();
}
800002e0:	00000013          	addi	zero,zero,0
800002e4:	02c12083          	lw	ra,44(sp)
800002e8:	02812403          	lw	s0,40(sp)
800002ec:	03010113          	addi	sp,sp,48
800002f0:	00008067          	jalr	zero,0(ra)

800002f4 <uxListRemove>:
/*-----------------------------------------------------------*/


UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
{
800002f4:	fd010113          	addi	sp,sp,-48
800002f8:	02112623          	sw	ra,44(sp)
800002fc:	02812423          	sw	s0,40(sp)
80000300:	03010413          	addi	s0,sp,48
80000304:	fca42e23          	sw	a0,-36(s0)
    /* The list item knows which list it is in.  Obtain the list from the list
     * item. */
    List_t * const pxList = pxItemToRemove->pxContainer;
80000308:	fdc42783          	lw	a5,-36(s0)
8000030c:	0107a783          	lw	a5,16(a5)
80000310:	fef42623          	sw	a5,-20(s0)

    traceENTER_uxListRemove( pxItemToRemove );

    pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
80000314:	fdc42783          	lw	a5,-36(s0)
80000318:	0047a783          	lw	a5,4(a5)
8000031c:	fdc42703          	lw	a4,-36(s0)
80000320:	00872703          	lw	a4,8(a4)
80000324:	00e7a423          	sw	a4,8(a5)
    pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
80000328:	fdc42783          	lw	a5,-36(s0)
8000032c:	0087a783          	lw	a5,8(a5)
80000330:	fdc42703          	lw	a4,-36(s0)
80000334:	00472703          	lw	a4,4(a4)
80000338:	00e7a223          	sw	a4,4(a5)

    /* Only used during decision coverage testing. */
    mtCOVERAGE_TEST_DELAY();

    /* Make sure the index is left pointing to a valid item. */
    if( pxList->pxIndex == pxItemToRemove )
8000033c:	fec42783          	lw	a5,-20(s0)
80000340:	0047a783          	lw	a5,4(a5)
80000344:	fdc42703          	lw	a4,-36(s0)
80000348:	00f71a63          	bne	a4,a5,8000035c <uxListRemove+0x68>
    {
        pxList->pxIndex = pxItemToRemove->pxPrevious;
8000034c:	fdc42783          	lw	a5,-36(s0)
80000350:	0087a703          	lw	a4,8(a5)
80000354:	fec42783          	lw	a5,-20(s0)
80000358:	00e7a223          	sw	a4,4(a5)
    else
    {
        mtCOVERAGE_TEST_MARKER();
    }

    pxItemToRemove->pxContainer = NULL;
8000035c:	fdc42783          	lw	a5,-36(s0)
80000360:	0007a823          	sw	zero,16(a5)
    ( pxList->uxNumberOfItems ) = ( UBaseType_t ) ( pxList->uxNumberOfItems - 1U );
80000364:	fec42783          	lw	a5,-20(s0)
80000368:	0007a783          	lw	a5,0(a5)
8000036c:	fff78713          	addi	a4,a5,-1
80000370:	fec42783          	lw	a5,-20(s0)
80000374:	00e7a023          	sw	a4,0(a5)

    traceRETURN_uxListRemove( pxList->uxNumberOfItems );

    return pxList->uxNumberOfItems;
80000378:	fec42783          	lw	a5,-20(s0)
8000037c:	0007a783          	lw	a5,0(a5)
}
80000380:	00078513          	addi	a0,a5,0
80000384:	02c12083          	lw	ra,44(sp)
80000388:	02812403          	lw	s0,40(sp)
8000038c:	03010113          	addi	sp,sp,48
80000390:	00008067          	jalr	zero,0(ra)

80000394 <xQueueGenericReset>:
    } while( 0 )
/*-----------------------------------------------------------*/

BaseType_t xQueueGenericReset( QueueHandle_t xQueue,
                               BaseType_t xNewQueue )
{
80000394:	fc010113          	addi	sp,sp,-64
80000398:	02112e23          	sw	ra,60(sp)
8000039c:	02812c23          	sw	s0,56(sp)
800003a0:	02912a23          	sw	s1,52(sp)
800003a4:	03212823          	sw	s2,48(sp)
800003a8:	03312623          	sw	s3,44(sp)
800003ac:	03412423          	sw	s4,40(sp)
800003b0:	03512223          	sw	s5,36(sp)
800003b4:	03612023          	sw	s6,32(sp)
800003b8:	04010413          	addi	s0,sp,64
800003bc:	fca42623          	sw	a0,-52(s0)
800003c0:	fcb42423          	sw	a1,-56(s0)
    BaseType_t xReturn = pdPASS;
800003c4:	00100793          	addi	a5,zero,1
800003c8:	fcf42e23          	sw	a5,-36(s0)
    Queue_t * const pxQueue = xQueue;
800003cc:	fcc42783          	lw	a5,-52(s0)
800003d0:	fcf42c23          	sw	a5,-40(s0)

    traceENTER_xQueueGenericReset( xQueue, xNewQueue );

    configASSERT( pxQueue );

    if( ( pxQueue != NULL ) &&
800003d4:	fd842783          	lw	a5,-40(s0)
800003d8:	22078463          	beq	a5,zero,80000600 <xQueueGenericReset+0x26c>
        ( pxQueue->uxLength >= 1U ) &&
800003dc:	fd842783          	lw	a5,-40(s0)
800003e0:	03c7a783          	lw	a5,60(a5)
    if( ( pxQueue != NULL ) &&
800003e4:	20078e63          	beq	a5,zero,80000600 <xQueueGenericReset+0x26c>
        /* Check for multiplication overflow. */
        ( ( SIZE_MAX / pxQueue->uxLength ) >= pxQueue->uxItemSize ) )
800003e8:	fd842783          	lw	a5,-40(s0)
800003ec:	0407a483          	lw	s1,64(a5)
800003f0:	fd842783          	lw	a5,-40(s0)
800003f4:	03c7a903          	lw	s2,60(a5)
800003f8:	00000a13          	addi	s4,zero,0
800003fc:	0104d693          	srli	a3,s1,0x10
80000400:	01095793          	srli	a5,s2,0x10
80000404:	01069713          	slli	a4,a3,0x10
80000408:	01075713          	srli	a4,a4,0x10
8000040c:	02071e63          	bne	a4,zero,80000448 <xQueueGenericReset+0xb4>
80000410:	01079713          	slli	a4,a5,0x10
80000414:	01075713          	srli	a4,a4,0x10
80000418:	02071263          	bne	a4,zero,8000043c <xQueueGenericReset+0xa8>
8000041c:	01049793          	slli	a5,s1,0x10
80000420:	0107d793          	srli	a5,a5,0x10
80000424:	01091713          	slli	a4,s2,0x10
80000428:	01075713          	srli	a4,a4,0x10
8000042c:	00070593          	addi	a1,a4,0
80000430:	00078513          	addi	a0,a5,0
80000434:	60c050ef          	jal	ra,80005a40 <__mulsi3>
80000438:	09c0006f          	jal	zero,800004d4 <xQueueGenericReset+0x140>
8000043c:	00078a93          	addi	s5,a5,0
80000440:	00048b13          	addi	s6,s1,0
80000444:	0180006f          	jal	zero,8000045c <xQueueGenericReset+0xc8>
80000448:	01079793          	slli	a5,a5,0x10
8000044c:	0107d793          	srli	a5,a5,0x10
80000450:	06079463          	bne	a5,zero,800004b8 <xQueueGenericReset+0x124>
80000454:	00068a93          	addi	s5,a3,0
80000458:	00090b13          	addi	s6,s2,0
8000045c:	01049793          	slli	a5,s1,0x10
80000460:	0107d793          	srli	a5,a5,0x10
80000464:	01091713          	slli	a4,s2,0x10
80000468:	01075713          	srli	a4,a4,0x10
8000046c:	00070593          	addi	a1,a4,0
80000470:	00078513          	addi	a0,a5,0
80000474:	5cc050ef          	jal	ra,80005a40 <__mulsi3>
80000478:	00050993          	addi	s3,a0,0
8000047c:	010b1793          	slli	a5,s6,0x10
80000480:	0107d793          	srli	a5,a5,0x10
80000484:	010a9713          	slli	a4,s5,0x10
80000488:	01075713          	srli	a4,a4,0x10
8000048c:	00070593          	addi	a1,a4,0
80000490:	00078513          	addi	a0,a5,0
80000494:	5ac050ef          	jal	ra,80005a40 <__mulsi3>
80000498:	00050793          	addi	a5,a0,0
8000049c:	0109d713          	srli	a4,s3,0x10
800004a0:	00e787b3          	add	a5,a5,a4
800004a4:	4107d793          	srai	a5,a5,0x10
800004a8:	01079793          	slli	a5,a5,0x10
800004ac:	0107d793          	srli	a5,a5,0x10
800004b0:	00079a63          	bne	a5,zero,800004c4 <xQueueGenericReset+0x130>
800004b4:	0200006f          	jal	zero,800004d4 <xQueueGenericReset+0x140>
800004b8:	00090593          	addi	a1,s2,0
800004bc:	00048513          	addi	a0,s1,0
800004c0:	580050ef          	jal	ra,80005a40 <__mulsi3>
800004c4:	00090593          	addi	a1,s2,0
800004c8:	00048513          	addi	a0,s1,0
800004cc:	574050ef          	jal	ra,80005a40 <__mulsi3>
800004d0:	00100a13          	addi	s4,zero,1
800004d4:	000a0793          	addi	a5,s4,0
        ( pxQueue->uxLength >= 1U ) &&
800004d8:	12079463          	bne	a5,zero,80000600 <xQueueGenericReset+0x26c>
    {
        taskENTER_CRITICAL();
800004dc:	30047073          	csrrci	zero,mstatus,8
800004e0:	800077b7          	lui	a5,0x80007
800004e4:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
800004e8:	00178713          	addi	a4,a5,1
800004ec:	800077b7          	lui	a5,0x80007
800004f0:	c6e7a623          	sw	a4,-916(a5) # 80006c6c <xCriticalNesting>
        {
            pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize );
800004f4:	fd842783          	lw	a5,-40(s0)
800004f8:	0007a483          	lw	s1,0(a5)
800004fc:	fd842783          	lw	a5,-40(s0)
80000500:	03c7a703          	lw	a4,60(a5)
80000504:	fd842783          	lw	a5,-40(s0)
80000508:	0407a783          	lw	a5,64(a5)
8000050c:	00078593          	addi	a1,a5,0
80000510:	00070513          	addi	a0,a4,0
80000514:	52c050ef          	jal	ra,80005a40 <__mulsi3>
80000518:	00050793          	addi	a5,a0,0
8000051c:	00f48733          	add	a4,s1,a5
80000520:	fd842783          	lw	a5,-40(s0)
80000524:	00e7a423          	sw	a4,8(a5)
            pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
80000528:	fd842783          	lw	a5,-40(s0)
8000052c:	0207ac23          	sw	zero,56(a5)
            pxQueue->pcWriteTo = pxQueue->pcHead;
80000530:	fd842783          	lw	a5,-40(s0)
80000534:	0007a703          	lw	a4,0(a5)
80000538:	fd842783          	lw	a5,-40(s0)
8000053c:	00e7a223          	sw	a4,4(a5)
            pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize );
80000540:	fd842783          	lw	a5,-40(s0)
80000544:	0007a483          	lw	s1,0(a5)
80000548:	fd842783          	lw	a5,-40(s0)
8000054c:	03c7a783          	lw	a5,60(a5)
80000550:	fff78713          	addi	a4,a5,-1
80000554:	fd842783          	lw	a5,-40(s0)
80000558:	0407a783          	lw	a5,64(a5)
8000055c:	00078593          	addi	a1,a5,0
80000560:	00070513          	addi	a0,a4,0
80000564:	4dc050ef          	jal	ra,80005a40 <__mulsi3>
80000568:	00050793          	addi	a5,a0,0
8000056c:	00f48733          	add	a4,s1,a5
80000570:	fd842783          	lw	a5,-40(s0)
80000574:	00e7a623          	sw	a4,12(a5)
            pxQueue->cRxLock = queueUNLOCKED;
80000578:	fd842783          	lw	a5,-40(s0)
8000057c:	fff00713          	addi	a4,zero,-1
80000580:	04e78223          	sb	a4,68(a5)
            pxQueue->cTxLock = queueUNLOCKED;
80000584:	fd842783          	lw	a5,-40(s0)
80000588:	fff00713          	addi	a4,zero,-1
8000058c:	04e782a3          	sb	a4,69(a5)

            if( xNewQueue == pdFALSE )
80000590:	fc842783          	lw	a5,-56(s0)
80000594:	02079263          	bne	a5,zero,800005b8 <xQueueGenericReset+0x224>
                /* If there are tasks blocked waiting to read from the queue, then
                 * the tasks will remain blocked as after this function exits the queue
                 * will still be empty.  If there are tasks blocked waiting to write to
                 * the queue, then one should be unblocked as after this function exits
                 * it will be possible to write to it. */
                if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
80000598:	fd842783          	lw	a5,-40(s0)
8000059c:	0107a783          	lw	a5,16(a5)
800005a0:	02078c63          	beq	a5,zero,800005d8 <xQueueGenericReset+0x244>
                {
                    if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
800005a4:	fd842783          	lw	a5,-40(s0)
800005a8:	01078793          	addi	a5,a5,16
800005ac:	00078513          	addi	a0,a5,0
800005b0:	728020ef          	jal	ra,80002cd8 <xTaskRemoveFromEventList>
800005b4:	0240006f          	jal	zero,800005d8 <xQueueGenericReset+0x244>
                }
            }
            else
            {
                /* Ensure the event queues start in the correct state. */
                vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
800005b8:	fd842783          	lw	a5,-40(s0)
800005bc:	01078793          	addi	a5,a5,16
800005c0:	00078513          	addi	a0,a5,0
800005c4:	b29ff0ef          	jal	ra,800000ec <vListInitialise>
                vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
800005c8:	fd842783          	lw	a5,-40(s0)
800005cc:	02478793          	addi	a5,a5,36
800005d0:	00078513          	addi	a0,a5,0
800005d4:	b19ff0ef          	jal	ra,800000ec <vListInitialise>
            }
        }
        taskEXIT_CRITICAL();
800005d8:	800077b7          	lui	a5,0x80007
800005dc:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
800005e0:	fff78713          	addi	a4,a5,-1
800005e4:	800077b7          	lui	a5,0x80007
800005e8:	c6e7a623          	sw	a4,-916(a5) # 80006c6c <xCriticalNesting>
800005ec:	800077b7          	lui	a5,0x80007
800005f0:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
800005f4:	00079863          	bne	a5,zero,80000604 <xQueueGenericReset+0x270>
800005f8:	30046073          	csrrsi	zero,mstatus,8
800005fc:	0080006f          	jal	zero,80000604 <xQueueGenericReset+0x270>
    }
    else
    {
        xReturn = pdFAIL;
80000600:	fc042e23          	sw	zero,-36(s0)

    /* A value is returned for calling semantic consistency with previous
     * versions. */
    traceRETURN_xQueueGenericReset( xReturn );

    return xReturn;
80000604:	fdc42783          	lw	a5,-36(s0)
}
80000608:	00078513          	addi	a0,a5,0
8000060c:	03c12083          	lw	ra,60(sp)
80000610:	03812403          	lw	s0,56(sp)
80000614:	03412483          	lw	s1,52(sp)
80000618:	03012903          	lw	s2,48(sp)
8000061c:	02c12983          	lw	s3,44(sp)
80000620:	02812a03          	lw	s4,40(sp)
80000624:	02412a83          	lw	s5,36(sp)
80000628:	02012b03          	lw	s6,32(sp)
8000062c:	04010113          	addi	sp,sp,64
80000630:	00008067          	jalr	zero,0(ra)

80000634 <xQueueGenericCreate>:
#if ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )

    QueueHandle_t xQueueGenericCreate( const UBaseType_t uxQueueLength,
                                       const UBaseType_t uxItemSize,
                                       const uint8_t ucQueueType )
    {
80000634:	fc010113          	addi	sp,sp,-64
80000638:	02112e23          	sw	ra,60(sp)
8000063c:	02812c23          	sw	s0,56(sp)
80000640:	02912a23          	sw	s1,52(sp)
80000644:	03212823          	sw	s2,48(sp)
80000648:	03312623          	sw	s3,44(sp)
8000064c:	03412423          	sw	s4,40(sp)
80000650:	04010413          	addi	s0,sp,64
80000654:	fca42623          	sw	a0,-52(s0)
80000658:	fcb42423          	sw	a1,-56(s0)
8000065c:	00060793          	addi	a5,a2,0
80000660:	fcf403a3          	sb	a5,-57(s0)
        Queue_t * pxNewQueue = NULL;
80000664:	fc042e23          	sw	zero,-36(s0)
        size_t xQueueSizeInBytes;
        uint8_t * pucQueueStorage;

        traceENTER_xQueueGenericCreate( uxQueueLength, uxItemSize, ucQueueType );

        if( ( uxQueueLength > ( UBaseType_t ) 0 ) &&
80000668:	fcc42783          	lw	a5,-52(s0)
8000066c:	16078a63          	beq	a5,zero,800007e0 <xQueueGenericCreate+0x1ac>
            /* Check for multiplication overflow. */
            ( ( SIZE_MAX / uxQueueLength ) >= uxItemSize ) &&
80000670:	00000913          	addi	s2,zero,0
80000674:	fc842783          	lw	a5,-56(s0)
80000678:	0107d593          	srli	a1,a5,0x10
8000067c:	fc842703          	lw	a4,-56(s0)
80000680:	fcc42783          	lw	a5,-52(s0)
80000684:	0107d693          	srli	a3,a5,0x10
80000688:	fcc42783          	lw	a5,-52(s0)
8000068c:	01059613          	slli	a2,a1,0x10
80000690:	01065613          	srli	a2,a2,0x10
80000694:	02061e63          	bne	a2,zero,800006d0 <xQueueGenericCreate+0x9c>
80000698:	01069613          	slli	a2,a3,0x10
8000069c:	01065613          	srli	a2,a2,0x10
800006a0:	02061263          	bne	a2,zero,800006c4 <xQueueGenericCreate+0x90>
800006a4:	01071713          	slli	a4,a4,0x10
800006a8:	01075713          	srli	a4,a4,0x10
800006ac:	01079793          	slli	a5,a5,0x10
800006b0:	0107d793          	srli	a5,a5,0x10
800006b4:	00078593          	addi	a1,a5,0
800006b8:	00070513          	addi	a0,a4,0
800006bc:	384050ef          	jal	ra,80005a40 <__mulsi3>
800006c0:	09c0006f          	jal	zero,8000075c <xQueueGenericCreate+0x128>
800006c4:	00068993          	addi	s3,a3,0
800006c8:	00070a13          	addi	s4,a4,0
800006cc:	0180006f          	jal	zero,800006e4 <xQueueGenericCreate+0xb0>
800006d0:	01069693          	slli	a3,a3,0x10
800006d4:	0106d693          	srli	a3,a3,0x10
800006d8:	06069463          	bne	a3,zero,80000740 <xQueueGenericCreate+0x10c>
800006dc:	00058993          	addi	s3,a1,0
800006e0:	00078a13          	addi	s4,a5,0
800006e4:	01071713          	slli	a4,a4,0x10
800006e8:	01075713          	srli	a4,a4,0x10
800006ec:	01079793          	slli	a5,a5,0x10
800006f0:	0107d793          	srli	a5,a5,0x10
800006f4:	00078593          	addi	a1,a5,0
800006f8:	00070513          	addi	a0,a4,0
800006fc:	344050ef          	jal	ra,80005a40 <__mulsi3>
80000700:	00050493          	addi	s1,a0,0
80000704:	010a1793          	slli	a5,s4,0x10
80000708:	0107d793          	srli	a5,a5,0x10
8000070c:	01099713          	slli	a4,s3,0x10
80000710:	01075713          	srli	a4,a4,0x10
80000714:	00070593          	addi	a1,a4,0
80000718:	00078513          	addi	a0,a5,0
8000071c:	324050ef          	jal	ra,80005a40 <__mulsi3>
80000720:	00050793          	addi	a5,a0,0
80000724:	0104d713          	srli	a4,s1,0x10
80000728:	00e787b3          	add	a5,a5,a4
8000072c:	4107d793          	srai	a5,a5,0x10
80000730:	01079793          	slli	a5,a5,0x10
80000734:	0107d793          	srli	a5,a5,0x10
80000738:	00079a63          	bne	a5,zero,8000074c <xQueueGenericCreate+0x118>
8000073c:	0200006f          	jal	zero,8000075c <xQueueGenericCreate+0x128>
80000740:	fcc42583          	lw	a1,-52(s0)
80000744:	fc842503          	lw	a0,-56(s0)
80000748:	2f8050ef          	jal	ra,80005a40 <__mulsi3>
8000074c:	fcc42583          	lw	a1,-52(s0)
80000750:	fc842503          	lw	a0,-56(s0)
80000754:	2ec050ef          	jal	ra,80005a40 <__mulsi3>
80000758:	00100913          	addi	s2,zero,1
8000075c:	00090793          	addi	a5,s2,0
        if( ( uxQueueLength > ( UBaseType_t ) 0 ) &&
80000760:	08079063          	bne	a5,zero,800007e0 <xQueueGenericCreate+0x1ac>
            /* Check for addition overflow. */
            ( ( UBaseType_t ) ( SIZE_MAX - sizeof( Queue_t ) ) >= ( uxQueueLength * uxItemSize ) ) )
80000764:	fc842583          	lw	a1,-56(s0)
80000768:	fcc42503          	lw	a0,-52(s0)
8000076c:	2d4050ef          	jal	ra,80005a40 <__mulsi3>
80000770:	00050793          	addi	a5,a0,0
80000774:	00078713          	addi	a4,a5,0
            ( ( SIZE_MAX / uxQueueLength ) >= uxItemSize ) &&
80000778:	fb700793          	addi	a5,zero,-73
8000077c:	06e7e263          	bltu	a5,a4,800007e0 <xQueueGenericCreate+0x1ac>
        {
            /* Allocate enough space to hold the maximum number of items that
             * can be in the queue at any time.  It is valid for uxItemSize to be
             * zero in the case the queue is used as a semaphore. */
            xQueueSizeInBytes = ( size_t ) ( ( size_t ) uxQueueLength * ( size_t ) uxItemSize );
80000780:	fc842583          	lw	a1,-56(s0)
80000784:	fcc42503          	lw	a0,-52(s0)
80000788:	2b8050ef          	jal	ra,80005a40 <__mulsi3>
8000078c:	00050793          	addi	a5,a0,0
80000790:	fcf42c23          	sw	a5,-40(s0)

            /* MISRA Ref 11.5.1 [Malloc memory assignment] */
            /* More details at: https://github.com/FreeRTOS/FreeRTOS-Kernel/blob/main/MISRA.md#rule-115 */
            /* coverity[misra_c_2012_rule_11_5_violation] */
            pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes );
80000794:	fd842783          	lw	a5,-40(s0)
80000798:	04878793          	addi	a5,a5,72
8000079c:	00078513          	addi	a0,a5,0
800007a0:	251040ef          	jal	ra,800051f0 <pvPortMalloc>
800007a4:	fca42e23          	sw	a0,-36(s0)

            if( pxNewQueue != NULL )
800007a8:	fdc42783          	lw	a5,-36(s0)
800007ac:	02078a63          	beq	a5,zero,800007e0 <xQueueGenericCreate+0x1ac>
            {
                /* Jump past the queue structure to find the location of the queue
                 * storage area. */
                pucQueueStorage = ( uint8_t * ) pxNewQueue;
800007b0:	fdc42783          	lw	a5,-36(s0)
800007b4:	fcf42a23          	sw	a5,-44(s0)
                pucQueueStorage += sizeof( Queue_t );
800007b8:	fd442783          	lw	a5,-44(s0)
800007bc:	04878793          	addi	a5,a5,72
800007c0:	fcf42a23          	sw	a5,-44(s0)
                     * deleted. */
                    pxNewQueue->ucStaticallyAllocated = pdFALSE;
                }
                #endif /* configSUPPORT_STATIC_ALLOCATION */

                prvInitialiseNewQueue( uxQueueLength, uxItemSize, pucQueueStorage, ucQueueType, pxNewQueue );
800007c4:	fc744783          	lbu	a5,-57(s0)
800007c8:	fdc42703          	lw	a4,-36(s0)
800007cc:	00078693          	addi	a3,a5,0
800007d0:	fd442603          	lw	a2,-44(s0)
800007d4:	fc842583          	lw	a1,-56(s0)
800007d8:	fcc42503          	lw	a0,-52(s0)
800007dc:	02c000ef          	jal	ra,80000808 <prvInitialiseNewQueue>
            mtCOVERAGE_TEST_MARKER();
        }

        traceRETURN_xQueueGenericCreate( pxNewQueue );

        return pxNewQueue;
800007e0:	fdc42783          	lw	a5,-36(s0)
    }
800007e4:	00078513          	addi	a0,a5,0
800007e8:	03c12083          	lw	ra,60(sp)
800007ec:	03812403          	lw	s0,56(sp)
800007f0:	03412483          	lw	s1,52(sp)
800007f4:	03012903          	lw	s2,48(sp)
800007f8:	02c12983          	lw	s3,44(sp)
800007fc:	02812a03          	lw	s4,40(sp)
80000800:	04010113          	addi	sp,sp,64
80000804:	00008067          	jalr	zero,0(ra)

80000808 <prvInitialiseNewQueue>:
static void prvInitialiseNewQueue( const UBaseType_t uxQueueLength,
                                   const UBaseType_t uxItemSize,
                                   uint8_t * pucQueueStorage,
                                   const uint8_t ucQueueType,
                                   Queue_t * pxNewQueue )
{
80000808:	fd010113          	addi	sp,sp,-48
8000080c:	02112623          	sw	ra,44(sp)
80000810:	02812423          	sw	s0,40(sp)
80000814:	03010413          	addi	s0,sp,48
80000818:	fea42623          	sw	a0,-20(s0)
8000081c:	feb42423          	sw	a1,-24(s0)
80000820:	fec42223          	sw	a2,-28(s0)
80000824:	00068793          	addi	a5,a3,0
80000828:	fce42e23          	sw	a4,-36(s0)
8000082c:	fef401a3          	sb	a5,-29(s0)
    /* Remove compiler warnings about unused parameters should
     * configUSE_TRACE_FACILITY not be set to 1. */
    ( void ) ucQueueType;

    if( uxItemSize == ( UBaseType_t ) 0 )
80000830:	fe842783          	lw	a5,-24(s0)
80000834:	00079a63          	bne	a5,zero,80000848 <prvInitialiseNewQueue+0x40>
    {
        /* No RAM was allocated for the queue storage area, but PC head cannot
         * be set to NULL because NULL is used as a key to say the queue is used as
         * a mutex.  Therefore just set pcHead to point to the queue as a benign
         * value that is known to be within the memory map. */
        pxNewQueue->pcHead = ( int8_t * ) pxNewQueue;
80000838:	fdc42783          	lw	a5,-36(s0)
8000083c:	fdc42703          	lw	a4,-36(s0)
80000840:	00e7a023          	sw	a4,0(a5)
80000844:	0100006f          	jal	zero,80000854 <prvInitialiseNewQueue+0x4c>
    }
    else
    {
        /* Set the head to the start of the queue storage area. */
        pxNewQueue->pcHead = ( int8_t * ) pucQueueStorage;
80000848:	fdc42783          	lw	a5,-36(s0)
8000084c:	fe442703          	lw	a4,-28(s0)
80000850:	00e7a023          	sw	a4,0(a5)
    }

    /* Initialise the queue members as described where the queue type is
     * defined. */
    pxNewQueue->uxLength = uxQueueLength;
80000854:	fdc42783          	lw	a5,-36(s0)
80000858:	fec42703          	lw	a4,-20(s0)
8000085c:	02e7ae23          	sw	a4,60(a5)
    pxNewQueue->uxItemSize = uxItemSize;
80000860:	fdc42783          	lw	a5,-36(s0)
80000864:	fe842703          	lw	a4,-24(s0)
80000868:	04e7a023          	sw	a4,64(a5)
    ( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
8000086c:	00100593          	addi	a1,zero,1
80000870:	fdc42503          	lw	a0,-36(s0)
80000874:	b21ff0ef          	jal	ra,80000394 <xQueueGenericReset>
        pxNewQueue->pxQueueSetContainer = NULL;
    }
    #endif /* configUSE_QUEUE_SETS */

    traceQUEUE_CREATE( pxNewQueue );
}
80000878:	00000013          	addi	zero,zero,0
8000087c:	02c12083          	lw	ra,44(sp)
80000880:	02812403          	lw	s0,40(sp)
80000884:	03010113          	addi	sp,sp,48
80000888:	00008067          	jalr	zero,0(ra)

8000088c <xQueueGenericSend>:

BaseType_t xQueueGenericSend( QueueHandle_t xQueue,
                              const void * const pvItemToQueue,
                              TickType_t xTicksToWait,
                              const BaseType_t xCopyPosition )
{
8000088c:	fc010113          	addi	sp,sp,-64
80000890:	02112e23          	sw	ra,60(sp)
80000894:	02812c23          	sw	s0,56(sp)
80000898:	04010413          	addi	s0,sp,64
8000089c:	fca42623          	sw	a0,-52(s0)
800008a0:	fcb42423          	sw	a1,-56(s0)
800008a4:	fcc42223          	sw	a2,-60(s0)
800008a8:	fcd42023          	sw	a3,-64(s0)
    BaseType_t xEntryTimeSet = pdFALSE, xYieldRequired;
800008ac:	fe042623          	sw	zero,-20(s0)
    TimeOut_t xTimeOut;
    Queue_t * const pxQueue = xQueue;
800008b0:	fcc42783          	lw	a5,-52(s0)
800008b4:	fef42423          	sw	a5,-24(s0)
    }
    #endif

    for( ; ; )
    {
        taskENTER_CRITICAL();
800008b8:	30047073          	csrrci	zero,mstatus,8
800008bc:	800077b7          	lui	a5,0x80007
800008c0:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
800008c4:	00178713          	addi	a4,a5,1
800008c8:	800077b7          	lui	a5,0x80007
800008cc:	c6e7a623          	sw	a4,-916(a5) # 80006c6c <xCriticalNesting>
        {
            /* Is there room on the queue now?  The running task must be the
             * highest priority task wanting to access the queue.  If the head item
             * in the queue is to be overwritten then it does not matter if the
             * queue is full. */
            if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
800008d0:	fe842783          	lw	a5,-24(s0)
800008d4:	0387a703          	lw	a4,56(a5)
800008d8:	fe842783          	lw	a5,-24(s0)
800008dc:	03c7a783          	lw	a5,60(a5)
800008e0:	00f76863          	bltu	a4,a5,800008f0 <xQueueGenericSend+0x64>
800008e4:	fc042703          	lw	a4,-64(s0)
800008e8:	00200793          	addi	a5,zero,2
800008ec:	06f71063          	bne	a4,a5,8000094c <xQueueGenericSend+0xc0>
                        }
                    }
                }
                #else /* configUSE_QUEUE_SETS */
                {
                    xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
800008f0:	fc042603          	lw	a2,-64(s0)
800008f4:	fc842583          	lw	a1,-56(s0)
800008f8:	fe842503          	lw	a0,-24(s0)
800008fc:	625000ef          	jal	ra,80001720 <prvCopyDataToQueue>
80000900:	fea42223          	sw	a0,-28(s0)

                    /* If there was a task waiting for data to arrive on the
                     * queue then unblock it now. */
                    if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
80000904:	fe842783          	lw	a5,-24(s0)
80000908:	0247a783          	lw	a5,36(a5)
8000090c:	00078a63          	beq	a5,zero,80000920 <xQueueGenericSend+0x94>
                    {
                        if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
80000910:	fe842783          	lw	a5,-24(s0)
80000914:	02478793          	addi	a5,a5,36
80000918:	00078513          	addi	a0,a5,0
8000091c:	3bc020ef          	jal	ra,80002cd8 <xTaskRemoveFromEventList>
                        mtCOVERAGE_TEST_MARKER();
                    }
                }
                #endif /* configUSE_QUEUE_SETS */

                taskEXIT_CRITICAL();
80000920:	800077b7          	lui	a5,0x80007
80000924:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
80000928:	fff78713          	addi	a4,a5,-1
8000092c:	800077b7          	lui	a5,0x80007
80000930:	c6e7a623          	sw	a4,-916(a5) # 80006c6c <xCriticalNesting>
80000934:	800077b7          	lui	a5,0x80007
80000938:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
8000093c:	00079463          	bne	a5,zero,80000944 <xQueueGenericSend+0xb8>
80000940:	30046073          	csrrsi	zero,mstatus,8

                traceRETURN_xQueueGenericSend( pdPASS );

                return pdPASS;
80000944:	00100793          	addi	a5,zero,1
80000948:	1780006f          	jal	zero,80000ac0 <xQueueGenericSend+0x234>
            }
            else
            {
                if( xTicksToWait == ( TickType_t ) 0 )
8000094c:	fc442783          	lw	a5,-60(s0)
80000950:	02079863          	bne	a5,zero,80000980 <xQueueGenericSend+0xf4>
                {
                    /* The queue was full and no block time is specified (or
                     * the block time has expired) so leave now. */
                    taskEXIT_CRITICAL();
80000954:	800077b7          	lui	a5,0x80007
80000958:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
8000095c:	fff78713          	addi	a4,a5,-1
80000960:	800077b7          	lui	a5,0x80007
80000964:	c6e7a623          	sw	a4,-916(a5) # 80006c6c <xCriticalNesting>
80000968:	800077b7          	lui	a5,0x80007
8000096c:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
80000970:	00079463          	bne	a5,zero,80000978 <xQueueGenericSend+0xec>
80000974:	30046073          	csrrsi	zero,mstatus,8
                    /* Return to the original privilege level before exiting
                     * the function. */
                    traceQUEUE_SEND_FAILED( pxQueue );
                    traceRETURN_xQueueGenericSend( errQUEUE_FULL );

                    return errQUEUE_FULL;
80000978:	00000793          	addi	a5,zero,0
8000097c:	1440006f          	jal	zero,80000ac0 <xQueueGenericSend+0x234>
                }
                else if( xEntryTimeSet == pdFALSE )
80000980:	fec42783          	lw	a5,-20(s0)
80000984:	00079c63          	bne	a5,zero,8000099c <xQueueGenericSend+0x110>
                {
                    /* The queue was full and a block time was specified so
                     * configure the timeout structure. */
                    vTaskInternalSetTimeOutState( &xTimeOut );
80000988:	fdc40793          	addi	a5,s0,-36
8000098c:	00078513          	addi	a0,a5,0
80000990:	125020ef          	jal	ra,800032b4 <vTaskInternalSetTimeOutState>
                    xEntryTimeSet = pdTRUE;
80000994:	00100793          	addi	a5,zero,1
80000998:	fef42623          	sw	a5,-20(s0)
                    /* Entry time was already set. */
                    mtCOVERAGE_TEST_MARKER();
                }
            }
        }
        taskEXIT_CRITICAL();
8000099c:	800077b7          	lui	a5,0x80007
800009a0:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
800009a4:	fff78713          	addi	a4,a5,-1
800009a8:	800077b7          	lui	a5,0x80007
800009ac:	c6e7a623          	sw	a4,-916(a5) # 80006c6c <xCriticalNesting>
800009b0:	800077b7          	lui	a5,0x80007
800009b4:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
800009b8:	00079463          	bne	a5,zero,800009c0 <xQueueGenericSend+0x134>
800009bc:	30046073          	csrrsi	zero,mstatus,8

        /* Interrupts and other tasks can send to and receive from the queue
         * now the critical section has been exited. */

        vTaskSuspendAll();
800009c0:	0d9010ef          	jal	ra,80002298 <vTaskSuspendAll>
        prvLockQueue( pxQueue );
800009c4:	30047073          	csrrci	zero,mstatus,8
800009c8:	800077b7          	lui	a5,0x80007
800009cc:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
800009d0:	00178713          	addi	a4,a5,1
800009d4:	800077b7          	lui	a5,0x80007
800009d8:	c6e7a623          	sw	a4,-916(a5) # 80006c6c <xCriticalNesting>
800009dc:	fe842783          	lw	a5,-24(s0)
800009e0:	0447c783          	lbu	a5,68(a5)
800009e4:	01879713          	slli	a4,a5,0x18
800009e8:	41875713          	srai	a4,a4,0x18
800009ec:	fff00793          	addi	a5,zero,-1
800009f0:	00f71663          	bne	a4,a5,800009fc <xQueueGenericSend+0x170>
800009f4:	fe842783          	lw	a5,-24(s0)
800009f8:	04078223          	sb	zero,68(a5)
800009fc:	fe842783          	lw	a5,-24(s0)
80000a00:	0457c783          	lbu	a5,69(a5)
80000a04:	01879713          	slli	a4,a5,0x18
80000a08:	41875713          	srai	a4,a4,0x18
80000a0c:	fff00793          	addi	a5,zero,-1
80000a10:	00f71663          	bne	a4,a5,80000a1c <xQueueGenericSend+0x190>
80000a14:	fe842783          	lw	a5,-24(s0)
80000a18:	040782a3          	sb	zero,69(a5)
80000a1c:	800077b7          	lui	a5,0x80007
80000a20:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
80000a24:	fff78713          	addi	a4,a5,-1
80000a28:	800077b7          	lui	a5,0x80007
80000a2c:	c6e7a623          	sw	a4,-916(a5) # 80006c6c <xCriticalNesting>
80000a30:	800077b7          	lui	a5,0x80007
80000a34:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
80000a38:	00079463          	bne	a5,zero,80000a40 <xQueueGenericSend+0x1b4>
80000a3c:	30046073          	csrrsi	zero,mstatus,8

        /* Update the timeout state to see if it has expired yet. */
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
80000a40:	fc440713          	addi	a4,s0,-60
80000a44:	fdc40793          	addi	a5,s0,-36
80000a48:	00070593          	addi	a1,a4,0
80000a4c:	00078513          	addi	a0,a5,0
80000a50:	0ad020ef          	jal	ra,800032fc <xTaskCheckForTimeOut>
80000a54:	00050793          	addi	a5,a0,0
80000a58:	04079c63          	bne	a5,zero,80000ab0 <xQueueGenericSend+0x224>
        {
            if( prvIsQueueFull( pxQueue ) != pdFALSE )
80000a5c:	fe842503          	lw	a0,-24(s0)
80000a60:	0f4010ef          	jal	ra,80001b54 <prvIsQueueFull>
80000a64:	00050793          	addi	a5,a0,0
80000a68:	02078c63          	beq	a5,zero,80000aa0 <xQueueGenericSend+0x214>
            {
                traceBLOCKING_ON_QUEUE_SEND( pxQueue );
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
80000a6c:	fe842783          	lw	a5,-24(s0)
80000a70:	01078793          	addi	a5,a5,16
80000a74:	fc442703          	lw	a4,-60(s0)
80000a78:	00070593          	addi	a1,a4,0
80000a7c:	00078513          	addi	a0,a5,0
80000a80:	134020ef          	jal	ra,80002bb4 <vTaskPlaceOnEventList>
                /* Unlocking the queue means queue events can effect the
                 * event list. It is possible that interrupts occurring now
                 * remove this task from the event list again - but as the
                 * scheduler is suspended the task will go onto the pending
                 * ready list instead of the actual ready list. */
                prvUnlockQueue( pxQueue );
80000a84:	fe842503          	lw	a0,-24(s0)
80000a88:	691000ef          	jal	ra,80001918 <prvUnlockQueue>
                /* Resuming the scheduler will move tasks from the pending
                 * ready list into the ready list - so it is feasible that this
                 * task is already in the ready list before it yields - in which
                 * case the yield will not cause a context switch unless there
                 * is also a higher priority task in the pending ready list. */
                if( xTaskResumeAll() == pdFALSE )
80000a8c:	045010ef          	jal	ra,800022d0 <xTaskResumeAll>
80000a90:	00050793          	addi	a5,a0,0
80000a94:	e20792e3          	bne	a5,zero,800008b8 <xQueueGenericSend+0x2c>
                {
                    taskYIELD_WITHIN_API();
80000a98:	00000073          	ecall
80000a9c:	e1dff06f          	jal	zero,800008b8 <xQueueGenericSend+0x2c>
                }
            }
            else
            {
                /* Try again. */
                prvUnlockQueue( pxQueue );
80000aa0:	fe842503          	lw	a0,-24(s0)
80000aa4:	675000ef          	jal	ra,80001918 <prvUnlockQueue>
                ( void ) xTaskResumeAll();
80000aa8:	029010ef          	jal	ra,800022d0 <xTaskResumeAll>
80000aac:	e0dff06f          	jal	zero,800008b8 <xQueueGenericSend+0x2c>
            }
        }
        else
        {
            /* The timeout has expired. */
            prvUnlockQueue( pxQueue );
80000ab0:	fe842503          	lw	a0,-24(s0)
80000ab4:	665000ef          	jal	ra,80001918 <prvUnlockQueue>
            ( void ) xTaskResumeAll();
80000ab8:	019010ef          	jal	ra,800022d0 <xTaskResumeAll>

            traceQUEUE_SEND_FAILED( pxQueue );
            traceRETURN_xQueueGenericSend( errQUEUE_FULL );

            return errQUEUE_FULL;
80000abc:	00000793          	addi	a5,zero,0
        }
    }
}
80000ac0:	00078513          	addi	a0,a5,0
80000ac4:	03c12083          	lw	ra,60(sp)
80000ac8:	03812403          	lw	s0,56(sp)
80000acc:	04010113          	addi	sp,sp,64
80000ad0:	00008067          	jalr	zero,0(ra)

80000ad4 <xQueueGenericSendFromISR>:

BaseType_t xQueueGenericSendFromISR( QueueHandle_t xQueue,
                                     const void * const pvItemToQueue,
                                     BaseType_t * const pxHigherPriorityTaskWoken,
                                     const BaseType_t xCopyPosition )
{
80000ad4:	fc010113          	addi	sp,sp,-64
80000ad8:	02112e23          	sw	ra,60(sp)
80000adc:	02812c23          	sw	s0,56(sp)
80000ae0:	04010413          	addi	s0,sp,64
80000ae4:	fca42623          	sw	a0,-52(s0)
80000ae8:	fcb42423          	sw	a1,-56(s0)
80000aec:	fcc42223          	sw	a2,-60(s0)
80000af0:	fcd42023          	sw	a3,-64(s0)
    BaseType_t xReturn;
    UBaseType_t uxSavedInterruptStatus;
    Queue_t * const pxQueue = xQueue;
80000af4:	fcc42783          	lw	a5,-52(s0)
80000af8:	fef42423          	sw	a5,-24(s0)
     * not (i.e. has a task with a higher priority than us been woken by this
     * post). */
    /* MISRA Ref 4.7.1 [Return value shall be checked] */
    /* More details at: https://github.com/FreeRTOS/FreeRTOS-Kernel/blob/main/MISRA.md#dir-47 */
    /* coverity[misra_c_2012_directive_4_7_violation] */
    uxSavedInterruptStatus = ( UBaseType_t ) taskENTER_CRITICAL_FROM_ISR();
80000afc:	fe042223          	sw	zero,-28(s0)
    {
        if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
80000b00:	fe842783          	lw	a5,-24(s0)
80000b04:	0387a703          	lw	a4,56(a5)
80000b08:	fe842783          	lw	a5,-24(s0)
80000b0c:	03c7a783          	lw	a5,60(a5)
80000b10:	00f76863          	bltu	a4,a5,80000b20 <xQueueGenericSendFromISR+0x4c>
80000b14:	fc042703          	lw	a4,-64(s0)
80000b18:	00200793          	addi	a5,zero,2
80000b1c:	0af71863          	bne	a4,a5,80000bcc <xQueueGenericSendFromISR+0xf8>
        {
            const int8_t cTxLock = pxQueue->cTxLock;
80000b20:	fe842783          	lw	a5,-24(s0)
80000b24:	0457c783          	lbu	a5,69(a5)
80000b28:	fef401a3          	sb	a5,-29(s0)
            const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
80000b2c:	fe842783          	lw	a5,-24(s0)
80000b30:	0387a783          	lw	a5,56(a5)
80000b34:	fcf42e23          	sw	a5,-36(s0)
            /* Semaphores use xQueueGiveFromISR(), so pxQueue will not be a
             *  semaphore or mutex.  That means prvCopyDataToQueue() cannot result
             *  in a task disinheriting a priority and prvCopyDataToQueue() can be
             *  called here even though the disinherit function does not check if
             *  the scheduler is suspended before accessing the ready lists. */
            ( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
80000b38:	fc042603          	lw	a2,-64(s0)
80000b3c:	fc842583          	lw	a1,-56(s0)
80000b40:	fe842503          	lw	a0,-24(s0)
80000b44:	3dd000ef          	jal	ra,80001720 <prvCopyDataToQueue>

            /* The event list is not altered if the queue is locked.  This will
             * be done when the queue is unlocked later. */
            if( cTxLock == queueUNLOCKED )
80000b48:	fe340703          	lb	a4,-29(s0)
80000b4c:	fff00793          	addi	a5,zero,-1
80000b50:	04f71063          	bne	a4,a5,80000b90 <xQueueGenericSendFromISR+0xbc>
                        }
                    }
                }
                #else /* configUSE_QUEUE_SETS */
                {
                    if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
80000b54:	fe842783          	lw	a5,-24(s0)
80000b58:	0247a783          	lw	a5,36(a5)
80000b5c:	06078263          	beq	a5,zero,80000bc0 <xQueueGenericSendFromISR+0xec>
                    {
                        if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
80000b60:	fe842783          	lw	a5,-24(s0)
80000b64:	02478793          	addi	a5,a5,36
80000b68:	00078513          	addi	a0,a5,0
80000b6c:	16c020ef          	jal	ra,80002cd8 <xTaskRemoveFromEventList>
80000b70:	00050793          	addi	a5,a0,0
80000b74:	04078663          	beq	a5,zero,80000bc0 <xQueueGenericSendFromISR+0xec>
                        {
                            /* The task waiting has a higher priority so record that a
                             * context switch is required. */
                            if( pxHigherPriorityTaskWoken != NULL )
80000b78:	fc442783          	lw	a5,-60(s0)
80000b7c:	04078263          	beq	a5,zero,80000bc0 <xQueueGenericSendFromISR+0xec>
                            {
                                *pxHigherPriorityTaskWoken = pdTRUE;
80000b80:	fc442783          	lw	a5,-60(s0)
80000b84:	00100713          	addi	a4,zero,1
80000b88:	00e7a023          	sw	a4,0(a5)
80000b8c:	0340006f          	jal	zero,80000bc0 <xQueueGenericSendFromISR+0xec>
            }
            else
            {
                /* Increment the lock count so the task that unlocks the queue
                 * knows that data was posted while it was locked. */
                prvIncrementQueueTxLock( pxQueue, cTxLock );
80000b90:	319010ef          	jal	ra,800026a8 <uxTaskGetNumberOfTasks>
80000b94:	fca42c23          	sw	a0,-40(s0)
80000b98:	fe340783          	lb	a5,-29(s0)
80000b9c:	fd842703          	lw	a4,-40(s0)
80000ba0:	02e7f063          	bgeu	a5,a4,80000bc0 <xQueueGenericSendFromISR+0xec>
80000ba4:	fe344783          	lbu	a5,-29(s0)
80000ba8:	00178793          	addi	a5,a5,1
80000bac:	0ff7f793          	andi	a5,a5,255
80000bb0:	01879713          	slli	a4,a5,0x18
80000bb4:	41875713          	srai	a4,a4,0x18
80000bb8:	fe842783          	lw	a5,-24(s0)
80000bbc:	04e782a3          	sb	a4,69(a5)
            }

            xReturn = pdPASS;
80000bc0:	00100793          	addi	a5,zero,1
80000bc4:	fef42623          	sw	a5,-20(s0)
        {
80000bc8:	0080006f          	jal	zero,80000bd0 <xQueueGenericSendFromISR+0xfc>
        }
        else
        {
            traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
            xReturn = errQUEUE_FULL;
80000bcc:	fe042623          	sw	zero,-20(s0)
    }
    taskEXIT_CRITICAL_FROM_ISR( uxSavedInterruptStatus );

    traceRETURN_xQueueGenericSendFromISR( xReturn );

    return xReturn;
80000bd0:	fec42783          	lw	a5,-20(s0)
}
80000bd4:	00078513          	addi	a0,a5,0
80000bd8:	03c12083          	lw	ra,60(sp)
80000bdc:	03812403          	lw	s0,56(sp)
80000be0:	04010113          	addi	sp,sp,64
80000be4:	00008067          	jalr	zero,0(ra)

80000be8 <xQueueGiveFromISR>:
/*-----------------------------------------------------------*/

BaseType_t xQueueGiveFromISR( QueueHandle_t xQueue,
                              BaseType_t * const pxHigherPriorityTaskWoken )
{
80000be8:	fc010113          	addi	sp,sp,-64
80000bec:	02112e23          	sw	ra,60(sp)
80000bf0:	02812c23          	sw	s0,56(sp)
80000bf4:	04010413          	addi	s0,sp,64
80000bf8:	fca42623          	sw	a0,-52(s0)
80000bfc:	fcb42423          	sw	a1,-56(s0)
    BaseType_t xReturn;
    UBaseType_t uxSavedInterruptStatus;
    Queue_t * const pxQueue = xQueue;
80000c00:	fcc42783          	lw	a5,-52(s0)
80000c04:	fef42423          	sw	a5,-24(s0)
    portASSERT_IF_INTERRUPT_PRIORITY_INVALID();

    /* MISRA Ref 4.7.1 [Return value shall be checked] */
    /* More details at: https://github.com/FreeRTOS/FreeRTOS-Kernel/blob/main/MISRA.md#dir-47 */
    /* coverity[misra_c_2012_directive_4_7_violation] */
    uxSavedInterruptStatus = ( UBaseType_t ) taskENTER_CRITICAL_FROM_ISR();
80000c08:	fe042223          	sw	zero,-28(s0)
    {
        const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
80000c0c:	fe842783          	lw	a5,-24(s0)
80000c10:	0387a783          	lw	a5,56(a5)
80000c14:	fef42023          	sw	a5,-32(s0)

        /* When the queue is used to implement a semaphore no data is ever
         * moved through the queue but it is still valid to see if the queue 'has
         * space'. */
        if( uxMessagesWaiting < pxQueue->uxLength )
80000c18:	fe842783          	lw	a5,-24(s0)
80000c1c:	03c7a783          	lw	a5,60(a5)
80000c20:	fe042703          	lw	a4,-32(s0)
80000c24:	0af77263          	bgeu	a4,a5,80000cc8 <xQueueGiveFromISR+0xe0>
        {
            const int8_t cTxLock = pxQueue->cTxLock;
80000c28:	fe842783          	lw	a5,-24(s0)
80000c2c:	0457c783          	lbu	a5,69(a5)
80000c30:	fcf40fa3          	sb	a5,-33(s0)
             * holder - and if there is a mutex holder then the mutex cannot be
             * given from an ISR.  As this is the ISR version of the function it
             * can be assumed there is no mutex holder and no need to determine if
             * priority disinheritance is needed.  Simply increase the count of
             * messages (semaphores) available. */
            pxQueue->uxMessagesWaiting = ( UBaseType_t ) ( uxMessagesWaiting + ( UBaseType_t ) 1 );
80000c34:	fe042783          	lw	a5,-32(s0)
80000c38:	00178713          	addi	a4,a5,1
80000c3c:	fe842783          	lw	a5,-24(s0)
80000c40:	02e7ac23          	sw	a4,56(a5)

            /* The event list is not altered if the queue is locked.  This will
             * be done when the queue is unlocked later. */
            if( cTxLock == queueUNLOCKED )
80000c44:	fdf40703          	lb	a4,-33(s0)
80000c48:	fff00793          	addi	a5,zero,-1
80000c4c:	04f71063          	bne	a4,a5,80000c8c <xQueueGiveFromISR+0xa4>
                        }
                    }
                }
                #else /* configUSE_QUEUE_SETS */
                {
                    if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
80000c50:	fe842783          	lw	a5,-24(s0)
80000c54:	0247a783          	lw	a5,36(a5)
80000c58:	06078263          	beq	a5,zero,80000cbc <xQueueGiveFromISR+0xd4>
                    {
                        if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
80000c5c:	fe842783          	lw	a5,-24(s0)
80000c60:	02478793          	addi	a5,a5,36
80000c64:	00078513          	addi	a0,a5,0
80000c68:	070020ef          	jal	ra,80002cd8 <xTaskRemoveFromEventList>
80000c6c:	00050793          	addi	a5,a0,0
80000c70:	04078663          	beq	a5,zero,80000cbc <xQueueGiveFromISR+0xd4>
                        {
                            /* The task waiting has a higher priority so record that a
                             * context switch is required. */
                            if( pxHigherPriorityTaskWoken != NULL )
80000c74:	fc842783          	lw	a5,-56(s0)
80000c78:	04078263          	beq	a5,zero,80000cbc <xQueueGiveFromISR+0xd4>
                            {
                                *pxHigherPriorityTaskWoken = pdTRUE;
80000c7c:	fc842783          	lw	a5,-56(s0)
80000c80:	00100713          	addi	a4,zero,1
80000c84:	00e7a023          	sw	a4,0(a5)
80000c88:	0340006f          	jal	zero,80000cbc <xQueueGiveFromISR+0xd4>
            }
            else
            {
                /* Increment the lock count so the task that unlocks the queue
                 * knows that data was posted while it was locked. */
                prvIncrementQueueTxLock( pxQueue, cTxLock );
80000c8c:	21d010ef          	jal	ra,800026a8 <uxTaskGetNumberOfTasks>
80000c90:	fca42c23          	sw	a0,-40(s0)
80000c94:	fdf40783          	lb	a5,-33(s0)
80000c98:	fd842703          	lw	a4,-40(s0)
80000c9c:	02e7f063          	bgeu	a5,a4,80000cbc <xQueueGiveFromISR+0xd4>
80000ca0:	fdf44783          	lbu	a5,-33(s0)
80000ca4:	00178793          	addi	a5,a5,1
80000ca8:	0ff7f793          	andi	a5,a5,255
80000cac:	01879713          	slli	a4,a5,0x18
80000cb0:	41875713          	srai	a4,a4,0x18
80000cb4:	fe842783          	lw	a5,-24(s0)
80000cb8:	04e782a3          	sb	a4,69(a5)
            }

            xReturn = pdPASS;
80000cbc:	00100793          	addi	a5,zero,1
80000cc0:	fef42623          	sw	a5,-20(s0)
80000cc4:	0080006f          	jal	zero,80000ccc <xQueueGiveFromISR+0xe4>
        }
        else
        {
            traceQUEUE_SEND_FROM_ISR_FAILED( pxQueue );
            xReturn = errQUEUE_FULL;
80000cc8:	fe042623          	sw	zero,-20(s0)
    }
    taskEXIT_CRITICAL_FROM_ISR( uxSavedInterruptStatus );

    traceRETURN_xQueueGiveFromISR( xReturn );

    return xReturn;
80000ccc:	fec42783          	lw	a5,-20(s0)
}
80000cd0:	00078513          	addi	a0,a5,0
80000cd4:	03c12083          	lw	ra,60(sp)
80000cd8:	03812403          	lw	s0,56(sp)
80000cdc:	04010113          	addi	sp,sp,64
80000ce0:	00008067          	jalr	zero,0(ra)

80000ce4 <xQueueReceive>:
/*-----------------------------------------------------------*/

BaseType_t xQueueReceive( QueueHandle_t xQueue,
                          void * const pvBuffer,
                          TickType_t xTicksToWait )
{
80000ce4:	fc010113          	addi	sp,sp,-64
80000ce8:	02112e23          	sw	ra,60(sp)
80000cec:	02812c23          	sw	s0,56(sp)
80000cf0:	04010413          	addi	s0,sp,64
80000cf4:	fca42623          	sw	a0,-52(s0)
80000cf8:	fcb42423          	sw	a1,-56(s0)
80000cfc:	fcc42223          	sw	a2,-60(s0)
    BaseType_t xEntryTimeSet = pdFALSE;
80000d00:	fe042623          	sw	zero,-20(s0)
    TimeOut_t xTimeOut;
    Queue_t * const pxQueue = xQueue;
80000d04:	fcc42783          	lw	a5,-52(s0)
80000d08:	fef42423          	sw	a5,-24(s0)
    }
    #endif

    for( ; ; )
    {
        taskENTER_CRITICAL();
80000d0c:	30047073          	csrrci	zero,mstatus,8
80000d10:	800077b7          	lui	a5,0x80007
80000d14:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
80000d18:	00178713          	addi	a4,a5,1
80000d1c:	800077b7          	lui	a5,0x80007
80000d20:	c6e7a623          	sw	a4,-916(a5) # 80006c6c <xCriticalNesting>
        {
            const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
80000d24:	fe842783          	lw	a5,-24(s0)
80000d28:	0387a783          	lw	a5,56(a5)
80000d2c:	fef42223          	sw	a5,-28(s0)

            /* Is there data in the queue now?  To be running the calling task
             * must be the highest priority task wanting to access the queue. */
            if( uxMessagesWaiting > ( UBaseType_t ) 0 )
80000d30:	fe442783          	lw	a5,-28(s0)
80000d34:	06078463          	beq	a5,zero,80000d9c <xQueueReceive+0xb8>
            {
                /* Data available, remove one item. */
                prvCopyDataFromQueue( pxQueue, pvBuffer );
80000d38:	fc842583          	lw	a1,-56(s0)
80000d3c:	fe842503          	lw	a0,-24(s0)
80000d40:	341000ef          	jal	ra,80001880 <prvCopyDataFromQueue>
                traceQUEUE_RECEIVE( pxQueue );
                pxQueue->uxMessagesWaiting = ( UBaseType_t ) ( uxMessagesWaiting - ( UBaseType_t ) 1 );
80000d44:	fe442783          	lw	a5,-28(s0)
80000d48:	fff78713          	addi	a4,a5,-1
80000d4c:	fe842783          	lw	a5,-24(s0)
80000d50:	02e7ac23          	sw	a4,56(a5)

                /* There is now space in the queue, were any tasks waiting to
                 * post to the queue?  If so, unblock the highest priority waiting
                 * task. */
                if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
80000d54:	fe842783          	lw	a5,-24(s0)
80000d58:	0107a783          	lw	a5,16(a5)
80000d5c:	00078a63          	beq	a5,zero,80000d70 <xQueueReceive+0x8c>
                {
                    if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
80000d60:	fe842783          	lw	a5,-24(s0)
80000d64:	01078793          	addi	a5,a5,16
80000d68:	00078513          	addi	a0,a5,0
80000d6c:	76d010ef          	jal	ra,80002cd8 <xTaskRemoveFromEventList>
                else
                {
                    mtCOVERAGE_TEST_MARKER();
                }

                taskEXIT_CRITICAL();
80000d70:	800077b7          	lui	a5,0x80007
80000d74:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
80000d78:	fff78713          	addi	a4,a5,-1
80000d7c:	800077b7          	lui	a5,0x80007
80000d80:	c6e7a623          	sw	a4,-916(a5) # 80006c6c <xCriticalNesting>
80000d84:	800077b7          	lui	a5,0x80007
80000d88:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
80000d8c:	00079463          	bne	a5,zero,80000d94 <xQueueReceive+0xb0>
80000d90:	30046073          	csrrsi	zero,mstatus,8

                traceRETURN_xQueueReceive( pdPASS );

                return pdPASS;
80000d94:	00100793          	addi	a5,zero,1
80000d98:	1880006f          	jal	zero,80000f20 <xQueueReceive+0x23c>
            }
            else
            {
                if( xTicksToWait == ( TickType_t ) 0 )
80000d9c:	fc442783          	lw	a5,-60(s0)
80000da0:	02079863          	bne	a5,zero,80000dd0 <xQueueReceive+0xec>
                {
                    /* The queue was empty and no block time is specified (or
                     * the block time has expired) so leave now. */
                    taskEXIT_CRITICAL();
80000da4:	800077b7          	lui	a5,0x80007
80000da8:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
80000dac:	fff78713          	addi	a4,a5,-1
80000db0:	800077b7          	lui	a5,0x80007
80000db4:	c6e7a623          	sw	a4,-916(a5) # 80006c6c <xCriticalNesting>
80000db8:	800077b7          	lui	a5,0x80007
80000dbc:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
80000dc0:	00079463          	bne	a5,zero,80000dc8 <xQueueReceive+0xe4>
80000dc4:	30046073          	csrrsi	zero,mstatus,8

                    traceQUEUE_RECEIVE_FAILED( pxQueue );
                    traceRETURN_xQueueReceive( errQUEUE_EMPTY );

                    return errQUEUE_EMPTY;
80000dc8:	00000793          	addi	a5,zero,0
80000dcc:	1540006f          	jal	zero,80000f20 <xQueueReceive+0x23c>
                }
                else if( xEntryTimeSet == pdFALSE )
80000dd0:	fec42783          	lw	a5,-20(s0)
80000dd4:	00079c63          	bne	a5,zero,80000dec <xQueueReceive+0x108>
                {
                    /* The queue was empty and a block time was specified so
                     * configure the timeout structure. */
                    vTaskInternalSetTimeOutState( &xTimeOut );
80000dd8:	fdc40793          	addi	a5,s0,-36
80000ddc:	00078513          	addi	a0,a5,0
80000de0:	4d4020ef          	jal	ra,800032b4 <vTaskInternalSetTimeOutState>
                    xEntryTimeSet = pdTRUE;
80000de4:	00100793          	addi	a5,zero,1
80000de8:	fef42623          	sw	a5,-20(s0)
                    /* Entry time was already set. */
                    mtCOVERAGE_TEST_MARKER();
                }
            }
        }
        taskEXIT_CRITICAL();
80000dec:	800077b7          	lui	a5,0x80007
80000df0:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
80000df4:	fff78713          	addi	a4,a5,-1
80000df8:	800077b7          	lui	a5,0x80007
80000dfc:	c6e7a623          	sw	a4,-916(a5) # 80006c6c <xCriticalNesting>
80000e00:	800077b7          	lui	a5,0x80007
80000e04:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
80000e08:	00079463          	bne	a5,zero,80000e10 <xQueueReceive+0x12c>
80000e0c:	30046073          	csrrsi	zero,mstatus,8

        /* Interrupts and other tasks can send to and receive from the queue
         * now the critical section has been exited. */

        vTaskSuspendAll();
80000e10:	488010ef          	jal	ra,80002298 <vTaskSuspendAll>
        prvLockQueue( pxQueue );
80000e14:	30047073          	csrrci	zero,mstatus,8
80000e18:	800077b7          	lui	a5,0x80007
80000e1c:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
80000e20:	00178713          	addi	a4,a5,1
80000e24:	800077b7          	lui	a5,0x80007
80000e28:	c6e7a623          	sw	a4,-916(a5) # 80006c6c <xCriticalNesting>
80000e2c:	fe842783          	lw	a5,-24(s0)
80000e30:	0447c783          	lbu	a5,68(a5)
80000e34:	01879713          	slli	a4,a5,0x18
80000e38:	41875713          	srai	a4,a4,0x18
80000e3c:	fff00793          	addi	a5,zero,-1
80000e40:	00f71663          	bne	a4,a5,80000e4c <xQueueReceive+0x168>
80000e44:	fe842783          	lw	a5,-24(s0)
80000e48:	04078223          	sb	zero,68(a5)
80000e4c:	fe842783          	lw	a5,-24(s0)
80000e50:	0457c783          	lbu	a5,69(a5)
80000e54:	01879713          	slli	a4,a5,0x18
80000e58:	41875713          	srai	a4,a4,0x18
80000e5c:	fff00793          	addi	a5,zero,-1
80000e60:	00f71663          	bne	a4,a5,80000e6c <xQueueReceive+0x188>
80000e64:	fe842783          	lw	a5,-24(s0)
80000e68:	040782a3          	sb	zero,69(a5)
80000e6c:	800077b7          	lui	a5,0x80007
80000e70:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
80000e74:	fff78713          	addi	a4,a5,-1
80000e78:	800077b7          	lui	a5,0x80007
80000e7c:	c6e7a623          	sw	a4,-916(a5) # 80006c6c <xCriticalNesting>
80000e80:	800077b7          	lui	a5,0x80007
80000e84:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
80000e88:	00079463          	bne	a5,zero,80000e90 <xQueueReceive+0x1ac>
80000e8c:	30046073          	csrrsi	zero,mstatus,8

        /* Update the timeout state to see if it has expired yet. */
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
80000e90:	fc440713          	addi	a4,s0,-60
80000e94:	fdc40793          	addi	a5,s0,-36
80000e98:	00070593          	addi	a1,a4,0
80000e9c:	00078513          	addi	a0,a5,0
80000ea0:	45c020ef          	jal	ra,800032fc <xTaskCheckForTimeOut>
80000ea4:	00050793          	addi	a5,a0,0
80000ea8:	04079c63          	bne	a5,zero,80000f00 <xQueueReceive+0x21c>
        {
            /* The timeout has not expired.  If the queue is still empty place
             * the task on the list of tasks waiting to receive from the queue. */
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
80000eac:	fe842503          	lw	a0,-24(s0)
80000eb0:	3d1000ef          	jal	ra,80001a80 <prvIsQueueEmpty>
80000eb4:	00050793          	addi	a5,a0,0
80000eb8:	02078c63          	beq	a5,zero,80000ef0 <xQueueReceive+0x20c>
            {
                traceBLOCKING_ON_QUEUE_RECEIVE( pxQueue );
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
80000ebc:	fe842783          	lw	a5,-24(s0)
80000ec0:	02478793          	addi	a5,a5,36
80000ec4:	fc442703          	lw	a4,-60(s0)
80000ec8:	00070593          	addi	a1,a4,0
80000ecc:	00078513          	addi	a0,a5,0
80000ed0:	4e5010ef          	jal	ra,80002bb4 <vTaskPlaceOnEventList>
                prvUnlockQueue( pxQueue );
80000ed4:	fe842503          	lw	a0,-24(s0)
80000ed8:	241000ef          	jal	ra,80001918 <prvUnlockQueue>

                if( xTaskResumeAll() == pdFALSE )
80000edc:	3f4010ef          	jal	ra,800022d0 <xTaskResumeAll>
80000ee0:	00050793          	addi	a5,a0,0
80000ee4:	e20794e3          	bne	a5,zero,80000d0c <xQueueReceive+0x28>
                {
                    taskYIELD_WITHIN_API();
80000ee8:	00000073          	ecall
80000eec:	e21ff06f          	jal	zero,80000d0c <xQueueReceive+0x28>
            }
            else
            {
                /* The queue contains data again.  Loop back to try and read the
                 * data. */
                prvUnlockQueue( pxQueue );
80000ef0:	fe842503          	lw	a0,-24(s0)
80000ef4:	225000ef          	jal	ra,80001918 <prvUnlockQueue>
                ( void ) xTaskResumeAll();
80000ef8:	3d8010ef          	jal	ra,800022d0 <xTaskResumeAll>
80000efc:	e11ff06f          	jal	zero,80000d0c <xQueueReceive+0x28>
        }
        else
        {
            /* Timed out.  If there is no data in the queue exit, otherwise loop
             * back and attempt to read the data. */
            prvUnlockQueue( pxQueue );
80000f00:	fe842503          	lw	a0,-24(s0)
80000f04:	215000ef          	jal	ra,80001918 <prvUnlockQueue>
            ( void ) xTaskResumeAll();
80000f08:	3c8010ef          	jal	ra,800022d0 <xTaskResumeAll>

            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
80000f0c:	fe842503          	lw	a0,-24(s0)
80000f10:	371000ef          	jal	ra,80001a80 <prvIsQueueEmpty>
80000f14:	00050793          	addi	a5,a0,0
80000f18:	de078ae3          	beq	a5,zero,80000d0c <xQueueReceive+0x28>
            {
                traceQUEUE_RECEIVE_FAILED( pxQueue );
                traceRETURN_xQueueReceive( errQUEUE_EMPTY );

                return errQUEUE_EMPTY;
80000f1c:	00000793          	addi	a5,zero,0
            {
                mtCOVERAGE_TEST_MARKER();
            }
        }
    }
}
80000f20:	00078513          	addi	a0,a5,0
80000f24:	03c12083          	lw	ra,60(sp)
80000f28:	03812403          	lw	s0,56(sp)
80000f2c:	04010113          	addi	sp,sp,64
80000f30:	00008067          	jalr	zero,0(ra)

80000f34 <xQueueSemaphoreTake>:
/*-----------------------------------------------------------*/

BaseType_t xQueueSemaphoreTake( QueueHandle_t xQueue,
                                TickType_t xTicksToWait )
{
80000f34:	fc010113          	addi	sp,sp,-64
80000f38:	02112e23          	sw	ra,60(sp)
80000f3c:	02812c23          	sw	s0,56(sp)
80000f40:	04010413          	addi	s0,sp,64
80000f44:	fca42623          	sw	a0,-52(s0)
80000f48:	fcb42423          	sw	a1,-56(s0)
    BaseType_t xEntryTimeSet = pdFALSE;
80000f4c:	fe042623          	sw	zero,-20(s0)
    TimeOut_t xTimeOut;
    Queue_t * const pxQueue = xQueue;
80000f50:	fcc42783          	lw	a5,-52(s0)
80000f54:	fef42423          	sw	a5,-24(s0)
    }
    #endif

    for( ; ; )
    {
        taskENTER_CRITICAL();
80000f58:	30047073          	csrrci	zero,mstatus,8
80000f5c:	800077b7          	lui	a5,0x80007
80000f60:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
80000f64:	00178713          	addi	a4,a5,1
80000f68:	800077b7          	lui	a5,0x80007
80000f6c:	c6e7a623          	sw	a4,-916(a5) # 80006c6c <xCriticalNesting>
        {
            /* Semaphores are queues with an item size of 0, and where the
             * number of messages in the queue is the semaphore's count value. */
            const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
80000f70:	fe842783          	lw	a5,-24(s0)
80000f74:	0387a783          	lw	a5,56(a5)
80000f78:	fef42223          	sw	a5,-28(s0)

            /* Is there data in the queue now?  To be running the calling task
             * must be the highest priority task wanting to access the queue. */
            if( uxSemaphoreCount > ( UBaseType_t ) 0 )
80000f7c:	fe442783          	lw	a5,-28(s0)
80000f80:	04078e63          	beq	a5,zero,80000fdc <xQueueSemaphoreTake+0xa8>
            {
                traceQUEUE_RECEIVE( pxQueue );

                /* Semaphores are queues with a data size of zero and where the
                 * messages waiting is the semaphore's count.  Reduce the count. */
                pxQueue->uxMessagesWaiting = ( UBaseType_t ) ( uxSemaphoreCount - ( UBaseType_t ) 1 );
80000f84:	fe442783          	lw	a5,-28(s0)
80000f88:	fff78713          	addi	a4,a5,-1
80000f8c:	fe842783          	lw	a5,-24(s0)
80000f90:	02e7ac23          	sw	a4,56(a5)
                }
                #endif /* configUSE_MUTEXES */

                /* Check to see if other tasks are blocked waiting to give the
                 * semaphore, and if so, unblock the highest priority such task. */
                if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
80000f94:	fe842783          	lw	a5,-24(s0)
80000f98:	0107a783          	lw	a5,16(a5)
80000f9c:	00078a63          	beq	a5,zero,80000fb0 <xQueueSemaphoreTake+0x7c>
                {
                    if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
80000fa0:	fe842783          	lw	a5,-24(s0)
80000fa4:	01078793          	addi	a5,a5,16
80000fa8:	00078513          	addi	a0,a5,0
80000fac:	52d010ef          	jal	ra,80002cd8 <xTaskRemoveFromEventList>
                else
                {
                    mtCOVERAGE_TEST_MARKER();
                }

                taskEXIT_CRITICAL();
80000fb0:	800077b7          	lui	a5,0x80007
80000fb4:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
80000fb8:	fff78713          	addi	a4,a5,-1
80000fbc:	800077b7          	lui	a5,0x80007
80000fc0:	c6e7a623          	sw	a4,-916(a5) # 80006c6c <xCriticalNesting>
80000fc4:	800077b7          	lui	a5,0x80007
80000fc8:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
80000fcc:	00079463          	bne	a5,zero,80000fd4 <xQueueSemaphoreTake+0xa0>
80000fd0:	30046073          	csrrsi	zero,mstatus,8

                traceRETURN_xQueueSemaphoreTake( pdPASS );

                return pdPASS;
80000fd4:	00100793          	addi	a5,zero,1
80000fd8:	1880006f          	jal	zero,80001160 <xQueueSemaphoreTake+0x22c>
            }
            else
            {
                if( xTicksToWait == ( TickType_t ) 0 )
80000fdc:	fc842783          	lw	a5,-56(s0)
80000fe0:	02079863          	bne	a5,zero,80001010 <xQueueSemaphoreTake+0xdc>
                {
                    /* The semaphore count was 0 and no block time is specified
                     * (or the block time has expired) so exit now. */
                    taskEXIT_CRITICAL();
80000fe4:	800077b7          	lui	a5,0x80007
80000fe8:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
80000fec:	fff78713          	addi	a4,a5,-1
80000ff0:	800077b7          	lui	a5,0x80007
80000ff4:	c6e7a623          	sw	a4,-916(a5) # 80006c6c <xCriticalNesting>
80000ff8:	800077b7          	lui	a5,0x80007
80000ffc:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
80001000:	00079463          	bne	a5,zero,80001008 <xQueueSemaphoreTake+0xd4>
80001004:	30046073          	csrrsi	zero,mstatus,8

                    traceQUEUE_RECEIVE_FAILED( pxQueue );
                    traceRETURN_xQueueSemaphoreTake( errQUEUE_EMPTY );

                    return errQUEUE_EMPTY;
80001008:	00000793          	addi	a5,zero,0
8000100c:	1540006f          	jal	zero,80001160 <xQueueSemaphoreTake+0x22c>
                }
                else if( xEntryTimeSet == pdFALSE )
80001010:	fec42783          	lw	a5,-20(s0)
80001014:	00079c63          	bne	a5,zero,8000102c <xQueueSemaphoreTake+0xf8>
                {
                    /* The semaphore count was 0 and a block time was specified
                     * so configure the timeout structure ready to block. */
                    vTaskInternalSetTimeOutState( &xTimeOut );
80001018:	fdc40793          	addi	a5,s0,-36
8000101c:	00078513          	addi	a0,a5,0
80001020:	294020ef          	jal	ra,800032b4 <vTaskInternalSetTimeOutState>
                    xEntryTimeSet = pdTRUE;
80001024:	00100793          	addi	a5,zero,1
80001028:	fef42623          	sw	a5,-20(s0)
                    /* Entry time was already set. */
                    mtCOVERAGE_TEST_MARKER();
                }
            }
        }
        taskEXIT_CRITICAL();
8000102c:	800077b7          	lui	a5,0x80007
80001030:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
80001034:	fff78713          	addi	a4,a5,-1
80001038:	800077b7          	lui	a5,0x80007
8000103c:	c6e7a623          	sw	a4,-916(a5) # 80006c6c <xCriticalNesting>
80001040:	800077b7          	lui	a5,0x80007
80001044:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
80001048:	00079463          	bne	a5,zero,80001050 <xQueueSemaphoreTake+0x11c>
8000104c:	30046073          	csrrsi	zero,mstatus,8

        /* Interrupts and other tasks can give to and take from the semaphore
         * now the critical section has been exited. */

        vTaskSuspendAll();
80001050:	248010ef          	jal	ra,80002298 <vTaskSuspendAll>
        prvLockQueue( pxQueue );
80001054:	30047073          	csrrci	zero,mstatus,8
80001058:	800077b7          	lui	a5,0x80007
8000105c:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
80001060:	00178713          	addi	a4,a5,1
80001064:	800077b7          	lui	a5,0x80007
80001068:	c6e7a623          	sw	a4,-916(a5) # 80006c6c <xCriticalNesting>
8000106c:	fe842783          	lw	a5,-24(s0)
80001070:	0447c783          	lbu	a5,68(a5)
80001074:	01879713          	slli	a4,a5,0x18
80001078:	41875713          	srai	a4,a4,0x18
8000107c:	fff00793          	addi	a5,zero,-1
80001080:	00f71663          	bne	a4,a5,8000108c <xQueueSemaphoreTake+0x158>
80001084:	fe842783          	lw	a5,-24(s0)
80001088:	04078223          	sb	zero,68(a5)
8000108c:	fe842783          	lw	a5,-24(s0)
80001090:	0457c783          	lbu	a5,69(a5)
80001094:	01879713          	slli	a4,a5,0x18
80001098:	41875713          	srai	a4,a4,0x18
8000109c:	fff00793          	addi	a5,zero,-1
800010a0:	00f71663          	bne	a4,a5,800010ac <xQueueSemaphoreTake+0x178>
800010a4:	fe842783          	lw	a5,-24(s0)
800010a8:	040782a3          	sb	zero,69(a5)
800010ac:	800077b7          	lui	a5,0x80007
800010b0:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
800010b4:	fff78713          	addi	a4,a5,-1
800010b8:	800077b7          	lui	a5,0x80007
800010bc:	c6e7a623          	sw	a4,-916(a5) # 80006c6c <xCriticalNesting>
800010c0:	800077b7          	lui	a5,0x80007
800010c4:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
800010c8:	00079463          	bne	a5,zero,800010d0 <xQueueSemaphoreTake+0x19c>
800010cc:	30046073          	csrrsi	zero,mstatus,8

        /* Update the timeout state to see if it has expired yet. */
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
800010d0:	fc840713          	addi	a4,s0,-56
800010d4:	fdc40793          	addi	a5,s0,-36
800010d8:	00070593          	addi	a1,a4,0
800010dc:	00078513          	addi	a0,a5,0
800010e0:	21c020ef          	jal	ra,800032fc <xTaskCheckForTimeOut>
800010e4:	00050793          	addi	a5,a0,0
800010e8:	04079c63          	bne	a5,zero,80001140 <xQueueSemaphoreTake+0x20c>
        {
            /* A block time is specified and not expired.  If the semaphore
             * count is 0 then enter the Blocked state to wait for a semaphore to
             * become available.  As semaphores are implemented with queues the
             * queue being empty is equivalent to the semaphore count being 0. */
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
800010ec:	fe842503          	lw	a0,-24(s0)
800010f0:	191000ef          	jal	ra,80001a80 <prvIsQueueEmpty>
800010f4:	00050793          	addi	a5,a0,0
800010f8:	02078c63          	beq	a5,zero,80001130 <xQueueSemaphoreTake+0x1fc>
                        mtCOVERAGE_TEST_MARKER();
                    }
                }
                #endif /* if ( configUSE_MUTEXES == 1 ) */

                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
800010fc:	fe842783          	lw	a5,-24(s0)
80001100:	02478793          	addi	a5,a5,36
80001104:	fc842703          	lw	a4,-56(s0)
80001108:	00070593          	addi	a1,a4,0
8000110c:	00078513          	addi	a0,a5,0
80001110:	2a5010ef          	jal	ra,80002bb4 <vTaskPlaceOnEventList>
                prvUnlockQueue( pxQueue );
80001114:	fe842503          	lw	a0,-24(s0)
80001118:	001000ef          	jal	ra,80001918 <prvUnlockQueue>

                if( xTaskResumeAll() == pdFALSE )
8000111c:	1b4010ef          	jal	ra,800022d0 <xTaskResumeAll>
80001120:	00050793          	addi	a5,a0,0
80001124:	e2079ae3          	bne	a5,zero,80000f58 <xQueueSemaphoreTake+0x24>
                {
                    taskYIELD_WITHIN_API();
80001128:	00000073          	ecall
8000112c:	e2dff06f          	jal	zero,80000f58 <xQueueSemaphoreTake+0x24>
            }
            else
            {
                /* There was no timeout and the semaphore count was not 0, so
                 * attempt to take the semaphore again. */
                prvUnlockQueue( pxQueue );
80001130:	fe842503          	lw	a0,-24(s0)
80001134:	7e4000ef          	jal	ra,80001918 <prvUnlockQueue>
                ( void ) xTaskResumeAll();
80001138:	198010ef          	jal	ra,800022d0 <xTaskResumeAll>
8000113c:	e1dff06f          	jal	zero,80000f58 <xQueueSemaphoreTake+0x24>
            }
        }
        else
        {
            /* Timed out. */
            prvUnlockQueue( pxQueue );
80001140:	fe842503          	lw	a0,-24(s0)
80001144:	7d4000ef          	jal	ra,80001918 <prvUnlockQueue>
            ( void ) xTaskResumeAll();
80001148:	188010ef          	jal	ra,800022d0 <xTaskResumeAll>

            /* If the semaphore count is 0 exit now as the timeout has
             * expired.  Otherwise return to attempt to take the semaphore that is
             * known to be available.  As semaphores are implemented by queues the
             * queue being empty is equivalent to the semaphore count being 0. */
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
8000114c:	fe842503          	lw	a0,-24(s0)
80001150:	131000ef          	jal	ra,80001a80 <prvIsQueueEmpty>
80001154:	00050793          	addi	a5,a0,0
80001158:	e00780e3          	beq	a5,zero,80000f58 <xQueueSemaphoreTake+0x24>
                #endif /* configUSE_MUTEXES */

                traceQUEUE_RECEIVE_FAILED( pxQueue );
                traceRETURN_xQueueSemaphoreTake( errQUEUE_EMPTY );

                return errQUEUE_EMPTY;
8000115c:	00000793          	addi	a5,zero,0
            {
                mtCOVERAGE_TEST_MARKER();
            }
        }
    }
}
80001160:	00078513          	addi	a0,a5,0
80001164:	03c12083          	lw	ra,60(sp)
80001168:	03812403          	lw	s0,56(sp)
8000116c:	04010113          	addi	sp,sp,64
80001170:	00008067          	jalr	zero,0(ra)

80001174 <xQueuePeek>:
/*-----------------------------------------------------------*/

BaseType_t xQueuePeek( QueueHandle_t xQueue,
                       void * const pvBuffer,
                       TickType_t xTicksToWait )
{
80001174:	fc010113          	addi	sp,sp,-64
80001178:	02112e23          	sw	ra,60(sp)
8000117c:	02812c23          	sw	s0,56(sp)
80001180:	04010413          	addi	s0,sp,64
80001184:	fca42623          	sw	a0,-52(s0)
80001188:	fcb42423          	sw	a1,-56(s0)
8000118c:	fcc42223          	sw	a2,-60(s0)
    BaseType_t xEntryTimeSet = pdFALSE;
80001190:	fe042623          	sw	zero,-20(s0)
    TimeOut_t xTimeOut;
    int8_t * pcOriginalReadPosition;
    Queue_t * const pxQueue = xQueue;
80001194:	fcc42783          	lw	a5,-52(s0)
80001198:	fef42423          	sw	a5,-24(s0)
    }
    #endif

    for( ; ; )
    {
        taskENTER_CRITICAL();
8000119c:	30047073          	csrrci	zero,mstatus,8
800011a0:	800077b7          	lui	a5,0x80007
800011a4:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
800011a8:	00178713          	addi	a4,a5,1
800011ac:	800077b7          	lui	a5,0x80007
800011b0:	c6e7a623          	sw	a4,-916(a5) # 80006c6c <xCriticalNesting>
        {
            const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
800011b4:	fe842783          	lw	a5,-24(s0)
800011b8:	0387a783          	lw	a5,56(a5)
800011bc:	fef42223          	sw	a5,-28(s0)

            /* Is there data in the queue now?  To be running the calling task
             * must be the highest priority task wanting to access the queue. */
            if( uxMessagesWaiting > ( UBaseType_t ) 0 )
800011c0:	fe442783          	lw	a5,-28(s0)
800011c4:	06078863          	beq	a5,zero,80001234 <xQueuePeek+0xc0>
            {
                /* Remember the read position so it can be reset after the data
                 * is read from the queue as this function is only peeking the
                 * data, not removing it. */
                pcOriginalReadPosition = pxQueue->u.xQueue.pcReadFrom;
800011c8:	fe842783          	lw	a5,-24(s0)
800011cc:	00c7a783          	lw	a5,12(a5)
800011d0:	fef42023          	sw	a5,-32(s0)

                prvCopyDataFromQueue( pxQueue, pvBuffer );
800011d4:	fc842583          	lw	a1,-56(s0)
800011d8:	fe842503          	lw	a0,-24(s0)
800011dc:	6a4000ef          	jal	ra,80001880 <prvCopyDataFromQueue>
                traceQUEUE_PEEK( pxQueue );

                /* The data is not being removed, so reset the read pointer. */
                pxQueue->u.xQueue.pcReadFrom = pcOriginalReadPosition;
800011e0:	fe842783          	lw	a5,-24(s0)
800011e4:	fe042703          	lw	a4,-32(s0)
800011e8:	00e7a623          	sw	a4,12(a5)

                /* The data is being left in the queue, so see if there are
                 * any other tasks waiting for the data. */
                if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
800011ec:	fe842783          	lw	a5,-24(s0)
800011f0:	0247a783          	lw	a5,36(a5)
800011f4:	00078a63          	beq	a5,zero,80001208 <xQueuePeek+0x94>
                {
                    if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
800011f8:	fe842783          	lw	a5,-24(s0)
800011fc:	02478793          	addi	a5,a5,36
80001200:	00078513          	addi	a0,a5,0
80001204:	2d5010ef          	jal	ra,80002cd8 <xTaskRemoveFromEventList>
                else
                {
                    mtCOVERAGE_TEST_MARKER();
                }

                taskEXIT_CRITICAL();
80001208:	800077b7          	lui	a5,0x80007
8000120c:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
80001210:	fff78713          	addi	a4,a5,-1
80001214:	800077b7          	lui	a5,0x80007
80001218:	c6e7a623          	sw	a4,-916(a5) # 80006c6c <xCriticalNesting>
8000121c:	800077b7          	lui	a5,0x80007
80001220:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
80001224:	00079463          	bne	a5,zero,8000122c <xQueuePeek+0xb8>
80001228:	30046073          	csrrsi	zero,mstatus,8

                traceRETURN_xQueuePeek( pdPASS );

                return pdPASS;
8000122c:	00100793          	addi	a5,zero,1
80001230:	1880006f          	jal	zero,800013b8 <xQueuePeek+0x244>
            }
            else
            {
                if( xTicksToWait == ( TickType_t ) 0 )
80001234:	fc442783          	lw	a5,-60(s0)
80001238:	02079863          	bne	a5,zero,80001268 <xQueuePeek+0xf4>
                {
                    /* The queue was empty and no block time is specified (or
                     * the block time has expired) so leave now. */
                    taskEXIT_CRITICAL();
8000123c:	800077b7          	lui	a5,0x80007
80001240:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
80001244:	fff78713          	addi	a4,a5,-1
80001248:	800077b7          	lui	a5,0x80007
8000124c:	c6e7a623          	sw	a4,-916(a5) # 80006c6c <xCriticalNesting>
80001250:	800077b7          	lui	a5,0x80007
80001254:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
80001258:	00079463          	bne	a5,zero,80001260 <xQueuePeek+0xec>
8000125c:	30046073          	csrrsi	zero,mstatus,8

                    traceQUEUE_PEEK_FAILED( pxQueue );
                    traceRETURN_xQueuePeek( errQUEUE_EMPTY );

                    return errQUEUE_EMPTY;
80001260:	00000793          	addi	a5,zero,0
80001264:	1540006f          	jal	zero,800013b8 <xQueuePeek+0x244>
                }
                else if( xEntryTimeSet == pdFALSE )
80001268:	fec42783          	lw	a5,-20(s0)
8000126c:	00079c63          	bne	a5,zero,80001284 <xQueuePeek+0x110>
                {
                    /* The queue was empty and a block time was specified so
                     * configure the timeout structure ready to enter the blocked
                     * state. */
                    vTaskInternalSetTimeOutState( &xTimeOut );
80001270:	fd840793          	addi	a5,s0,-40
80001274:	00078513          	addi	a0,a5,0
80001278:	03c020ef          	jal	ra,800032b4 <vTaskInternalSetTimeOutState>
                    xEntryTimeSet = pdTRUE;
8000127c:	00100793          	addi	a5,zero,1
80001280:	fef42623          	sw	a5,-20(s0)
                    /* Entry time was already set. */
                    mtCOVERAGE_TEST_MARKER();
                }
            }
        }
        taskEXIT_CRITICAL();
80001284:	800077b7          	lui	a5,0x80007
80001288:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
8000128c:	fff78713          	addi	a4,a5,-1
80001290:	800077b7          	lui	a5,0x80007
80001294:	c6e7a623          	sw	a4,-916(a5) # 80006c6c <xCriticalNesting>
80001298:	800077b7          	lui	a5,0x80007
8000129c:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
800012a0:	00079463          	bne	a5,zero,800012a8 <xQueuePeek+0x134>
800012a4:	30046073          	csrrsi	zero,mstatus,8

        /* Interrupts and other tasks can send to and receive from the queue
         * now that the critical section has been exited. */

        vTaskSuspendAll();
800012a8:	7f1000ef          	jal	ra,80002298 <vTaskSuspendAll>
        prvLockQueue( pxQueue );
800012ac:	30047073          	csrrci	zero,mstatus,8
800012b0:	800077b7          	lui	a5,0x80007
800012b4:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
800012b8:	00178713          	addi	a4,a5,1
800012bc:	800077b7          	lui	a5,0x80007
800012c0:	c6e7a623          	sw	a4,-916(a5) # 80006c6c <xCriticalNesting>
800012c4:	fe842783          	lw	a5,-24(s0)
800012c8:	0447c783          	lbu	a5,68(a5)
800012cc:	01879713          	slli	a4,a5,0x18
800012d0:	41875713          	srai	a4,a4,0x18
800012d4:	fff00793          	addi	a5,zero,-1
800012d8:	00f71663          	bne	a4,a5,800012e4 <xQueuePeek+0x170>
800012dc:	fe842783          	lw	a5,-24(s0)
800012e0:	04078223          	sb	zero,68(a5)
800012e4:	fe842783          	lw	a5,-24(s0)
800012e8:	0457c783          	lbu	a5,69(a5)
800012ec:	01879713          	slli	a4,a5,0x18
800012f0:	41875713          	srai	a4,a4,0x18
800012f4:	fff00793          	addi	a5,zero,-1
800012f8:	00f71663          	bne	a4,a5,80001304 <xQueuePeek+0x190>
800012fc:	fe842783          	lw	a5,-24(s0)
80001300:	040782a3          	sb	zero,69(a5)
80001304:	800077b7          	lui	a5,0x80007
80001308:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
8000130c:	fff78713          	addi	a4,a5,-1
80001310:	800077b7          	lui	a5,0x80007
80001314:	c6e7a623          	sw	a4,-916(a5) # 80006c6c <xCriticalNesting>
80001318:	800077b7          	lui	a5,0x80007
8000131c:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
80001320:	00079463          	bne	a5,zero,80001328 <xQueuePeek+0x1b4>
80001324:	30046073          	csrrsi	zero,mstatus,8

        /* Update the timeout state to see if it has expired yet. */
        if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
80001328:	fc440713          	addi	a4,s0,-60
8000132c:	fd840793          	addi	a5,s0,-40
80001330:	00070593          	addi	a1,a4,0
80001334:	00078513          	addi	a0,a5,0
80001338:	7c5010ef          	jal	ra,800032fc <xTaskCheckForTimeOut>
8000133c:	00050793          	addi	a5,a0,0
80001340:	04079c63          	bne	a5,zero,80001398 <xQueuePeek+0x224>
        {
            /* Timeout has not expired yet, check to see if there is data in the
            * queue now, and if not enter the Blocked state to wait for data. */
            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
80001344:	fe842503          	lw	a0,-24(s0)
80001348:	738000ef          	jal	ra,80001a80 <prvIsQueueEmpty>
8000134c:	00050793          	addi	a5,a0,0
80001350:	02078c63          	beq	a5,zero,80001388 <xQueuePeek+0x214>
            {
                traceBLOCKING_ON_QUEUE_PEEK( pxQueue );
                vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
80001354:	fe842783          	lw	a5,-24(s0)
80001358:	02478793          	addi	a5,a5,36
8000135c:	fc442703          	lw	a4,-60(s0)
80001360:	00070593          	addi	a1,a4,0
80001364:	00078513          	addi	a0,a5,0
80001368:	04d010ef          	jal	ra,80002bb4 <vTaskPlaceOnEventList>
                prvUnlockQueue( pxQueue );
8000136c:	fe842503          	lw	a0,-24(s0)
80001370:	5a8000ef          	jal	ra,80001918 <prvUnlockQueue>

                if( xTaskResumeAll() == pdFALSE )
80001374:	75d000ef          	jal	ra,800022d0 <xTaskResumeAll>
80001378:	00050793          	addi	a5,a0,0
8000137c:	e20790e3          	bne	a5,zero,8000119c <xQueuePeek+0x28>
                {
                    taskYIELD_WITHIN_API();
80001380:	00000073          	ecall
80001384:	e19ff06f          	jal	zero,8000119c <xQueuePeek+0x28>
            }
            else
            {
                /* There is data in the queue now, so don't enter the blocked
                 * state, instead return to try and obtain the data. */
                prvUnlockQueue( pxQueue );
80001388:	fe842503          	lw	a0,-24(s0)
8000138c:	58c000ef          	jal	ra,80001918 <prvUnlockQueue>
                ( void ) xTaskResumeAll();
80001390:	741000ef          	jal	ra,800022d0 <xTaskResumeAll>
80001394:	e09ff06f          	jal	zero,8000119c <xQueuePeek+0x28>
        }
        else
        {
            /* The timeout has expired.  If there is still no data in the queue
             * exit, otherwise go back and try to read the data again. */
            prvUnlockQueue( pxQueue );
80001398:	fe842503          	lw	a0,-24(s0)
8000139c:	57c000ef          	jal	ra,80001918 <prvUnlockQueue>
            ( void ) xTaskResumeAll();
800013a0:	731000ef          	jal	ra,800022d0 <xTaskResumeAll>

            if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
800013a4:	fe842503          	lw	a0,-24(s0)
800013a8:	6d8000ef          	jal	ra,80001a80 <prvIsQueueEmpty>
800013ac:	00050793          	addi	a5,a0,0
800013b0:	de0786e3          	beq	a5,zero,8000119c <xQueuePeek+0x28>
            {
                traceQUEUE_PEEK_FAILED( pxQueue );
                traceRETURN_xQueuePeek( errQUEUE_EMPTY );

                return errQUEUE_EMPTY;
800013b4:	00000793          	addi	a5,zero,0
            {
                mtCOVERAGE_TEST_MARKER();
            }
        }
    }
}
800013b8:	00078513          	addi	a0,a5,0
800013bc:	03c12083          	lw	ra,60(sp)
800013c0:	03812403          	lw	s0,56(sp)
800013c4:	04010113          	addi	sp,sp,64
800013c8:	00008067          	jalr	zero,0(ra)

800013cc <xQueueReceiveFromISR>:
/*-----------------------------------------------------------*/

BaseType_t xQueueReceiveFromISR( QueueHandle_t xQueue,
                                 void * const pvBuffer,
                                 BaseType_t * const pxHigherPriorityTaskWoken )
{
800013cc:	fc010113          	addi	sp,sp,-64
800013d0:	02112e23          	sw	ra,60(sp)
800013d4:	02812c23          	sw	s0,56(sp)
800013d8:	04010413          	addi	s0,sp,64
800013dc:	fca42623          	sw	a0,-52(s0)
800013e0:	fcb42423          	sw	a1,-56(s0)
800013e4:	fcc42223          	sw	a2,-60(s0)
    BaseType_t xReturn;
    UBaseType_t uxSavedInterruptStatus;
    Queue_t * const pxQueue = xQueue;
800013e8:	fcc42783          	lw	a5,-52(s0)
800013ec:	fef42423          	sw	a5,-24(s0)
    portASSERT_IF_INTERRUPT_PRIORITY_INVALID();

    /* MISRA Ref 4.7.1 [Return value shall be checked] */
    /* More details at: https://github.com/FreeRTOS/FreeRTOS-Kernel/blob/main/MISRA.md#dir-47 */
    /* coverity[misra_c_2012_directive_4_7_violation] */
    uxSavedInterruptStatus = ( UBaseType_t ) taskENTER_CRITICAL_FROM_ISR();
800013f0:	fe042223          	sw	zero,-28(s0)
    {
        const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
800013f4:	fe842783          	lw	a5,-24(s0)
800013f8:	0387a783          	lw	a5,56(a5)
800013fc:	fef42023          	sw	a5,-32(s0)

        /* Cannot block in an ISR, so check there is data available. */
        if( uxMessagesWaiting > ( UBaseType_t ) 0 )
80001400:	fe042783          	lw	a5,-32(s0)
80001404:	0a078863          	beq	a5,zero,800014b4 <xQueueReceiveFromISR+0xe8>
        {
            const int8_t cRxLock = pxQueue->cRxLock;
80001408:	fe842783          	lw	a5,-24(s0)
8000140c:	0447c783          	lbu	a5,68(a5)
80001410:	fcf40fa3          	sb	a5,-33(s0)

            traceQUEUE_RECEIVE_FROM_ISR( pxQueue );

            prvCopyDataFromQueue( pxQueue, pvBuffer );
80001414:	fc842583          	lw	a1,-56(s0)
80001418:	fe842503          	lw	a0,-24(s0)
8000141c:	464000ef          	jal	ra,80001880 <prvCopyDataFromQueue>
            pxQueue->uxMessagesWaiting = ( UBaseType_t ) ( uxMessagesWaiting - ( UBaseType_t ) 1 );
80001420:	fe042783          	lw	a5,-32(s0)
80001424:	fff78713          	addi	a4,a5,-1
80001428:	fe842783          	lw	a5,-24(s0)
8000142c:	02e7ac23          	sw	a4,56(a5)

            /* If the queue is locked the event list will not be modified.
             * Instead update the lock count so the task that unlocks the queue
             * will know that an ISR has removed data while the queue was
             * locked. */
            if( cRxLock == queueUNLOCKED )
80001430:	fdf40703          	lb	a4,-33(s0)
80001434:	fff00793          	addi	a5,zero,-1
80001438:	04f71063          	bne	a4,a5,80001478 <xQueueReceiveFromISR+0xac>
            {
                if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
8000143c:	fe842783          	lw	a5,-24(s0)
80001440:	0107a783          	lw	a5,16(a5)
80001444:	06078263          	beq	a5,zero,800014a8 <xQueueReceiveFromISR+0xdc>
                {
                    if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
80001448:	fe842783          	lw	a5,-24(s0)
8000144c:	01078793          	addi	a5,a5,16
80001450:	00078513          	addi	a0,a5,0
80001454:	085010ef          	jal	ra,80002cd8 <xTaskRemoveFromEventList>
80001458:	00050793          	addi	a5,a0,0
8000145c:	04078663          	beq	a5,zero,800014a8 <xQueueReceiveFromISR+0xdc>
                    {
                        /* The task waiting has a higher priority than us so
                         * force a context switch. */
                        if( pxHigherPriorityTaskWoken != NULL )
80001460:	fc442783          	lw	a5,-60(s0)
80001464:	04078263          	beq	a5,zero,800014a8 <xQueueReceiveFromISR+0xdc>
                        {
                            *pxHigherPriorityTaskWoken = pdTRUE;
80001468:	fc442783          	lw	a5,-60(s0)
8000146c:	00100713          	addi	a4,zero,1
80001470:	00e7a023          	sw	a4,0(a5)
80001474:	0340006f          	jal	zero,800014a8 <xQueueReceiveFromISR+0xdc>
            }
            else
            {
                /* Increment the lock count so the task that unlocks the queue
                 * knows that data was removed while it was locked. */
                prvIncrementQueueRxLock( pxQueue, cRxLock );
80001478:	230010ef          	jal	ra,800026a8 <uxTaskGetNumberOfTasks>
8000147c:	fca42c23          	sw	a0,-40(s0)
80001480:	fdf40783          	lb	a5,-33(s0)
80001484:	fd842703          	lw	a4,-40(s0)
80001488:	02e7f063          	bgeu	a5,a4,800014a8 <xQueueReceiveFromISR+0xdc>
8000148c:	fdf44783          	lbu	a5,-33(s0)
80001490:	00178793          	addi	a5,a5,1
80001494:	0ff7f793          	andi	a5,a5,255
80001498:	01879713          	slli	a4,a5,0x18
8000149c:	41875713          	srai	a4,a4,0x18
800014a0:	fe842783          	lw	a5,-24(s0)
800014a4:	04e78223          	sb	a4,68(a5)
            }

            xReturn = pdPASS;
800014a8:	00100793          	addi	a5,zero,1
800014ac:	fef42623          	sw	a5,-20(s0)
800014b0:	0080006f          	jal	zero,800014b8 <xQueueReceiveFromISR+0xec>
        }
        else
        {
            xReturn = pdFAIL;
800014b4:	fe042623          	sw	zero,-20(s0)
    }
    taskEXIT_CRITICAL_FROM_ISR( uxSavedInterruptStatus );

    traceRETURN_xQueueReceiveFromISR( xReturn );

    return xReturn;
800014b8:	fec42783          	lw	a5,-20(s0)
}
800014bc:	00078513          	addi	a0,a5,0
800014c0:	03c12083          	lw	ra,60(sp)
800014c4:	03812403          	lw	s0,56(sp)
800014c8:	04010113          	addi	sp,sp,64
800014cc:	00008067          	jalr	zero,0(ra)

800014d0 <xQueuePeekFromISR>:
/*-----------------------------------------------------------*/

BaseType_t xQueuePeekFromISR( QueueHandle_t xQueue,
                              void * const pvBuffer )
{
800014d0:	fd010113          	addi	sp,sp,-48
800014d4:	02112623          	sw	ra,44(sp)
800014d8:	02812423          	sw	s0,40(sp)
800014dc:	03010413          	addi	s0,sp,48
800014e0:	fca42e23          	sw	a0,-36(s0)
800014e4:	fcb42c23          	sw	a1,-40(s0)
    BaseType_t xReturn;
    UBaseType_t uxSavedInterruptStatus;
    int8_t * pcOriginalReadPosition;
    Queue_t * const pxQueue = xQueue;
800014e8:	fdc42783          	lw	a5,-36(s0)
800014ec:	fef42423          	sw	a5,-24(s0)
    portASSERT_IF_INTERRUPT_PRIORITY_INVALID();

    /* MISRA Ref 4.7.1 [Return value shall be checked] */
    /* More details at: https://github.com/FreeRTOS/FreeRTOS-Kernel/blob/main/MISRA.md#dir-47 */
    /* coverity[misra_c_2012_directive_4_7_violation] */
    uxSavedInterruptStatus = ( UBaseType_t ) taskENTER_CRITICAL_FROM_ISR();
800014f0:	fe042223          	sw	zero,-28(s0)
    {
        /* Cannot block in an ISR, so check there is data available. */
        if( pxQueue->uxMessagesWaiting > ( UBaseType_t ) 0 )
800014f4:	fe842783          	lw	a5,-24(s0)
800014f8:	0387a783          	lw	a5,56(a5)
800014fc:	02078a63          	beq	a5,zero,80001530 <xQueuePeekFromISR+0x60>
        {
            traceQUEUE_PEEK_FROM_ISR( pxQueue );

            /* Remember the read position so it can be reset as nothing is
             * actually being removed from the queue. */
            pcOriginalReadPosition = pxQueue->u.xQueue.pcReadFrom;
80001500:	fe842783          	lw	a5,-24(s0)
80001504:	00c7a783          	lw	a5,12(a5)
80001508:	fef42023          	sw	a5,-32(s0)
            prvCopyDataFromQueue( pxQueue, pvBuffer );
8000150c:	fd842583          	lw	a1,-40(s0)
80001510:	fe842503          	lw	a0,-24(s0)
80001514:	36c000ef          	jal	ra,80001880 <prvCopyDataFromQueue>
            pxQueue->u.xQueue.pcReadFrom = pcOriginalReadPosition;
80001518:	fe842783          	lw	a5,-24(s0)
8000151c:	fe042703          	lw	a4,-32(s0)
80001520:	00e7a623          	sw	a4,12(a5)

            xReturn = pdPASS;
80001524:	00100793          	addi	a5,zero,1
80001528:	fef42623          	sw	a5,-20(s0)
8000152c:	0080006f          	jal	zero,80001534 <xQueuePeekFromISR+0x64>
        }
        else
        {
            xReturn = pdFAIL;
80001530:	fe042623          	sw	zero,-20(s0)
    }
    taskEXIT_CRITICAL_FROM_ISR( uxSavedInterruptStatus );

    traceRETURN_xQueuePeekFromISR( xReturn );

    return xReturn;
80001534:	fec42783          	lw	a5,-20(s0)
}
80001538:	00078513          	addi	a0,a5,0
8000153c:	02c12083          	lw	ra,44(sp)
80001540:	02812403          	lw	s0,40(sp)
80001544:	03010113          	addi	sp,sp,48
80001548:	00008067          	jalr	zero,0(ra)

8000154c <uxQueueMessagesWaiting>:
/*-----------------------------------------------------------*/

UBaseType_t uxQueueMessagesWaiting( const QueueHandle_t xQueue )
{
8000154c:	fd010113          	addi	sp,sp,-48
80001550:	02112623          	sw	ra,44(sp)
80001554:	02812423          	sw	s0,40(sp)
80001558:	03010413          	addi	s0,sp,48
8000155c:	fca42e23          	sw	a0,-36(s0)

    traceENTER_uxQueueMessagesWaiting( xQueue );

    configASSERT( xQueue );

    taskENTER_CRITICAL();
80001560:	30047073          	csrrci	zero,mstatus,8
80001564:	800077b7          	lui	a5,0x80007
80001568:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
8000156c:	00178713          	addi	a4,a5,1
80001570:	800077b7          	lui	a5,0x80007
80001574:	c6e7a623          	sw	a4,-916(a5) # 80006c6c <xCriticalNesting>
    {
        uxReturn = ( ( Queue_t * ) xQueue )->uxMessagesWaiting;
80001578:	fdc42783          	lw	a5,-36(s0)
8000157c:	0387a783          	lw	a5,56(a5)
80001580:	fef42623          	sw	a5,-20(s0)
    }
    taskEXIT_CRITICAL();
80001584:	800077b7          	lui	a5,0x80007
80001588:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
8000158c:	fff78713          	addi	a4,a5,-1
80001590:	800077b7          	lui	a5,0x80007
80001594:	c6e7a623          	sw	a4,-916(a5) # 80006c6c <xCriticalNesting>
80001598:	800077b7          	lui	a5,0x80007
8000159c:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
800015a0:	00079463          	bne	a5,zero,800015a8 <uxQueueMessagesWaiting+0x5c>
800015a4:	30046073          	csrrsi	zero,mstatus,8

    traceRETURN_uxQueueMessagesWaiting( uxReturn );

    return uxReturn;
800015a8:	fec42783          	lw	a5,-20(s0)
}
800015ac:	00078513          	addi	a0,a5,0
800015b0:	02c12083          	lw	ra,44(sp)
800015b4:	02812403          	lw	s0,40(sp)
800015b8:	03010113          	addi	sp,sp,48
800015bc:	00008067          	jalr	zero,0(ra)

800015c0 <uxQueueSpacesAvailable>:
/*-----------------------------------------------------------*/

UBaseType_t uxQueueSpacesAvailable( const QueueHandle_t xQueue )
{
800015c0:	fd010113          	addi	sp,sp,-48
800015c4:	02112623          	sw	ra,44(sp)
800015c8:	02812423          	sw	s0,40(sp)
800015cc:	03010413          	addi	s0,sp,48
800015d0:	fca42e23          	sw	a0,-36(s0)
    UBaseType_t uxReturn;
    Queue_t * const pxQueue = xQueue;
800015d4:	fdc42783          	lw	a5,-36(s0)
800015d8:	fef42623          	sw	a5,-20(s0)

    traceENTER_uxQueueSpacesAvailable( xQueue );

    configASSERT( pxQueue );

    taskENTER_CRITICAL();
800015dc:	30047073          	csrrci	zero,mstatus,8
800015e0:	800077b7          	lui	a5,0x80007
800015e4:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
800015e8:	00178713          	addi	a4,a5,1
800015ec:	800077b7          	lui	a5,0x80007
800015f0:	c6e7a623          	sw	a4,-916(a5) # 80006c6c <xCriticalNesting>
    {
        uxReturn = ( UBaseType_t ) ( pxQueue->uxLength - pxQueue->uxMessagesWaiting );
800015f4:	fec42783          	lw	a5,-20(s0)
800015f8:	03c7a703          	lw	a4,60(a5)
800015fc:	fec42783          	lw	a5,-20(s0)
80001600:	0387a783          	lw	a5,56(a5)
80001604:	40f707b3          	sub	a5,a4,a5
80001608:	fef42423          	sw	a5,-24(s0)
    }
    taskEXIT_CRITICAL();
8000160c:	800077b7          	lui	a5,0x80007
80001610:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
80001614:	fff78713          	addi	a4,a5,-1
80001618:	800077b7          	lui	a5,0x80007
8000161c:	c6e7a623          	sw	a4,-916(a5) # 80006c6c <xCriticalNesting>
80001620:	800077b7          	lui	a5,0x80007
80001624:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
80001628:	00079463          	bne	a5,zero,80001630 <uxQueueSpacesAvailable+0x70>
8000162c:	30046073          	csrrsi	zero,mstatus,8

    traceRETURN_uxQueueSpacesAvailable( uxReturn );

    return uxReturn;
80001630:	fe842783          	lw	a5,-24(s0)
}
80001634:	00078513          	addi	a0,a5,0
80001638:	02c12083          	lw	ra,44(sp)
8000163c:	02812403          	lw	s0,40(sp)
80001640:	03010113          	addi	sp,sp,48
80001644:	00008067          	jalr	zero,0(ra)

80001648 <uxQueueMessagesWaitingFromISR>:
/*-----------------------------------------------------------*/

UBaseType_t uxQueueMessagesWaitingFromISR( const QueueHandle_t xQueue )
{
80001648:	fd010113          	addi	sp,sp,-48
8000164c:	02112623          	sw	ra,44(sp)
80001650:	02812423          	sw	s0,40(sp)
80001654:	03010413          	addi	s0,sp,48
80001658:	fca42e23          	sw	a0,-36(s0)
    UBaseType_t uxReturn;
    Queue_t * const pxQueue = xQueue;
8000165c:	fdc42783          	lw	a5,-36(s0)
80001660:	fef42623          	sw	a5,-20(s0)

    traceENTER_uxQueueMessagesWaitingFromISR( xQueue );

    configASSERT( pxQueue );
    uxReturn = pxQueue->uxMessagesWaiting;
80001664:	fec42783          	lw	a5,-20(s0)
80001668:	0387a783          	lw	a5,56(a5)
8000166c:	fef42423          	sw	a5,-24(s0)

    traceRETURN_uxQueueMessagesWaitingFromISR( uxReturn );

    return uxReturn;
80001670:	fe842783          	lw	a5,-24(s0)
}
80001674:	00078513          	addi	a0,a5,0
80001678:	02c12083          	lw	ra,44(sp)
8000167c:	02812403          	lw	s0,40(sp)
80001680:	03010113          	addi	sp,sp,48
80001684:	00008067          	jalr	zero,0(ra)

80001688 <vQueueDelete>:
/*-----------------------------------------------------------*/

void vQueueDelete( QueueHandle_t xQueue )
{
80001688:	fd010113          	addi	sp,sp,-48
8000168c:	02112623          	sw	ra,44(sp)
80001690:	02812423          	sw	s0,40(sp)
80001694:	03010413          	addi	s0,sp,48
80001698:	fca42e23          	sw	a0,-36(s0)
    Queue_t * const pxQueue = xQueue;
8000169c:	fdc42783          	lw	a5,-36(s0)
800016a0:	fef42623          	sw	a5,-20(s0)

    #if ( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) )
    {
        /* The queue can only have been allocated dynamically - free it
         * again. */
        vPortFree( pxQueue );
800016a4:	fec42503          	lw	a0,-20(s0)
800016a8:	58d030ef          	jal	ra,80005434 <vPortFree>
        ( void ) pxQueue;
    }
    #endif /* configSUPPORT_DYNAMIC_ALLOCATION */

    traceRETURN_vQueueDelete();
}
800016ac:	00000013          	addi	zero,zero,0
800016b0:	02c12083          	lw	ra,44(sp)
800016b4:	02812403          	lw	s0,40(sp)
800016b8:	03010113          	addi	sp,sp,48
800016bc:	00008067          	jalr	zero,0(ra)

800016c0 <uxQueueGetQueueItemSize>:

#endif /* configUSE_TRACE_FACILITY */
/*-----------------------------------------------------------*/

UBaseType_t uxQueueGetQueueItemSize( QueueHandle_t xQueue ) /* PRIVILEGED_FUNCTION */
{
800016c0:	fe010113          	addi	sp,sp,-32
800016c4:	00112e23          	sw	ra,28(sp)
800016c8:	00812c23          	sw	s0,24(sp)
800016cc:	02010413          	addi	s0,sp,32
800016d0:	fea42623          	sw	a0,-20(s0)
    traceENTER_uxQueueGetQueueItemSize( xQueue );

    traceRETURN_uxQueueGetQueueItemSize( ( ( Queue_t * ) xQueue )->uxItemSize );

    return ( ( Queue_t * ) xQueue )->uxItemSize;
800016d4:	fec42783          	lw	a5,-20(s0)
800016d8:	0407a783          	lw	a5,64(a5)
}
800016dc:	00078513          	addi	a0,a5,0
800016e0:	01c12083          	lw	ra,28(sp)
800016e4:	01812403          	lw	s0,24(sp)
800016e8:	02010113          	addi	sp,sp,32
800016ec:	00008067          	jalr	zero,0(ra)

800016f0 <uxQueueGetQueueLength>:
/*-----------------------------------------------------------*/

UBaseType_t uxQueueGetQueueLength( QueueHandle_t xQueue ) /* PRIVILEGED_FUNCTION */
{
800016f0:	fe010113          	addi	sp,sp,-32
800016f4:	00112e23          	sw	ra,28(sp)
800016f8:	00812c23          	sw	s0,24(sp)
800016fc:	02010413          	addi	s0,sp,32
80001700:	fea42623          	sw	a0,-20(s0)
    traceENTER_uxQueueGetQueueLength( xQueue );

    traceRETURN_uxQueueGetQueueLength( ( ( Queue_t * ) xQueue )->uxLength );

    return ( ( Queue_t * ) xQueue )->uxLength;
80001704:	fec42783          	lw	a5,-20(s0)
80001708:	03c7a783          	lw	a5,60(a5)
}
8000170c:	00078513          	addi	a0,a5,0
80001710:	01c12083          	lw	ra,28(sp)
80001714:	01812403          	lw	s0,24(sp)
80001718:	02010113          	addi	sp,sp,32
8000171c:	00008067          	jalr	zero,0(ra)

80001720 <prvCopyDataToQueue>:
/*-----------------------------------------------------------*/

static BaseType_t prvCopyDataToQueue( Queue_t * const pxQueue,
                                      const void * pvItemToQueue,
                                      const BaseType_t xPosition )
{
80001720:	fd010113          	addi	sp,sp,-48
80001724:	02112623          	sw	ra,44(sp)
80001728:	02812423          	sw	s0,40(sp)
8000172c:	03010413          	addi	s0,sp,48
80001730:	fca42e23          	sw	a0,-36(s0)
80001734:	fcb42c23          	sw	a1,-40(s0)
80001738:	fcc42a23          	sw	a2,-44(s0)
    BaseType_t xReturn = pdFALSE;
8000173c:	fe042423          	sw	zero,-24(s0)
    UBaseType_t uxMessagesWaiting;

    /* This function is called from a critical section. */

    uxMessagesWaiting = pxQueue->uxMessagesWaiting;
80001740:	fdc42783          	lw	a5,-36(s0)
80001744:	0387a783          	lw	a5,56(a5)
80001748:	fef42623          	sw	a5,-20(s0)

    if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
8000174c:	fdc42783          	lw	a5,-36(s0)
80001750:	0407a783          	lw	a5,64(a5)
80001754:	10078263          	beq	a5,zero,80001858 <prvCopyDataToQueue+0x138>
                mtCOVERAGE_TEST_MARKER();
            }
        }
        #endif /* configUSE_MUTEXES */
    }
    else if( xPosition == queueSEND_TO_BACK )
80001758:	fd442783          	lw	a5,-44(s0)
8000175c:	06079463          	bne	a5,zero,800017c4 <prvCopyDataToQueue+0xa4>
    {
        ( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize );
80001760:	fdc42783          	lw	a5,-36(s0)
80001764:	0047a703          	lw	a4,4(a5)
80001768:	fdc42783          	lw	a5,-36(s0)
8000176c:	0407a783          	lw	a5,64(a5)
80001770:	00078613          	addi	a2,a5,0
80001774:	fd842583          	lw	a1,-40(s0)
80001778:	00070513          	addi	a0,a4,0
8000177c:	4b4040ef          	jal	ra,80005c30 <memcpy>
        pxQueue->pcWriteTo += pxQueue->uxItemSize;
80001780:	fdc42783          	lw	a5,-36(s0)
80001784:	0047a703          	lw	a4,4(a5)
80001788:	fdc42783          	lw	a5,-36(s0)
8000178c:	0407a783          	lw	a5,64(a5)
80001790:	00f70733          	add	a4,a4,a5
80001794:	fdc42783          	lw	a5,-36(s0)
80001798:	00e7a223          	sw	a4,4(a5)

        if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail )
8000179c:	fdc42783          	lw	a5,-36(s0)
800017a0:	0047a703          	lw	a4,4(a5)
800017a4:	fdc42783          	lw	a5,-36(s0)
800017a8:	0087a783          	lw	a5,8(a5)
800017ac:	0af76663          	bltu	a4,a5,80001858 <prvCopyDataToQueue+0x138>
        {
            pxQueue->pcWriteTo = pxQueue->pcHead;
800017b0:	fdc42783          	lw	a5,-36(s0)
800017b4:	0007a703          	lw	a4,0(a5)
800017b8:	fdc42783          	lw	a5,-36(s0)
800017bc:	00e7a223          	sw	a4,4(a5)
800017c0:	0980006f          	jal	zero,80001858 <prvCopyDataToQueue+0x138>
            mtCOVERAGE_TEST_MARKER();
        }
    }
    else
    {
        ( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize );
800017c4:	fdc42783          	lw	a5,-36(s0)
800017c8:	00c7a703          	lw	a4,12(a5)
800017cc:	fdc42783          	lw	a5,-36(s0)
800017d0:	0407a783          	lw	a5,64(a5)
800017d4:	00078613          	addi	a2,a5,0
800017d8:	fd842583          	lw	a1,-40(s0)
800017dc:	00070513          	addi	a0,a4,0
800017e0:	450040ef          	jal	ra,80005c30 <memcpy>
        pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
800017e4:	fdc42783          	lw	a5,-36(s0)
800017e8:	00c7a703          	lw	a4,12(a5)
800017ec:	fdc42783          	lw	a5,-36(s0)
800017f0:	0407a783          	lw	a5,64(a5)
800017f4:	40f007b3          	sub	a5,zero,a5
800017f8:	00f70733          	add	a4,a4,a5
800017fc:	fdc42783          	lw	a5,-36(s0)
80001800:	00e7a623          	sw	a4,12(a5)

        if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead )
80001804:	fdc42783          	lw	a5,-36(s0)
80001808:	00c7a703          	lw	a4,12(a5)
8000180c:	fdc42783          	lw	a5,-36(s0)
80001810:	0007a783          	lw	a5,0(a5)
80001814:	02f77263          	bgeu	a4,a5,80001838 <prvCopyDataToQueue+0x118>
        {
            pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
80001818:	fdc42783          	lw	a5,-36(s0)
8000181c:	0087a703          	lw	a4,8(a5)
80001820:	fdc42783          	lw	a5,-36(s0)
80001824:	0407a783          	lw	a5,64(a5)
80001828:	40f007b3          	sub	a5,zero,a5
8000182c:	00f70733          	add	a4,a4,a5
80001830:	fdc42783          	lw	a5,-36(s0)
80001834:	00e7a623          	sw	a4,12(a5)
        else
        {
            mtCOVERAGE_TEST_MARKER();
        }

        if( xPosition == queueOVERWRITE )
80001838:	fd442703          	lw	a4,-44(s0)
8000183c:	00200793          	addi	a5,zero,2
80001840:	00f71c63          	bne	a4,a5,80001858 <prvCopyDataToQueue+0x138>
        {
            if( uxMessagesWaiting > ( UBaseType_t ) 0 )
80001844:	fec42783          	lw	a5,-20(s0)
80001848:	00078863          	beq	a5,zero,80001858 <prvCopyDataToQueue+0x138>
            {
                /* An item is not being added but overwritten, so subtract
                 * one from the recorded number of items in the queue so when
                 * one is added again below the number of recorded items remains
                 * correct. */
                --uxMessagesWaiting;
8000184c:	fec42783          	lw	a5,-20(s0)
80001850:	fff78793          	addi	a5,a5,-1
80001854:	fef42623          	sw	a5,-20(s0)
        {
            mtCOVERAGE_TEST_MARKER();
        }
    }

    pxQueue->uxMessagesWaiting = ( UBaseType_t ) ( uxMessagesWaiting + ( UBaseType_t ) 1 );
80001858:	fec42783          	lw	a5,-20(s0)
8000185c:	00178713          	addi	a4,a5,1
80001860:	fdc42783          	lw	a5,-36(s0)
80001864:	02e7ac23          	sw	a4,56(a5)

    return xReturn;
80001868:	fe842783          	lw	a5,-24(s0)
}
8000186c:	00078513          	addi	a0,a5,0
80001870:	02c12083          	lw	ra,44(sp)
80001874:	02812403          	lw	s0,40(sp)
80001878:	03010113          	addi	sp,sp,48
8000187c:	00008067          	jalr	zero,0(ra)

80001880 <prvCopyDataFromQueue>:
/*-----------------------------------------------------------*/

static void prvCopyDataFromQueue( Queue_t * const pxQueue,
                                  void * const pvBuffer )
{
80001880:	fe010113          	addi	sp,sp,-32
80001884:	00112e23          	sw	ra,28(sp)
80001888:	00812c23          	sw	s0,24(sp)
8000188c:	02010413          	addi	s0,sp,32
80001890:	fea42623          	sw	a0,-20(s0)
80001894:	feb42423          	sw	a1,-24(s0)
    if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
80001898:	fec42783          	lw	a5,-20(s0)
8000189c:	0407a783          	lw	a5,64(a5)
800018a0:	06078263          	beq	a5,zero,80001904 <prvCopyDataFromQueue+0x84>
    {
        pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize;
800018a4:	fec42783          	lw	a5,-20(s0)
800018a8:	00c7a703          	lw	a4,12(a5)
800018ac:	fec42783          	lw	a5,-20(s0)
800018b0:	0407a783          	lw	a5,64(a5)
800018b4:	00f70733          	add	a4,a4,a5
800018b8:	fec42783          	lw	a5,-20(s0)
800018bc:	00e7a623          	sw	a4,12(a5)

        if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail )
800018c0:	fec42783          	lw	a5,-20(s0)
800018c4:	00c7a703          	lw	a4,12(a5)
800018c8:	fec42783          	lw	a5,-20(s0)
800018cc:	0087a783          	lw	a5,8(a5)
800018d0:	00f76a63          	bltu	a4,a5,800018e4 <prvCopyDataFromQueue+0x64>
        {
            pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
800018d4:	fec42783          	lw	a5,-20(s0)
800018d8:	0007a703          	lw	a4,0(a5)
800018dc:	fec42783          	lw	a5,-20(s0)
800018e0:	00e7a623          	sw	a4,12(a5)
        else
        {
            mtCOVERAGE_TEST_MARKER();
        }

        ( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize );
800018e4:	fec42783          	lw	a5,-20(s0)
800018e8:	00c7a703          	lw	a4,12(a5)
800018ec:	fec42783          	lw	a5,-20(s0)
800018f0:	0407a783          	lw	a5,64(a5)
800018f4:	00078613          	addi	a2,a5,0
800018f8:	00070593          	addi	a1,a4,0
800018fc:	fe842503          	lw	a0,-24(s0)
80001900:	330040ef          	jal	ra,80005c30 <memcpy>
    }
}
80001904:	00000013          	addi	zero,zero,0
80001908:	01c12083          	lw	ra,28(sp)
8000190c:	01812403          	lw	s0,24(sp)
80001910:	02010113          	addi	sp,sp,32
80001914:	00008067          	jalr	zero,0(ra)

80001918 <prvUnlockQueue>:
/*-----------------------------------------------------------*/

static void prvUnlockQueue( Queue_t * const pxQueue )
{
80001918:	fd010113          	addi	sp,sp,-48
8000191c:	02112623          	sw	ra,44(sp)
80001920:	02812423          	sw	s0,40(sp)
80001924:	03010413          	addi	s0,sp,48
80001928:	fca42e23          	sw	a0,-36(s0)

    /* The lock counts contains the number of extra data items placed or
     * removed from the queue while the queue was locked.  When a queue is
     * locked items can be added or removed, but the event lists cannot be
     * updated. */
    taskENTER_CRITICAL();
8000192c:	30047073          	csrrci	zero,mstatus,8
80001930:	800077b7          	lui	a5,0x80007
80001934:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
80001938:	00178713          	addi	a4,a5,1
8000193c:	800077b7          	lui	a5,0x80007
80001940:	c6e7a623          	sw	a4,-916(a5) # 80006c6c <xCriticalNesting>
    {
        int8_t cTxLock = pxQueue->cTxLock;
80001944:	fdc42783          	lw	a5,-36(s0)
80001948:	0457c783          	lbu	a5,69(a5)
8000194c:	fef407a3          	sb	a5,-17(s0)

        /* See if data was added to the queue while it was locked. */
        while( cTxLock > queueLOCKED_UNMODIFIED )
80001950:	03c0006f          	jal	zero,8000198c <prvUnlockQueue+0x74>
            }
            #else /* configUSE_QUEUE_SETS */
            {
                /* Tasks that are removed from the event list will get added to
                 * the pending ready list as the scheduler is still suspended. */
                if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
80001954:	fdc42783          	lw	a5,-36(s0)
80001958:	0247a783          	lw	a5,36(a5)
8000195c:	02078e63          	beq	a5,zero,80001998 <prvUnlockQueue+0x80>
                {
                    if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
80001960:	fdc42783          	lw	a5,-36(s0)
80001964:	02478793          	addi	a5,a5,36
80001968:	00078513          	addi	a0,a5,0
8000196c:	36c010ef          	jal	ra,80002cd8 <xTaskRemoveFromEventList>
80001970:	00050793          	addi	a5,a0,0
80001974:	00078463          	beq	a5,zero,8000197c <prvUnlockQueue+0x64>
                    {
                        /* The task waiting has a higher priority so record that
                         * a context switch is required. */
                        vTaskMissedYield();
80001978:	291010ef          	jal	ra,80003408 <vTaskMissedYield>
                    break;
                }
            }
            #endif /* configUSE_QUEUE_SETS */

            --cTxLock;
8000197c:	fef44783          	lbu	a5,-17(s0)
80001980:	fff78793          	addi	a5,a5,-1
80001984:	0ff7f793          	andi	a5,a5,255
80001988:	fef407a3          	sb	a5,-17(s0)
        while( cTxLock > queueLOCKED_UNMODIFIED )
8000198c:	fef40783          	lb	a5,-17(s0)
80001990:	fcf042e3          	blt	zero,a5,80001954 <prvUnlockQueue+0x3c>
80001994:	0080006f          	jal	zero,8000199c <prvUnlockQueue+0x84>
                    break;
80001998:	00000013          	addi	zero,zero,0
        }

        pxQueue->cTxLock = queueUNLOCKED;
8000199c:	fdc42783          	lw	a5,-36(s0)
800019a0:	fff00713          	addi	a4,zero,-1
800019a4:	04e782a3          	sb	a4,69(a5)
    }
    taskEXIT_CRITICAL();
800019a8:	800077b7          	lui	a5,0x80007
800019ac:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
800019b0:	fff78713          	addi	a4,a5,-1
800019b4:	800077b7          	lui	a5,0x80007
800019b8:	c6e7a623          	sw	a4,-916(a5) # 80006c6c <xCriticalNesting>
800019bc:	800077b7          	lui	a5,0x80007
800019c0:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
800019c4:	00079463          	bne	a5,zero,800019cc <prvUnlockQueue+0xb4>
800019c8:	30046073          	csrrsi	zero,mstatus,8

    /* Do the same for the Rx lock. */
    taskENTER_CRITICAL();
800019cc:	30047073          	csrrci	zero,mstatus,8
800019d0:	800077b7          	lui	a5,0x80007
800019d4:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
800019d8:	00178713          	addi	a4,a5,1
800019dc:	800077b7          	lui	a5,0x80007
800019e0:	c6e7a623          	sw	a4,-916(a5) # 80006c6c <xCriticalNesting>
    {
        int8_t cRxLock = pxQueue->cRxLock;
800019e4:	fdc42783          	lw	a5,-36(s0)
800019e8:	0447c783          	lbu	a5,68(a5)
800019ec:	fef40723          	sb	a5,-18(s0)

        while( cRxLock > queueLOCKED_UNMODIFIED )
800019f0:	03c0006f          	jal	zero,80001a2c <prvUnlockQueue+0x114>
        {
            if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
800019f4:	fdc42783          	lw	a5,-36(s0)
800019f8:	0107a783          	lw	a5,16(a5)
800019fc:	02078e63          	beq	a5,zero,80001a38 <prvUnlockQueue+0x120>
            {
                if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
80001a00:	fdc42783          	lw	a5,-36(s0)
80001a04:	01078793          	addi	a5,a5,16
80001a08:	00078513          	addi	a0,a5,0
80001a0c:	2cc010ef          	jal	ra,80002cd8 <xTaskRemoveFromEventList>
80001a10:	00050793          	addi	a5,a0,0
80001a14:	00078463          	beq	a5,zero,80001a1c <prvUnlockQueue+0x104>
                {
                    vTaskMissedYield();
80001a18:	1f1010ef          	jal	ra,80003408 <vTaskMissedYield>
                else
                {
                    mtCOVERAGE_TEST_MARKER();
                }

                --cRxLock;
80001a1c:	fee44783          	lbu	a5,-18(s0)
80001a20:	fff78793          	addi	a5,a5,-1
80001a24:	0ff7f793          	andi	a5,a5,255
80001a28:	fef40723          	sb	a5,-18(s0)
        while( cRxLock > queueLOCKED_UNMODIFIED )
80001a2c:	fee40783          	lb	a5,-18(s0)
80001a30:	fcf042e3          	blt	zero,a5,800019f4 <prvUnlockQueue+0xdc>
80001a34:	0080006f          	jal	zero,80001a3c <prvUnlockQueue+0x124>
            }
            else
            {
                break;
80001a38:	00000013          	addi	zero,zero,0
            }
        }

        pxQueue->cRxLock = queueUNLOCKED;
80001a3c:	fdc42783          	lw	a5,-36(s0)
80001a40:	fff00713          	addi	a4,zero,-1
80001a44:	04e78223          	sb	a4,68(a5)
    }
    taskEXIT_CRITICAL();
80001a48:	800077b7          	lui	a5,0x80007
80001a4c:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
80001a50:	fff78713          	addi	a4,a5,-1
80001a54:	800077b7          	lui	a5,0x80007
80001a58:	c6e7a623          	sw	a4,-916(a5) # 80006c6c <xCriticalNesting>
80001a5c:	800077b7          	lui	a5,0x80007
80001a60:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
80001a64:	00079463          	bne	a5,zero,80001a6c <prvUnlockQueue+0x154>
80001a68:	30046073          	csrrsi	zero,mstatus,8
}
80001a6c:	00000013          	addi	zero,zero,0
80001a70:	02c12083          	lw	ra,44(sp)
80001a74:	02812403          	lw	s0,40(sp)
80001a78:	03010113          	addi	sp,sp,48
80001a7c:	00008067          	jalr	zero,0(ra)

80001a80 <prvIsQueueEmpty>:
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t * pxQueue )
{
80001a80:	fd010113          	addi	sp,sp,-48
80001a84:	02112623          	sw	ra,44(sp)
80001a88:	02812423          	sw	s0,40(sp)
80001a8c:	03010413          	addi	s0,sp,48
80001a90:	fca42e23          	sw	a0,-36(s0)
    BaseType_t xReturn;

    taskENTER_CRITICAL();
80001a94:	30047073          	csrrci	zero,mstatus,8
80001a98:	800077b7          	lui	a5,0x80007
80001a9c:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
80001aa0:	00178713          	addi	a4,a5,1
80001aa4:	800077b7          	lui	a5,0x80007
80001aa8:	c6e7a623          	sw	a4,-916(a5) # 80006c6c <xCriticalNesting>
    {
        if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
80001aac:	fdc42783          	lw	a5,-36(s0)
80001ab0:	0387a783          	lw	a5,56(a5)
80001ab4:	00079863          	bne	a5,zero,80001ac4 <prvIsQueueEmpty+0x44>
        {
            xReturn = pdTRUE;
80001ab8:	00100793          	addi	a5,zero,1
80001abc:	fef42623          	sw	a5,-20(s0)
80001ac0:	0080006f          	jal	zero,80001ac8 <prvIsQueueEmpty+0x48>
        }
        else
        {
            xReturn = pdFALSE;
80001ac4:	fe042623          	sw	zero,-20(s0)
        }
    }
    taskEXIT_CRITICAL();
80001ac8:	800077b7          	lui	a5,0x80007
80001acc:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
80001ad0:	fff78713          	addi	a4,a5,-1
80001ad4:	800077b7          	lui	a5,0x80007
80001ad8:	c6e7a623          	sw	a4,-916(a5) # 80006c6c <xCriticalNesting>
80001adc:	800077b7          	lui	a5,0x80007
80001ae0:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
80001ae4:	00079463          	bne	a5,zero,80001aec <prvIsQueueEmpty+0x6c>
80001ae8:	30046073          	csrrsi	zero,mstatus,8

    return xReturn;
80001aec:	fec42783          	lw	a5,-20(s0)
}
80001af0:	00078513          	addi	a0,a5,0
80001af4:	02c12083          	lw	ra,44(sp)
80001af8:	02812403          	lw	s0,40(sp)
80001afc:	03010113          	addi	sp,sp,48
80001b00:	00008067          	jalr	zero,0(ra)

80001b04 <xQueueIsQueueEmptyFromISR>:
/*-----------------------------------------------------------*/

BaseType_t xQueueIsQueueEmptyFromISR( const QueueHandle_t xQueue )
{
80001b04:	fd010113          	addi	sp,sp,-48
80001b08:	02112623          	sw	ra,44(sp)
80001b0c:	02812423          	sw	s0,40(sp)
80001b10:	03010413          	addi	s0,sp,48
80001b14:	fca42e23          	sw	a0,-36(s0)
    BaseType_t xReturn;
    Queue_t * const pxQueue = xQueue;
80001b18:	fdc42783          	lw	a5,-36(s0)
80001b1c:	fef42423          	sw	a5,-24(s0)

    traceENTER_xQueueIsQueueEmptyFromISR( xQueue );

    configASSERT( pxQueue );

    if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0 )
80001b20:	fe842783          	lw	a5,-24(s0)
80001b24:	0387a783          	lw	a5,56(a5)
80001b28:	00079863          	bne	a5,zero,80001b38 <xQueueIsQueueEmptyFromISR+0x34>
    {
        xReturn = pdTRUE;
80001b2c:	00100793          	addi	a5,zero,1
80001b30:	fef42623          	sw	a5,-20(s0)
80001b34:	0080006f          	jal	zero,80001b3c <xQueueIsQueueEmptyFromISR+0x38>
    }
    else
    {
        xReturn = pdFALSE;
80001b38:	fe042623          	sw	zero,-20(s0)
    }

    traceRETURN_xQueueIsQueueEmptyFromISR( xReturn );

    return xReturn;
80001b3c:	fec42783          	lw	a5,-20(s0)
}
80001b40:	00078513          	addi	a0,a5,0
80001b44:	02c12083          	lw	ra,44(sp)
80001b48:	02812403          	lw	s0,40(sp)
80001b4c:	03010113          	addi	sp,sp,48
80001b50:	00008067          	jalr	zero,0(ra)

80001b54 <prvIsQueueFull>:
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueFull( const Queue_t * pxQueue )
{
80001b54:	fd010113          	addi	sp,sp,-48
80001b58:	02112623          	sw	ra,44(sp)
80001b5c:	02812423          	sw	s0,40(sp)
80001b60:	03010413          	addi	s0,sp,48
80001b64:	fca42e23          	sw	a0,-36(s0)
    BaseType_t xReturn;

    taskENTER_CRITICAL();
80001b68:	30047073          	csrrci	zero,mstatus,8
80001b6c:	800077b7          	lui	a5,0x80007
80001b70:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
80001b74:	00178713          	addi	a4,a5,1
80001b78:	800077b7          	lui	a5,0x80007
80001b7c:	c6e7a623          	sw	a4,-916(a5) # 80006c6c <xCriticalNesting>
    {
        if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
80001b80:	fdc42783          	lw	a5,-36(s0)
80001b84:	0387a703          	lw	a4,56(a5)
80001b88:	fdc42783          	lw	a5,-36(s0)
80001b8c:	03c7a783          	lw	a5,60(a5)
80001b90:	00f71863          	bne	a4,a5,80001ba0 <prvIsQueueFull+0x4c>
        {
            xReturn = pdTRUE;
80001b94:	00100793          	addi	a5,zero,1
80001b98:	fef42623          	sw	a5,-20(s0)
80001b9c:	0080006f          	jal	zero,80001ba4 <prvIsQueueFull+0x50>
        }
        else
        {
            xReturn = pdFALSE;
80001ba0:	fe042623          	sw	zero,-20(s0)
        }
    }
    taskEXIT_CRITICAL();
80001ba4:	800077b7          	lui	a5,0x80007
80001ba8:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
80001bac:	fff78713          	addi	a4,a5,-1
80001bb0:	800077b7          	lui	a5,0x80007
80001bb4:	c6e7a623          	sw	a4,-916(a5) # 80006c6c <xCriticalNesting>
80001bb8:	800077b7          	lui	a5,0x80007
80001bbc:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
80001bc0:	00079463          	bne	a5,zero,80001bc8 <prvIsQueueFull+0x74>
80001bc4:	30046073          	csrrsi	zero,mstatus,8

    return xReturn;
80001bc8:	fec42783          	lw	a5,-20(s0)
}
80001bcc:	00078513          	addi	a0,a5,0
80001bd0:	02c12083          	lw	ra,44(sp)
80001bd4:	02812403          	lw	s0,40(sp)
80001bd8:	03010113          	addi	sp,sp,48
80001bdc:	00008067          	jalr	zero,0(ra)

80001be0 <xQueueIsQueueFullFromISR>:
/*-----------------------------------------------------------*/

BaseType_t xQueueIsQueueFullFromISR( const QueueHandle_t xQueue )
{
80001be0:	fd010113          	addi	sp,sp,-48
80001be4:	02112623          	sw	ra,44(sp)
80001be8:	02812423          	sw	s0,40(sp)
80001bec:	03010413          	addi	s0,sp,48
80001bf0:	fca42e23          	sw	a0,-36(s0)
    BaseType_t xReturn;
    Queue_t * const pxQueue = xQueue;
80001bf4:	fdc42783          	lw	a5,-36(s0)
80001bf8:	fef42423          	sw	a5,-24(s0)

    traceENTER_xQueueIsQueueFullFromISR( xQueue );

    configASSERT( pxQueue );

    if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
80001bfc:	fe842783          	lw	a5,-24(s0)
80001c00:	0387a703          	lw	a4,56(a5)
80001c04:	fe842783          	lw	a5,-24(s0)
80001c08:	03c7a783          	lw	a5,60(a5)
80001c0c:	00f71863          	bne	a4,a5,80001c1c <xQueueIsQueueFullFromISR+0x3c>
    {
        xReturn = pdTRUE;
80001c10:	00100793          	addi	a5,zero,1
80001c14:	fef42623          	sw	a5,-20(s0)
80001c18:	0080006f          	jal	zero,80001c20 <xQueueIsQueueFullFromISR+0x40>
    }
    else
    {
        xReturn = pdFALSE;
80001c1c:	fe042623          	sw	zero,-20(s0)
    }

    traceRETURN_xQueueIsQueueFullFromISR( xReturn );

    return xReturn;
80001c20:	fec42783          	lw	a5,-20(s0)
}
80001c24:	00078513          	addi	a0,a5,0
80001c28:	02c12083          	lw	ra,44(sp)
80001c2c:	02812403          	lw	s0,40(sp)
80001c30:	03010113          	addi	sp,sp,48
80001c34:	00008067          	jalr	zero,0(ra)

80001c38 <prvCreateTask>:
                                  const char * const pcName,
                                  const configSTACK_DEPTH_TYPE uxStackDepth,
                                  void * const pvParameters,
                                  UBaseType_t uxPriority,
                                  TaskHandle_t * const pxCreatedTask )
    {
80001c38:	fc010113          	addi	sp,sp,-64
80001c3c:	02112e23          	sw	ra,60(sp)
80001c40:	02812c23          	sw	s0,56(sp)
80001c44:	04010413          	addi	s0,sp,64
80001c48:	fca42e23          	sw	a0,-36(s0)
80001c4c:	fcb42c23          	sw	a1,-40(s0)
80001c50:	fcc42a23          	sw	a2,-44(s0)
80001c54:	fcd42823          	sw	a3,-48(s0)
80001c58:	fce42623          	sw	a4,-52(s0)
80001c5c:	fcf42423          	sw	a5,-56(s0)

            /* Allocate space for the stack used by the task being created. */
            /* MISRA Ref 11.5.1 [Malloc memory assignment] */
            /* More details at: https://github.com/FreeRTOS/FreeRTOS-Kernel/blob/main/MISRA.md#rule-115 */
            /* coverity[misra_c_2012_rule_11_5_violation] */
            pxStack = pvPortMallocStack( ( ( ( size_t ) uxStackDepth ) * sizeof( StackType_t ) ) );
80001c60:	fd442783          	lw	a5,-44(s0)
80001c64:	00279793          	slli	a5,a5,0x2
80001c68:	00078513          	addi	a0,a5,0
80001c6c:	584030ef          	jal	ra,800051f0 <pvPortMalloc>
80001c70:	fea42423          	sw	a0,-24(s0)

            if( pxStack != NULL )
80001c74:	fe842783          	lw	a5,-24(s0)
80001c78:	04078263          	beq	a5,zero,80001cbc <prvCreateTask+0x84>
            {
                /* Allocate space for the TCB. */
                /* MISRA Ref 11.5.1 [Malloc memory assignment] */
                /* More details at: https://github.com/FreeRTOS/FreeRTOS-Kernel/blob/main/MISRA.md#rule-115 */
                /* coverity[misra_c_2012_rule_11_5_violation] */
                pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
80001c7c:	04c00513          	addi	a0,zero,76
80001c80:	570030ef          	jal	ra,800051f0 <pvPortMalloc>
80001c84:	fea42623          	sw	a0,-20(s0)

                if( pxNewTCB != NULL )
80001c88:	fec42783          	lw	a5,-20(s0)
80001c8c:	02078263          	beq	a5,zero,80001cb0 <prvCreateTask+0x78>
                {
                    ( void ) memset( ( void * ) pxNewTCB, 0x00, sizeof( TCB_t ) );
80001c90:	04c00613          	addi	a2,zero,76
80001c94:	00000593          	addi	a1,zero,0
80001c98:	fec42503          	lw	a0,-20(s0)
80001c9c:	00c040ef          	jal	ra,80005ca8 <memset>

                    /* Store the stack location in the TCB. */
                    pxNewTCB->pxStack = pxStack;
80001ca0:	fec42783          	lw	a5,-20(s0)
80001ca4:	fe842703          	lw	a4,-24(s0)
80001ca8:	02e7a823          	sw	a4,48(a5)
80001cac:	0140006f          	jal	zero,80001cc0 <prvCreateTask+0x88>
                }
                else
                {
                    /* The stack cannot be used as the TCB was not created.  Free
                     * it again. */
                    vPortFreeStack( pxStack );
80001cb0:	fe842503          	lw	a0,-24(s0)
80001cb4:	780030ef          	jal	ra,80005434 <vPortFree>
80001cb8:	0080006f          	jal	zero,80001cc0 <prvCreateTask+0x88>
                }
            }
            else
            {
                pxNewTCB = NULL;
80001cbc:	fe042623          	sw	zero,-20(s0)
            }
        }
        #endif /* portSTACK_GROWTH */

        if( pxNewTCB != NULL )
80001cc0:	fec42783          	lw	a5,-20(s0)
80001cc4:	02078463          	beq	a5,zero,80001cec <prvCreateTask+0xb4>
                 * task was created dynamically in case it is later deleted. */
                pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
            }
            #endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */

            prvInitialiseNewTask( pxTaskCode, pcName, uxStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
80001cc8:	00000893          	addi	a7,zero,0
80001ccc:	fec42803          	lw	a6,-20(s0)
80001cd0:	fc842783          	lw	a5,-56(s0)
80001cd4:	fcc42703          	lw	a4,-52(s0)
80001cd8:	fd042683          	lw	a3,-48(s0)
80001cdc:	fd442603          	lw	a2,-44(s0)
80001ce0:	fd842583          	lw	a1,-40(s0)
80001ce4:	fdc42503          	lw	a0,-36(s0)
80001ce8:	0a0000ef          	jal	ra,80001d88 <prvInitialiseNewTask>
        }

        return pxNewTCB;
80001cec:	fec42783          	lw	a5,-20(s0)
    }
80001cf0:	00078513          	addi	a0,a5,0
80001cf4:	03c12083          	lw	ra,60(sp)
80001cf8:	03812403          	lw	s0,56(sp)
80001cfc:	04010113          	addi	sp,sp,64
80001d00:	00008067          	jalr	zero,0(ra)

80001d04 <xTaskCreate>:
                            const char * const pcName,
                            const configSTACK_DEPTH_TYPE uxStackDepth,
                            void * const pvParameters,
                            UBaseType_t uxPriority,
                            TaskHandle_t * const pxCreatedTask )
    {
80001d04:	fc010113          	addi	sp,sp,-64
80001d08:	02112e23          	sw	ra,60(sp)
80001d0c:	02812c23          	sw	s0,56(sp)
80001d10:	04010413          	addi	s0,sp,64
80001d14:	fca42e23          	sw	a0,-36(s0)
80001d18:	fcb42c23          	sw	a1,-40(s0)
80001d1c:	fcc42a23          	sw	a2,-44(s0)
80001d20:	fcd42823          	sw	a3,-48(s0)
80001d24:	fce42623          	sw	a4,-52(s0)
80001d28:	fcf42423          	sw	a5,-56(s0)
        TCB_t * pxNewTCB;
        BaseType_t xReturn;

        traceENTER_xTaskCreate( pxTaskCode, pcName, uxStackDepth, pvParameters, uxPriority, pxCreatedTask );

        pxNewTCB = prvCreateTask( pxTaskCode, pcName, uxStackDepth, pvParameters, uxPriority, pxCreatedTask );
80001d2c:	fc842783          	lw	a5,-56(s0)
80001d30:	fcc42703          	lw	a4,-52(s0)
80001d34:	fd042683          	lw	a3,-48(s0)
80001d38:	fd442603          	lw	a2,-44(s0)
80001d3c:	fd842583          	lw	a1,-40(s0)
80001d40:	fdc42503          	lw	a0,-36(s0)
80001d44:	ef5ff0ef          	jal	ra,80001c38 <prvCreateTask>
80001d48:	fea42423          	sw	a0,-24(s0)

        if( pxNewTCB != NULL )
80001d4c:	fe842783          	lw	a5,-24(s0)
80001d50:	00078c63          	beq	a5,zero,80001d68 <xTaskCreate+0x64>
                /* Set the task's affinity before scheduling it. */
                pxNewTCB->uxCoreAffinityMask = configTASK_DEFAULT_CORE_AFFINITY;
            }
            #endif

            prvAddNewTaskToReadyList( pxNewTCB );
80001d54:	fe842503          	lw	a0,-24(s0)
80001d58:	1a4000ef          	jal	ra,80001efc <prvAddNewTaskToReadyList>
            xReturn = pdPASS;
80001d5c:	00100793          	addi	a5,zero,1
80001d60:	fef42623          	sw	a5,-20(s0)
80001d64:	00c0006f          	jal	zero,80001d70 <xTaskCreate+0x6c>
        }
        else
        {
            xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
80001d68:	fff00793          	addi	a5,zero,-1
80001d6c:	fef42623          	sw	a5,-20(s0)
        }

        traceRETURN_xTaskCreate( xReturn );

        return xReturn;
80001d70:	fec42783          	lw	a5,-20(s0)
    }
80001d74:	00078513          	addi	a0,a5,0
80001d78:	03c12083          	lw	ra,60(sp)
80001d7c:	03812403          	lw	s0,56(sp)
80001d80:	04010113          	addi	sp,sp,64
80001d84:	00008067          	jalr	zero,0(ra)

80001d88 <prvInitialiseNewTask>:
                                  void * const pvParameters,
                                  UBaseType_t uxPriority,
                                  TaskHandle_t * const pxCreatedTask,
                                  TCB_t * pxNewTCB,
                                  const MemoryRegion_t * const xRegions )
{
80001d88:	fc010113          	addi	sp,sp,-64
80001d8c:	02112e23          	sw	ra,60(sp)
80001d90:	02812c23          	sw	s0,56(sp)
80001d94:	04010413          	addi	s0,sp,64
80001d98:	fca42e23          	sw	a0,-36(s0)
80001d9c:	fcb42c23          	sw	a1,-40(s0)
80001da0:	fcc42a23          	sw	a2,-44(s0)
80001da4:	fcd42823          	sw	a3,-48(s0)
80001da8:	fce42623          	sw	a4,-52(s0)
80001dac:	fcf42423          	sw	a5,-56(s0)
80001db0:	fd042223          	sw	a6,-60(s0)
80001db4:	fd142023          	sw	a7,-64(s0)
     * grows from high memory to low (as per the 80x86) or vice versa.
     * portSTACK_GROWTH is used to make the result positive or negative as required
     * by the port. */
    #if ( portSTACK_GROWTH < 0 )
    {
        pxTopOfStack = &( pxNewTCB->pxStack[ uxStackDepth - ( configSTACK_DEPTH_TYPE ) 1 ] );
80001db8:	fc442783          	lw	a5,-60(s0)
80001dbc:	0307a703          	lw	a4,48(a5)
80001dc0:	fd442683          	lw	a3,-44(s0)
80001dc4:	400007b7          	lui	a5,0x40000
80001dc8:	fff78793          	addi	a5,a5,-1 # 3fffffff <__start-0x40000001>
80001dcc:	00f687b3          	add	a5,a3,a5
80001dd0:	00279793          	slli	a5,a5,0x2
80001dd4:	00f707b3          	add	a5,a4,a5
80001dd8:	fef42423          	sw	a5,-24(s0)
        pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) );
80001ddc:	fe842783          	lw	a5,-24(s0)
80001de0:	ff07f793          	andi	a5,a5,-16
80001de4:	fef42423          	sw	a5,-24(s0)
        pxNewTCB->pxEndOfStack = pxNewTCB->pxStack + ( uxStackDepth - ( configSTACK_DEPTH_TYPE ) 1 );
    }
    #endif /* portSTACK_GROWTH */

    /* Store the task name in the TCB. */
    if( pcName != NULL )
80001de8:	fd842783          	lw	a5,-40(s0)
80001dec:	06078463          	beq	a5,zero,80001e54 <prvInitialiseNewTask+0xcc>
    {
        for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
80001df0:	fe042623          	sw	zero,-20(s0)
80001df4:	0440006f          	jal	zero,80001e38 <prvInitialiseNewTask+0xb0>
        {
            pxNewTCB->pcTaskName[ x ] = pcName[ x ];
80001df8:	fd842703          	lw	a4,-40(s0)
80001dfc:	fec42783          	lw	a5,-20(s0)
80001e00:	00f707b3          	add	a5,a4,a5
80001e04:	0007c703          	lbu	a4,0(a5)
80001e08:	fc442683          	lw	a3,-60(s0)
80001e0c:	fec42783          	lw	a5,-20(s0)
80001e10:	00f687b3          	add	a5,a3,a5
80001e14:	02e78a23          	sb	a4,52(a5)

            /* Don't copy all configMAX_TASK_NAME_LEN if the string is shorter than
             * configMAX_TASK_NAME_LEN characters just in case the memory after the
             * string is not accessible (extremely unlikely). */
            if( pcName[ x ] == ( char ) 0x00 )
80001e18:	fd842703          	lw	a4,-40(s0)
80001e1c:	fec42783          	lw	a5,-20(s0)
80001e20:	00f707b3          	add	a5,a4,a5
80001e24:	0007c783          	lbu	a5,0(a5)
80001e28:	02078063          	beq	a5,zero,80001e48 <prvInitialiseNewTask+0xc0>
        for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
80001e2c:	fec42783          	lw	a5,-20(s0)
80001e30:	00178793          	addi	a5,a5,1
80001e34:	fef42623          	sw	a5,-20(s0)
80001e38:	fec42703          	lw	a4,-20(s0)
80001e3c:	00f00793          	addi	a5,zero,15
80001e40:	fae7fce3          	bgeu	a5,a4,80001df8 <prvInitialiseNewTask+0x70>
80001e44:	0080006f          	jal	zero,80001e4c <prvInitialiseNewTask+0xc4>
            {
                break;
80001e48:	00000013          	addi	zero,zero,0
            }
        }

        /* Ensure the name string is terminated in the case that the string length
         * was greater or equal to configMAX_TASK_NAME_LEN. */
        pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1U ] = '\0';
80001e4c:	fc442783          	lw	a5,-60(s0)
80001e50:	040781a3          	sb	zero,67(a5)
    }

    /* This is used as an array index so must ensure it's not too large. */
    configASSERT( uxPriority < configMAX_PRIORITIES );

    if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
80001e54:	fcc42783          	lw	a5,-52(s0)
80001e58:	00078463          	beq	a5,zero,80001e60 <prvInitialiseNewTask+0xd8>
    {
        uxPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
80001e5c:	fc042623          	sw	zero,-52(s0)
    else
    {
        mtCOVERAGE_TEST_MARKER();
    }

    pxNewTCB->uxPriority = uxPriority;
80001e60:	fc442783          	lw	a5,-60(s0)
80001e64:	fcc42703          	lw	a4,-52(s0)
80001e68:	02e7a623          	sw	a4,44(a5)
    {
        pxNewTCB->uxBasePriority = uxPriority;
    }
    #endif /* configUSE_MUTEXES */

    vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
80001e6c:	fc442783          	lw	a5,-60(s0)
80001e70:	00478793          	addi	a5,a5,4
80001e74:	00078513          	addi	a0,a5,0
80001e78:	ae0fe0ef          	jal	ra,80000158 <vListInitialiseItem>
    vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
80001e7c:	fc442783          	lw	a5,-60(s0)
80001e80:	01878793          	addi	a5,a5,24
80001e84:	00078513          	addi	a0,a5,0
80001e88:	ad0fe0ef          	jal	ra,80000158 <vListInitialiseItem>

    /* Set the pxNewTCB as a link back from the ListItem_t.  This is so we can get
     * back to  the containing TCB from a generic item in a list. */
    listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
80001e8c:	fc442783          	lw	a5,-60(s0)
80001e90:	fc442703          	lw	a4,-60(s0)
80001e94:	00e7a823          	sw	a4,16(a5)

    /* Event lists are always in priority order. */
    listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority );
80001e98:	00100713          	addi	a4,zero,1
80001e9c:	fcc42783          	lw	a5,-52(s0)
80001ea0:	40f70733          	sub	a4,a4,a5
80001ea4:	fc442783          	lw	a5,-60(s0)
80001ea8:	00e7ac23          	sw	a4,24(a5)
    listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
80001eac:	fc442783          	lw	a5,-60(s0)
80001eb0:	fc442703          	lw	a4,-60(s0)
80001eb4:	02e7a223          	sw	a4,36(a5)
            }
            #endif /* portSTACK_GROWTH */
        }
        #else /* portHAS_STACK_OVERFLOW_CHECKING */
        {
            pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
80001eb8:	fd042603          	lw	a2,-48(s0)
80001ebc:	fdc42583          	lw	a1,-36(s0)
80001ec0:	fe842503          	lw	a0,-24(s0)
80001ec4:	2fd020ef          	jal	ra,800049c0 <pxPortInitialiseStack>
80001ec8:	00050713          	addi	a4,a0,0
80001ecc:	fc442783          	lw	a5,-60(s0)
80001ed0:	00e7a023          	sw	a4,0(a5)
            pxNewTCB->uxTaskAttributes |= taskATTRIBUTE_IS_IDLE;
        }
    }
    #endif /* #if ( configNUMBER_OF_CORES > 1 ) */

    if( pxCreatedTask != NULL )
80001ed4:	fc842783          	lw	a5,-56(s0)
80001ed8:	00078863          	beq	a5,zero,80001ee8 <prvInitialiseNewTask+0x160>
    {
        /* Pass the handle out in an anonymous way.  The handle can be used to
         * change the created task's priority, delete the created task, etc.*/
        *pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
80001edc:	fc842783          	lw	a5,-56(s0)
80001ee0:	fc442703          	lw	a4,-60(s0)
80001ee4:	00e7a023          	sw	a4,0(a5)
    }
    else
    {
        mtCOVERAGE_TEST_MARKER();
    }
}
80001ee8:	00000013          	addi	zero,zero,0
80001eec:	03c12083          	lw	ra,60(sp)
80001ef0:	03812403          	lw	s0,56(sp)
80001ef4:	04010113          	addi	sp,sp,64
80001ef8:	00008067          	jalr	zero,0(ra)

80001efc <prvAddNewTaskToReadyList>:
/*-----------------------------------------------------------*/

#if ( configNUMBER_OF_CORES == 1 )

    static void prvAddNewTaskToReadyList( TCB_t * pxNewTCB )
    {
80001efc:	fd010113          	addi	sp,sp,-48
80001f00:	02112623          	sw	ra,44(sp)
80001f04:	02812423          	sw	s0,40(sp)
80001f08:	03010413          	addi	s0,sp,48
80001f0c:	fca42e23          	sw	a0,-36(s0)
        /* Ensure interrupts don't access the task lists while the lists are being
         * updated. */
        taskENTER_CRITICAL();
80001f10:	30047073          	csrrci	zero,mstatus,8
80001f14:	800077b7          	lui	a5,0x80007
80001f18:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
80001f1c:	00178713          	addi	a4,a5,1
80001f20:	800077b7          	lui	a5,0x80007
80001f24:	c6e7a623          	sw	a4,-916(a5) # 80006c6c <xCriticalNesting>
        {
            uxCurrentNumberOfTasks = ( UBaseType_t ) ( uxCurrentNumberOfTasks + 1U );
80001f28:	800087b7          	lui	a5,0x80008
80001f2c:	cd87a783          	lw	a5,-808(a5) # 80007cd8 <uxCurrentNumberOfTasks>
80001f30:	00178713          	addi	a4,a5,1
80001f34:	800087b7          	lui	a5,0x80008
80001f38:	cce7ac23          	sw	a4,-808(a5) # 80007cd8 <uxCurrentNumberOfTasks>

            if( pxCurrentTCB == NULL )
80001f3c:	800097b7          	lui	a5,0x80009
80001f40:	9047a783          	lw	a5,-1788(a5) # 80008904 <pxCurrentTCB>
80001f44:	02079463          	bne	a5,zero,80001f6c <prvAddNewTaskToReadyList+0x70>
            {
                /* There are no other tasks, or all the other tasks are in
                 * the suspended state - make this the current task. */
                pxCurrentTCB = pxNewTCB;
80001f48:	800097b7          	lui	a5,0x80009
80001f4c:	fdc42703          	lw	a4,-36(s0)
80001f50:	90e7a223          	sw	a4,-1788(a5) # 80008904 <pxCurrentTCB>

                if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
80001f54:	800087b7          	lui	a5,0x80008
80001f58:	cd87a703          	lw	a4,-808(a5) # 80007cd8 <uxCurrentNumberOfTasks>
80001f5c:	00100793          	addi	a5,zero,1
80001f60:	02f71e63          	bne	a4,a5,80001f9c <prvAddNewTaskToReadyList+0xa0>
                {
                    /* This is the first task to be created so do the preliminary
                     * initialisation required.  We will not recover if this call
                     * fails, but we will report the failure. */
                    prvInitialiseTaskLists();
80001f64:	4f8010ef          	jal	ra,8000345c <prvInitialiseTaskLists>
80001f68:	0340006f          	jal	zero,80001f9c <prvAddNewTaskToReadyList+0xa0>
            else
            {
                /* If the scheduler is not already running, make this task the
                 * current task if it is the highest priority task to be created
                 * so far. */
                if( xSchedulerRunning == pdFALSE )
80001f6c:	800087b7          	lui	a5,0x80008
80001f70:	ce47a783          	lw	a5,-796(a5) # 80007ce4 <xSchedulerRunning>
80001f74:	02079463          	bne	a5,zero,80001f9c <prvAddNewTaskToReadyList+0xa0>
                {
                    if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
80001f78:	800097b7          	lui	a5,0x80009
80001f7c:	9047a783          	lw	a5,-1788(a5) # 80008904 <pxCurrentTCB>
80001f80:	02c7a703          	lw	a4,44(a5)
80001f84:	fdc42783          	lw	a5,-36(s0)
80001f88:	02c7a783          	lw	a5,44(a5)
80001f8c:	00e7e863          	bltu	a5,a4,80001f9c <prvAddNewTaskToReadyList+0xa0>
                    {
                        pxCurrentTCB = pxNewTCB;
80001f90:	800097b7          	lui	a5,0x80009
80001f94:	fdc42703          	lw	a4,-36(s0)
80001f98:	90e7a223          	sw	a4,-1788(a5) # 80008904 <pxCurrentTCB>
                {
                    mtCOVERAGE_TEST_MARKER();
                }
            }

            uxTaskNumber++;
80001f9c:	800087b7          	lui	a5,0x80008
80001fa0:	cf47a783          	lw	a5,-780(a5) # 80007cf4 <uxTaskNumber>
80001fa4:	00178713          	addi	a4,a5,1
80001fa8:	800087b7          	lui	a5,0x80008
80001fac:	cee7aa23          	sw	a4,-780(a5) # 80007cf4 <uxTaskNumber>
                pxNewTCB->uxTCBNumber = uxTaskNumber;
            }
            #endif /* configUSE_TRACE_FACILITY */
            traceTASK_CREATE( pxNewTCB );

            prvAddTaskToReadyList( pxNewTCB );
80001fb0:	fdc42783          	lw	a5,-36(s0)
80001fb4:	02c7a783          	lw	a5,44(a5)
80001fb8:	00100713          	addi	a4,zero,1
80001fbc:	00f71733          	sll	a4,a4,a5
80001fc0:	800087b7          	lui	a5,0x80008
80001fc4:	ce07a783          	lw	a5,-800(a5) # 80007ce0 <uxTopReadyPriority>
80001fc8:	00f76733          	or	a4,a4,a5
80001fcc:	800087b7          	lui	a5,0x80008
80001fd0:	cee7a023          	sw	a4,-800(a5) # 80007ce0 <uxTopReadyPriority>
80001fd4:	fdc42783          	lw	a5,-36(s0)
80001fd8:	02c7a703          	lw	a4,44(a5)
80001fdc:	800087b7          	lui	a5,0x80008
80001fe0:	c8078693          	addi	a3,a5,-896 # 80007c80 <pxReadyTasksLists>
80001fe4:	00070793          	addi	a5,a4,0
80001fe8:	00279793          	slli	a5,a5,0x2
80001fec:	00e787b3          	add	a5,a5,a4
80001ff0:	00279793          	slli	a5,a5,0x2
80001ff4:	00f687b3          	add	a5,a3,a5
80001ff8:	0047a783          	lw	a5,4(a5)
80001ffc:	fef42623          	sw	a5,-20(s0)
80002000:	fdc42783          	lw	a5,-36(s0)
80002004:	fec42703          	lw	a4,-20(s0)
80002008:	00e7a423          	sw	a4,8(a5)
8000200c:	fec42783          	lw	a5,-20(s0)
80002010:	0087a703          	lw	a4,8(a5)
80002014:	fdc42783          	lw	a5,-36(s0)
80002018:	00e7a623          	sw	a4,12(a5)
8000201c:	fec42783          	lw	a5,-20(s0)
80002020:	0087a783          	lw	a5,8(a5)
80002024:	fdc42703          	lw	a4,-36(s0)
80002028:	00470713          	addi	a4,a4,4
8000202c:	00e7a223          	sw	a4,4(a5)
80002030:	fdc42783          	lw	a5,-36(s0)
80002034:	00478713          	addi	a4,a5,4
80002038:	fec42783          	lw	a5,-20(s0)
8000203c:	00e7a423          	sw	a4,8(a5)
80002040:	fdc42783          	lw	a5,-36(s0)
80002044:	02c7a703          	lw	a4,44(a5)
80002048:	00070793          	addi	a5,a4,0
8000204c:	00279793          	slli	a5,a5,0x2
80002050:	00e787b3          	add	a5,a5,a4
80002054:	00279793          	slli	a5,a5,0x2
80002058:	80008737          	lui	a4,0x80008
8000205c:	c8070713          	addi	a4,a4,-896 # 80007c80 <pxReadyTasksLists>
80002060:	00e78733          	add	a4,a5,a4
80002064:	fdc42783          	lw	a5,-36(s0)
80002068:	00e7aa23          	sw	a4,20(a5)
8000206c:	fdc42783          	lw	a5,-36(s0)
80002070:	02c7a703          	lw	a4,44(a5)
80002074:	800087b7          	lui	a5,0x80008
80002078:	c8078693          	addi	a3,a5,-896 # 80007c80 <pxReadyTasksLists>
8000207c:	00070793          	addi	a5,a4,0
80002080:	00279793          	slli	a5,a5,0x2
80002084:	00e787b3          	add	a5,a5,a4
80002088:	00279793          	slli	a5,a5,0x2
8000208c:	00f687b3          	add	a5,a3,a5
80002090:	0007a783          	lw	a5,0(a5)
80002094:	fdc42703          	lw	a4,-36(s0)
80002098:	02c72703          	lw	a4,44(a4)
8000209c:	00178693          	addi	a3,a5,1
800020a0:	800087b7          	lui	a5,0x80008
800020a4:	c8078613          	addi	a2,a5,-896 # 80007c80 <pxReadyTasksLists>
800020a8:	00070793          	addi	a5,a4,0
800020ac:	00279793          	slli	a5,a5,0x2
800020b0:	00e787b3          	add	a5,a5,a4
800020b4:	00279793          	slli	a5,a5,0x2
800020b8:	00f607b3          	add	a5,a2,a5
800020bc:	00d7a023          	sw	a3,0(a5)

            portSETUP_TCB( pxNewTCB );
        }
        taskEXIT_CRITICAL();
800020c0:	800077b7          	lui	a5,0x80007
800020c4:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
800020c8:	fff78713          	addi	a4,a5,-1
800020cc:	800077b7          	lui	a5,0x80007
800020d0:	c6e7a623          	sw	a4,-916(a5) # 80006c6c <xCriticalNesting>
800020d4:	800077b7          	lui	a5,0x80007
800020d8:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
800020dc:	00079463          	bne	a5,zero,800020e4 <prvAddNewTaskToReadyList+0x1e8>
800020e0:	30046073          	csrrsi	zero,mstatus,8

        if( xSchedulerRunning != pdFALSE )
800020e4:	800087b7          	lui	a5,0x80008
800020e8:	ce47a783          	lw	a5,-796(a5) # 80007ce4 <xSchedulerRunning>
        }
        else
        {
            mtCOVERAGE_TEST_MARKER();
        }
    }
800020ec:	00000013          	addi	zero,zero,0
800020f0:	02c12083          	lw	ra,44(sp)
800020f4:	02812403          	lw	s0,40(sp)
800020f8:	03010113          	addi	sp,sp,48
800020fc:	00008067          	jalr	zero,0(ra)

80002100 <prvCreateIdleTasks>:

#endif /* ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) ) */
/*-----------------------------------------------------------*/

static BaseType_t prvCreateIdleTasks( void )
{
80002100:	fd010113          	addi	sp,sp,-48
80002104:	02112623          	sw	ra,44(sp)
80002108:	02812423          	sw	s0,40(sp)
8000210c:	03010413          	addi	s0,sp,48
    BaseType_t xReturn = pdPASS;
80002110:	00100793          	addi	a5,zero,1
80002114:	fef42623          	sw	a5,-20(s0)
    BaseType_t xCoreID;
    char cIdleName[ configMAX_TASK_NAME_LEN ];
    TaskFunction_t pxIdleTaskFunction = NULL;
80002118:	fe042023          	sw	zero,-32(s0)
    BaseType_t xIdleTaskNameIndex;

    for( xIdleTaskNameIndex = ( BaseType_t ) 0; xIdleTaskNameIndex < ( BaseType_t ) configMAX_TASK_NAME_LEN; xIdleTaskNameIndex++ )
8000211c:	fe042223          	sw	zero,-28(s0)
80002120:	0480006f          	jal	zero,80002168 <prvCreateIdleTasks+0x68>
    {
        cIdleName[ xIdleTaskNameIndex ] = configIDLE_TASK_NAME[ xIdleTaskNameIndex ];
80002124:	800077b7          	lui	a5,0x80007
80002128:	c3878713          	addi	a4,a5,-968 # 80006c38 <xHeapStructSize+0x4>
8000212c:	fe442783          	lw	a5,-28(s0)
80002130:	00f707b3          	add	a5,a4,a5
80002134:	0007c703          	lbu	a4,0(a5)
80002138:	fe442783          	lw	a5,-28(s0)
8000213c:	ff078793          	addi	a5,a5,-16
80002140:	008787b3          	add	a5,a5,s0
80002144:	fee78023          	sb	a4,-32(a5)

        /* Don't copy all configMAX_TASK_NAME_LEN if the string is shorter than
         * configMAX_TASK_NAME_LEN characters just in case the memory after the
         * string is not accessible (extremely unlikely). */
        if( cIdleName[ xIdleTaskNameIndex ] == ( char ) 0x00 )
80002148:	fe442783          	lw	a5,-28(s0)
8000214c:	ff078793          	addi	a5,a5,-16
80002150:	008787b3          	add	a5,a5,s0
80002154:	fe07c783          	lbu	a5,-32(a5)
80002158:	02078063          	beq	a5,zero,80002178 <prvCreateIdleTasks+0x78>
    for( xIdleTaskNameIndex = ( BaseType_t ) 0; xIdleTaskNameIndex < ( BaseType_t ) configMAX_TASK_NAME_LEN; xIdleTaskNameIndex++ )
8000215c:	fe442783          	lw	a5,-28(s0)
80002160:	00178793          	addi	a5,a5,1
80002164:	fef42223          	sw	a5,-28(s0)
80002168:	fe442703          	lw	a4,-28(s0)
8000216c:	00f00793          	addi	a5,zero,15
80002170:	fae7dae3          	bge	a5,a4,80002124 <prvCreateIdleTasks+0x24>
80002174:	0080006f          	jal	zero,8000217c <prvCreateIdleTasks+0x7c>
        {
            break;
80002178:	00000013          	addi	zero,zero,0
            mtCOVERAGE_TEST_MARKER();
        }
    }

    /* Add each idle task at the lowest priority. */
    for( xCoreID = ( BaseType_t ) 0; xCoreID < ( BaseType_t ) configNUMBER_OF_CORES; xCoreID++ )
8000217c:	fe042423          	sw	zero,-24(s0)
80002180:	0540006f          	jal	zero,800021d4 <prvCreateIdleTasks+0xd4>
    {
        #if ( configNUMBER_OF_CORES == 1 )
        {
            pxIdleTaskFunction = prvIdleTask;
80002184:	800037b7          	lui	a5,0x80003
80002188:	43878793          	addi	a5,a5,1080 # 80003438 <prvIdleTask>
8000218c:	fef42023          	sw	a5,-32(s0)
            }
        }
        #else /* if ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
        {
            /* The Idle task is being created using dynamically allocated RAM. */
            xReturn = xTaskCreate( pxIdleTaskFunction,
80002190:	fe842783          	lw	a5,-24(s0)
80002194:	00279713          	slli	a4,a5,0x2
80002198:	800087b7          	lui	a5,0x80008
8000219c:	cfc78793          	addi	a5,a5,-772 # 80007cfc <xIdleTaskHandles>
800021a0:	00f707b3          	add	a5,a4,a5
800021a4:	fd040593          	addi	a1,s0,-48
800021a8:	00000713          	addi	a4,zero,0
800021ac:	00000693          	addi	a3,zero,0
800021b0:	02000613          	addi	a2,zero,32
800021b4:	fe042503          	lw	a0,-32(s0)
800021b8:	b4dff0ef          	jal	ra,80001d04 <xTaskCreate>
800021bc:	fea42623          	sw	a0,-20(s0)
                                   &xIdleTaskHandles[ xCoreID ] );
        }
        #endif /* configSUPPORT_STATIC_ALLOCATION */

        /* Break the loop if any of the idle task is failed to be created. */
        if( xReturn == pdFAIL )
800021c0:	fec42783          	lw	a5,-20(s0)
800021c4:	00078e63          	beq	a5,zero,800021e0 <prvCreateIdleTasks+0xe0>
    for( xCoreID = ( BaseType_t ) 0; xCoreID < ( BaseType_t ) configNUMBER_OF_CORES; xCoreID++ )
800021c8:	fe842783          	lw	a5,-24(s0)
800021cc:	00178793          	addi	a5,a5,1
800021d0:	fef42423          	sw	a5,-24(s0)
800021d4:	fe842783          	lw	a5,-24(s0)
800021d8:	faf056e3          	bge	zero,a5,80002184 <prvCreateIdleTasks+0x84>
800021dc:	0080006f          	jal	zero,800021e4 <prvCreateIdleTasks+0xe4>
        {
            break;
800021e0:	00000013          	addi	zero,zero,0
            }
            #endif
        }
    }

    return xReturn;
800021e4:	fec42783          	lw	a5,-20(s0)
}
800021e8:	00078513          	addi	a0,a5,0
800021ec:	02c12083          	lw	ra,44(sp)
800021f0:	02812403          	lw	s0,40(sp)
800021f4:	03010113          	addi	sp,sp,48
800021f8:	00008067          	jalr	zero,0(ra)

800021fc <vTaskStartScheduler>:

/*-----------------------------------------------------------*/

void vTaskStartScheduler( void )
{
800021fc:	fe010113          	addi	sp,sp,-32
80002200:	00112e23          	sw	ra,28(sp)
80002204:	00812c23          	sw	s0,24(sp)
80002208:	02010413          	addi	s0,sp,32
         * the number of bits as confNUMBER_OF_CORES. */
        configASSERT( ( sizeof( UBaseType_t ) * taskBITS_PER_BYTE ) >= configNUMBER_OF_CORES );
    }
    #endif /* #if ( configUSE_CORE_AFFINITY == 1 ) && ( configNUMBER_OF_CORES > 1 ) */

    xReturn = prvCreateIdleTasks();
8000220c:	ef5ff0ef          	jal	ra,80002100 <prvCreateIdleTasks>
80002210:	fea42623          	sw	a0,-20(s0)
            mtCOVERAGE_TEST_MARKER();
        }
    }
    #endif /* configUSE_TIMERS */

    if( xReturn == pdPASS )
80002214:	fec42703          	lw	a4,-20(s0)
80002218:	00100793          	addi	a5,zero,1
8000221c:	02f71663          	bne	a4,a5,80002248 <vTaskStartScheduler+0x4c>
        /* Interrupts are turned off here, to ensure a tick does not occur
         * before or during the call to xPortStartScheduler().  The stacks of
         * the created tasks contain a status word with interrupts switched on
         * so interrupts will automatically get re-enabled when the first task
         * starts to run. */
        portDISABLE_INTERRUPTS();
80002220:	30047073          	csrrci	zero,mstatus,8
             * block specific to the task that will run first. */
            configSET_TLS_BLOCK( pxCurrentTCB->xTLSBlock );
        }
        #endif

        xNextTaskUnblockTime = portMAX_DELAY;
80002224:	800087b7          	lui	a5,0x80008
80002228:	fff00713          	addi	a4,zero,-1
8000222c:	cee7ac23          	sw	a4,-776(a5) # 80007cf8 <xNextTaskUnblockTime>
        xSchedulerRunning = pdTRUE;
80002230:	800087b7          	lui	a5,0x80008
80002234:	00100713          	addi	a4,zero,1
80002238:	cee7a223          	sw	a4,-796(a5) # 80007ce4 <xSchedulerRunning>
        xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
8000223c:	800087b7          	lui	a5,0x80008
80002240:	cc07ae23          	sw	zero,-804(a5) # 80007cdc <xTickCount>
        /* Setting up the timer tick is hardware specific and thus in the
         * portable interface. */

        /* The return value for xPortStartScheduler is not required
         * hence using a void datatype. */
        ( void ) xPortStartScheduler();
80002244:	728020ef          	jal	ra,8000496c <xPortStartScheduler>
     * meaning xIdleTaskHandles are not used anywhere else. */
    ( void ) xIdleTaskHandles;

    /* OpenOCD makes use of uxTopUsedPriority for thread debugging. Prevent uxTopUsedPriority
     * from getting optimized out as it is no longer used by the kernel. */
    ( void ) uxTopUsedPriority;
80002248:	800077b7          	lui	a5,0x80007
8000224c:	c247a783          	lw	a5,-988(a5) # 80006c24 <uxTopUsedPriority>

    traceRETURN_vTaskStartScheduler();
}
80002250:	00000013          	addi	zero,zero,0
80002254:	01c12083          	lw	ra,28(sp)
80002258:	01812403          	lw	s0,24(sp)
8000225c:	02010113          	addi	sp,sp,32
80002260:	00008067          	jalr	zero,0(ra)

80002264 <vTaskEndScheduler>:
/*-----------------------------------------------------------*/

void vTaskEndScheduler( void )
{
80002264:	ff010113          	addi	sp,sp,-16
80002268:	00112623          	sw	ra,12(sp)
8000226c:	00812423          	sw	s0,8(sp)
80002270:	01010413          	addi	s0,sp,16
    #endif /* #if ( INCLUDE_vTaskDelete == 1 ) */

    /* Stop the scheduler interrupts and call the portable scheduler end
     * routine so the original ISRs can be restored if necessary.  The port
     * layer must ensure interrupts enable  bit is left in the correct state. */
    portDISABLE_INTERRUPTS();
80002274:	30047073          	csrrci	zero,mstatus,8
    xSchedulerRunning = pdFALSE;
80002278:	800087b7          	lui	a5,0x80008
8000227c:	ce07a223          	sw	zero,-796(a5) # 80007ce4 <xSchedulerRunning>

    /* This function must be called from a task and the application is
     * responsible for deleting that task after the scheduler is stopped. */
    vPortEndScheduler();
80002280:	728020ef          	jal	ra,800049a8 <vPortEndScheduler>

    traceRETURN_vTaskEndScheduler();
}
80002284:	00000013          	addi	zero,zero,0
80002288:	00c12083          	lw	ra,12(sp)
8000228c:	00812403          	lw	s0,8(sp)
80002290:	01010113          	addi	sp,sp,16
80002294:	00008067          	jalr	zero,0(ra)

80002298 <vTaskSuspendAll>:
/*----------------------------------------------------------*/

void vTaskSuspendAll( void )
{
80002298:	ff010113          	addi	sp,sp,-16
8000229c:	00112623          	sw	ra,12(sp)
800022a0:	00812423          	sw	s0,8(sp)
800022a4:	01010413          	addi	s0,sp,16
         * do not otherwise exhibit real time behaviour. */
        portSOFTWARE_BARRIER();

        /* The scheduler is suspended if uxSchedulerSuspended is non-zero.  An increment
         * is used to allow calls to vTaskSuspendAll() to nest. */
        uxSchedulerSuspended = ( UBaseType_t ) ( uxSchedulerSuspended + 1U );
800022a8:	800087b7          	lui	a5,0x80008
800022ac:	d007a783          	lw	a5,-768(a5) # 80007d00 <uxSchedulerSuspended>
800022b0:	00178713          	addi	a4,a5,1
800022b4:	800087b7          	lui	a5,0x80008
800022b8:	d0e7a023          	sw	a4,-768(a5) # 80007d00 <uxSchedulerSuspended>
        }
    }
    #endif /* #if ( configNUMBER_OF_CORES == 1 ) */

    traceRETURN_vTaskSuspendAll();
}
800022bc:	00000013          	addi	zero,zero,0
800022c0:	00c12083          	lw	ra,12(sp)
800022c4:	00812403          	lw	s0,8(sp)
800022c8:	01010113          	addi	sp,sp,16
800022cc:	00008067          	jalr	zero,0(ra)

800022d0 <xTaskResumeAll>:

#endif /* configUSE_TICKLESS_IDLE */
/*----------------------------------------------------------*/

BaseType_t xTaskResumeAll( void )
{
800022d0:	fd010113          	addi	sp,sp,-48
800022d4:	02112623          	sw	ra,44(sp)
800022d8:	02812423          	sw	s0,40(sp)
800022dc:	03010413          	addi	s0,sp,48
    TCB_t * pxTCB = NULL;
800022e0:	fe042623          	sw	zero,-20(s0)
    BaseType_t xAlreadyYielded = pdFALSE;
800022e4:	fe042223          	sw	zero,-28(s0)
        /* It is possible that an ISR caused a task to be removed from an event
         * list while the scheduler was suspended.  If this was the case then the
         * removed task will have been added to the xPendingReadyList.  Once the
         * scheduler has been resumed it is safe to move all the pending ready
         * tasks from this list into their appropriate ready list. */
        taskENTER_CRITICAL();
800022e8:	30047073          	csrrci	zero,mstatus,8
800022ec:	800077b7          	lui	a5,0x80007
800022f0:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
800022f4:	00178713          	addi	a4,a5,1
800022f8:	800077b7          	lui	a5,0x80007
800022fc:	c6e7a623          	sw	a4,-916(a5) # 80006c6c <xCriticalNesting>
        {
            BaseType_t xCoreID;
            xCoreID = ( BaseType_t ) portGET_CORE_ID();
80002300:	fe042023          	sw	zero,-32(s0)

            /* If uxSchedulerSuspended is zero then this function does not match a
             * previous call to vTaskSuspendAll(). */
            configASSERT( uxSchedulerSuspended != 0U );

            uxSchedulerSuspended = ( UBaseType_t ) ( uxSchedulerSuspended - 1U );
80002304:	800087b7          	lui	a5,0x80008
80002308:	d007a783          	lw	a5,-768(a5) # 80007d00 <uxSchedulerSuspended>
8000230c:	fff78713          	addi	a4,a5,-1
80002310:	800087b7          	lui	a5,0x80008
80002314:	d0e7a023          	sw	a4,-768(a5) # 80007d00 <uxSchedulerSuspended>
            portRELEASE_TASK_LOCK();

            if( uxSchedulerSuspended == ( UBaseType_t ) 0U )
80002318:	800087b7          	lui	a5,0x80008
8000231c:	d007a783          	lw	a5,-768(a5) # 80007d00 <uxSchedulerSuspended>
80002320:	2e079063          	bne	a5,zero,80002600 <xTaskResumeAll+0x330>
            {
                if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
80002324:	800087b7          	lui	a5,0x80008
80002328:	cd87a783          	lw	a5,-808(a5) # 80007cd8 <uxCurrentNumberOfTasks>
8000232c:	2c078a63          	beq	a5,zero,80002600 <xTaskResumeAll+0x330>
                {
                    /* Move any readied tasks from the pending list into the
                     * appropriate ready list. */
                    while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
80002330:	2440006f          	jal	zero,80002574 <xTaskResumeAll+0x2a4>
                    {
                        /* MISRA Ref 11.5.3 [Void pointer assignment] */
                        /* More details at: https://github.com/FreeRTOS/FreeRTOS-Kernel/blob/main/MISRA.md#rule-115 */
                        /* coverity[misra_c_2012_rule_11_5_violation] */
                        pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) );
80002334:	800087b7          	lui	a5,0x80008
80002338:	cc478793          	addi	a5,a5,-828 # 80007cc4 <xPendingReadyList>
8000233c:	00c7a783          	lw	a5,12(a5)
80002340:	00c7a783          	lw	a5,12(a5)
80002344:	fef42623          	sw	a5,-20(s0)
                        listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
80002348:	fec42783          	lw	a5,-20(s0)
8000234c:	0287a783          	lw	a5,40(a5)
80002350:	fcf42e23          	sw	a5,-36(s0)
80002354:	fec42783          	lw	a5,-20(s0)
80002358:	01c7a783          	lw	a5,28(a5)
8000235c:	fec42703          	lw	a4,-20(s0)
80002360:	02072703          	lw	a4,32(a4)
80002364:	00e7a423          	sw	a4,8(a5)
80002368:	fec42783          	lw	a5,-20(s0)
8000236c:	0207a783          	lw	a5,32(a5)
80002370:	fec42703          	lw	a4,-20(s0)
80002374:	01c72703          	lw	a4,28(a4)
80002378:	00e7a223          	sw	a4,4(a5)
8000237c:	fdc42783          	lw	a5,-36(s0)
80002380:	0047a703          	lw	a4,4(a5)
80002384:	fec42783          	lw	a5,-20(s0)
80002388:	01878793          	addi	a5,a5,24
8000238c:	00f71a63          	bne	a4,a5,800023a0 <xTaskResumeAll+0xd0>
80002390:	fec42783          	lw	a5,-20(s0)
80002394:	0207a703          	lw	a4,32(a5)
80002398:	fdc42783          	lw	a5,-36(s0)
8000239c:	00e7a223          	sw	a4,4(a5)
800023a0:	fec42783          	lw	a5,-20(s0)
800023a4:	0207a423          	sw	zero,40(a5)
800023a8:	fdc42783          	lw	a5,-36(s0)
800023ac:	0007a783          	lw	a5,0(a5)
800023b0:	fff78713          	addi	a4,a5,-1
800023b4:	fdc42783          	lw	a5,-36(s0)
800023b8:	00e7a023          	sw	a4,0(a5)
                        portMEMORY_BARRIER();
                        listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
800023bc:	fec42783          	lw	a5,-20(s0)
800023c0:	0147a783          	lw	a5,20(a5)
800023c4:	fcf42c23          	sw	a5,-40(s0)
800023c8:	fec42783          	lw	a5,-20(s0)
800023cc:	0087a783          	lw	a5,8(a5)
800023d0:	fec42703          	lw	a4,-20(s0)
800023d4:	00c72703          	lw	a4,12(a4)
800023d8:	00e7a423          	sw	a4,8(a5)
800023dc:	fec42783          	lw	a5,-20(s0)
800023e0:	00c7a783          	lw	a5,12(a5)
800023e4:	fec42703          	lw	a4,-20(s0)
800023e8:	00872703          	lw	a4,8(a4)
800023ec:	00e7a223          	sw	a4,4(a5)
800023f0:	fd842783          	lw	a5,-40(s0)
800023f4:	0047a703          	lw	a4,4(a5)
800023f8:	fec42783          	lw	a5,-20(s0)
800023fc:	00478793          	addi	a5,a5,4
80002400:	00f71a63          	bne	a4,a5,80002414 <xTaskResumeAll+0x144>
80002404:	fec42783          	lw	a5,-20(s0)
80002408:	00c7a703          	lw	a4,12(a5)
8000240c:	fd842783          	lw	a5,-40(s0)
80002410:	00e7a223          	sw	a4,4(a5)
80002414:	fec42783          	lw	a5,-20(s0)
80002418:	0007aa23          	sw	zero,20(a5)
8000241c:	fd842783          	lw	a5,-40(s0)
80002420:	0007a783          	lw	a5,0(a5)
80002424:	fff78713          	addi	a4,a5,-1
80002428:	fd842783          	lw	a5,-40(s0)
8000242c:	00e7a023          	sw	a4,0(a5)
                        prvAddTaskToReadyList( pxTCB );
80002430:	fec42783          	lw	a5,-20(s0)
80002434:	02c7a783          	lw	a5,44(a5)
80002438:	00100713          	addi	a4,zero,1
8000243c:	00f71733          	sll	a4,a4,a5
80002440:	800087b7          	lui	a5,0x80008
80002444:	ce07a783          	lw	a5,-800(a5) # 80007ce0 <uxTopReadyPriority>
80002448:	00f76733          	or	a4,a4,a5
8000244c:	800087b7          	lui	a5,0x80008
80002450:	cee7a023          	sw	a4,-800(a5) # 80007ce0 <uxTopReadyPriority>
80002454:	fec42783          	lw	a5,-20(s0)
80002458:	02c7a703          	lw	a4,44(a5)
8000245c:	800087b7          	lui	a5,0x80008
80002460:	c8078693          	addi	a3,a5,-896 # 80007c80 <pxReadyTasksLists>
80002464:	00070793          	addi	a5,a4,0
80002468:	00279793          	slli	a5,a5,0x2
8000246c:	00e787b3          	add	a5,a5,a4
80002470:	00279793          	slli	a5,a5,0x2
80002474:	00f687b3          	add	a5,a3,a5
80002478:	0047a783          	lw	a5,4(a5)
8000247c:	fcf42a23          	sw	a5,-44(s0)
80002480:	fec42783          	lw	a5,-20(s0)
80002484:	fd442703          	lw	a4,-44(s0)
80002488:	00e7a423          	sw	a4,8(a5)
8000248c:	fd442783          	lw	a5,-44(s0)
80002490:	0087a703          	lw	a4,8(a5)
80002494:	fec42783          	lw	a5,-20(s0)
80002498:	00e7a623          	sw	a4,12(a5)
8000249c:	fd442783          	lw	a5,-44(s0)
800024a0:	0087a783          	lw	a5,8(a5)
800024a4:	fec42703          	lw	a4,-20(s0)
800024a8:	00470713          	addi	a4,a4,4
800024ac:	00e7a223          	sw	a4,4(a5)
800024b0:	fec42783          	lw	a5,-20(s0)
800024b4:	00478713          	addi	a4,a5,4
800024b8:	fd442783          	lw	a5,-44(s0)
800024bc:	00e7a423          	sw	a4,8(a5)
800024c0:	fec42783          	lw	a5,-20(s0)
800024c4:	02c7a703          	lw	a4,44(a5)
800024c8:	00070793          	addi	a5,a4,0
800024cc:	00279793          	slli	a5,a5,0x2
800024d0:	00e787b3          	add	a5,a5,a4
800024d4:	00279793          	slli	a5,a5,0x2
800024d8:	80008737          	lui	a4,0x80008
800024dc:	c8070713          	addi	a4,a4,-896 # 80007c80 <pxReadyTasksLists>
800024e0:	00e78733          	add	a4,a5,a4
800024e4:	fec42783          	lw	a5,-20(s0)
800024e8:	00e7aa23          	sw	a4,20(a5)
800024ec:	fec42783          	lw	a5,-20(s0)
800024f0:	02c7a703          	lw	a4,44(a5)
800024f4:	800087b7          	lui	a5,0x80008
800024f8:	c8078693          	addi	a3,a5,-896 # 80007c80 <pxReadyTasksLists>
800024fc:	00070793          	addi	a5,a4,0
80002500:	00279793          	slli	a5,a5,0x2
80002504:	00e787b3          	add	a5,a5,a4
80002508:	00279793          	slli	a5,a5,0x2
8000250c:	00f687b3          	add	a5,a3,a5
80002510:	0007a783          	lw	a5,0(a5)
80002514:	fec42703          	lw	a4,-20(s0)
80002518:	02c72703          	lw	a4,44(a4)
8000251c:	00178693          	addi	a3,a5,1
80002520:	800087b7          	lui	a5,0x80008
80002524:	c8078613          	addi	a2,a5,-896 # 80007c80 <pxReadyTasksLists>
80002528:	00070793          	addi	a5,a4,0
8000252c:	00279793          	slli	a5,a5,0x2
80002530:	00e787b3          	add	a5,a5,a4
80002534:	00279793          	slli	a5,a5,0x2
80002538:	00f607b3          	add	a5,a2,a5
8000253c:	00d7a023          	sw	a3,0(a5)

                        #if ( configNUMBER_OF_CORES == 1 )
                        {
                            /* If the moved task has a priority higher than the current
                             * task then a yield must be performed. */
                            if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
80002540:	fec42783          	lw	a5,-20(s0)
80002544:	02c7a703          	lw	a4,44(a5)
80002548:	800097b7          	lui	a5,0x80009
8000254c:	9047a783          	lw	a5,-1788(a5) # 80008904 <pxCurrentTCB>
80002550:	02c7a783          	lw	a5,44(a5)
80002554:	02e7f063          	bgeu	a5,a4,80002574 <xTaskResumeAll+0x2a4>
                            {
                                xYieldPendings[ xCoreID ] = pdTRUE;
80002558:	800087b7          	lui	a5,0x80008
8000255c:	fe042703          	lw	a4,-32(s0)
80002560:	00271713          	slli	a4,a4,0x2
80002564:	cec78793          	addi	a5,a5,-788 # 80007cec <xYieldPendings>
80002568:	00f707b3          	add	a5,a4,a5
8000256c:	00100713          	addi	a4,zero,1
80002570:	00e7a023          	sw	a4,0(a5)
                    while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
80002574:	800087b7          	lui	a5,0x80008
80002578:	cc478793          	addi	a5,a5,-828 # 80007cc4 <xPendingReadyList>
8000257c:	0007a783          	lw	a5,0(a5)
80002580:	da079ae3          	bne	a5,zero,80002334 <xTaskResumeAll+0x64>
                             * which sets xYieldPendings for the current core to pdTRUE. */
                        }
                        #endif /* #if ( configNUMBER_OF_CORES == 1 ) */
                    }

                    if( pxTCB != NULL )
80002584:	fec42783          	lw	a5,-20(s0)
80002588:	00078463          	beq	a5,zero,80002590 <xTaskResumeAll+0x2c0>
                         * which may have prevented the next unblock time from being
                         * re-calculated, in which case re-calculate it now.  Mainly
                         * important for low power tickless implementations, where
                         * this can prevent an unnecessary exit from low power
                         * state. */
                        prvResetNextTaskUnblockTime();
8000258c:	7a1000ef          	jal	ra,8000352c <prvResetNextTaskUnblockTime>
                     * It should be safe to call xTaskIncrementTick here from any core
                     * since we are in a critical section and xTaskIncrementTick itself
                     * protects itself within a critical section. Suspending the scheduler
                     * from any core causes xTaskIncrementTick to increment uxPendedCounts. */
                    {
                        TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
80002590:	800087b7          	lui	a5,0x80008
80002594:	ce87a783          	lw	a5,-792(a5) # 80007ce8 <xPendedTicks>
80002598:	fef42423          	sw	a5,-24(s0)

                        if( xPendedCounts > ( TickType_t ) 0U )
8000259c:	fe842783          	lw	a5,-24(s0)
800025a0:	04078463          	beq	a5,zero,800025e8 <xTaskResumeAll+0x318>
                        {
                            do
                            {
                                if( xTaskIncrementTick() != pdFALSE )
800025a4:	208000ef          	jal	ra,800027ac <xTaskIncrementTick>
800025a8:	00050793          	addi	a5,a0,0
800025ac:	02078063          	beq	a5,zero,800025cc <xTaskResumeAll+0x2fc>
                                {
                                    /* Other cores are interrupted from
                                     * within xTaskIncrementTick(). */
                                    xYieldPendings[ xCoreID ] = pdTRUE;
800025b0:	800087b7          	lui	a5,0x80008
800025b4:	fe042703          	lw	a4,-32(s0)
800025b8:	00271713          	slli	a4,a4,0x2
800025bc:	cec78793          	addi	a5,a5,-788 # 80007cec <xYieldPendings>
800025c0:	00f707b3          	add	a5,a4,a5
800025c4:	00100713          	addi	a4,zero,1
800025c8:	00e7a023          	sw	a4,0(a5)
                                else
                                {
                                    mtCOVERAGE_TEST_MARKER();
                                }

                                --xPendedCounts;
800025cc:	fe842783          	lw	a5,-24(s0)
800025d0:	fff78793          	addi	a5,a5,-1
800025d4:	fef42423          	sw	a5,-24(s0)
                            } while( xPendedCounts > ( TickType_t ) 0U );
800025d8:	fe842783          	lw	a5,-24(s0)
800025dc:	fc0794e3          	bne	a5,zero,800025a4 <xTaskResumeAll+0x2d4>

                            xPendedTicks = 0;
800025e0:	800087b7          	lui	a5,0x80008
800025e4:	ce07a423          	sw	zero,-792(a5) # 80007ce8 <xPendedTicks>
                        {
                            mtCOVERAGE_TEST_MARKER();
                        }
                    }

                    if( xYieldPendings[ xCoreID ] != pdFALSE )
800025e8:	800087b7          	lui	a5,0x80008
800025ec:	fe042703          	lw	a4,-32(s0)
800025f0:	00271713          	slli	a4,a4,0x2
800025f4:	cec78793          	addi	a5,a5,-788 # 80007cec <xYieldPendings>
800025f8:	00f707b3          	add	a5,a4,a5
800025fc:	0007a783          	lw	a5,0(a5)
            else
            {
                mtCOVERAGE_TEST_MARKER();
            }
        }
        taskEXIT_CRITICAL();
80002600:	800077b7          	lui	a5,0x80007
80002604:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
80002608:	fff78713          	addi	a4,a5,-1
8000260c:	800077b7          	lui	a5,0x80007
80002610:	c6e7a623          	sw	a4,-916(a5) # 80006c6c <xCriticalNesting>
80002614:	800077b7          	lui	a5,0x80007
80002618:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
8000261c:	00079463          	bne	a5,zero,80002624 <xTaskResumeAll+0x354>
80002620:	30046073          	csrrsi	zero,mstatus,8
    }

    traceRETURN_xTaskResumeAll( xAlreadyYielded );

    return xAlreadyYielded;
80002624:	fe442783          	lw	a5,-28(s0)
}
80002628:	00078513          	addi	a0,a5,0
8000262c:	02c12083          	lw	ra,44(sp)
80002630:	02812403          	lw	s0,40(sp)
80002634:	03010113          	addi	sp,sp,48
80002638:	00008067          	jalr	zero,0(ra)

8000263c <xTaskGetTickCount>:
/*-----------------------------------------------------------*/

TickType_t xTaskGetTickCount( void )
{
8000263c:	fe010113          	addi	sp,sp,-32
80002640:	00112e23          	sw	ra,28(sp)
80002644:	00812c23          	sw	s0,24(sp)
80002648:	02010413          	addi	s0,sp,32
    traceENTER_xTaskGetTickCount();

    /* Critical section required if running on a 16 bit processor. */
    portTICK_TYPE_ENTER_CRITICAL();
    {
        xTicks = xTickCount;
8000264c:	800087b7          	lui	a5,0x80008
80002650:	cdc7a783          	lw	a5,-804(a5) # 80007cdc <xTickCount>
80002654:	fef42623          	sw	a5,-20(s0)
    }
    portTICK_TYPE_EXIT_CRITICAL();

    traceRETURN_xTaskGetTickCount( xTicks );

    return xTicks;
80002658:	fec42783          	lw	a5,-20(s0)
}
8000265c:	00078513          	addi	a0,a5,0
80002660:	01c12083          	lw	ra,28(sp)
80002664:	01812403          	lw	s0,24(sp)
80002668:	02010113          	addi	sp,sp,32
8000266c:	00008067          	jalr	zero,0(ra)

80002670 <xTaskGetTickCountFromISR>:
/*-----------------------------------------------------------*/

TickType_t xTaskGetTickCountFromISR( void )
{
80002670:	fe010113          	addi	sp,sp,-32
80002674:	00112e23          	sw	ra,28(sp)
80002678:	00812c23          	sw	s0,24(sp)
8000267c:	02010413          	addi	s0,sp,32
     * safe API to ensure interrupt entry is as fast and as simple as possible.
     * More information (albeit Cortex-M specific) is provided on the following
     * link: https://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html */
    portASSERT_IF_INTERRUPT_PRIORITY_INVALID();

    uxSavedInterruptStatus = portTICK_TYPE_SET_INTERRUPT_MASK_FROM_ISR();
80002680:	fe042623          	sw	zero,-20(s0)
    {
        xReturn = xTickCount;
80002684:	800087b7          	lui	a5,0x80008
80002688:	cdc7a783          	lw	a5,-804(a5) # 80007cdc <xTickCount>
8000268c:	fef42423          	sw	a5,-24(s0)
    }
    portTICK_TYPE_CLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );

    traceRETURN_xTaskGetTickCountFromISR( xReturn );

    return xReturn;
80002690:	fe842783          	lw	a5,-24(s0)
}
80002694:	00078513          	addi	a0,a5,0
80002698:	01c12083          	lw	ra,28(sp)
8000269c:	01812403          	lw	s0,24(sp)
800026a0:	02010113          	addi	sp,sp,32
800026a4:	00008067          	jalr	zero,0(ra)

800026a8 <uxTaskGetNumberOfTasks>:
/*-----------------------------------------------------------*/

UBaseType_t uxTaskGetNumberOfTasks( void )
{
800026a8:	ff010113          	addi	sp,sp,-16
800026ac:	00112623          	sw	ra,12(sp)
800026b0:	00812423          	sw	s0,8(sp)
800026b4:	01010413          	addi	s0,sp,16

    /* A critical section is not required because the variables are of type
     * BaseType_t. */
    traceRETURN_uxTaskGetNumberOfTasks( uxCurrentNumberOfTasks );

    return uxCurrentNumberOfTasks;
800026b8:	800087b7          	lui	a5,0x80008
800026bc:	cd87a783          	lw	a5,-808(a5) # 80007cd8 <uxCurrentNumberOfTasks>
}
800026c0:	00078513          	addi	a0,a5,0
800026c4:	00c12083          	lw	ra,12(sp)
800026c8:	00812403          	lw	s0,8(sp)
800026cc:	01010113          	addi	sp,sp,16
800026d0:	00008067          	jalr	zero,0(ra)

800026d4 <pcTaskGetName>:
/*-----------------------------------------------------------*/

char * pcTaskGetName( TaskHandle_t xTaskToQuery )
{
800026d4:	fd010113          	addi	sp,sp,-48
800026d8:	02112623          	sw	ra,44(sp)
800026dc:	02812423          	sw	s0,40(sp)
800026e0:	03010413          	addi	s0,sp,48
800026e4:	fca42e23          	sw	a0,-36(s0)

    traceENTER_pcTaskGetName( xTaskToQuery );

    /* If null is passed in here then the name of the calling task is being
     * queried. */
    pxTCB = prvGetTCBFromHandle( xTaskToQuery );
800026e8:	fdc42783          	lw	a5,-36(s0)
800026ec:	00079863          	bne	a5,zero,800026fc <pcTaskGetName+0x28>
800026f0:	800097b7          	lui	a5,0x80009
800026f4:	9047a783          	lw	a5,-1788(a5) # 80008904 <pxCurrentTCB>
800026f8:	0080006f          	jal	zero,80002700 <pcTaskGetName+0x2c>
800026fc:	fdc42783          	lw	a5,-36(s0)
80002700:	fef42623          	sw	a5,-20(s0)
    configASSERT( pxTCB );

    traceRETURN_pcTaskGetName( &( pxTCB->pcTaskName[ 0 ] ) );

    return &( pxTCB->pcTaskName[ 0 ] );
80002704:	fec42783          	lw	a5,-20(s0)
80002708:	03478793          	addi	a5,a5,52
}
8000270c:	00078513          	addi	a0,a5,0
80002710:	02c12083          	lw	ra,44(sp)
80002714:	02812403          	lw	s0,40(sp)
80002718:	03010113          	addi	sp,sp,48
8000271c:	00008067          	jalr	zero,0(ra)

80002720 <xTaskCatchUpTicks>:

#endif /* configUSE_TICKLESS_IDLE */
/*----------------------------------------------------------*/

BaseType_t xTaskCatchUpTicks( TickType_t xTicksToCatchUp )
{
80002720:	fd010113          	addi	sp,sp,-48
80002724:	02112623          	sw	ra,44(sp)
80002728:	02812423          	sw	s0,40(sp)
8000272c:	03010413          	addi	s0,sp,48
80002730:	fca42e23          	sw	a0,-36(s0)
     * relies on xPendedTicks being wound down to 0 in xTaskResumeAll(). */
    configASSERT( uxSchedulerSuspended == ( UBaseType_t ) 0U );

    /* Use xPendedTicks to mimic xTicksToCatchUp number of ticks occurring when
     * the scheduler is suspended so the ticks are executed in xTaskResumeAll(). */
    vTaskSuspendAll();
80002734:	b65ff0ef          	jal	ra,80002298 <vTaskSuspendAll>

    /* Prevent the tick interrupt modifying xPendedTicks simultaneously. */
    taskENTER_CRITICAL();
80002738:	30047073          	csrrci	zero,mstatus,8
8000273c:	800077b7          	lui	a5,0x80007
80002740:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
80002744:	00178713          	addi	a4,a5,1
80002748:	800077b7          	lui	a5,0x80007
8000274c:	c6e7a623          	sw	a4,-916(a5) # 80006c6c <xCriticalNesting>
    {
        xPendedTicks += xTicksToCatchUp;
80002750:	800087b7          	lui	a5,0x80008
80002754:	ce87a703          	lw	a4,-792(a5) # 80007ce8 <xPendedTicks>
80002758:	fdc42783          	lw	a5,-36(s0)
8000275c:	00f70733          	add	a4,a4,a5
80002760:	800087b7          	lui	a5,0x80008
80002764:	cee7a423          	sw	a4,-792(a5) # 80007ce8 <xPendedTicks>
    }
    taskEXIT_CRITICAL();
80002768:	800077b7          	lui	a5,0x80007
8000276c:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
80002770:	fff78713          	addi	a4,a5,-1
80002774:	800077b7          	lui	a5,0x80007
80002778:	c6e7a623          	sw	a4,-916(a5) # 80006c6c <xCriticalNesting>
8000277c:	800077b7          	lui	a5,0x80007
80002780:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
80002784:	00079463          	bne	a5,zero,8000278c <xTaskCatchUpTicks+0x6c>
80002788:	30046073          	csrrsi	zero,mstatus,8
    xYieldOccurred = xTaskResumeAll();
8000278c:	b45ff0ef          	jal	ra,800022d0 <xTaskResumeAll>
80002790:	fea42623          	sw	a0,-20(s0)

    traceRETURN_xTaskCatchUpTicks( xYieldOccurred );

    return xYieldOccurred;
80002794:	fec42783          	lw	a5,-20(s0)
}
80002798:	00078513          	addi	a0,a5,0
8000279c:	02c12083          	lw	ra,44(sp)
800027a0:	02812403          	lw	s0,40(sp)
800027a4:	03010113          	addi	sp,sp,48
800027a8:	00008067          	jalr	zero,0(ra)

800027ac <xTaskIncrementTick>:

#endif /* INCLUDE_xTaskAbortDelay */
/*----------------------------------------------------------*/

BaseType_t xTaskIncrementTick( void )
{
800027ac:	fd010113          	addi	sp,sp,-48
800027b0:	02112623          	sw	ra,44(sp)
800027b4:	02812423          	sw	s0,40(sp)
800027b8:	03010413          	addi	s0,sp,48
    TCB_t * pxTCB;
    TickType_t xItemValue;
    BaseType_t xSwitchRequired = pdFALSE;
800027bc:	fe042623          	sw	zero,-20(s0)

    /* Tick increment should occur on every kernel timer event. Core 0 has the
     * responsibility to increment the tick, or increment the pended ticks if the
     * scheduler is suspended.  If pended ticks is greater than zero, the core that
     * calls xTaskResumeAll has the responsibility to increment the tick. */
    if( uxSchedulerSuspended == ( UBaseType_t ) 0U )
800027c0:	800087b7          	lui	a5,0x80008
800027c4:	d007a783          	lw	a5,-768(a5) # 80007d00 <uxSchedulerSuspended>
800027c8:	2c079e63          	bne	a5,zero,80002aa4 <xTaskIncrementTick+0x2f8>
    {
        /* Minor optimisation.  The tick count cannot change in this
         * block. */
        const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
800027cc:	800087b7          	lui	a5,0x80008
800027d0:	cdc7a783          	lw	a5,-804(a5) # 80007cdc <xTickCount>
800027d4:	00178793          	addi	a5,a5,1
800027d8:	fef42423          	sw	a5,-24(s0)

        /* Increment the RTOS tick, switching the delayed and overflowed
         * delayed lists if it wraps to 0. */
        xTickCount = xConstTickCount;
800027dc:	800087b7          	lui	a5,0x80008
800027e0:	fe842703          	lw	a4,-24(s0)
800027e4:	cce7ae23          	sw	a4,-804(a5) # 80007cdc <xTickCount>

        if( xConstTickCount == ( TickType_t ) 0U )
800027e8:	fe842783          	lw	a5,-24(s0)
800027ec:	04079263          	bne	a5,zero,80002830 <xTaskIncrementTick+0x84>
        {
            taskSWITCH_DELAYED_LISTS();
800027f0:	800087b7          	lui	a5,0x80008
800027f4:	cbc7a783          	lw	a5,-836(a5) # 80007cbc <pxDelayedTaskList>
800027f8:	fef42223          	sw	a5,-28(s0)
800027fc:	800087b7          	lui	a5,0x80008
80002800:	cc07a703          	lw	a4,-832(a5) # 80007cc0 <pxOverflowDelayedTaskList>
80002804:	800087b7          	lui	a5,0x80008
80002808:	cae7ae23          	sw	a4,-836(a5) # 80007cbc <pxDelayedTaskList>
8000280c:	800087b7          	lui	a5,0x80008
80002810:	fe442703          	lw	a4,-28(s0)
80002814:	cce7a023          	sw	a4,-832(a5) # 80007cc0 <pxOverflowDelayedTaskList>
80002818:	800087b7          	lui	a5,0x80008
8000281c:	cf07a783          	lw	a5,-784(a5) # 80007cf0 <xNumOfOverflows>
80002820:	00178713          	addi	a4,a5,1
80002824:	800087b7          	lui	a5,0x80008
80002828:	cee7a823          	sw	a4,-784(a5) # 80007cf0 <xNumOfOverflows>
8000282c:	501000ef          	jal	ra,8000352c <prvResetNextTaskUnblockTime>

        /* See if this tick has made a timeout expire.  Tasks are stored in
         * the  queue in the order of their wake time - meaning once one task
         * has been found whose block time has not expired there is no need to
         * look any further down the list. */
        if( xConstTickCount >= xNextTaskUnblockTime )
80002830:	800087b7          	lui	a5,0x80008
80002834:	cf87a783          	lw	a5,-776(a5) # 80007cf8 <xNextTaskUnblockTime>
80002838:	fe842703          	lw	a4,-24(s0)
8000283c:	26f76e63          	bltu	a4,a5,80002ab8 <xTaskIncrementTick+0x30c>
        {
            for( ; ; )
            {
                if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
80002840:	800087b7          	lui	a5,0x80008
80002844:	cbc7a783          	lw	a5,-836(a5) # 80007cbc <pxDelayedTaskList>
80002848:	0007a783          	lw	a5,0(a5)
8000284c:	00079a63          	bne	a5,zero,80002860 <xTaskIncrementTick+0xb4>
                    /* The delayed list is empty.  Set xNextTaskUnblockTime
                     * to the maximum possible value so it is extremely
                     * unlikely that the
                     * if( xTickCount >= xNextTaskUnblockTime ) test will pass
                     * next time through. */
                    xNextTaskUnblockTime = portMAX_DELAY;
80002850:	800087b7          	lui	a5,0x80008
80002854:	fff00713          	addi	a4,zero,-1
80002858:	cee7ac23          	sw	a4,-776(a5) # 80007cf8 <xNextTaskUnblockTime>
                    break;
8000285c:	25c0006f          	jal	zero,80002ab8 <xTaskIncrementTick+0x30c>
                     * at which the task at the head of the delayed list must
                     * be removed from the Blocked state. */
                    /* MISRA Ref 11.5.3 [Void pointer assignment] */
                    /* More details at: https://github.com/FreeRTOS/FreeRTOS-Kernel/blob/main/MISRA.md#rule-115 */
                    /* coverity[misra_c_2012_rule_11_5_violation] */
                    pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList );
80002860:	800087b7          	lui	a5,0x80008
80002864:	cbc7a783          	lw	a5,-836(a5) # 80007cbc <pxDelayedTaskList>
80002868:	00c7a783          	lw	a5,12(a5)
8000286c:	00c7a783          	lw	a5,12(a5)
80002870:	fef42023          	sw	a5,-32(s0)
                    xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
80002874:	fe042783          	lw	a5,-32(s0)
80002878:	0047a783          	lw	a5,4(a5)
8000287c:	fcf42e23          	sw	a5,-36(s0)

                    if( xConstTickCount < xItemValue )
80002880:	fe842703          	lw	a4,-24(s0)
80002884:	fdc42783          	lw	a5,-36(s0)
80002888:	00f77a63          	bgeu	a4,a5,8000289c <xTaskIncrementTick+0xf0>
                        /* It is not time to unblock this item yet, but the
                         * item value is the time at which the task at the head
                         * of the blocked list must be removed from the Blocked
                         * state -  so record the item value in
                         * xNextTaskUnblockTime. */
                        xNextTaskUnblockTime = xItemValue;
8000288c:	800087b7          	lui	a5,0x80008
80002890:	fdc42703          	lw	a4,-36(s0)
80002894:	cee7ac23          	sw	a4,-776(a5) # 80007cf8 <xNextTaskUnblockTime>
                        break;
80002898:	2200006f          	jal	zero,80002ab8 <xTaskIncrementTick+0x30c>
                    {
                        mtCOVERAGE_TEST_MARKER();
                    }

                    /* It is time to remove the item from the Blocked state. */
                    listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
8000289c:	fe042783          	lw	a5,-32(s0)
800028a0:	0147a783          	lw	a5,20(a5)
800028a4:	fcf42c23          	sw	a5,-40(s0)
800028a8:	fe042783          	lw	a5,-32(s0)
800028ac:	0087a783          	lw	a5,8(a5)
800028b0:	fe042703          	lw	a4,-32(s0)
800028b4:	00c72703          	lw	a4,12(a4)
800028b8:	00e7a423          	sw	a4,8(a5)
800028bc:	fe042783          	lw	a5,-32(s0)
800028c0:	00c7a783          	lw	a5,12(a5)
800028c4:	fe042703          	lw	a4,-32(s0)
800028c8:	00872703          	lw	a4,8(a4)
800028cc:	00e7a223          	sw	a4,4(a5)
800028d0:	fd842783          	lw	a5,-40(s0)
800028d4:	0047a703          	lw	a4,4(a5)
800028d8:	fe042783          	lw	a5,-32(s0)
800028dc:	00478793          	addi	a5,a5,4
800028e0:	00f71a63          	bne	a4,a5,800028f4 <xTaskIncrementTick+0x148>
800028e4:	fe042783          	lw	a5,-32(s0)
800028e8:	00c7a703          	lw	a4,12(a5)
800028ec:	fd842783          	lw	a5,-40(s0)
800028f0:	00e7a223          	sw	a4,4(a5)
800028f4:	fe042783          	lw	a5,-32(s0)
800028f8:	0007aa23          	sw	zero,20(a5)
800028fc:	fd842783          	lw	a5,-40(s0)
80002900:	0007a783          	lw	a5,0(a5)
80002904:	fff78713          	addi	a4,a5,-1
80002908:	fd842783          	lw	a5,-40(s0)
8000290c:	00e7a023          	sw	a4,0(a5)

                    /* Is the task waiting on an event also?  If so remove
                     * it from the event list. */
                    if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
80002910:	fe042783          	lw	a5,-32(s0)
80002914:	0287a783          	lw	a5,40(a5)
80002918:	06078c63          	beq	a5,zero,80002990 <xTaskIncrementTick+0x1e4>
                    {
                        listREMOVE_ITEM( &( pxTCB->xEventListItem ) );
8000291c:	fe042783          	lw	a5,-32(s0)
80002920:	0287a783          	lw	a5,40(a5)
80002924:	fcf42a23          	sw	a5,-44(s0)
80002928:	fe042783          	lw	a5,-32(s0)
8000292c:	01c7a783          	lw	a5,28(a5)
80002930:	fe042703          	lw	a4,-32(s0)
80002934:	02072703          	lw	a4,32(a4)
80002938:	00e7a423          	sw	a4,8(a5)
8000293c:	fe042783          	lw	a5,-32(s0)
80002940:	0207a783          	lw	a5,32(a5)
80002944:	fe042703          	lw	a4,-32(s0)
80002948:	01c72703          	lw	a4,28(a4)
8000294c:	00e7a223          	sw	a4,4(a5)
80002950:	fd442783          	lw	a5,-44(s0)
80002954:	0047a703          	lw	a4,4(a5)
80002958:	fe042783          	lw	a5,-32(s0)
8000295c:	01878793          	addi	a5,a5,24
80002960:	00f71a63          	bne	a4,a5,80002974 <xTaskIncrementTick+0x1c8>
80002964:	fe042783          	lw	a5,-32(s0)
80002968:	0207a703          	lw	a4,32(a5)
8000296c:	fd442783          	lw	a5,-44(s0)
80002970:	00e7a223          	sw	a4,4(a5)
80002974:	fe042783          	lw	a5,-32(s0)
80002978:	0207a423          	sw	zero,40(a5)
8000297c:	fd442783          	lw	a5,-44(s0)
80002980:	0007a783          	lw	a5,0(a5)
80002984:	fff78713          	addi	a4,a5,-1
80002988:	fd442783          	lw	a5,-44(s0)
8000298c:	00e7a023          	sw	a4,0(a5)
                        mtCOVERAGE_TEST_MARKER();
                    }

                    /* Place the unblocked task into the appropriate ready
                     * list. */
                    prvAddTaskToReadyList( pxTCB );
80002990:	fe042783          	lw	a5,-32(s0)
80002994:	02c7a783          	lw	a5,44(a5)
80002998:	00100713          	addi	a4,zero,1
8000299c:	00f71733          	sll	a4,a4,a5
800029a0:	800087b7          	lui	a5,0x80008
800029a4:	ce07a783          	lw	a5,-800(a5) # 80007ce0 <uxTopReadyPriority>
800029a8:	00f76733          	or	a4,a4,a5
800029ac:	800087b7          	lui	a5,0x80008
800029b0:	cee7a023          	sw	a4,-800(a5) # 80007ce0 <uxTopReadyPriority>
800029b4:	fe042783          	lw	a5,-32(s0)
800029b8:	02c7a703          	lw	a4,44(a5)
800029bc:	800087b7          	lui	a5,0x80008
800029c0:	c8078693          	addi	a3,a5,-896 # 80007c80 <pxReadyTasksLists>
800029c4:	00070793          	addi	a5,a4,0
800029c8:	00279793          	slli	a5,a5,0x2
800029cc:	00e787b3          	add	a5,a5,a4
800029d0:	00279793          	slli	a5,a5,0x2
800029d4:	00f687b3          	add	a5,a3,a5
800029d8:	0047a783          	lw	a5,4(a5)
800029dc:	fcf42823          	sw	a5,-48(s0)
800029e0:	fe042783          	lw	a5,-32(s0)
800029e4:	fd042703          	lw	a4,-48(s0)
800029e8:	00e7a423          	sw	a4,8(a5)
800029ec:	fd042783          	lw	a5,-48(s0)
800029f0:	0087a703          	lw	a4,8(a5)
800029f4:	fe042783          	lw	a5,-32(s0)
800029f8:	00e7a623          	sw	a4,12(a5)
800029fc:	fd042783          	lw	a5,-48(s0)
80002a00:	0087a783          	lw	a5,8(a5)
80002a04:	fe042703          	lw	a4,-32(s0)
80002a08:	00470713          	addi	a4,a4,4
80002a0c:	00e7a223          	sw	a4,4(a5)
80002a10:	fe042783          	lw	a5,-32(s0)
80002a14:	00478713          	addi	a4,a5,4
80002a18:	fd042783          	lw	a5,-48(s0)
80002a1c:	00e7a423          	sw	a4,8(a5)
80002a20:	fe042783          	lw	a5,-32(s0)
80002a24:	02c7a703          	lw	a4,44(a5)
80002a28:	00070793          	addi	a5,a4,0
80002a2c:	00279793          	slli	a5,a5,0x2
80002a30:	00e787b3          	add	a5,a5,a4
80002a34:	00279793          	slli	a5,a5,0x2
80002a38:	80008737          	lui	a4,0x80008
80002a3c:	c8070713          	addi	a4,a4,-896 # 80007c80 <pxReadyTasksLists>
80002a40:	00e78733          	add	a4,a5,a4
80002a44:	fe042783          	lw	a5,-32(s0)
80002a48:	00e7aa23          	sw	a4,20(a5)
80002a4c:	fe042783          	lw	a5,-32(s0)
80002a50:	02c7a703          	lw	a4,44(a5)
80002a54:	800087b7          	lui	a5,0x80008
80002a58:	c8078693          	addi	a3,a5,-896 # 80007c80 <pxReadyTasksLists>
80002a5c:	00070793          	addi	a5,a4,0
80002a60:	00279793          	slli	a5,a5,0x2
80002a64:	00e787b3          	add	a5,a5,a4
80002a68:	00279793          	slli	a5,a5,0x2
80002a6c:	00f687b3          	add	a5,a3,a5
80002a70:	0007a783          	lw	a5,0(a5)
80002a74:	fe042703          	lw	a4,-32(s0)
80002a78:	02c72703          	lw	a4,44(a4)
80002a7c:	00178693          	addi	a3,a5,1
80002a80:	800087b7          	lui	a5,0x80008
80002a84:	c8078613          	addi	a2,a5,-896 # 80007c80 <pxReadyTasksLists>
80002a88:	00070793          	addi	a5,a4,0
80002a8c:	00279793          	slli	a5,a5,0x2
80002a90:	00e787b3          	add	a5,a5,a4
80002a94:	00279793          	slli	a5,a5,0x2
80002a98:	00f607b3          	add	a5,a2,a5
80002a9c:	00d7a023          	sw	a3,0(a5)
                if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
80002aa0:	da1ff06f          	jal	zero,80002840 <xTaskIncrementTick+0x94>
        }
        #endif /* #if ( configUSE_PREEMPTION == 1 ) */
    }
    else
    {
        xPendedTicks += 1U;
80002aa4:	800087b7          	lui	a5,0x80008
80002aa8:	ce87a783          	lw	a5,-792(a5) # 80007ce8 <xPendedTicks>
80002aac:	00178713          	addi	a4,a5,1
80002ab0:	800087b7          	lui	a5,0x80008
80002ab4:	cee7a423          	sw	a4,-792(a5) # 80007ce8 <xPendedTicks>
        #endif
    }

    traceRETURN_xTaskIncrementTick( xSwitchRequired );

    return xSwitchRequired;
80002ab8:	fec42783          	lw	a5,-20(s0)
}
80002abc:	00078513          	addi	a0,a5,0
80002ac0:	02c12083          	lw	ra,44(sp)
80002ac4:	02812403          	lw	s0,40(sp)
80002ac8:	03010113          	addi	sp,sp,48
80002acc:	00008067          	jalr	zero,0(ra)

80002ad0 <vTaskSwitchContext>:
#endif /* configUSE_APPLICATION_TASK_TAG */
/*-----------------------------------------------------------*/

#if ( configNUMBER_OF_CORES == 1 )
    void vTaskSwitchContext( void )
    {
80002ad0:	fe010113          	addi	sp,sp,-32
80002ad4:	00112e23          	sw	ra,28(sp)
80002ad8:	00812c23          	sw	s0,24(sp)
80002adc:	02010413          	addi	s0,sp,32
        traceENTER_vTaskSwitchContext();

        if( uxSchedulerSuspended != ( UBaseType_t ) 0U )
80002ae0:	800087b7          	lui	a5,0x80008
80002ae4:	d007a783          	lw	a5,-768(a5) # 80007d00 <uxSchedulerSuspended>
80002ae8:	00078a63          	beq	a5,zero,80002afc <vTaskSwitchContext+0x2c>
        {
            /* The scheduler is currently suspended - do not allow a context
             * switch. */
            xYieldPendings[ 0 ] = pdTRUE;
80002aec:	800087b7          	lui	a5,0x80008
80002af0:	00100713          	addi	a4,zero,1
80002af4:	cee7a623          	sw	a4,-788(a5) # 80007cec <xYieldPendings>
            }
            #endif
        }

        traceRETURN_vTaskSwitchContext();
    }
80002af8:	0a80006f          	jal	zero,80002ba0 <vTaskSwitchContext+0xd0>
            xYieldPendings[ 0 ] = pdFALSE;
80002afc:	800087b7          	lui	a5,0x80008
80002b00:	ce07a623          	sw	zero,-788(a5) # 80007cec <xYieldPendings>
            taskSELECT_HIGHEST_PRIORITY_TASK();
80002b04:	800087b7          	lui	a5,0x80008
80002b08:	ce07a783          	lw	a5,-800(a5) # 80007ce0 <uxTopReadyPriority>
80002b0c:	00078513          	addi	a0,a5,0
80002b10:	000030ef          	jal	ra,80005b10 <__clzsi2>
80002b14:	00050793          	addi	a5,a0,0
80002b18:	00078713          	addi	a4,a5,0
80002b1c:	01f00793          	addi	a5,zero,31
80002b20:	40e787b3          	sub	a5,a5,a4
80002b24:	fef42623          	sw	a5,-20(s0)
80002b28:	fec42703          	lw	a4,-20(s0)
80002b2c:	00070793          	addi	a5,a4,0
80002b30:	00279793          	slli	a5,a5,0x2
80002b34:	00e787b3          	add	a5,a5,a4
80002b38:	00279793          	slli	a5,a5,0x2
80002b3c:	80008737          	lui	a4,0x80008
80002b40:	c8070713          	addi	a4,a4,-896 # 80007c80 <pxReadyTasksLists>
80002b44:	00e787b3          	add	a5,a5,a4
80002b48:	fef42423          	sw	a5,-24(s0)
80002b4c:	fe842783          	lw	a5,-24(s0)
80002b50:	0047a783          	lw	a5,4(a5)
80002b54:	0047a703          	lw	a4,4(a5)
80002b58:	fe842783          	lw	a5,-24(s0)
80002b5c:	00e7a223          	sw	a4,4(a5)
80002b60:	fe842783          	lw	a5,-24(s0)
80002b64:	0047a703          	lw	a4,4(a5)
80002b68:	fe842783          	lw	a5,-24(s0)
80002b6c:	00878793          	addi	a5,a5,8
80002b70:	00f71a63          	bne	a4,a5,80002b84 <vTaskSwitchContext+0xb4>
80002b74:	fe842783          	lw	a5,-24(s0)
80002b78:	00c7a703          	lw	a4,12(a5)
80002b7c:	fe842783          	lw	a5,-24(s0)
80002b80:	00e7a223          	sw	a4,4(a5)
80002b84:	fe842783          	lw	a5,-24(s0)
80002b88:	0047a783          	lw	a5,4(a5)
80002b8c:	00c7a703          	lw	a4,12(a5)
80002b90:	800097b7          	lui	a5,0x80009
80002b94:	90e7a223          	sw	a4,-1788(a5) # 80008904 <pxCurrentTCB>
            portTASK_SWITCH_HOOK( pxCurrentTCB );
80002b98:	800097b7          	lui	a5,0x80009
80002b9c:	9047a783          	lw	a5,-1788(a5) # 80008904 <pxCurrentTCB>
    }
80002ba0:	00000013          	addi	zero,zero,0
80002ba4:	01c12083          	lw	ra,28(sp)
80002ba8:	01812403          	lw	s0,24(sp)
80002bac:	02010113          	addi	sp,sp,32
80002bb0:	00008067          	jalr	zero,0(ra)

80002bb4 <vTaskPlaceOnEventList>:
#endif /* if ( configNUMBER_OF_CORES > 1 ) */
/*-----------------------------------------------------------*/

void vTaskPlaceOnEventList( List_t * const pxEventList,
                            const TickType_t xTicksToWait )
{
80002bb4:	fe010113          	addi	sp,sp,-32
80002bb8:	00112e23          	sw	ra,28(sp)
80002bbc:	00812c23          	sw	s0,24(sp)
80002bc0:	02010413          	addi	s0,sp,32
80002bc4:	fea42623          	sw	a0,-20(s0)
80002bc8:	feb42423          	sw	a1,-24(s0)
     *      xItemValue = ( configMAX_PRIORITIES - uxPriority )
     * Therefore, the event list is sorted in descending priority order.
     *
     * The queue that contains the event list is locked, preventing
     * simultaneous access from interrupts. */
    vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
80002bcc:	800097b7          	lui	a5,0x80009
80002bd0:	9047a783          	lw	a5,-1788(a5) # 80008904 <pxCurrentTCB>
80002bd4:	01878793          	addi	a5,a5,24
80002bd8:	00078593          	addi	a1,a5,0
80002bdc:	fec42503          	lw	a0,-20(s0)
80002be0:	e38fd0ef          	jal	ra,80000218 <vListInsert>

    prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
80002be4:	00100593          	addi	a1,zero,1
80002be8:	fe842503          	lw	a0,-24(s0)
80002bec:	239010ef          	jal	ra,80004624 <prvAddCurrentTaskToDelayedList>

    traceRETURN_vTaskPlaceOnEventList();
}
80002bf0:	00000013          	addi	zero,zero,0
80002bf4:	01c12083          	lw	ra,28(sp)
80002bf8:	01812403          	lw	s0,24(sp)
80002bfc:	02010113          	addi	sp,sp,32
80002c00:	00008067          	jalr	zero,0(ra)

80002c04 <vTaskPlaceOnUnorderedEventList>:
/*-----------------------------------------------------------*/

void vTaskPlaceOnUnorderedEventList( List_t * pxEventList,
                                     const TickType_t xItemValue,
                                     const TickType_t xTicksToWait )
{
80002c04:	fd010113          	addi	sp,sp,-48
80002c08:	02112623          	sw	ra,44(sp)
80002c0c:	02812423          	sw	s0,40(sp)
80002c10:	03010413          	addi	s0,sp,48
80002c14:	fca42e23          	sw	a0,-36(s0)
80002c18:	fcb42c23          	sw	a1,-40(s0)
80002c1c:	fcc42a23          	sw	a2,-44(s0)
    configASSERT( uxSchedulerSuspended != ( UBaseType_t ) 0U );

    /* Store the item value in the event list item.  It is safe to access the
     * event list item here as interrupts won't access the event list item of a
     * task that is not in the Blocked state. */
    listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), xItemValue | taskEVENT_LIST_ITEM_VALUE_IN_USE );
80002c20:	800097b7          	lui	a5,0x80009
80002c24:	9047a783          	lw	a5,-1788(a5) # 80008904 <pxCurrentTCB>
80002c28:	fd842683          	lw	a3,-40(s0)
80002c2c:	80000737          	lui	a4,0x80000
80002c30:	00e6e733          	or	a4,a3,a4
80002c34:	00e7ac23          	sw	a4,24(a5)
    /* Place the event list item of the TCB at the end of the appropriate event
     * list.  It is safe to access the event list here because it is part of an
     * event group implementation - and interrupts don't access event groups
     * directly (instead they access them indirectly by pending function calls to
     * the task level). */
    listINSERT_END( pxEventList, &( pxCurrentTCB->xEventListItem ) );
80002c38:	fdc42783          	lw	a5,-36(s0)
80002c3c:	0047a783          	lw	a5,4(a5)
80002c40:	fef42623          	sw	a5,-20(s0)
80002c44:	800097b7          	lui	a5,0x80009
80002c48:	9047a783          	lw	a5,-1788(a5) # 80008904 <pxCurrentTCB>
80002c4c:	fec42703          	lw	a4,-20(s0)
80002c50:	00e7ae23          	sw	a4,28(a5)
80002c54:	800097b7          	lui	a5,0x80009
80002c58:	9047a783          	lw	a5,-1788(a5) # 80008904 <pxCurrentTCB>
80002c5c:	fec42703          	lw	a4,-20(s0)
80002c60:	00872703          	lw	a4,8(a4) # 80000008 <__start+0x8>
80002c64:	02e7a023          	sw	a4,32(a5)
80002c68:	800097b7          	lui	a5,0x80009
80002c6c:	9047a703          	lw	a4,-1788(a5) # 80008904 <pxCurrentTCB>
80002c70:	fec42783          	lw	a5,-20(s0)
80002c74:	0087a783          	lw	a5,8(a5)
80002c78:	01870713          	addi	a4,a4,24
80002c7c:	00e7a223          	sw	a4,4(a5)
80002c80:	800097b7          	lui	a5,0x80009
80002c84:	9047a783          	lw	a5,-1788(a5) # 80008904 <pxCurrentTCB>
80002c88:	01878713          	addi	a4,a5,24
80002c8c:	fec42783          	lw	a5,-20(s0)
80002c90:	00e7a423          	sw	a4,8(a5)
80002c94:	800097b7          	lui	a5,0x80009
80002c98:	9047a783          	lw	a5,-1788(a5) # 80008904 <pxCurrentTCB>
80002c9c:	fdc42703          	lw	a4,-36(s0)
80002ca0:	02e7a423          	sw	a4,40(a5)
80002ca4:	fdc42783          	lw	a5,-36(s0)
80002ca8:	0007a783          	lw	a5,0(a5)
80002cac:	00178713          	addi	a4,a5,1
80002cb0:	fdc42783          	lw	a5,-36(s0)
80002cb4:	00e7a023          	sw	a4,0(a5)

    prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
80002cb8:	00100593          	addi	a1,zero,1
80002cbc:	fd442503          	lw	a0,-44(s0)
80002cc0:	165010ef          	jal	ra,80004624 <prvAddCurrentTaskToDelayedList>

    traceRETURN_vTaskPlaceOnUnorderedEventList();
}
80002cc4:	00000013          	addi	zero,zero,0
80002cc8:	02c12083          	lw	ra,44(sp)
80002ccc:	02812403          	lw	s0,40(sp)
80002cd0:	03010113          	addi	sp,sp,48
80002cd4:	00008067          	jalr	zero,0(ra)

80002cd8 <xTaskRemoveFromEventList>:

#endif /* configUSE_TIMERS */
/*-----------------------------------------------------------*/

BaseType_t xTaskRemoveFromEventList( const List_t * const pxEventList )
{
80002cd8:	fc010113          	addi	sp,sp,-64
80002cdc:	02112e23          	sw	ra,60(sp)
80002ce0:	02812c23          	sw	s0,56(sp)
80002ce4:	04010413          	addi	s0,sp,64
80002ce8:	fca42623          	sw	a0,-52(s0)
     * This function assumes that a check has already been made to ensure that
     * pxEventList is not empty. */
    /* MISRA Ref 11.5.3 [Void pointer assignment] */
    /* More details at: https://github.com/FreeRTOS/FreeRTOS-Kernel/blob/main/MISRA.md#rule-115 */
    /* coverity[misra_c_2012_rule_11_5_violation] */
    pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList );
80002cec:	fcc42783          	lw	a5,-52(s0)
80002cf0:	00c7a783          	lw	a5,12(a5)
80002cf4:	00c7a783          	lw	a5,12(a5)
80002cf8:	fef42423          	sw	a5,-24(s0)
    configASSERT( pxUnblockedTCB );
    listREMOVE_ITEM( &( pxUnblockedTCB->xEventListItem ) );
80002cfc:	fe842783          	lw	a5,-24(s0)
80002d00:	0287a783          	lw	a5,40(a5)
80002d04:	fef42223          	sw	a5,-28(s0)
80002d08:	fe842783          	lw	a5,-24(s0)
80002d0c:	01c7a783          	lw	a5,28(a5)
80002d10:	fe842703          	lw	a4,-24(s0)
80002d14:	02072703          	lw	a4,32(a4)
80002d18:	00e7a423          	sw	a4,8(a5)
80002d1c:	fe842783          	lw	a5,-24(s0)
80002d20:	0207a783          	lw	a5,32(a5)
80002d24:	fe842703          	lw	a4,-24(s0)
80002d28:	01c72703          	lw	a4,28(a4)
80002d2c:	00e7a223          	sw	a4,4(a5)
80002d30:	fe442783          	lw	a5,-28(s0)
80002d34:	0047a703          	lw	a4,4(a5)
80002d38:	fe842783          	lw	a5,-24(s0)
80002d3c:	01878793          	addi	a5,a5,24
80002d40:	00f71a63          	bne	a4,a5,80002d54 <xTaskRemoveFromEventList+0x7c>
80002d44:	fe842783          	lw	a5,-24(s0)
80002d48:	0207a703          	lw	a4,32(a5)
80002d4c:	fe442783          	lw	a5,-28(s0)
80002d50:	00e7a223          	sw	a4,4(a5)
80002d54:	fe842783          	lw	a5,-24(s0)
80002d58:	0207a423          	sw	zero,40(a5)
80002d5c:	fe442783          	lw	a5,-28(s0)
80002d60:	0007a783          	lw	a5,0(a5)
80002d64:	fff78713          	addi	a4,a5,-1
80002d68:	fe442783          	lw	a5,-28(s0)
80002d6c:	00e7a023          	sw	a4,0(a5)

    if( uxSchedulerSuspended == ( UBaseType_t ) 0U )
80002d70:	800087b7          	lui	a5,0x80008
80002d74:	d007a783          	lw	a5,-768(a5) # 80007d00 <uxSchedulerSuspended>
80002d78:	18079663          	bne	a5,zero,80002f04 <xTaskRemoveFromEventList+0x22c>
    {
        listREMOVE_ITEM( &( pxUnblockedTCB->xStateListItem ) );
80002d7c:	fe842783          	lw	a5,-24(s0)
80002d80:	0147a783          	lw	a5,20(a5)
80002d84:	fcf42e23          	sw	a5,-36(s0)
80002d88:	fe842783          	lw	a5,-24(s0)
80002d8c:	0087a783          	lw	a5,8(a5)
80002d90:	fe842703          	lw	a4,-24(s0)
80002d94:	00c72703          	lw	a4,12(a4)
80002d98:	00e7a423          	sw	a4,8(a5)
80002d9c:	fe842783          	lw	a5,-24(s0)
80002da0:	00c7a783          	lw	a5,12(a5)
80002da4:	fe842703          	lw	a4,-24(s0)
80002da8:	00872703          	lw	a4,8(a4)
80002dac:	00e7a223          	sw	a4,4(a5)
80002db0:	fdc42783          	lw	a5,-36(s0)
80002db4:	0047a703          	lw	a4,4(a5)
80002db8:	fe842783          	lw	a5,-24(s0)
80002dbc:	00478793          	addi	a5,a5,4
80002dc0:	00f71a63          	bne	a4,a5,80002dd4 <xTaskRemoveFromEventList+0xfc>
80002dc4:	fe842783          	lw	a5,-24(s0)
80002dc8:	00c7a703          	lw	a4,12(a5)
80002dcc:	fdc42783          	lw	a5,-36(s0)
80002dd0:	00e7a223          	sw	a4,4(a5)
80002dd4:	fe842783          	lw	a5,-24(s0)
80002dd8:	0007aa23          	sw	zero,20(a5)
80002ddc:	fdc42783          	lw	a5,-36(s0)
80002de0:	0007a783          	lw	a5,0(a5)
80002de4:	fff78713          	addi	a4,a5,-1
80002de8:	fdc42783          	lw	a5,-36(s0)
80002dec:	00e7a023          	sw	a4,0(a5)
        prvAddTaskToReadyList( pxUnblockedTCB );
80002df0:	fe842783          	lw	a5,-24(s0)
80002df4:	02c7a783          	lw	a5,44(a5)
80002df8:	00100713          	addi	a4,zero,1
80002dfc:	00f71733          	sll	a4,a4,a5
80002e00:	800087b7          	lui	a5,0x80008
80002e04:	ce07a783          	lw	a5,-800(a5) # 80007ce0 <uxTopReadyPriority>
80002e08:	00f76733          	or	a4,a4,a5
80002e0c:	800087b7          	lui	a5,0x80008
80002e10:	cee7a023          	sw	a4,-800(a5) # 80007ce0 <uxTopReadyPriority>
80002e14:	fe842783          	lw	a5,-24(s0)
80002e18:	02c7a703          	lw	a4,44(a5)
80002e1c:	800087b7          	lui	a5,0x80008
80002e20:	c8078693          	addi	a3,a5,-896 # 80007c80 <pxReadyTasksLists>
80002e24:	00070793          	addi	a5,a4,0
80002e28:	00279793          	slli	a5,a5,0x2
80002e2c:	00e787b3          	add	a5,a5,a4
80002e30:	00279793          	slli	a5,a5,0x2
80002e34:	00f687b3          	add	a5,a3,a5
80002e38:	0047a783          	lw	a5,4(a5)
80002e3c:	fcf42c23          	sw	a5,-40(s0)
80002e40:	fe842783          	lw	a5,-24(s0)
80002e44:	fd842703          	lw	a4,-40(s0)
80002e48:	00e7a423          	sw	a4,8(a5)
80002e4c:	fd842783          	lw	a5,-40(s0)
80002e50:	0087a703          	lw	a4,8(a5)
80002e54:	fe842783          	lw	a5,-24(s0)
80002e58:	00e7a623          	sw	a4,12(a5)
80002e5c:	fd842783          	lw	a5,-40(s0)
80002e60:	0087a783          	lw	a5,8(a5)
80002e64:	fe842703          	lw	a4,-24(s0)
80002e68:	00470713          	addi	a4,a4,4
80002e6c:	00e7a223          	sw	a4,4(a5)
80002e70:	fe842783          	lw	a5,-24(s0)
80002e74:	00478713          	addi	a4,a5,4
80002e78:	fd842783          	lw	a5,-40(s0)
80002e7c:	00e7a423          	sw	a4,8(a5)
80002e80:	fe842783          	lw	a5,-24(s0)
80002e84:	02c7a703          	lw	a4,44(a5)
80002e88:	00070793          	addi	a5,a4,0
80002e8c:	00279793          	slli	a5,a5,0x2
80002e90:	00e787b3          	add	a5,a5,a4
80002e94:	00279793          	slli	a5,a5,0x2
80002e98:	80008737          	lui	a4,0x80008
80002e9c:	c8070713          	addi	a4,a4,-896 # 80007c80 <pxReadyTasksLists>
80002ea0:	00e78733          	add	a4,a5,a4
80002ea4:	fe842783          	lw	a5,-24(s0)
80002ea8:	00e7aa23          	sw	a4,20(a5)
80002eac:	fe842783          	lw	a5,-24(s0)
80002eb0:	02c7a703          	lw	a4,44(a5)
80002eb4:	800087b7          	lui	a5,0x80008
80002eb8:	c8078693          	addi	a3,a5,-896 # 80007c80 <pxReadyTasksLists>
80002ebc:	00070793          	addi	a5,a4,0
80002ec0:	00279793          	slli	a5,a5,0x2
80002ec4:	00e787b3          	add	a5,a5,a4
80002ec8:	00279793          	slli	a5,a5,0x2
80002ecc:	00f687b3          	add	a5,a3,a5
80002ed0:	0007a783          	lw	a5,0(a5)
80002ed4:	fe842703          	lw	a4,-24(s0)
80002ed8:	02c72703          	lw	a4,44(a4)
80002edc:	00178693          	addi	a3,a5,1
80002ee0:	800087b7          	lui	a5,0x80008
80002ee4:	c8078613          	addi	a2,a5,-896 # 80007c80 <pxReadyTasksLists>
80002ee8:	00070793          	addi	a5,a4,0
80002eec:	00279793          	slli	a5,a5,0x2
80002ef0:	00e787b3          	add	a5,a5,a4
80002ef4:	00279793          	slli	a5,a5,0x2
80002ef8:	00f607b3          	add	a5,a2,a5
80002efc:	00d7a023          	sw	a3,0(a5)
80002f00:	0800006f          	jal	zero,80002f80 <xTaskRemoveFromEventList+0x2a8>
    }
    else
    {
        /* The delayed and ready lists cannot be accessed, so hold this task
         * pending until the scheduler is resumed. */
        listINSERT_END( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
80002f04:	800087b7          	lui	a5,0x80008
80002f08:	cc478793          	addi	a5,a5,-828 # 80007cc4 <xPendingReadyList>
80002f0c:	0047a783          	lw	a5,4(a5)
80002f10:	fef42023          	sw	a5,-32(s0)
80002f14:	fe842783          	lw	a5,-24(s0)
80002f18:	fe042703          	lw	a4,-32(s0)
80002f1c:	00e7ae23          	sw	a4,28(a5)
80002f20:	fe042783          	lw	a5,-32(s0)
80002f24:	0087a703          	lw	a4,8(a5)
80002f28:	fe842783          	lw	a5,-24(s0)
80002f2c:	02e7a023          	sw	a4,32(a5)
80002f30:	fe042783          	lw	a5,-32(s0)
80002f34:	0087a783          	lw	a5,8(a5)
80002f38:	fe842703          	lw	a4,-24(s0)
80002f3c:	01870713          	addi	a4,a4,24
80002f40:	00e7a223          	sw	a4,4(a5)
80002f44:	fe842783          	lw	a5,-24(s0)
80002f48:	01878713          	addi	a4,a5,24
80002f4c:	fe042783          	lw	a5,-32(s0)
80002f50:	00e7a423          	sw	a4,8(a5)
80002f54:	fe842783          	lw	a5,-24(s0)
80002f58:	80008737          	lui	a4,0x80008
80002f5c:	cc470713          	addi	a4,a4,-828 # 80007cc4 <xPendingReadyList>
80002f60:	02e7a423          	sw	a4,40(a5)
80002f64:	800087b7          	lui	a5,0x80008
80002f68:	cc478793          	addi	a5,a5,-828 # 80007cc4 <xPendingReadyList>
80002f6c:	0007a783          	lw	a5,0(a5)
80002f70:	00178713          	addi	a4,a5,1
80002f74:	800087b7          	lui	a5,0x80008
80002f78:	cc478793          	addi	a5,a5,-828 # 80007cc4 <xPendingReadyList>
80002f7c:	00e7a023          	sw	a4,0(a5)
    }

    #if ( configNUMBER_OF_CORES == 1 )
    {
        if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
80002f80:	fe842783          	lw	a5,-24(s0)
80002f84:	02c7a703          	lw	a4,44(a5)
80002f88:	800097b7          	lui	a5,0x80009
80002f8c:	9047a783          	lw	a5,-1788(a5) # 80008904 <pxCurrentTCB>
80002f90:	02c7a783          	lw	a5,44(a5)
80002f94:	00e7fe63          	bgeu	a5,a4,80002fb0 <xTaskRemoveFromEventList+0x2d8>
        {
            /* Return true if the task removed from the event list has a higher
             * priority than the calling task.  This allows the calling task to know if
             * it should force a context switch now. */
            xReturn = pdTRUE;
80002f98:	00100793          	addi	a5,zero,1
80002f9c:	fef42623          	sw	a5,-20(s0)

            /* Mark that a yield is pending in case the user is not using the
             * "xHigherPriorityTaskWoken" parameter to an ISR safe FreeRTOS function. */
            xYieldPendings[ 0 ] = pdTRUE;
80002fa0:	800087b7          	lui	a5,0x80008
80002fa4:	00100713          	addi	a4,zero,1
80002fa8:	cee7a623          	sw	a4,-788(a5) # 80007cec <xYieldPendings>
80002fac:	0080006f          	jal	zero,80002fb4 <xTaskRemoveFromEventList+0x2dc>
        }
        else
        {
            xReturn = pdFALSE;
80002fb0:	fe042623          	sw	zero,-20(s0)
        #endif /* #if ( configUSE_PREEMPTION == 1 ) */
    }
    #endif /* #if ( configNUMBER_OF_CORES == 1 ) */

    traceRETURN_xTaskRemoveFromEventList( xReturn );
    return xReturn;
80002fb4:	fec42783          	lw	a5,-20(s0)
}
80002fb8:	00078513          	addi	a0,a5,0
80002fbc:	03c12083          	lw	ra,60(sp)
80002fc0:	03812403          	lw	s0,56(sp)
80002fc4:	04010113          	addi	sp,sp,64
80002fc8:	00008067          	jalr	zero,0(ra)

80002fcc <vTaskRemoveFromUnorderedEventList>:
/*-----------------------------------------------------------*/

void vTaskRemoveFromUnorderedEventList( ListItem_t * pxEventListItem,
                                        const TickType_t xItemValue )
{
80002fcc:	fd010113          	addi	sp,sp,-48
80002fd0:	02112623          	sw	ra,44(sp)
80002fd4:	02812423          	sw	s0,40(sp)
80002fd8:	03010413          	addi	s0,sp,48
80002fdc:	fca42e23          	sw	a0,-36(s0)
80002fe0:	fcb42c23          	sw	a1,-40(s0)
    /* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
     * the event flags implementation. */
    configASSERT( uxSchedulerSuspended != ( UBaseType_t ) 0U );

    /* Store the new item value in the event list. */
    listSET_LIST_ITEM_VALUE( pxEventListItem, xItemValue | taskEVENT_LIST_ITEM_VALUE_IN_USE );
80002fe4:	fd842703          	lw	a4,-40(s0)
80002fe8:	800007b7          	lui	a5,0x80000
80002fec:	00f76733          	or	a4,a4,a5
80002ff0:	fdc42783          	lw	a5,-36(s0)
80002ff4:	00e7a023          	sw	a4,0(a5) # 80000000 <__start>
    /* Remove the event list form the event flag.  Interrupts do not access
     * event flags. */
    /* MISRA Ref 11.5.3 [Void pointer assignment] */
    /* More details at: https://github.com/FreeRTOS/FreeRTOS-Kernel/blob/main/MISRA.md#rule-115 */
    /* coverity[misra_c_2012_rule_11_5_violation] */
    pxUnblockedTCB = listGET_LIST_ITEM_OWNER( pxEventListItem );
80002ff8:	fdc42783          	lw	a5,-36(s0)
80002ffc:	00c7a783          	lw	a5,12(a5)
80003000:	fef42623          	sw	a5,-20(s0)
    configASSERT( pxUnblockedTCB );
    listREMOVE_ITEM( pxEventListItem );
80003004:	fdc42783          	lw	a5,-36(s0)
80003008:	0107a783          	lw	a5,16(a5)
8000300c:	fef42423          	sw	a5,-24(s0)
80003010:	fdc42783          	lw	a5,-36(s0)
80003014:	0047a783          	lw	a5,4(a5)
80003018:	fdc42703          	lw	a4,-36(s0)
8000301c:	00872703          	lw	a4,8(a4)
80003020:	00e7a423          	sw	a4,8(a5)
80003024:	fdc42783          	lw	a5,-36(s0)
80003028:	0087a783          	lw	a5,8(a5)
8000302c:	fdc42703          	lw	a4,-36(s0)
80003030:	00472703          	lw	a4,4(a4)
80003034:	00e7a223          	sw	a4,4(a5)
80003038:	fe842783          	lw	a5,-24(s0)
8000303c:	0047a783          	lw	a5,4(a5)
80003040:	fdc42703          	lw	a4,-36(s0)
80003044:	00f71a63          	bne	a4,a5,80003058 <vTaskRemoveFromUnorderedEventList+0x8c>
80003048:	fdc42783          	lw	a5,-36(s0)
8000304c:	0087a703          	lw	a4,8(a5)
80003050:	fe842783          	lw	a5,-24(s0)
80003054:	00e7a223          	sw	a4,4(a5)
80003058:	fdc42783          	lw	a5,-36(s0)
8000305c:	0007a823          	sw	zero,16(a5)
80003060:	fe842783          	lw	a5,-24(s0)
80003064:	0007a783          	lw	a5,0(a5)
80003068:	fff78713          	addi	a4,a5,-1
8000306c:	fe842783          	lw	a5,-24(s0)
80003070:	00e7a023          	sw	a4,0(a5)
    #endif

    /* Remove the task from the delayed list and add it to the ready list.  The
     * scheduler is suspended so interrupts will not be accessing the ready
     * lists. */
    listREMOVE_ITEM( &( pxUnblockedTCB->xStateListItem ) );
80003074:	fec42783          	lw	a5,-20(s0)
80003078:	0147a783          	lw	a5,20(a5)
8000307c:	fef42223          	sw	a5,-28(s0)
80003080:	fec42783          	lw	a5,-20(s0)
80003084:	0087a783          	lw	a5,8(a5)
80003088:	fec42703          	lw	a4,-20(s0)
8000308c:	00c72703          	lw	a4,12(a4)
80003090:	00e7a423          	sw	a4,8(a5)
80003094:	fec42783          	lw	a5,-20(s0)
80003098:	00c7a783          	lw	a5,12(a5)
8000309c:	fec42703          	lw	a4,-20(s0)
800030a0:	00872703          	lw	a4,8(a4)
800030a4:	00e7a223          	sw	a4,4(a5)
800030a8:	fe442783          	lw	a5,-28(s0)
800030ac:	0047a703          	lw	a4,4(a5)
800030b0:	fec42783          	lw	a5,-20(s0)
800030b4:	00478793          	addi	a5,a5,4
800030b8:	00f71a63          	bne	a4,a5,800030cc <vTaskRemoveFromUnorderedEventList+0x100>
800030bc:	fec42783          	lw	a5,-20(s0)
800030c0:	00c7a703          	lw	a4,12(a5)
800030c4:	fe442783          	lw	a5,-28(s0)
800030c8:	00e7a223          	sw	a4,4(a5)
800030cc:	fec42783          	lw	a5,-20(s0)
800030d0:	0007aa23          	sw	zero,20(a5)
800030d4:	fe442783          	lw	a5,-28(s0)
800030d8:	0007a783          	lw	a5,0(a5)
800030dc:	fff78713          	addi	a4,a5,-1
800030e0:	fe442783          	lw	a5,-28(s0)
800030e4:	00e7a023          	sw	a4,0(a5)
    prvAddTaskToReadyList( pxUnblockedTCB );
800030e8:	fec42783          	lw	a5,-20(s0)
800030ec:	02c7a783          	lw	a5,44(a5)
800030f0:	00100713          	addi	a4,zero,1
800030f4:	00f71733          	sll	a4,a4,a5
800030f8:	800087b7          	lui	a5,0x80008
800030fc:	ce07a783          	lw	a5,-800(a5) # 80007ce0 <uxTopReadyPriority>
80003100:	00f76733          	or	a4,a4,a5
80003104:	800087b7          	lui	a5,0x80008
80003108:	cee7a023          	sw	a4,-800(a5) # 80007ce0 <uxTopReadyPriority>
8000310c:	fec42783          	lw	a5,-20(s0)
80003110:	02c7a703          	lw	a4,44(a5)
80003114:	800087b7          	lui	a5,0x80008
80003118:	c8078693          	addi	a3,a5,-896 # 80007c80 <pxReadyTasksLists>
8000311c:	00070793          	addi	a5,a4,0
80003120:	00279793          	slli	a5,a5,0x2
80003124:	00e787b3          	add	a5,a5,a4
80003128:	00279793          	slli	a5,a5,0x2
8000312c:	00f687b3          	add	a5,a3,a5
80003130:	0047a783          	lw	a5,4(a5)
80003134:	fef42023          	sw	a5,-32(s0)
80003138:	fec42783          	lw	a5,-20(s0)
8000313c:	fe042703          	lw	a4,-32(s0)
80003140:	00e7a423          	sw	a4,8(a5)
80003144:	fe042783          	lw	a5,-32(s0)
80003148:	0087a703          	lw	a4,8(a5)
8000314c:	fec42783          	lw	a5,-20(s0)
80003150:	00e7a623          	sw	a4,12(a5)
80003154:	fe042783          	lw	a5,-32(s0)
80003158:	0087a783          	lw	a5,8(a5)
8000315c:	fec42703          	lw	a4,-20(s0)
80003160:	00470713          	addi	a4,a4,4
80003164:	00e7a223          	sw	a4,4(a5)
80003168:	fec42783          	lw	a5,-20(s0)
8000316c:	00478713          	addi	a4,a5,4
80003170:	fe042783          	lw	a5,-32(s0)
80003174:	00e7a423          	sw	a4,8(a5)
80003178:	fec42783          	lw	a5,-20(s0)
8000317c:	02c7a703          	lw	a4,44(a5)
80003180:	00070793          	addi	a5,a4,0
80003184:	00279793          	slli	a5,a5,0x2
80003188:	00e787b3          	add	a5,a5,a4
8000318c:	00279793          	slli	a5,a5,0x2
80003190:	80008737          	lui	a4,0x80008
80003194:	c8070713          	addi	a4,a4,-896 # 80007c80 <pxReadyTasksLists>
80003198:	00e78733          	add	a4,a5,a4
8000319c:	fec42783          	lw	a5,-20(s0)
800031a0:	00e7aa23          	sw	a4,20(a5)
800031a4:	fec42783          	lw	a5,-20(s0)
800031a8:	02c7a703          	lw	a4,44(a5)
800031ac:	800087b7          	lui	a5,0x80008
800031b0:	c8078693          	addi	a3,a5,-896 # 80007c80 <pxReadyTasksLists>
800031b4:	00070793          	addi	a5,a4,0
800031b8:	00279793          	slli	a5,a5,0x2
800031bc:	00e787b3          	add	a5,a5,a4
800031c0:	00279793          	slli	a5,a5,0x2
800031c4:	00f687b3          	add	a5,a3,a5
800031c8:	0007a783          	lw	a5,0(a5)
800031cc:	fec42703          	lw	a4,-20(s0)
800031d0:	02c72703          	lw	a4,44(a4)
800031d4:	00178693          	addi	a3,a5,1
800031d8:	800087b7          	lui	a5,0x80008
800031dc:	c8078613          	addi	a2,a5,-896 # 80007c80 <pxReadyTasksLists>
800031e0:	00070793          	addi	a5,a4,0
800031e4:	00279793          	slli	a5,a5,0x2
800031e8:	00e787b3          	add	a5,a5,a4
800031ec:	00279793          	slli	a5,a5,0x2
800031f0:	00f607b3          	add	a5,a2,a5
800031f4:	00d7a023          	sw	a3,0(a5)

    #if ( configNUMBER_OF_CORES == 1 )
    {
        if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
800031f8:	fec42783          	lw	a5,-20(s0)
800031fc:	02c7a703          	lw	a4,44(a5)
80003200:	800097b7          	lui	a5,0x80009
80003204:	9047a783          	lw	a5,-1788(a5) # 80008904 <pxCurrentTCB>
80003208:	02c7a783          	lw	a5,44(a5)
8000320c:	00e7f863          	bgeu	a5,a4,8000321c <vTaskRemoveFromUnorderedEventList+0x250>
        {
            /* The unblocked task has a priority above that of the calling task, so
             * a context switch is required.  This function is called with the
             * scheduler suspended so xYieldPending is set so the context switch
             * occurs immediately that the scheduler is resumed (unsuspended). */
            xYieldPendings[ 0 ] = pdTRUE;
80003210:	800087b7          	lui	a5,0x80008
80003214:	00100713          	addi	a4,zero,1
80003218:	cee7a623          	sw	a4,-788(a5) # 80007cec <xYieldPendings>
        #endif
    }
    #endif /* #if ( configNUMBER_OF_CORES == 1 ) */

    traceRETURN_vTaskRemoveFromUnorderedEventList();
}
8000321c:	00000013          	addi	zero,zero,0
80003220:	02c12083          	lw	ra,44(sp)
80003224:	02812403          	lw	s0,40(sp)
80003228:	03010113          	addi	sp,sp,48
8000322c:	00008067          	jalr	zero,0(ra)

80003230 <vTaskSetTimeOutState>:
/*-----------------------------------------------------------*/

void vTaskSetTimeOutState( TimeOut_t * const pxTimeOut )
{
80003230:	fe010113          	addi	sp,sp,-32
80003234:	00112e23          	sw	ra,28(sp)
80003238:	00812c23          	sw	s0,24(sp)
8000323c:	02010413          	addi	s0,sp,32
80003240:	fea42623          	sw	a0,-20(s0)
    traceENTER_vTaskSetTimeOutState( pxTimeOut );

    configASSERT( pxTimeOut );
    taskENTER_CRITICAL();
80003244:	30047073          	csrrci	zero,mstatus,8
80003248:	800077b7          	lui	a5,0x80007
8000324c:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
80003250:	00178713          	addi	a4,a5,1
80003254:	800077b7          	lui	a5,0x80007
80003258:	c6e7a623          	sw	a4,-916(a5) # 80006c6c <xCriticalNesting>
    {
        pxTimeOut->xOverflowCount = xNumOfOverflows;
8000325c:	800087b7          	lui	a5,0x80008
80003260:	cf07a703          	lw	a4,-784(a5) # 80007cf0 <xNumOfOverflows>
80003264:	fec42783          	lw	a5,-20(s0)
80003268:	00e7a023          	sw	a4,0(a5)
        pxTimeOut->xTimeOnEntering = xTickCount;
8000326c:	800087b7          	lui	a5,0x80008
80003270:	cdc7a703          	lw	a4,-804(a5) # 80007cdc <xTickCount>
80003274:	fec42783          	lw	a5,-20(s0)
80003278:	00e7a223          	sw	a4,4(a5)
    }
    taskEXIT_CRITICAL();
8000327c:	800077b7          	lui	a5,0x80007
80003280:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
80003284:	fff78713          	addi	a4,a5,-1
80003288:	800077b7          	lui	a5,0x80007
8000328c:	c6e7a623          	sw	a4,-916(a5) # 80006c6c <xCriticalNesting>
80003290:	800077b7          	lui	a5,0x80007
80003294:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
80003298:	00079463          	bne	a5,zero,800032a0 <vTaskSetTimeOutState+0x70>
8000329c:	30046073          	csrrsi	zero,mstatus,8

    traceRETURN_vTaskSetTimeOutState();
}
800032a0:	00000013          	addi	zero,zero,0
800032a4:	01c12083          	lw	ra,28(sp)
800032a8:	01812403          	lw	s0,24(sp)
800032ac:	02010113          	addi	sp,sp,32
800032b0:	00008067          	jalr	zero,0(ra)

800032b4 <vTaskInternalSetTimeOutState>:
/*-----------------------------------------------------------*/

void vTaskInternalSetTimeOutState( TimeOut_t * const pxTimeOut )
{
800032b4:	fe010113          	addi	sp,sp,-32
800032b8:	00112e23          	sw	ra,28(sp)
800032bc:	00812c23          	sw	s0,24(sp)
800032c0:	02010413          	addi	s0,sp,32
800032c4:	fea42623          	sw	a0,-20(s0)
    traceENTER_vTaskInternalSetTimeOutState( pxTimeOut );

    /* For internal use only as it does not use a critical section. */
    pxTimeOut->xOverflowCount = xNumOfOverflows;
800032c8:	800087b7          	lui	a5,0x80008
800032cc:	cf07a703          	lw	a4,-784(a5) # 80007cf0 <xNumOfOverflows>
800032d0:	fec42783          	lw	a5,-20(s0)
800032d4:	00e7a023          	sw	a4,0(a5)
    pxTimeOut->xTimeOnEntering = xTickCount;
800032d8:	800087b7          	lui	a5,0x80008
800032dc:	cdc7a703          	lw	a4,-804(a5) # 80007cdc <xTickCount>
800032e0:	fec42783          	lw	a5,-20(s0)
800032e4:	00e7a223          	sw	a4,4(a5)

    traceRETURN_vTaskInternalSetTimeOutState();
}
800032e8:	00000013          	addi	zero,zero,0
800032ec:	01c12083          	lw	ra,28(sp)
800032f0:	01812403          	lw	s0,24(sp)
800032f4:	02010113          	addi	sp,sp,32
800032f8:	00008067          	jalr	zero,0(ra)

800032fc <xTaskCheckForTimeOut>:
/*-----------------------------------------------------------*/

BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut,
                                 TickType_t * const pxTicksToWait )
{
800032fc:	fd010113          	addi	sp,sp,-48
80003300:	02112623          	sw	ra,44(sp)
80003304:	02812423          	sw	s0,40(sp)
80003308:	03010413          	addi	s0,sp,48
8000330c:	fca42e23          	sw	a0,-36(s0)
80003310:	fcb42c23          	sw	a1,-40(s0)
    traceENTER_xTaskCheckForTimeOut( pxTimeOut, pxTicksToWait );

    configASSERT( pxTimeOut );
    configASSERT( pxTicksToWait );

    taskENTER_CRITICAL();
80003314:	30047073          	csrrci	zero,mstatus,8
80003318:	800077b7          	lui	a5,0x80007
8000331c:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
80003320:	00178713          	addi	a4,a5,1
80003324:	800077b7          	lui	a5,0x80007
80003328:	c6e7a623          	sw	a4,-916(a5) # 80006c6c <xCriticalNesting>
    {
        /* Minor optimisation.  The tick count cannot change in this block. */
        const TickType_t xConstTickCount = xTickCount;
8000332c:	800087b7          	lui	a5,0x80008
80003330:	cdc7a783          	lw	a5,-804(a5) # 80007cdc <xTickCount>
80003334:	fef42423          	sw	a5,-24(s0)
        const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
80003338:	fdc42783          	lw	a5,-36(s0)
8000333c:	0047a783          	lw	a5,4(a5)
80003340:	fe842703          	lw	a4,-24(s0)
80003344:	40f707b3          	sub	a5,a4,a5
80003348:	fef42223          	sw	a5,-28(s0)
                xReturn = pdFALSE;
            }
            else
        #endif

        if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) )
8000334c:	fdc42783          	lw	a5,-36(s0)
80003350:	0007a703          	lw	a4,0(a5)
80003354:	800087b7          	lui	a5,0x80008
80003358:	cf07a783          	lw	a5,-784(a5) # 80007cf0 <xNumOfOverflows>
8000335c:	02f70463          	beq	a4,a5,80003384 <xTaskCheckForTimeOut+0x88>
80003360:	fdc42783          	lw	a5,-36(s0)
80003364:	0047a783          	lw	a5,4(a5)
80003368:	fe842703          	lw	a4,-24(s0)
8000336c:	00f76c63          	bltu	a4,a5,80003384 <xTaskCheckForTimeOut+0x88>
            /* The tick count is greater than the time at which
             * vTaskSetTimeout() was called, but has also overflowed since
             * vTaskSetTimeOut() was called.  It must have wrapped all the way
             * around and gone past again. This passed since vTaskSetTimeout()
             * was called. */
            xReturn = pdTRUE;
80003370:	00100793          	addi	a5,zero,1
80003374:	fef42623          	sw	a5,-20(s0)
            *pxTicksToWait = ( TickType_t ) 0;
80003378:	fd842783          	lw	a5,-40(s0)
8000337c:	0007a023          	sw	zero,0(a5)
80003380:	04c0006f          	jal	zero,800033cc <xTaskCheckForTimeOut+0xd0>
        }
        else if( xElapsedTime < *pxTicksToWait )
80003384:	fd842783          	lw	a5,-40(s0)
80003388:	0007a783          	lw	a5,0(a5)
8000338c:	fe442703          	lw	a4,-28(s0)
80003390:	02f77663          	bgeu	a4,a5,800033bc <xTaskCheckForTimeOut+0xc0>
        {
            /* Not a genuine timeout. Adjust parameters for time remaining. */
            *pxTicksToWait -= xElapsedTime;
80003394:	fd842783          	lw	a5,-40(s0)
80003398:	0007a703          	lw	a4,0(a5)
8000339c:	fe442783          	lw	a5,-28(s0)
800033a0:	40f70733          	sub	a4,a4,a5
800033a4:	fd842783          	lw	a5,-40(s0)
800033a8:	00e7a023          	sw	a4,0(a5)
            vTaskInternalSetTimeOutState( pxTimeOut );
800033ac:	fdc42503          	lw	a0,-36(s0)
800033b0:	f05ff0ef          	jal	ra,800032b4 <vTaskInternalSetTimeOutState>
            xReturn = pdFALSE;
800033b4:	fe042623          	sw	zero,-20(s0)
800033b8:	0140006f          	jal	zero,800033cc <xTaskCheckForTimeOut+0xd0>
        }
        else
        {
            *pxTicksToWait = ( TickType_t ) 0;
800033bc:	fd842783          	lw	a5,-40(s0)
800033c0:	0007a023          	sw	zero,0(a5)
            xReturn = pdTRUE;
800033c4:	00100793          	addi	a5,zero,1
800033c8:	fef42623          	sw	a5,-20(s0)
        }
    }
    taskEXIT_CRITICAL();
800033cc:	800077b7          	lui	a5,0x80007
800033d0:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
800033d4:	fff78713          	addi	a4,a5,-1
800033d8:	800077b7          	lui	a5,0x80007
800033dc:	c6e7a623          	sw	a4,-916(a5) # 80006c6c <xCriticalNesting>
800033e0:	800077b7          	lui	a5,0x80007
800033e4:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
800033e8:	00079463          	bne	a5,zero,800033f0 <xTaskCheckForTimeOut+0xf4>
800033ec:	30046073          	csrrsi	zero,mstatus,8

    traceRETURN_xTaskCheckForTimeOut( xReturn );

    return xReturn;
800033f0:	fec42783          	lw	a5,-20(s0)
}
800033f4:	00078513          	addi	a0,a5,0
800033f8:	02c12083          	lw	ra,44(sp)
800033fc:	02812403          	lw	s0,40(sp)
80003400:	03010113          	addi	sp,sp,48
80003404:	00008067          	jalr	zero,0(ra)

80003408 <vTaskMissedYield>:
/*-----------------------------------------------------------*/

void vTaskMissedYield( void )
{
80003408:	ff010113          	addi	sp,sp,-16
8000340c:	00112623          	sw	ra,12(sp)
80003410:	00812423          	sw	s0,8(sp)
80003414:	01010413          	addi	s0,sp,16
    traceENTER_vTaskMissedYield();

    /* Must be called from within a critical section. */
    xYieldPendings[ portGET_CORE_ID() ] = pdTRUE;
80003418:	800087b7          	lui	a5,0x80008
8000341c:	00100713          	addi	a4,zero,1
80003420:	cee7a623          	sw	a4,-788(a5) # 80007cec <xYieldPendings>

    traceRETURN_vTaskMissedYield();
}
80003424:	00000013          	addi	zero,zero,0
80003428:	00c12083          	lw	ra,12(sp)
8000342c:	00812403          	lw	s0,8(sp)
80003430:	01010113          	addi	sp,sp,16
80003434:	00008067          	jalr	zero,0(ra)

80003438 <prvIdleTask>:
 * void prvIdleTask( void *pvParameters );
 *
 */

static portTASK_FUNCTION( prvIdleTask, pvParameters )
{
80003438:	fe010113          	addi	sp,sp,-32
8000343c:	00112e23          	sw	ra,28(sp)
80003440:	00812c23          	sw	s0,24(sp)
80003444:	02010413          	addi	s0,sp,32
80003448:	fea42623          	sw	a0,-20(s0)

    for( ; configCONTROL_INFINITE_LOOP(); )
    {
        /* See if any tasks have deleted themselves - if so then the idle task
         * is responsible for freeing the deleted task's TCB and stack. */
        prvCheckTasksWaitingTermination();
8000344c:	0bc000ef          	jal	ra,80003508 <prvCheckTasksWaitingTermination>
        {
            /* If we are not using preemption we keep forcing a task switch to
             * see if any other task has become available.  If we are using
             * preemption we don't need to do this as any task becoming available
             * will automatically get the processor anyway. */
            taskYIELD();
80003450:	00000073          	ecall
        prvCheckTasksWaitingTermination();
80003454:	00000013          	addi	zero,zero,0
80003458:	ff5ff06f          	jal	zero,8000344c <prvIdleTask+0x14>

8000345c <prvInitialiseTaskLists>:

#endif /* portUSING_MPU_WRAPPERS */
/*-----------------------------------------------------------*/

static void prvInitialiseTaskLists( void )
{
8000345c:	fe010113          	addi	sp,sp,-32
80003460:	00112e23          	sw	ra,28(sp)
80003464:	00812c23          	sw	s0,24(sp)
80003468:	02010413          	addi	s0,sp,32
    UBaseType_t uxPriority;

    for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
8000346c:	fe042623          	sw	zero,-20(s0)
80003470:	0380006f          	jal	zero,800034a8 <prvInitialiseTaskLists+0x4c>
    {
        vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
80003474:	fec42703          	lw	a4,-20(s0)
80003478:	00070793          	addi	a5,a4,0
8000347c:	00279793          	slli	a5,a5,0x2
80003480:	00e787b3          	add	a5,a5,a4
80003484:	00279793          	slli	a5,a5,0x2
80003488:	80008737          	lui	a4,0x80008
8000348c:	c8070713          	addi	a4,a4,-896 # 80007c80 <pxReadyTasksLists>
80003490:	00e787b3          	add	a5,a5,a4
80003494:	00078513          	addi	a0,a5,0
80003498:	c55fc0ef          	jal	ra,800000ec <vListInitialise>
    for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
8000349c:	fec42783          	lw	a5,-20(s0)
800034a0:	00178793          	addi	a5,a5,1
800034a4:	fef42623          	sw	a5,-20(s0)
800034a8:	fec42783          	lw	a5,-20(s0)
800034ac:	fc0784e3          	beq	a5,zero,80003474 <prvInitialiseTaskLists+0x18>
    }

    vListInitialise( &xDelayedTaskList1 );
800034b0:	800087b7          	lui	a5,0x80008
800034b4:	c9478513          	addi	a0,a5,-876 # 80007c94 <xDelayedTaskList1>
800034b8:	c35fc0ef          	jal	ra,800000ec <vListInitialise>
    vListInitialise( &xDelayedTaskList2 );
800034bc:	800087b7          	lui	a5,0x80008
800034c0:	ca878513          	addi	a0,a5,-856 # 80007ca8 <xDelayedTaskList2>
800034c4:	c29fc0ef          	jal	ra,800000ec <vListInitialise>
    vListInitialise( &xPendingReadyList );
800034c8:	800087b7          	lui	a5,0x80008
800034cc:	cc478513          	addi	a0,a5,-828 # 80007cc4 <xPendingReadyList>
800034d0:	c1dfc0ef          	jal	ra,800000ec <vListInitialise>
    }
    #endif /* INCLUDE_vTaskSuspend */

    /* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
     * using list2. */
    pxDelayedTaskList = &xDelayedTaskList1;
800034d4:	800087b7          	lui	a5,0x80008
800034d8:	80008737          	lui	a4,0x80008
800034dc:	c9470713          	addi	a4,a4,-876 # 80007c94 <xDelayedTaskList1>
800034e0:	cae7ae23          	sw	a4,-836(a5) # 80007cbc <pxDelayedTaskList>
    pxOverflowDelayedTaskList = &xDelayedTaskList2;
800034e4:	800087b7          	lui	a5,0x80008
800034e8:	80008737          	lui	a4,0x80008
800034ec:	ca870713          	addi	a4,a4,-856 # 80007ca8 <xDelayedTaskList2>
800034f0:	cce7a023          	sw	a4,-832(a5) # 80007cc0 <pxOverflowDelayedTaskList>
}
800034f4:	00000013          	addi	zero,zero,0
800034f8:	01c12083          	lw	ra,28(sp)
800034fc:	01812403          	lw	s0,24(sp)
80003500:	02010113          	addi	sp,sp,32
80003504:	00008067          	jalr	zero,0(ra)

80003508 <prvCheckTasksWaitingTermination>:
/*-----------------------------------------------------------*/

static void prvCheckTasksWaitingTermination( void )
{
80003508:	ff010113          	addi	sp,sp,-16
8000350c:	00112623          	sw	ra,12(sp)
80003510:	00812423          	sw	s0,8(sp)
80003514:	01010413          	addi	s0,sp,16
            }
            #endif /* #if( configNUMBER_OF_CORES == 1 ) */
        }
    }
    #endif /* INCLUDE_vTaskDelete */
}
80003518:	00000013          	addi	zero,zero,0
8000351c:	00c12083          	lw	ra,12(sp)
80003520:	00812403          	lw	s0,8(sp)
80003524:	01010113          	addi	sp,sp,16
80003528:	00008067          	jalr	zero,0(ra)

8000352c <prvResetNextTaskUnblockTime>:

#endif /* INCLUDE_vTaskDelete */
/*-----------------------------------------------------------*/

static void prvResetNextTaskUnblockTime( void )
{
8000352c:	ff010113          	addi	sp,sp,-16
80003530:	00112623          	sw	ra,12(sp)
80003534:	00812423          	sw	s0,8(sp)
80003538:	01010413          	addi	s0,sp,16
    if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
8000353c:	800087b7          	lui	a5,0x80008
80003540:	cbc7a783          	lw	a5,-836(a5) # 80007cbc <pxDelayedTaskList>
80003544:	0007a783          	lw	a5,0(a5)
80003548:	00079a63          	bne	a5,zero,8000355c <prvResetNextTaskUnblockTime+0x30>
    {
        /* The new current delayed list is empty.  Set xNextTaskUnblockTime to
         * the maximum possible value so it is  extremely unlikely that the
         * if( xTickCount >= xNextTaskUnblockTime ) test will pass until
         * there is an item in the delayed list. */
        xNextTaskUnblockTime = portMAX_DELAY;
8000354c:	800087b7          	lui	a5,0x80008
80003550:	fff00713          	addi	a4,zero,-1
80003554:	cee7ac23          	sw	a4,-776(a5) # 80007cf8 <xNextTaskUnblockTime>
         * the item at the head of the delayed list.  This is the time at
         * which the task at the head of the delayed list should be removed
         * from the Blocked state. */
        xNextTaskUnblockTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxDelayedTaskList );
    }
}
80003558:	01c0006f          	jal	zero,80003574 <prvResetNextTaskUnblockTime+0x48>
        xNextTaskUnblockTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxDelayedTaskList );
8000355c:	800087b7          	lui	a5,0x80008
80003560:	cbc7a783          	lw	a5,-836(a5) # 80007cbc <pxDelayedTaskList>
80003564:	00c7a783          	lw	a5,12(a5)
80003568:	0007a703          	lw	a4,0(a5)
8000356c:	800087b7          	lui	a5,0x80008
80003570:	cee7ac23          	sw	a4,-776(a5) # 80007cf8 <xNextTaskUnblockTime>
}
80003574:	00000013          	addi	zero,zero,0
80003578:	00c12083          	lw	ra,12(sp)
8000357c:	00812403          	lw	s0,8(sp)
80003580:	01010113          	addi	sp,sp,16
80003584:	00008067          	jalr	zero,0(ra)

80003588 <xTaskGetCurrentTaskHandle>:

#if ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) ) || ( configNUMBER_OF_CORES > 1 )

    #if ( configNUMBER_OF_CORES == 1 )
        TaskHandle_t xTaskGetCurrentTaskHandle( void )
        {
80003588:	fe010113          	addi	sp,sp,-32
8000358c:	00112e23          	sw	ra,28(sp)
80003590:	00812c23          	sw	s0,24(sp)
80003594:	02010413          	addi	s0,sp,32
            traceENTER_xTaskGetCurrentTaskHandle();

            /* A critical section is not required as this is not called from
             * an interrupt and the current TCB will always be the same for any
             * individual execution thread. */
            xReturn = pxCurrentTCB;
80003598:	800097b7          	lui	a5,0x80009
8000359c:	9047a783          	lw	a5,-1788(a5) # 80008904 <pxCurrentTCB>
800035a0:	fef42623          	sw	a5,-20(s0)

            traceRETURN_xTaskGetCurrentTaskHandle( xReturn );

            return xReturn;
800035a4:	fec42783          	lw	a5,-20(s0)
        }
800035a8:	00078513          	addi	a0,a5,0
800035ac:	01c12083          	lw	ra,28(sp)
800035b0:	01812403          	lw	s0,24(sp)
800035b4:	02010113          	addi	sp,sp,32
800035b8:	00008067          	jalr	zero,0(ra)

800035bc <xTaskGetCurrentTaskHandleForCore>:
            return xReturn;
        }
    #endif /* #if ( configNUMBER_OF_CORES == 1 ) */

    TaskHandle_t xTaskGetCurrentTaskHandleForCore( BaseType_t xCoreID )
    {
800035bc:	fd010113          	addi	sp,sp,-48
800035c0:	02112623          	sw	ra,44(sp)
800035c4:	02812423          	sw	s0,40(sp)
800035c8:	03010413          	addi	s0,sp,48
800035cc:	fca42e23          	sw	a0,-36(s0)
        TaskHandle_t xReturn = NULL;
800035d0:	fe042623          	sw	zero,-20(s0)

        traceENTER_xTaskGetCurrentTaskHandleForCore( xCoreID );

        if( taskVALID_CORE_ID( xCoreID ) != pdFALSE )
800035d4:	fdc42783          	lw	a5,-36(s0)
800035d8:	00079863          	bne	a5,zero,800035e8 <xTaskGetCurrentTaskHandleForCore+0x2c>
        {
            #if ( configNUMBER_OF_CORES == 1 )
                xReturn = pxCurrentTCB;
800035dc:	800097b7          	lui	a5,0x80009
800035e0:	9047a783          	lw	a5,-1788(a5) # 80008904 <pxCurrentTCB>
800035e4:	fef42623          	sw	a5,-20(s0)
            #endif /* #if ( configNUMBER_OF_CORES == 1 ) */
        }

        traceRETURN_xTaskGetCurrentTaskHandleForCore( xReturn );

        return xReturn;
800035e8:	fec42783          	lw	a5,-20(s0)
    }
800035ec:	00078513          	addi	a0,a5,0
800035f0:	02c12083          	lw	ra,44(sp)
800035f4:	02812403          	lw	s0,40(sp)
800035f8:	03010113          	addi	sp,sp,48
800035fc:	00008067          	jalr	zero,0(ra)

80003600 <uxTaskResetEventItemValue>:

#endif /* ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) ) */
/*-----------------------------------------------------------*/

TickType_t uxTaskResetEventItemValue( void )
{
80003600:	fe010113          	addi	sp,sp,-32
80003604:	00112e23          	sw	ra,28(sp)
80003608:	00812c23          	sw	s0,24(sp)
8000360c:	02010413          	addi	s0,sp,32
    TickType_t uxReturn;

    traceENTER_uxTaskResetEventItemValue();

    uxReturn = listGET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ) );
80003610:	800097b7          	lui	a5,0x80009
80003614:	9047a783          	lw	a5,-1788(a5) # 80008904 <pxCurrentTCB>
80003618:	0187a783          	lw	a5,24(a5)
8000361c:	fef42623          	sw	a5,-20(s0)

    /* Reset the event list item to its normal value - so it can be used with
     * queues and semaphores. */
    listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ) );
80003620:	800097b7          	lui	a5,0x80009
80003624:	9047a783          	lw	a5,-1788(a5) # 80008904 <pxCurrentTCB>
80003628:	02c7a703          	lw	a4,44(a5)
8000362c:	800097b7          	lui	a5,0x80009
80003630:	9047a783          	lw	a5,-1788(a5) # 80008904 <pxCurrentTCB>
80003634:	00100693          	addi	a3,zero,1
80003638:	40e68733          	sub	a4,a3,a4
8000363c:	00e7ac23          	sw	a4,24(a5)

    traceRETURN_uxTaskResetEventItemValue( uxReturn );

    return uxReturn;
80003640:	fec42783          	lw	a5,-20(s0)
}
80003644:	00078513          	addi	a0,a5,0
80003648:	01c12083          	lw	ra,28(sp)
8000364c:	01812403          	lw	s0,24(sp)
80003650:	02010113          	addi	sp,sp,32
80003654:	00008067          	jalr	zero,0(ra)

80003658 <ulTaskGenericNotifyTake>:
#if ( configUSE_TASK_NOTIFICATIONS == 1 )

    uint32_t ulTaskGenericNotifyTake( UBaseType_t uxIndexToWaitOn,
                                      BaseType_t xClearCountOnExit,
                                      TickType_t xTicksToWait )
    {
80003658:	fd010113          	addi	sp,sp,-48
8000365c:	02112623          	sw	ra,44(sp)
80003660:	02812423          	sw	s0,40(sp)
80003664:	03010413          	addi	s0,sp,48
80003668:	fca42e23          	sw	a0,-36(s0)
8000366c:	fcb42c23          	sw	a1,-40(s0)
80003670:	fcc42a23          	sw	a2,-44(s0)
        uint32_t ulReturn;
        BaseType_t xAlreadyYielded, xShouldBlock = pdFALSE;
80003674:	fe042623          	sw	zero,-20(s0)

        configASSERT( uxIndexToWaitOn < configTASK_NOTIFICATION_ARRAY_ENTRIES );

        /* We suspend the scheduler here as prvAddCurrentTaskToDelayedList is a
         * non-deterministic operation. */
        vTaskSuspendAll();
80003678:	c21fe0ef          	jal	ra,80002298 <vTaskSuspendAll>
        {
            /* We MUST enter a critical section to atomically check if a notification
             * has occurred and set the flag to indicate that we are waiting for
             * a notification. If we do not do so, a notification sent from an ISR
             * will get lost. */
            taskENTER_CRITICAL();
8000367c:	30047073          	csrrci	zero,mstatus,8
80003680:	800077b7          	lui	a5,0x80007
80003684:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
80003688:	00178713          	addi	a4,a5,1
8000368c:	800077b7          	lui	a5,0x80007
80003690:	c6e7a623          	sw	a4,-916(a5) # 80006c6c <xCriticalNesting>
            {
                /* Only block if the notification count is not already non-zero. */
                if( pxCurrentTCB->ulNotifiedValue[ uxIndexToWaitOn ] == 0U )
80003694:	800097b7          	lui	a5,0x80009
80003698:	9047a703          	lw	a4,-1788(a5) # 80008904 <pxCurrentTCB>
8000369c:	fdc42783          	lw	a5,-36(s0)
800036a0:	01078793          	addi	a5,a5,16
800036a4:	00279793          	slli	a5,a5,0x2
800036a8:	00f707b3          	add	a5,a4,a5
800036ac:	0047a783          	lw	a5,4(a5)
800036b0:	02079663          	bne	a5,zero,800036dc <ulTaskGenericNotifyTake+0x84>
                {
                    /* Mark this task as waiting for a notification. */
                    pxCurrentTCB->ucNotifyState[ uxIndexToWaitOn ] = taskWAITING_NOTIFICATION;
800036b4:	800097b7          	lui	a5,0x80009
800036b8:	9047a703          	lw	a4,-1788(a5) # 80008904 <pxCurrentTCB>
800036bc:	fdc42783          	lw	a5,-36(s0)
800036c0:	00f707b3          	add	a5,a4,a5
800036c4:	00100713          	addi	a4,zero,1
800036c8:	04e78423          	sb	a4,72(a5)

                    if( xTicksToWait > ( TickType_t ) 0 )
800036cc:	fd442783          	lw	a5,-44(s0)
800036d0:	00078663          	beq	a5,zero,800036dc <ulTaskGenericNotifyTake+0x84>
                    {
                        xShouldBlock = pdTRUE;
800036d4:	00100793          	addi	a5,zero,1
800036d8:	fef42623          	sw	a5,-20(s0)
                else
                {
                    mtCOVERAGE_TEST_MARKER();
                }
            }
            taskEXIT_CRITICAL();
800036dc:	800077b7          	lui	a5,0x80007
800036e0:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
800036e4:	fff78713          	addi	a4,a5,-1
800036e8:	800077b7          	lui	a5,0x80007
800036ec:	c6e7a623          	sw	a4,-916(a5) # 80006c6c <xCriticalNesting>
800036f0:	800077b7          	lui	a5,0x80007
800036f4:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
800036f8:	00079463          	bne	a5,zero,80003700 <ulTaskGenericNotifyTake+0xa8>
800036fc:	30046073          	csrrsi	zero,mstatus,8

            /* We are now out of the critical section but the scheduler is still
             * suspended, so we are safe to do non-deterministic operations such
             * as prvAddCurrentTaskToDelayedList. */
            if( xShouldBlock == pdTRUE )
80003700:	fec42703          	lw	a4,-20(s0)
80003704:	00100793          	addi	a5,zero,1
80003708:	00f71863          	bne	a4,a5,80003718 <ulTaskGenericNotifyTake+0xc0>
            {
                traceTASK_NOTIFY_TAKE_BLOCK( uxIndexToWaitOn );
                prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
8000370c:	00100593          	addi	a1,zero,1
80003710:	fd442503          	lw	a0,-44(s0)
80003714:	711000ef          	jal	ra,80004624 <prvAddCurrentTaskToDelayedList>
            else
            {
                mtCOVERAGE_TEST_MARKER();
            }
        }
        xAlreadyYielded = xTaskResumeAll();
80003718:	bb9fe0ef          	jal	ra,800022d0 <xTaskResumeAll>
8000371c:	fea42423          	sw	a0,-24(s0)

        /* Force a reschedule if xTaskResumeAll has not already done so. */
        if( ( xShouldBlock == pdTRUE ) && ( xAlreadyYielded == pdFALSE ) )
80003720:	fec42703          	lw	a4,-20(s0)
80003724:	00100793          	addi	a5,zero,1
80003728:	00f71863          	bne	a4,a5,80003738 <ulTaskGenericNotifyTake+0xe0>
8000372c:	fe842783          	lw	a5,-24(s0)
80003730:	00079463          	bne	a5,zero,80003738 <ulTaskGenericNotifyTake+0xe0>
        {
            taskYIELD_WITHIN_API();
80003734:	00000073          	ecall
        else
        {
            mtCOVERAGE_TEST_MARKER();
        }

        taskENTER_CRITICAL();
80003738:	30047073          	csrrci	zero,mstatus,8
8000373c:	800077b7          	lui	a5,0x80007
80003740:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
80003744:	00178713          	addi	a4,a5,1
80003748:	800077b7          	lui	a5,0x80007
8000374c:	c6e7a623          	sw	a4,-916(a5) # 80006c6c <xCriticalNesting>
        {
            traceTASK_NOTIFY_TAKE( uxIndexToWaitOn );
            ulReturn = pxCurrentTCB->ulNotifiedValue[ uxIndexToWaitOn ];
80003750:	800097b7          	lui	a5,0x80009
80003754:	9047a703          	lw	a4,-1788(a5) # 80008904 <pxCurrentTCB>
80003758:	fdc42783          	lw	a5,-36(s0)
8000375c:	01078793          	addi	a5,a5,16
80003760:	00279793          	slli	a5,a5,0x2
80003764:	00f707b3          	add	a5,a4,a5
80003768:	0047a783          	lw	a5,4(a5)
8000376c:	fef42223          	sw	a5,-28(s0)

            if( ulReturn != 0U )
80003770:	fe442783          	lw	a5,-28(s0)
80003774:	04078863          	beq	a5,zero,800037c4 <ulTaskGenericNotifyTake+0x16c>
            {
                if( xClearCountOnExit != pdFALSE )
80003778:	fd842783          	lw	a5,-40(s0)
8000377c:	02078263          	beq	a5,zero,800037a0 <ulTaskGenericNotifyTake+0x148>
                {
                    pxCurrentTCB->ulNotifiedValue[ uxIndexToWaitOn ] = ( uint32_t ) 0U;
80003780:	800097b7          	lui	a5,0x80009
80003784:	9047a703          	lw	a4,-1788(a5) # 80008904 <pxCurrentTCB>
80003788:	fdc42783          	lw	a5,-36(s0)
8000378c:	01078793          	addi	a5,a5,16
80003790:	00279793          	slli	a5,a5,0x2
80003794:	00f707b3          	add	a5,a4,a5
80003798:	0007a223          	sw	zero,4(a5)
8000379c:	0280006f          	jal	zero,800037c4 <ulTaskGenericNotifyTake+0x16c>
                }
                else
                {
                    pxCurrentTCB->ulNotifiedValue[ uxIndexToWaitOn ] = ulReturn - ( uint32_t ) 1;
800037a0:	800097b7          	lui	a5,0x80009
800037a4:	9047a683          	lw	a3,-1788(a5) # 80008904 <pxCurrentTCB>
800037a8:	fe442783          	lw	a5,-28(s0)
800037ac:	fff78713          	addi	a4,a5,-1
800037b0:	fdc42783          	lw	a5,-36(s0)
800037b4:	01078793          	addi	a5,a5,16
800037b8:	00279793          	slli	a5,a5,0x2
800037bc:	00f687b3          	add	a5,a3,a5
800037c0:	00e7a223          	sw	a4,4(a5)
            else
            {
                mtCOVERAGE_TEST_MARKER();
            }

            pxCurrentTCB->ucNotifyState[ uxIndexToWaitOn ] = taskNOT_WAITING_NOTIFICATION;
800037c4:	800097b7          	lui	a5,0x80009
800037c8:	9047a703          	lw	a4,-1788(a5) # 80008904 <pxCurrentTCB>
800037cc:	fdc42783          	lw	a5,-36(s0)
800037d0:	00f707b3          	add	a5,a4,a5
800037d4:	04078423          	sb	zero,72(a5)
        }
        taskEXIT_CRITICAL();
800037d8:	800077b7          	lui	a5,0x80007
800037dc:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
800037e0:	fff78713          	addi	a4,a5,-1
800037e4:	800077b7          	lui	a5,0x80007
800037e8:	c6e7a623          	sw	a4,-916(a5) # 80006c6c <xCriticalNesting>
800037ec:	800077b7          	lui	a5,0x80007
800037f0:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
800037f4:	00079463          	bne	a5,zero,800037fc <ulTaskGenericNotifyTake+0x1a4>
800037f8:	30046073          	csrrsi	zero,mstatus,8

        traceRETURN_ulTaskGenericNotifyTake( ulReturn );

        return ulReturn;
800037fc:	fe442783          	lw	a5,-28(s0)
    }
80003800:	00078513          	addi	a0,a5,0
80003804:	02c12083          	lw	ra,44(sp)
80003808:	02812403          	lw	s0,40(sp)
8000380c:	03010113          	addi	sp,sp,48
80003810:	00008067          	jalr	zero,0(ra)

80003814 <xTaskGenericNotifyWait>:
    BaseType_t xTaskGenericNotifyWait( UBaseType_t uxIndexToWaitOn,
                                       uint32_t ulBitsToClearOnEntry,
                                       uint32_t ulBitsToClearOnExit,
                                       uint32_t * pulNotificationValue,
                                       TickType_t xTicksToWait )
    {
80003814:	fc010113          	addi	sp,sp,-64
80003818:	02112e23          	sw	ra,60(sp)
8000381c:	02812c23          	sw	s0,56(sp)
80003820:	04010413          	addi	s0,sp,64
80003824:	fca42e23          	sw	a0,-36(s0)
80003828:	fcb42c23          	sw	a1,-40(s0)
8000382c:	fcc42a23          	sw	a2,-44(s0)
80003830:	fcd42823          	sw	a3,-48(s0)
80003834:	fce42623          	sw	a4,-52(s0)
        BaseType_t xReturn, xAlreadyYielded, xShouldBlock = pdFALSE;
80003838:	fe042423          	sw	zero,-24(s0)

        configASSERT( uxIndexToWaitOn < configTASK_NOTIFICATION_ARRAY_ENTRIES );

        /* We suspend the scheduler here as prvAddCurrentTaskToDelayedList is a
         * non-deterministic operation. */
        vTaskSuspendAll();
8000383c:	a5dfe0ef          	jal	ra,80002298 <vTaskSuspendAll>
        {
            /* We MUST enter a critical section to atomically check and update the
             * task notification value. If we do not do so, a notification from
             * an ISR will get lost. */
            taskENTER_CRITICAL();
80003840:	30047073          	csrrci	zero,mstatus,8
80003844:	800077b7          	lui	a5,0x80007
80003848:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
8000384c:	00178713          	addi	a4,a5,1
80003850:	800077b7          	lui	a5,0x80007
80003854:	c6e7a623          	sw	a4,-916(a5) # 80006c6c <xCriticalNesting>
            {
                /* Only block if a notification is not already pending. */
                if( pxCurrentTCB->ucNotifyState[ uxIndexToWaitOn ] != taskNOTIFICATION_RECEIVED )
80003858:	800097b7          	lui	a5,0x80009
8000385c:	9047a703          	lw	a4,-1788(a5) # 80008904 <pxCurrentTCB>
80003860:	fdc42783          	lw	a5,-36(s0)
80003864:	00f707b3          	add	a5,a4,a5
80003868:	0487c783          	lbu	a5,72(a5)
8000386c:	0ff7f713          	andi	a4,a5,255
80003870:	00200793          	addi	a5,zero,2
80003874:	06f70463          	beq	a4,a5,800038dc <xTaskGenericNotifyWait+0xc8>
                {
                    /* Clear bits in the task's notification value as bits may get
                     * set by the notifying task or interrupt. This can be used
                     * to clear the value to zero. */
                    pxCurrentTCB->ulNotifiedValue[ uxIndexToWaitOn ] &= ~ulBitsToClearOnEntry;
80003878:	800097b7          	lui	a5,0x80009
8000387c:	9047a703          	lw	a4,-1788(a5) # 80008904 <pxCurrentTCB>
80003880:	fdc42783          	lw	a5,-36(s0)
80003884:	01078793          	addi	a5,a5,16
80003888:	00279793          	slli	a5,a5,0x2
8000388c:	00f707b3          	add	a5,a4,a5
80003890:	0047a683          	lw	a3,4(a5)
80003894:	fd842783          	lw	a5,-40(s0)
80003898:	fff7c793          	xori	a5,a5,-1
8000389c:	00f6f6b3          	and	a3,a3,a5
800038a0:	fdc42783          	lw	a5,-36(s0)
800038a4:	01078793          	addi	a5,a5,16
800038a8:	00279793          	slli	a5,a5,0x2
800038ac:	00f707b3          	add	a5,a4,a5
800038b0:	00d7a223          	sw	a3,4(a5)

                    /* Mark this task as waiting for a notification. */
                    pxCurrentTCB->ucNotifyState[ uxIndexToWaitOn ] = taskWAITING_NOTIFICATION;
800038b4:	800097b7          	lui	a5,0x80009
800038b8:	9047a703          	lw	a4,-1788(a5) # 80008904 <pxCurrentTCB>
800038bc:	fdc42783          	lw	a5,-36(s0)
800038c0:	00f707b3          	add	a5,a4,a5
800038c4:	00100713          	addi	a4,zero,1
800038c8:	04e78423          	sb	a4,72(a5)

                    if( xTicksToWait > ( TickType_t ) 0 )
800038cc:	fcc42783          	lw	a5,-52(s0)
800038d0:	00078663          	beq	a5,zero,800038dc <xTaskGenericNotifyWait+0xc8>
                    {
                        xShouldBlock = pdTRUE;
800038d4:	00100793          	addi	a5,zero,1
800038d8:	fef42423          	sw	a5,-24(s0)
                else
                {
                    mtCOVERAGE_TEST_MARKER();
                }
            }
            taskEXIT_CRITICAL();
800038dc:	800077b7          	lui	a5,0x80007
800038e0:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
800038e4:	fff78713          	addi	a4,a5,-1
800038e8:	800077b7          	lui	a5,0x80007
800038ec:	c6e7a623          	sw	a4,-916(a5) # 80006c6c <xCriticalNesting>
800038f0:	800077b7          	lui	a5,0x80007
800038f4:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
800038f8:	00079463          	bne	a5,zero,80003900 <xTaskGenericNotifyWait+0xec>
800038fc:	30046073          	csrrsi	zero,mstatus,8

            /* We are now out of the critical section but the scheduler is still
             * suspended, so we are safe to do non-deterministic operations such
             * as prvAddCurrentTaskToDelayedList. */
            if( xShouldBlock == pdTRUE )
80003900:	fe842703          	lw	a4,-24(s0)
80003904:	00100793          	addi	a5,zero,1
80003908:	00f71863          	bne	a4,a5,80003918 <xTaskGenericNotifyWait+0x104>
            {
                traceTASK_NOTIFY_WAIT_BLOCK( uxIndexToWaitOn );
                prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
8000390c:	00100593          	addi	a1,zero,1
80003910:	fcc42503          	lw	a0,-52(s0)
80003914:	511000ef          	jal	ra,80004624 <prvAddCurrentTaskToDelayedList>
            else
            {
                mtCOVERAGE_TEST_MARKER();
            }
        }
        xAlreadyYielded = xTaskResumeAll();
80003918:	9b9fe0ef          	jal	ra,800022d0 <xTaskResumeAll>
8000391c:	fea42223          	sw	a0,-28(s0)

        /* Force a reschedule if xTaskResumeAll has not already done so. */
        if( ( xShouldBlock == pdTRUE ) && ( xAlreadyYielded == pdFALSE ) )
80003920:	fe842703          	lw	a4,-24(s0)
80003924:	00100793          	addi	a5,zero,1
80003928:	00f71863          	bne	a4,a5,80003938 <xTaskGenericNotifyWait+0x124>
8000392c:	fe442783          	lw	a5,-28(s0)
80003930:	00079463          	bne	a5,zero,80003938 <xTaskGenericNotifyWait+0x124>
        {
            taskYIELD_WITHIN_API();
80003934:	00000073          	ecall
        else
        {
            mtCOVERAGE_TEST_MARKER();
        }

        taskENTER_CRITICAL();
80003938:	30047073          	csrrci	zero,mstatus,8
8000393c:	800077b7          	lui	a5,0x80007
80003940:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
80003944:	00178713          	addi	a4,a5,1
80003948:	800077b7          	lui	a5,0x80007
8000394c:	c6e7a623          	sw	a4,-916(a5) # 80006c6c <xCriticalNesting>
        {
            traceTASK_NOTIFY_WAIT( uxIndexToWaitOn );

            if( pulNotificationValue != NULL )
80003950:	fd042783          	lw	a5,-48(s0)
80003954:	02078463          	beq	a5,zero,8000397c <xTaskGenericNotifyWait+0x168>
            {
                /* Output the current notification value, which may or may not
                 * have changed. */
                *pulNotificationValue = pxCurrentTCB->ulNotifiedValue[ uxIndexToWaitOn ];
80003958:	800097b7          	lui	a5,0x80009
8000395c:	9047a703          	lw	a4,-1788(a5) # 80008904 <pxCurrentTCB>
80003960:	fdc42783          	lw	a5,-36(s0)
80003964:	01078793          	addi	a5,a5,16
80003968:	00279793          	slli	a5,a5,0x2
8000396c:	00f707b3          	add	a5,a4,a5
80003970:	0047a703          	lw	a4,4(a5)
80003974:	fd042783          	lw	a5,-48(s0)
80003978:	00e7a023          	sw	a4,0(a5)

            /* If ucNotifyValue is set then either the task never entered the
             * blocked state (because a notification was already pending) or the
             * task unblocked because of a notification.  Otherwise the task
             * unblocked because of a timeout. */
            if( pxCurrentTCB->ucNotifyState[ uxIndexToWaitOn ] != taskNOTIFICATION_RECEIVED )
8000397c:	800097b7          	lui	a5,0x80009
80003980:	9047a703          	lw	a4,-1788(a5) # 80008904 <pxCurrentTCB>
80003984:	fdc42783          	lw	a5,-36(s0)
80003988:	00f707b3          	add	a5,a4,a5
8000398c:	0487c783          	lbu	a5,72(a5)
80003990:	0ff7f713          	andi	a4,a5,255
80003994:	00200793          	addi	a5,zero,2
80003998:	00f70663          	beq	a4,a5,800039a4 <xTaskGenericNotifyWait+0x190>
            {
                /* A notification was not received. */
                xReturn = pdFALSE;
8000399c:	fe042623          	sw	zero,-20(s0)
800039a0:	0480006f          	jal	zero,800039e8 <xTaskGenericNotifyWait+0x1d4>
            }
            else
            {
                /* A notification was already pending or a notification was
                 * received while the task was waiting. */
                pxCurrentTCB->ulNotifiedValue[ uxIndexToWaitOn ] &= ~ulBitsToClearOnExit;
800039a4:	800097b7          	lui	a5,0x80009
800039a8:	9047a703          	lw	a4,-1788(a5) # 80008904 <pxCurrentTCB>
800039ac:	fdc42783          	lw	a5,-36(s0)
800039b0:	01078793          	addi	a5,a5,16
800039b4:	00279793          	slli	a5,a5,0x2
800039b8:	00f707b3          	add	a5,a4,a5
800039bc:	0047a683          	lw	a3,4(a5)
800039c0:	fd442783          	lw	a5,-44(s0)
800039c4:	fff7c793          	xori	a5,a5,-1
800039c8:	00f6f6b3          	and	a3,a3,a5
800039cc:	fdc42783          	lw	a5,-36(s0)
800039d0:	01078793          	addi	a5,a5,16
800039d4:	00279793          	slli	a5,a5,0x2
800039d8:	00f707b3          	add	a5,a4,a5
800039dc:	00d7a223          	sw	a3,4(a5)
                xReturn = pdTRUE;
800039e0:	00100793          	addi	a5,zero,1
800039e4:	fef42623          	sw	a5,-20(s0)
            }

            pxCurrentTCB->ucNotifyState[ uxIndexToWaitOn ] = taskNOT_WAITING_NOTIFICATION;
800039e8:	800097b7          	lui	a5,0x80009
800039ec:	9047a703          	lw	a4,-1788(a5) # 80008904 <pxCurrentTCB>
800039f0:	fdc42783          	lw	a5,-36(s0)
800039f4:	00f707b3          	add	a5,a4,a5
800039f8:	04078423          	sb	zero,72(a5)
        }
        taskEXIT_CRITICAL();
800039fc:	800077b7          	lui	a5,0x80007
80003a00:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
80003a04:	fff78713          	addi	a4,a5,-1
80003a08:	800077b7          	lui	a5,0x80007
80003a0c:	c6e7a623          	sw	a4,-916(a5) # 80006c6c <xCriticalNesting>
80003a10:	800077b7          	lui	a5,0x80007
80003a14:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
80003a18:	00079463          	bne	a5,zero,80003a20 <xTaskGenericNotifyWait+0x20c>
80003a1c:	30046073          	csrrsi	zero,mstatus,8

        traceRETURN_xTaskGenericNotifyWait( xReturn );

        return xReturn;
80003a20:	fec42783          	lw	a5,-20(s0)
    }
80003a24:	00078513          	addi	a0,a5,0
80003a28:	03c12083          	lw	ra,60(sp)
80003a2c:	03812403          	lw	s0,56(sp)
80003a30:	04010113          	addi	sp,sp,64
80003a34:	00008067          	jalr	zero,0(ra)

80003a38 <xTaskGenericNotify>:
    BaseType_t xTaskGenericNotify( TaskHandle_t xTaskToNotify,
                                   UBaseType_t uxIndexToNotify,
                                   uint32_t ulValue,
                                   eNotifyAction eAction,
                                   uint32_t * pulPreviousNotificationValue )
    {
80003a38:	fb010113          	addi	sp,sp,-80
80003a3c:	04112623          	sw	ra,76(sp)
80003a40:	04812423          	sw	s0,72(sp)
80003a44:	05010413          	addi	s0,sp,80
80003a48:	fca42623          	sw	a0,-52(s0)
80003a4c:	fcb42423          	sw	a1,-56(s0)
80003a50:	fcc42223          	sw	a2,-60(s0)
80003a54:	fcd42023          	sw	a3,-64(s0)
80003a58:	fae42e23          	sw	a4,-68(s0)
        TCB_t * pxTCB;
        BaseType_t xReturn = pdPASS;
80003a5c:	00100793          	addi	a5,zero,1
80003a60:	fef42623          	sw	a5,-20(s0)

        traceENTER_xTaskGenericNotify( xTaskToNotify, uxIndexToNotify, ulValue, eAction, pulPreviousNotificationValue );

        configASSERT( uxIndexToNotify < configTASK_NOTIFICATION_ARRAY_ENTRIES );
        configASSERT( xTaskToNotify );
        pxTCB = xTaskToNotify;
80003a64:	fcc42783          	lw	a5,-52(s0)
80003a68:	fef42423          	sw	a5,-24(s0)

        taskENTER_CRITICAL();
80003a6c:	30047073          	csrrci	zero,mstatus,8
80003a70:	800077b7          	lui	a5,0x80007
80003a74:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
80003a78:	00178713          	addi	a4,a5,1
80003a7c:	800077b7          	lui	a5,0x80007
80003a80:	c6e7a623          	sw	a4,-916(a5) # 80006c6c <xCriticalNesting>
        {
            if( pulPreviousNotificationValue != NULL )
80003a84:	fbc42783          	lw	a5,-68(s0)
80003a88:	02078263          	beq	a5,zero,80003aac <xTaskGenericNotify+0x74>
            {
                *pulPreviousNotificationValue = pxTCB->ulNotifiedValue[ uxIndexToNotify ];
80003a8c:	fe842703          	lw	a4,-24(s0)
80003a90:	fc842783          	lw	a5,-56(s0)
80003a94:	01078793          	addi	a5,a5,16
80003a98:	00279793          	slli	a5,a5,0x2
80003a9c:	00f707b3          	add	a5,a4,a5
80003aa0:	0047a703          	lw	a4,4(a5)
80003aa4:	fbc42783          	lw	a5,-68(s0)
80003aa8:	00e7a023          	sw	a4,0(a5)
            }

            ucOriginalNotifyState = pxTCB->ucNotifyState[ uxIndexToNotify ];
80003aac:	fe842703          	lw	a4,-24(s0)
80003ab0:	fc842783          	lw	a5,-56(s0)
80003ab4:	00f707b3          	add	a5,a4,a5
80003ab8:	0487c783          	lbu	a5,72(a5)
80003abc:	fef403a3          	sb	a5,-25(s0)

            pxTCB->ucNotifyState[ uxIndexToNotify ] = taskNOTIFICATION_RECEIVED;
80003ac0:	fe842703          	lw	a4,-24(s0)
80003ac4:	fc842783          	lw	a5,-56(s0)
80003ac8:	00f707b3          	add	a5,a4,a5
80003acc:	00200713          	addi	a4,zero,2
80003ad0:	04e78423          	sb	a4,72(a5)

            switch( eAction )
80003ad4:	fc042703          	lw	a4,-64(s0)
80003ad8:	00400793          	addi	a5,zero,4
80003adc:	0ee7e463          	bltu	a5,a4,80003bc4 <xTaskGenericNotify+0x18c>
80003ae0:	fc042783          	lw	a5,-64(s0)
80003ae4:	00279713          	slli	a4,a5,0x2
80003ae8:	800077b7          	lui	a5,0x80007
80003aec:	c4078793          	addi	a5,a5,-960 # 80006c40 <xHeapStructSize+0xc>
80003af0:	00f707b3          	add	a5,a4,a5
80003af4:	0007a783          	lw	a5,0(a5)
80003af8:	00078067          	jalr	zero,0(a5)
            {
                case eSetBits:
                    pxTCB->ulNotifiedValue[ uxIndexToNotify ] |= ulValue;
80003afc:	fe842703          	lw	a4,-24(s0)
80003b00:	fc842783          	lw	a5,-56(s0)
80003b04:	01078793          	addi	a5,a5,16
80003b08:	00279793          	slli	a5,a5,0x2
80003b0c:	00f707b3          	add	a5,a4,a5
80003b10:	0047a703          	lw	a4,4(a5)
80003b14:	fc442783          	lw	a5,-60(s0)
80003b18:	00f76733          	or	a4,a4,a5
80003b1c:	fe842683          	lw	a3,-24(s0)
80003b20:	fc842783          	lw	a5,-56(s0)
80003b24:	01078793          	addi	a5,a5,16
80003b28:	00279793          	slli	a5,a5,0x2
80003b2c:	00f687b3          	add	a5,a3,a5
80003b30:	00e7a223          	sw	a4,4(a5)
                    break;
80003b34:	09c0006f          	jal	zero,80003bd0 <xTaskGenericNotify+0x198>

                case eIncrement:
                    ( pxTCB->ulNotifiedValue[ uxIndexToNotify ] )++;
80003b38:	fe842703          	lw	a4,-24(s0)
80003b3c:	fc842783          	lw	a5,-56(s0)
80003b40:	01078793          	addi	a5,a5,16
80003b44:	00279793          	slli	a5,a5,0x2
80003b48:	00f707b3          	add	a5,a4,a5
80003b4c:	0047a783          	lw	a5,4(a5)
80003b50:	00178713          	addi	a4,a5,1
80003b54:	fe842683          	lw	a3,-24(s0)
80003b58:	fc842783          	lw	a5,-56(s0)
80003b5c:	01078793          	addi	a5,a5,16
80003b60:	00279793          	slli	a5,a5,0x2
80003b64:	00f687b3          	add	a5,a3,a5
80003b68:	00e7a223          	sw	a4,4(a5)
                    break;
80003b6c:	0640006f          	jal	zero,80003bd0 <xTaskGenericNotify+0x198>

                case eSetValueWithOverwrite:
                    pxTCB->ulNotifiedValue[ uxIndexToNotify ] = ulValue;
80003b70:	fe842703          	lw	a4,-24(s0)
80003b74:	fc842783          	lw	a5,-56(s0)
80003b78:	01078793          	addi	a5,a5,16
80003b7c:	00279793          	slli	a5,a5,0x2
80003b80:	00f707b3          	add	a5,a4,a5
80003b84:	fc442703          	lw	a4,-60(s0)
80003b88:	00e7a223          	sw	a4,4(a5)
                    break;
80003b8c:	0440006f          	jal	zero,80003bd0 <xTaskGenericNotify+0x198>

                case eSetValueWithoutOverwrite:

                    if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
80003b90:	fe744703          	lbu	a4,-25(s0)
80003b94:	00200793          	addi	a5,zero,2
80003b98:	02f70263          	beq	a4,a5,80003bbc <xTaskGenericNotify+0x184>
                    {
                        pxTCB->ulNotifiedValue[ uxIndexToNotify ] = ulValue;
80003b9c:	fe842703          	lw	a4,-24(s0)
80003ba0:	fc842783          	lw	a5,-56(s0)
80003ba4:	01078793          	addi	a5,a5,16
80003ba8:	00279793          	slli	a5,a5,0x2
80003bac:	00f707b3          	add	a5,a4,a5
80003bb0:	fc442703          	lw	a4,-60(s0)
80003bb4:	00e7a223          	sw	a4,4(a5)
                    {
                        /* The value could not be written to the task. */
                        xReturn = pdFAIL;
                    }

                    break;
80003bb8:	0180006f          	jal	zero,80003bd0 <xTaskGenericNotify+0x198>
                        xReturn = pdFAIL;
80003bbc:	fe042623          	sw	zero,-20(s0)
                    break;
80003bc0:	0100006f          	jal	zero,80003bd0 <xTaskGenericNotify+0x198>
                    /* Should not get here if all enums are handled.
                     * Artificially force an assert by testing a value the
                     * compiler can't assume is const. */
                    configASSERT( xTickCount == ( TickType_t ) 0 );

                    break;
80003bc4:	00000013          	addi	zero,zero,0
80003bc8:	0080006f          	jal	zero,80003bd0 <xTaskGenericNotify+0x198>
                    break;
80003bcc:	00000013          	addi	zero,zero,0

            traceTASK_NOTIFY( uxIndexToNotify );

            /* If the task is in the blocked state specifically to wait for a
             * notification then unblock it now. */
            if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
80003bd0:	fe744703          	lbu	a4,-25(s0)
80003bd4:	00100793          	addi	a5,zero,1
80003bd8:	18f71463          	bne	a4,a5,80003d60 <xTaskGenericNotify+0x328>
            {
                listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
80003bdc:	fe842783          	lw	a5,-24(s0)
80003be0:	0147a783          	lw	a5,20(a5)
80003be4:	fef42023          	sw	a5,-32(s0)
80003be8:	fe842783          	lw	a5,-24(s0)
80003bec:	0087a783          	lw	a5,8(a5)
80003bf0:	fe842703          	lw	a4,-24(s0)
80003bf4:	00c72703          	lw	a4,12(a4)
80003bf8:	00e7a423          	sw	a4,8(a5)
80003bfc:	fe842783          	lw	a5,-24(s0)
80003c00:	00c7a783          	lw	a5,12(a5)
80003c04:	fe842703          	lw	a4,-24(s0)
80003c08:	00872703          	lw	a4,8(a4)
80003c0c:	00e7a223          	sw	a4,4(a5)
80003c10:	fe042783          	lw	a5,-32(s0)
80003c14:	0047a703          	lw	a4,4(a5)
80003c18:	fe842783          	lw	a5,-24(s0)
80003c1c:	00478793          	addi	a5,a5,4
80003c20:	00f71a63          	bne	a4,a5,80003c34 <xTaskGenericNotify+0x1fc>
80003c24:	fe842783          	lw	a5,-24(s0)
80003c28:	00c7a703          	lw	a4,12(a5)
80003c2c:	fe042783          	lw	a5,-32(s0)
80003c30:	00e7a223          	sw	a4,4(a5)
80003c34:	fe842783          	lw	a5,-24(s0)
80003c38:	0007aa23          	sw	zero,20(a5)
80003c3c:	fe042783          	lw	a5,-32(s0)
80003c40:	0007a783          	lw	a5,0(a5)
80003c44:	fff78713          	addi	a4,a5,-1
80003c48:	fe042783          	lw	a5,-32(s0)
80003c4c:	00e7a023          	sw	a4,0(a5)
                prvAddTaskToReadyList( pxTCB );
80003c50:	fe842783          	lw	a5,-24(s0)
80003c54:	02c7a783          	lw	a5,44(a5)
80003c58:	00100713          	addi	a4,zero,1
80003c5c:	00f71733          	sll	a4,a4,a5
80003c60:	800087b7          	lui	a5,0x80008
80003c64:	ce07a783          	lw	a5,-800(a5) # 80007ce0 <uxTopReadyPriority>
80003c68:	00f76733          	or	a4,a4,a5
80003c6c:	800087b7          	lui	a5,0x80008
80003c70:	cee7a023          	sw	a4,-800(a5) # 80007ce0 <uxTopReadyPriority>
80003c74:	fe842783          	lw	a5,-24(s0)
80003c78:	02c7a703          	lw	a4,44(a5)
80003c7c:	800087b7          	lui	a5,0x80008
80003c80:	c8078693          	addi	a3,a5,-896 # 80007c80 <pxReadyTasksLists>
80003c84:	00070793          	addi	a5,a4,0
80003c88:	00279793          	slli	a5,a5,0x2
80003c8c:	00e787b3          	add	a5,a5,a4
80003c90:	00279793          	slli	a5,a5,0x2
80003c94:	00f687b3          	add	a5,a3,a5
80003c98:	0047a783          	lw	a5,4(a5)
80003c9c:	fcf42e23          	sw	a5,-36(s0)
80003ca0:	fe842783          	lw	a5,-24(s0)
80003ca4:	fdc42703          	lw	a4,-36(s0)
80003ca8:	00e7a423          	sw	a4,8(a5)
80003cac:	fdc42783          	lw	a5,-36(s0)
80003cb0:	0087a703          	lw	a4,8(a5)
80003cb4:	fe842783          	lw	a5,-24(s0)
80003cb8:	00e7a623          	sw	a4,12(a5)
80003cbc:	fdc42783          	lw	a5,-36(s0)
80003cc0:	0087a783          	lw	a5,8(a5)
80003cc4:	fe842703          	lw	a4,-24(s0)
80003cc8:	00470713          	addi	a4,a4,4
80003ccc:	00e7a223          	sw	a4,4(a5)
80003cd0:	fe842783          	lw	a5,-24(s0)
80003cd4:	00478713          	addi	a4,a5,4
80003cd8:	fdc42783          	lw	a5,-36(s0)
80003cdc:	00e7a423          	sw	a4,8(a5)
80003ce0:	fe842783          	lw	a5,-24(s0)
80003ce4:	02c7a703          	lw	a4,44(a5)
80003ce8:	00070793          	addi	a5,a4,0
80003cec:	00279793          	slli	a5,a5,0x2
80003cf0:	00e787b3          	add	a5,a5,a4
80003cf4:	00279793          	slli	a5,a5,0x2
80003cf8:	80008737          	lui	a4,0x80008
80003cfc:	c8070713          	addi	a4,a4,-896 # 80007c80 <pxReadyTasksLists>
80003d00:	00e78733          	add	a4,a5,a4
80003d04:	fe842783          	lw	a5,-24(s0)
80003d08:	00e7aa23          	sw	a4,20(a5)
80003d0c:	fe842783          	lw	a5,-24(s0)
80003d10:	02c7a703          	lw	a4,44(a5)
80003d14:	800087b7          	lui	a5,0x80008
80003d18:	c8078693          	addi	a3,a5,-896 # 80007c80 <pxReadyTasksLists>
80003d1c:	00070793          	addi	a5,a4,0
80003d20:	00279793          	slli	a5,a5,0x2
80003d24:	00e787b3          	add	a5,a5,a4
80003d28:	00279793          	slli	a5,a5,0x2
80003d2c:	00f687b3          	add	a5,a3,a5
80003d30:	0007a783          	lw	a5,0(a5)
80003d34:	fe842703          	lw	a4,-24(s0)
80003d38:	02c72703          	lw	a4,44(a4)
80003d3c:	00178693          	addi	a3,a5,1
80003d40:	800087b7          	lui	a5,0x80008
80003d44:	c8078613          	addi	a2,a5,-896 # 80007c80 <pxReadyTasksLists>
80003d48:	00070793          	addi	a5,a4,0
80003d4c:	00279793          	slli	a5,a5,0x2
80003d50:	00e787b3          	add	a5,a5,a4
80003d54:	00279793          	slli	a5,a5,0x2
80003d58:	00f607b3          	add	a5,a2,a5
80003d5c:	00d7a023          	sw	a3,0(a5)
            else
            {
                mtCOVERAGE_TEST_MARKER();
            }
        }
        taskEXIT_CRITICAL();
80003d60:	800077b7          	lui	a5,0x80007
80003d64:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
80003d68:	fff78713          	addi	a4,a5,-1
80003d6c:	800077b7          	lui	a5,0x80007
80003d70:	c6e7a623          	sw	a4,-916(a5) # 80006c6c <xCriticalNesting>
80003d74:	800077b7          	lui	a5,0x80007
80003d78:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
80003d7c:	00079463          	bne	a5,zero,80003d84 <xTaskGenericNotify+0x34c>
80003d80:	30046073          	csrrsi	zero,mstatus,8

        traceRETURN_xTaskGenericNotify( xReturn );

        return xReturn;
80003d84:	fec42783          	lw	a5,-20(s0)
    }
80003d88:	00078513          	addi	a0,a5,0
80003d8c:	04c12083          	lw	ra,76(sp)
80003d90:	04812403          	lw	s0,72(sp)
80003d94:	05010113          	addi	sp,sp,80
80003d98:	00008067          	jalr	zero,0(ra)

80003d9c <xTaskGenericNotifyFromISR>:
                                          UBaseType_t uxIndexToNotify,
                                          uint32_t ulValue,
                                          eNotifyAction eAction,
                                          uint32_t * pulPreviousNotificationValue,
                                          BaseType_t * pxHigherPriorityTaskWoken )
    {
80003d9c:	fb010113          	addi	sp,sp,-80
80003da0:	04112623          	sw	ra,76(sp)
80003da4:	04812423          	sw	s0,72(sp)
80003da8:	05010413          	addi	s0,sp,80
80003dac:	fca42623          	sw	a0,-52(s0)
80003db0:	fcb42423          	sw	a1,-56(s0)
80003db4:	fcc42223          	sw	a2,-60(s0)
80003db8:	fcd42023          	sw	a3,-64(s0)
80003dbc:	fae42e23          	sw	a4,-68(s0)
80003dc0:	faf42c23          	sw	a5,-72(s0)
        TCB_t * pxTCB;
        uint8_t ucOriginalNotifyState;
        BaseType_t xReturn = pdPASS;
80003dc4:	00100793          	addi	a5,zero,1
80003dc8:	fef42623          	sw	a5,-20(s0)
         * simple as possible.  More information (albeit Cortex-M specific) is
         * provided on the following link:
         * https://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html */
        portASSERT_IF_INTERRUPT_PRIORITY_INVALID();

        pxTCB = xTaskToNotify;
80003dcc:	fcc42783          	lw	a5,-52(s0)
80003dd0:	fef42423          	sw	a5,-24(s0)

        /* MISRA Ref 4.7.1 [Return value shall be checked] */
        /* More details at: https://github.com/FreeRTOS/FreeRTOS-Kernel/blob/main/MISRA.md#dir-47 */
        /* coverity[misra_c_2012_directive_4_7_violation] */
        uxSavedInterruptStatus = ( UBaseType_t ) taskENTER_CRITICAL_FROM_ISR();
80003dd4:	fe042223          	sw	zero,-28(s0)
        {
            if( pulPreviousNotificationValue != NULL )
80003dd8:	fbc42783          	lw	a5,-68(s0)
80003ddc:	02078263          	beq	a5,zero,80003e00 <xTaskGenericNotifyFromISR+0x64>
            {
                *pulPreviousNotificationValue = pxTCB->ulNotifiedValue[ uxIndexToNotify ];
80003de0:	fe842703          	lw	a4,-24(s0)
80003de4:	fc842783          	lw	a5,-56(s0)
80003de8:	01078793          	addi	a5,a5,16
80003dec:	00279793          	slli	a5,a5,0x2
80003df0:	00f707b3          	add	a5,a4,a5
80003df4:	0047a703          	lw	a4,4(a5)
80003df8:	fbc42783          	lw	a5,-68(s0)
80003dfc:	00e7a023          	sw	a4,0(a5)
            }

            ucOriginalNotifyState = pxTCB->ucNotifyState[ uxIndexToNotify ];
80003e00:	fe842703          	lw	a4,-24(s0)
80003e04:	fc842783          	lw	a5,-56(s0)
80003e08:	00f707b3          	add	a5,a4,a5
80003e0c:	0487c783          	lbu	a5,72(a5)
80003e10:	fef401a3          	sb	a5,-29(s0)
            pxTCB->ucNotifyState[ uxIndexToNotify ] = taskNOTIFICATION_RECEIVED;
80003e14:	fe842703          	lw	a4,-24(s0)
80003e18:	fc842783          	lw	a5,-56(s0)
80003e1c:	00f707b3          	add	a5,a4,a5
80003e20:	00200713          	addi	a4,zero,2
80003e24:	04e78423          	sb	a4,72(a5)

            switch( eAction )
80003e28:	fc042703          	lw	a4,-64(s0)
80003e2c:	00400793          	addi	a5,zero,4
80003e30:	0ee7e463          	bltu	a5,a4,80003f18 <xTaskGenericNotifyFromISR+0x17c>
80003e34:	fc042783          	lw	a5,-64(s0)
80003e38:	00279713          	slli	a4,a5,0x2
80003e3c:	800077b7          	lui	a5,0x80007
80003e40:	c5478793          	addi	a5,a5,-940 # 80006c54 <xHeapStructSize+0x20>
80003e44:	00f707b3          	add	a5,a4,a5
80003e48:	0007a783          	lw	a5,0(a5)
80003e4c:	00078067          	jalr	zero,0(a5)
            {
                case eSetBits:
                    pxTCB->ulNotifiedValue[ uxIndexToNotify ] |= ulValue;
80003e50:	fe842703          	lw	a4,-24(s0)
80003e54:	fc842783          	lw	a5,-56(s0)
80003e58:	01078793          	addi	a5,a5,16
80003e5c:	00279793          	slli	a5,a5,0x2
80003e60:	00f707b3          	add	a5,a4,a5
80003e64:	0047a703          	lw	a4,4(a5)
80003e68:	fc442783          	lw	a5,-60(s0)
80003e6c:	00f76733          	or	a4,a4,a5
80003e70:	fe842683          	lw	a3,-24(s0)
80003e74:	fc842783          	lw	a5,-56(s0)
80003e78:	01078793          	addi	a5,a5,16
80003e7c:	00279793          	slli	a5,a5,0x2
80003e80:	00f687b3          	add	a5,a3,a5
80003e84:	00e7a223          	sw	a4,4(a5)
                    break;
80003e88:	09c0006f          	jal	zero,80003f24 <xTaskGenericNotifyFromISR+0x188>

                case eIncrement:
                    ( pxTCB->ulNotifiedValue[ uxIndexToNotify ] )++;
80003e8c:	fe842703          	lw	a4,-24(s0)
80003e90:	fc842783          	lw	a5,-56(s0)
80003e94:	01078793          	addi	a5,a5,16
80003e98:	00279793          	slli	a5,a5,0x2
80003e9c:	00f707b3          	add	a5,a4,a5
80003ea0:	0047a783          	lw	a5,4(a5)
80003ea4:	00178713          	addi	a4,a5,1
80003ea8:	fe842683          	lw	a3,-24(s0)
80003eac:	fc842783          	lw	a5,-56(s0)
80003eb0:	01078793          	addi	a5,a5,16
80003eb4:	00279793          	slli	a5,a5,0x2
80003eb8:	00f687b3          	add	a5,a3,a5
80003ebc:	00e7a223          	sw	a4,4(a5)
                    break;
80003ec0:	0640006f          	jal	zero,80003f24 <xTaskGenericNotifyFromISR+0x188>

                case eSetValueWithOverwrite:
                    pxTCB->ulNotifiedValue[ uxIndexToNotify ] = ulValue;
80003ec4:	fe842703          	lw	a4,-24(s0)
80003ec8:	fc842783          	lw	a5,-56(s0)
80003ecc:	01078793          	addi	a5,a5,16
80003ed0:	00279793          	slli	a5,a5,0x2
80003ed4:	00f707b3          	add	a5,a4,a5
80003ed8:	fc442703          	lw	a4,-60(s0)
80003edc:	00e7a223          	sw	a4,4(a5)
                    break;
80003ee0:	0440006f          	jal	zero,80003f24 <xTaskGenericNotifyFromISR+0x188>

                case eSetValueWithoutOverwrite:

                    if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
80003ee4:	fe344703          	lbu	a4,-29(s0)
80003ee8:	00200793          	addi	a5,zero,2
80003eec:	02f70263          	beq	a4,a5,80003f10 <xTaskGenericNotifyFromISR+0x174>
                    {
                        pxTCB->ulNotifiedValue[ uxIndexToNotify ] = ulValue;
80003ef0:	fe842703          	lw	a4,-24(s0)
80003ef4:	fc842783          	lw	a5,-56(s0)
80003ef8:	01078793          	addi	a5,a5,16
80003efc:	00279793          	slli	a5,a5,0x2
80003f00:	00f707b3          	add	a5,a4,a5
80003f04:	fc442703          	lw	a4,-60(s0)
80003f08:	00e7a223          	sw	a4,4(a5)
                    {
                        /* The value could not be written to the task. */
                        xReturn = pdFAIL;
                    }

                    break;
80003f0c:	0180006f          	jal	zero,80003f24 <xTaskGenericNotifyFromISR+0x188>
                        xReturn = pdFAIL;
80003f10:	fe042623          	sw	zero,-20(s0)
                    break;
80003f14:	0100006f          	jal	zero,80003f24 <xTaskGenericNotifyFromISR+0x188>

                    /* Should not get here if all enums are handled.
                     * Artificially force an assert by testing a value the
                     * compiler can't assume is const. */
                    configASSERT( xTickCount == ( TickType_t ) 0 );
                    break;
80003f18:	00000013          	addi	zero,zero,0
80003f1c:	0080006f          	jal	zero,80003f24 <xTaskGenericNotifyFromISR+0x188>
                    break;
80003f20:	00000013          	addi	zero,zero,0

            traceTASK_NOTIFY_FROM_ISR( uxIndexToNotify );

            /* If the task is in the blocked state specifically to wait for a
             * notification then unblock it now. */
            if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
80003f24:	fe344703          	lbu	a4,-29(s0)
80003f28:	00100793          	addi	a5,zero,1
80003f2c:	24f71663          	bne	a4,a5,80004178 <xTaskGenericNotifyFromISR+0x3dc>
            {
                /* The task should not have been on an event list. */
                configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );

                if( uxSchedulerSuspended == ( UBaseType_t ) 0U )
80003f30:	800087b7          	lui	a5,0x80008
80003f34:	d007a783          	lw	a5,-768(a5) # 80007d00 <uxSchedulerSuspended>
80003f38:	18079663          	bne	a5,zero,800040c4 <xTaskGenericNotifyFromISR+0x328>
                {
                    listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
80003f3c:	fe842783          	lw	a5,-24(s0)
80003f40:	0147a783          	lw	a5,20(a5)
80003f44:	fcf42c23          	sw	a5,-40(s0)
80003f48:	fe842783          	lw	a5,-24(s0)
80003f4c:	0087a783          	lw	a5,8(a5)
80003f50:	fe842703          	lw	a4,-24(s0)
80003f54:	00c72703          	lw	a4,12(a4)
80003f58:	00e7a423          	sw	a4,8(a5)
80003f5c:	fe842783          	lw	a5,-24(s0)
80003f60:	00c7a783          	lw	a5,12(a5)
80003f64:	fe842703          	lw	a4,-24(s0)
80003f68:	00872703          	lw	a4,8(a4)
80003f6c:	00e7a223          	sw	a4,4(a5)
80003f70:	fd842783          	lw	a5,-40(s0)
80003f74:	0047a703          	lw	a4,4(a5)
80003f78:	fe842783          	lw	a5,-24(s0)
80003f7c:	00478793          	addi	a5,a5,4
80003f80:	00f71a63          	bne	a4,a5,80003f94 <xTaskGenericNotifyFromISR+0x1f8>
80003f84:	fe842783          	lw	a5,-24(s0)
80003f88:	00c7a703          	lw	a4,12(a5)
80003f8c:	fd842783          	lw	a5,-40(s0)
80003f90:	00e7a223          	sw	a4,4(a5)
80003f94:	fe842783          	lw	a5,-24(s0)
80003f98:	0007aa23          	sw	zero,20(a5)
80003f9c:	fd842783          	lw	a5,-40(s0)
80003fa0:	0007a783          	lw	a5,0(a5)
80003fa4:	fff78713          	addi	a4,a5,-1
80003fa8:	fd842783          	lw	a5,-40(s0)
80003fac:	00e7a023          	sw	a4,0(a5)
                    prvAddTaskToReadyList( pxTCB );
80003fb0:	fe842783          	lw	a5,-24(s0)
80003fb4:	02c7a783          	lw	a5,44(a5)
80003fb8:	00100713          	addi	a4,zero,1
80003fbc:	00f71733          	sll	a4,a4,a5
80003fc0:	800087b7          	lui	a5,0x80008
80003fc4:	ce07a783          	lw	a5,-800(a5) # 80007ce0 <uxTopReadyPriority>
80003fc8:	00f76733          	or	a4,a4,a5
80003fcc:	800087b7          	lui	a5,0x80008
80003fd0:	cee7a023          	sw	a4,-800(a5) # 80007ce0 <uxTopReadyPriority>
80003fd4:	fe842783          	lw	a5,-24(s0)
80003fd8:	02c7a703          	lw	a4,44(a5)
80003fdc:	800087b7          	lui	a5,0x80008
80003fe0:	c8078693          	addi	a3,a5,-896 # 80007c80 <pxReadyTasksLists>
80003fe4:	00070793          	addi	a5,a4,0
80003fe8:	00279793          	slli	a5,a5,0x2
80003fec:	00e787b3          	add	a5,a5,a4
80003ff0:	00279793          	slli	a5,a5,0x2
80003ff4:	00f687b3          	add	a5,a3,a5
80003ff8:	0047a783          	lw	a5,4(a5)
80003ffc:	fcf42a23          	sw	a5,-44(s0)
80004000:	fe842783          	lw	a5,-24(s0)
80004004:	fd442703          	lw	a4,-44(s0)
80004008:	00e7a423          	sw	a4,8(a5)
8000400c:	fd442783          	lw	a5,-44(s0)
80004010:	0087a703          	lw	a4,8(a5)
80004014:	fe842783          	lw	a5,-24(s0)
80004018:	00e7a623          	sw	a4,12(a5)
8000401c:	fd442783          	lw	a5,-44(s0)
80004020:	0087a783          	lw	a5,8(a5)
80004024:	fe842703          	lw	a4,-24(s0)
80004028:	00470713          	addi	a4,a4,4
8000402c:	00e7a223          	sw	a4,4(a5)
80004030:	fe842783          	lw	a5,-24(s0)
80004034:	00478713          	addi	a4,a5,4
80004038:	fd442783          	lw	a5,-44(s0)
8000403c:	00e7a423          	sw	a4,8(a5)
80004040:	fe842783          	lw	a5,-24(s0)
80004044:	02c7a703          	lw	a4,44(a5)
80004048:	00070793          	addi	a5,a4,0
8000404c:	00279793          	slli	a5,a5,0x2
80004050:	00e787b3          	add	a5,a5,a4
80004054:	00279793          	slli	a5,a5,0x2
80004058:	80008737          	lui	a4,0x80008
8000405c:	c8070713          	addi	a4,a4,-896 # 80007c80 <pxReadyTasksLists>
80004060:	00e78733          	add	a4,a5,a4
80004064:	fe842783          	lw	a5,-24(s0)
80004068:	00e7aa23          	sw	a4,20(a5)
8000406c:	fe842783          	lw	a5,-24(s0)
80004070:	02c7a703          	lw	a4,44(a5)
80004074:	800087b7          	lui	a5,0x80008
80004078:	c8078693          	addi	a3,a5,-896 # 80007c80 <pxReadyTasksLists>
8000407c:	00070793          	addi	a5,a4,0
80004080:	00279793          	slli	a5,a5,0x2
80004084:	00e787b3          	add	a5,a5,a4
80004088:	00279793          	slli	a5,a5,0x2
8000408c:	00f687b3          	add	a5,a3,a5
80004090:	0007a783          	lw	a5,0(a5)
80004094:	fe842703          	lw	a4,-24(s0)
80004098:	02c72703          	lw	a4,44(a4)
8000409c:	00178693          	addi	a3,a5,1
800040a0:	800087b7          	lui	a5,0x80008
800040a4:	c8078613          	addi	a2,a5,-896 # 80007c80 <pxReadyTasksLists>
800040a8:	00070793          	addi	a5,a4,0
800040ac:	00279793          	slli	a5,a5,0x2
800040b0:	00e787b3          	add	a5,a5,a4
800040b4:	00279793          	slli	a5,a5,0x2
800040b8:	00f607b3          	add	a5,a2,a5
800040bc:	00d7a023          	sw	a3,0(a5)
800040c0:	0800006f          	jal	zero,80004140 <xTaskGenericNotifyFromISR+0x3a4>
                }
                else
                {
                    /* The delayed and ready lists cannot be accessed, so hold
                     * this task pending until the scheduler is resumed. */
                    listINSERT_END( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
800040c4:	800087b7          	lui	a5,0x80008
800040c8:	cc478793          	addi	a5,a5,-828 # 80007cc4 <xPendingReadyList>
800040cc:	0047a783          	lw	a5,4(a5)
800040d0:	fcf42e23          	sw	a5,-36(s0)
800040d4:	fe842783          	lw	a5,-24(s0)
800040d8:	fdc42703          	lw	a4,-36(s0)
800040dc:	00e7ae23          	sw	a4,28(a5)
800040e0:	fdc42783          	lw	a5,-36(s0)
800040e4:	0087a703          	lw	a4,8(a5)
800040e8:	fe842783          	lw	a5,-24(s0)
800040ec:	02e7a023          	sw	a4,32(a5)
800040f0:	fdc42783          	lw	a5,-36(s0)
800040f4:	0087a783          	lw	a5,8(a5)
800040f8:	fe842703          	lw	a4,-24(s0)
800040fc:	01870713          	addi	a4,a4,24
80004100:	00e7a223          	sw	a4,4(a5)
80004104:	fe842783          	lw	a5,-24(s0)
80004108:	01878713          	addi	a4,a5,24
8000410c:	fdc42783          	lw	a5,-36(s0)
80004110:	00e7a423          	sw	a4,8(a5)
80004114:	fe842783          	lw	a5,-24(s0)
80004118:	80008737          	lui	a4,0x80008
8000411c:	cc470713          	addi	a4,a4,-828 # 80007cc4 <xPendingReadyList>
80004120:	02e7a423          	sw	a4,40(a5)
80004124:	800087b7          	lui	a5,0x80008
80004128:	cc478793          	addi	a5,a5,-828 # 80007cc4 <xPendingReadyList>
8000412c:	0007a783          	lw	a5,0(a5)
80004130:	00178713          	addi	a4,a5,1
80004134:	800087b7          	lui	a5,0x80008
80004138:	cc478793          	addi	a5,a5,-828 # 80007cc4 <xPendingReadyList>
8000413c:	00e7a023          	sw	a4,0(a5)
                }

                #if ( configNUMBER_OF_CORES == 1 )
                {
                    if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
80004140:	fe842783          	lw	a5,-24(s0)
80004144:	02c7a703          	lw	a4,44(a5)
80004148:	800097b7          	lui	a5,0x80009
8000414c:	9047a783          	lw	a5,-1788(a5) # 80008904 <pxCurrentTCB>
80004150:	02c7a783          	lw	a5,44(a5)
80004154:	02e7f263          	bgeu	a5,a4,80004178 <xTaskGenericNotifyFromISR+0x3dc>
                    {
                        /* The notified task has a priority above the currently
                         * executing task so a yield is required. */
                        if( pxHigherPriorityTaskWoken != NULL )
80004158:	fb842783          	lw	a5,-72(s0)
8000415c:	00078863          	beq	a5,zero,8000416c <xTaskGenericNotifyFromISR+0x3d0>
                        {
                            *pxHigherPriorityTaskWoken = pdTRUE;
80004160:	fb842783          	lw	a5,-72(s0)
80004164:	00100713          	addi	a4,zero,1
80004168:	00e7a023          	sw	a4,0(a5)
                        }

                        /* Mark that a yield is pending in case the user is not
                         * using the "xHigherPriorityTaskWoken" parameter to an ISR
                         * safe FreeRTOS function. */
                        xYieldPendings[ 0 ] = pdTRUE;
8000416c:	800087b7          	lui	a5,0x80008
80004170:	00100713          	addi	a4,zero,1
80004174:	cee7a623          	sw	a4,-788(a5) # 80007cec <xYieldPendings>
        }
        taskEXIT_CRITICAL_FROM_ISR( uxSavedInterruptStatus );

        traceRETURN_xTaskGenericNotifyFromISR( xReturn );

        return xReturn;
80004178:	fec42783          	lw	a5,-20(s0)
    }
8000417c:	00078513          	addi	a0,a5,0
80004180:	04c12083          	lw	ra,76(sp)
80004184:	04812403          	lw	s0,72(sp)
80004188:	05010113          	addi	sp,sp,80
8000418c:	00008067          	jalr	zero,0(ra)

80004190 <vTaskGenericNotifyGiveFromISR>:
#if ( configUSE_TASK_NOTIFICATIONS == 1 )

    void vTaskGenericNotifyGiveFromISR( TaskHandle_t xTaskToNotify,
                                        UBaseType_t uxIndexToNotify,
                                        BaseType_t * pxHigherPriorityTaskWoken )
    {
80004190:	fc010113          	addi	sp,sp,-64
80004194:	02112e23          	sw	ra,60(sp)
80004198:	02812c23          	sw	s0,56(sp)
8000419c:	04010413          	addi	s0,sp,64
800041a0:	fca42623          	sw	a0,-52(s0)
800041a4:	fcb42423          	sw	a1,-56(s0)
800041a8:	fcc42223          	sw	a2,-60(s0)
         * simple as possible.  More information (albeit Cortex-M specific) is
         * provided on the following link:
         * https://www.FreeRTOS.org/RTOS-Cortex-M3-M4.html */
        portASSERT_IF_INTERRUPT_PRIORITY_INVALID();

        pxTCB = xTaskToNotify;
800041ac:	fcc42783          	lw	a5,-52(s0)
800041b0:	fef42623          	sw	a5,-20(s0)

        /* MISRA Ref 4.7.1 [Return value shall be checked] */
        /* More details at: https://github.com/FreeRTOS/FreeRTOS-Kernel/blob/main/MISRA.md#dir-47 */
        /* coverity[misra_c_2012_directive_4_7_violation] */
        uxSavedInterruptStatus = ( UBaseType_t ) taskENTER_CRITICAL_FROM_ISR();
800041b4:	fe042423          	sw	zero,-24(s0)
        {
            ucOriginalNotifyState = pxTCB->ucNotifyState[ uxIndexToNotify ];
800041b8:	fec42703          	lw	a4,-20(s0)
800041bc:	fc842783          	lw	a5,-56(s0)
800041c0:	00f707b3          	add	a5,a4,a5
800041c4:	0487c783          	lbu	a5,72(a5)
800041c8:	fef403a3          	sb	a5,-25(s0)
            pxTCB->ucNotifyState[ uxIndexToNotify ] = taskNOTIFICATION_RECEIVED;
800041cc:	fec42703          	lw	a4,-20(s0)
800041d0:	fc842783          	lw	a5,-56(s0)
800041d4:	00f707b3          	add	a5,a4,a5
800041d8:	00200713          	addi	a4,zero,2
800041dc:	04e78423          	sb	a4,72(a5)

            /* 'Giving' is equivalent to incrementing a count in a counting
             * semaphore. */
            ( pxTCB->ulNotifiedValue[ uxIndexToNotify ] )++;
800041e0:	fec42703          	lw	a4,-20(s0)
800041e4:	fc842783          	lw	a5,-56(s0)
800041e8:	01078793          	addi	a5,a5,16
800041ec:	00279793          	slli	a5,a5,0x2
800041f0:	00f707b3          	add	a5,a4,a5
800041f4:	0047a783          	lw	a5,4(a5)
800041f8:	00178713          	addi	a4,a5,1
800041fc:	fec42683          	lw	a3,-20(s0)
80004200:	fc842783          	lw	a5,-56(s0)
80004204:	01078793          	addi	a5,a5,16
80004208:	00279793          	slli	a5,a5,0x2
8000420c:	00f687b3          	add	a5,a3,a5
80004210:	00e7a223          	sw	a4,4(a5)

            traceTASK_NOTIFY_GIVE_FROM_ISR( uxIndexToNotify );

            /* If the task is in the blocked state specifically to wait for a
             * notification then unblock it now. */
            if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
80004214:	fe744703          	lbu	a4,-25(s0)
80004218:	00100793          	addi	a5,zero,1
8000421c:	24f71663          	bne	a4,a5,80004468 <vTaskGenericNotifyGiveFromISR+0x2d8>
            {
                /* The task should not have been on an event list. */
                configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );

                if( uxSchedulerSuspended == ( UBaseType_t ) 0U )
80004220:	800087b7          	lui	a5,0x80008
80004224:	d007a783          	lw	a5,-768(a5) # 80007d00 <uxSchedulerSuspended>
80004228:	18079663          	bne	a5,zero,800043b4 <vTaskGenericNotifyGiveFromISR+0x224>
                {
                    listREMOVE_ITEM( &( pxTCB->xStateListItem ) );
8000422c:	fec42783          	lw	a5,-20(s0)
80004230:	0147a783          	lw	a5,20(a5)
80004234:	fcf42e23          	sw	a5,-36(s0)
80004238:	fec42783          	lw	a5,-20(s0)
8000423c:	0087a783          	lw	a5,8(a5)
80004240:	fec42703          	lw	a4,-20(s0)
80004244:	00c72703          	lw	a4,12(a4)
80004248:	00e7a423          	sw	a4,8(a5)
8000424c:	fec42783          	lw	a5,-20(s0)
80004250:	00c7a783          	lw	a5,12(a5)
80004254:	fec42703          	lw	a4,-20(s0)
80004258:	00872703          	lw	a4,8(a4)
8000425c:	00e7a223          	sw	a4,4(a5)
80004260:	fdc42783          	lw	a5,-36(s0)
80004264:	0047a703          	lw	a4,4(a5)
80004268:	fec42783          	lw	a5,-20(s0)
8000426c:	00478793          	addi	a5,a5,4
80004270:	00f71a63          	bne	a4,a5,80004284 <vTaskGenericNotifyGiveFromISR+0xf4>
80004274:	fec42783          	lw	a5,-20(s0)
80004278:	00c7a703          	lw	a4,12(a5)
8000427c:	fdc42783          	lw	a5,-36(s0)
80004280:	00e7a223          	sw	a4,4(a5)
80004284:	fec42783          	lw	a5,-20(s0)
80004288:	0007aa23          	sw	zero,20(a5)
8000428c:	fdc42783          	lw	a5,-36(s0)
80004290:	0007a783          	lw	a5,0(a5)
80004294:	fff78713          	addi	a4,a5,-1
80004298:	fdc42783          	lw	a5,-36(s0)
8000429c:	00e7a023          	sw	a4,0(a5)
                    prvAddTaskToReadyList( pxTCB );
800042a0:	fec42783          	lw	a5,-20(s0)
800042a4:	02c7a783          	lw	a5,44(a5)
800042a8:	00100713          	addi	a4,zero,1
800042ac:	00f71733          	sll	a4,a4,a5
800042b0:	800087b7          	lui	a5,0x80008
800042b4:	ce07a783          	lw	a5,-800(a5) # 80007ce0 <uxTopReadyPriority>
800042b8:	00f76733          	or	a4,a4,a5
800042bc:	800087b7          	lui	a5,0x80008
800042c0:	cee7a023          	sw	a4,-800(a5) # 80007ce0 <uxTopReadyPriority>
800042c4:	fec42783          	lw	a5,-20(s0)
800042c8:	02c7a703          	lw	a4,44(a5)
800042cc:	800087b7          	lui	a5,0x80008
800042d0:	c8078693          	addi	a3,a5,-896 # 80007c80 <pxReadyTasksLists>
800042d4:	00070793          	addi	a5,a4,0
800042d8:	00279793          	slli	a5,a5,0x2
800042dc:	00e787b3          	add	a5,a5,a4
800042e0:	00279793          	slli	a5,a5,0x2
800042e4:	00f687b3          	add	a5,a3,a5
800042e8:	0047a783          	lw	a5,4(a5)
800042ec:	fcf42c23          	sw	a5,-40(s0)
800042f0:	fec42783          	lw	a5,-20(s0)
800042f4:	fd842703          	lw	a4,-40(s0)
800042f8:	00e7a423          	sw	a4,8(a5)
800042fc:	fd842783          	lw	a5,-40(s0)
80004300:	0087a703          	lw	a4,8(a5)
80004304:	fec42783          	lw	a5,-20(s0)
80004308:	00e7a623          	sw	a4,12(a5)
8000430c:	fd842783          	lw	a5,-40(s0)
80004310:	0087a783          	lw	a5,8(a5)
80004314:	fec42703          	lw	a4,-20(s0)
80004318:	00470713          	addi	a4,a4,4
8000431c:	00e7a223          	sw	a4,4(a5)
80004320:	fec42783          	lw	a5,-20(s0)
80004324:	00478713          	addi	a4,a5,4
80004328:	fd842783          	lw	a5,-40(s0)
8000432c:	00e7a423          	sw	a4,8(a5)
80004330:	fec42783          	lw	a5,-20(s0)
80004334:	02c7a703          	lw	a4,44(a5)
80004338:	00070793          	addi	a5,a4,0
8000433c:	00279793          	slli	a5,a5,0x2
80004340:	00e787b3          	add	a5,a5,a4
80004344:	00279793          	slli	a5,a5,0x2
80004348:	80008737          	lui	a4,0x80008
8000434c:	c8070713          	addi	a4,a4,-896 # 80007c80 <pxReadyTasksLists>
80004350:	00e78733          	add	a4,a5,a4
80004354:	fec42783          	lw	a5,-20(s0)
80004358:	00e7aa23          	sw	a4,20(a5)
8000435c:	fec42783          	lw	a5,-20(s0)
80004360:	02c7a703          	lw	a4,44(a5)
80004364:	800087b7          	lui	a5,0x80008
80004368:	c8078693          	addi	a3,a5,-896 # 80007c80 <pxReadyTasksLists>
8000436c:	00070793          	addi	a5,a4,0
80004370:	00279793          	slli	a5,a5,0x2
80004374:	00e787b3          	add	a5,a5,a4
80004378:	00279793          	slli	a5,a5,0x2
8000437c:	00f687b3          	add	a5,a3,a5
80004380:	0007a783          	lw	a5,0(a5)
80004384:	fec42703          	lw	a4,-20(s0)
80004388:	02c72703          	lw	a4,44(a4)
8000438c:	00178693          	addi	a3,a5,1
80004390:	800087b7          	lui	a5,0x80008
80004394:	c8078613          	addi	a2,a5,-896 # 80007c80 <pxReadyTasksLists>
80004398:	00070793          	addi	a5,a4,0
8000439c:	00279793          	slli	a5,a5,0x2
800043a0:	00e787b3          	add	a5,a5,a4
800043a4:	00279793          	slli	a5,a5,0x2
800043a8:	00f607b3          	add	a5,a2,a5
800043ac:	00d7a023          	sw	a3,0(a5)
800043b0:	0800006f          	jal	zero,80004430 <vTaskGenericNotifyGiveFromISR+0x2a0>
                }
                else
                {
                    /* The delayed and ready lists cannot be accessed, so hold
                     * this task pending until the scheduler is resumed. */
                    listINSERT_END( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
800043b4:	800087b7          	lui	a5,0x80008
800043b8:	cc478793          	addi	a5,a5,-828 # 80007cc4 <xPendingReadyList>
800043bc:	0047a783          	lw	a5,4(a5)
800043c0:	fef42023          	sw	a5,-32(s0)
800043c4:	fec42783          	lw	a5,-20(s0)
800043c8:	fe042703          	lw	a4,-32(s0)
800043cc:	00e7ae23          	sw	a4,28(a5)
800043d0:	fe042783          	lw	a5,-32(s0)
800043d4:	0087a703          	lw	a4,8(a5)
800043d8:	fec42783          	lw	a5,-20(s0)
800043dc:	02e7a023          	sw	a4,32(a5)
800043e0:	fe042783          	lw	a5,-32(s0)
800043e4:	0087a783          	lw	a5,8(a5)
800043e8:	fec42703          	lw	a4,-20(s0)
800043ec:	01870713          	addi	a4,a4,24
800043f0:	00e7a223          	sw	a4,4(a5)
800043f4:	fec42783          	lw	a5,-20(s0)
800043f8:	01878713          	addi	a4,a5,24
800043fc:	fe042783          	lw	a5,-32(s0)
80004400:	00e7a423          	sw	a4,8(a5)
80004404:	fec42783          	lw	a5,-20(s0)
80004408:	80008737          	lui	a4,0x80008
8000440c:	cc470713          	addi	a4,a4,-828 # 80007cc4 <xPendingReadyList>
80004410:	02e7a423          	sw	a4,40(a5)
80004414:	800087b7          	lui	a5,0x80008
80004418:	cc478793          	addi	a5,a5,-828 # 80007cc4 <xPendingReadyList>
8000441c:	0007a783          	lw	a5,0(a5)
80004420:	00178713          	addi	a4,a5,1
80004424:	800087b7          	lui	a5,0x80008
80004428:	cc478793          	addi	a5,a5,-828 # 80007cc4 <xPendingReadyList>
8000442c:	00e7a023          	sw	a4,0(a5)
                }

                #if ( configNUMBER_OF_CORES == 1 )
                {
                    if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
80004430:	fec42783          	lw	a5,-20(s0)
80004434:	02c7a703          	lw	a4,44(a5)
80004438:	800097b7          	lui	a5,0x80009
8000443c:	9047a783          	lw	a5,-1788(a5) # 80008904 <pxCurrentTCB>
80004440:	02c7a783          	lw	a5,44(a5)
80004444:	02e7f263          	bgeu	a5,a4,80004468 <vTaskGenericNotifyGiveFromISR+0x2d8>
                    {
                        /* The notified task has a priority above the currently
                         * executing task so a yield is required. */
                        if( pxHigherPriorityTaskWoken != NULL )
80004448:	fc442783          	lw	a5,-60(s0)
8000444c:	00078863          	beq	a5,zero,8000445c <vTaskGenericNotifyGiveFromISR+0x2cc>
                        {
                            *pxHigherPriorityTaskWoken = pdTRUE;
80004450:	fc442783          	lw	a5,-60(s0)
80004454:	00100713          	addi	a4,zero,1
80004458:	00e7a023          	sw	a4,0(a5)
                        }

                        /* Mark that a yield is pending in case the user is not
                         * using the "xHigherPriorityTaskWoken" parameter in an ISR
                         * safe FreeRTOS function. */
                        xYieldPendings[ 0 ] = pdTRUE;
8000445c:	800087b7          	lui	a5,0x80008
80004460:	00100713          	addi	a4,zero,1
80004464:	cee7a623          	sw	a4,-788(a5) # 80007cec <xYieldPendings>
            }
        }
        taskEXIT_CRITICAL_FROM_ISR( uxSavedInterruptStatus );

        traceRETURN_vTaskGenericNotifyGiveFromISR();
    }
80004468:	00000013          	addi	zero,zero,0
8000446c:	03c12083          	lw	ra,60(sp)
80004470:	03812403          	lw	s0,56(sp)
80004474:	04010113          	addi	sp,sp,64
80004478:	00008067          	jalr	zero,0(ra)

8000447c <xTaskGenericNotifyStateClear>:

#if ( configUSE_TASK_NOTIFICATIONS == 1 )

    BaseType_t xTaskGenericNotifyStateClear( TaskHandle_t xTask,
                                             UBaseType_t uxIndexToClear )
    {
8000447c:	fd010113          	addi	sp,sp,-48
80004480:	02112623          	sw	ra,44(sp)
80004484:	02812423          	sw	s0,40(sp)
80004488:	03010413          	addi	s0,sp,48
8000448c:	fca42e23          	sw	a0,-36(s0)
80004490:	fcb42c23          	sw	a1,-40(s0)

        configASSERT( uxIndexToClear < configTASK_NOTIFICATION_ARRAY_ENTRIES );

        /* If null is passed in here then it is the calling task that is having
         * its notification state cleared. */
        pxTCB = prvGetTCBFromHandle( xTask );
80004494:	fdc42783          	lw	a5,-36(s0)
80004498:	00079863          	bne	a5,zero,800044a8 <xTaskGenericNotifyStateClear+0x2c>
8000449c:	800097b7          	lui	a5,0x80009
800044a0:	9047a783          	lw	a5,-1788(a5) # 80008904 <pxCurrentTCB>
800044a4:	0080006f          	jal	zero,800044ac <xTaskGenericNotifyStateClear+0x30>
800044a8:	fdc42783          	lw	a5,-36(s0)
800044ac:	fef42423          	sw	a5,-24(s0)

        taskENTER_CRITICAL();
800044b0:	30047073          	csrrci	zero,mstatus,8
800044b4:	800077b7          	lui	a5,0x80007
800044b8:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
800044bc:	00178713          	addi	a4,a5,1
800044c0:	800077b7          	lui	a5,0x80007
800044c4:	c6e7a623          	sw	a4,-916(a5) # 80006c6c <xCriticalNesting>
        {
            if( pxTCB->ucNotifyState[ uxIndexToClear ] == taskNOTIFICATION_RECEIVED )
800044c8:	fe842703          	lw	a4,-24(s0)
800044cc:	fd842783          	lw	a5,-40(s0)
800044d0:	00f707b3          	add	a5,a4,a5
800044d4:	0487c783          	lbu	a5,72(a5)
800044d8:	0ff7f713          	andi	a4,a5,255
800044dc:	00200793          	addi	a5,zero,2
800044e0:	02f71063          	bne	a4,a5,80004500 <xTaskGenericNotifyStateClear+0x84>
            {
                pxTCB->ucNotifyState[ uxIndexToClear ] = taskNOT_WAITING_NOTIFICATION;
800044e4:	fe842703          	lw	a4,-24(s0)
800044e8:	fd842783          	lw	a5,-40(s0)
800044ec:	00f707b3          	add	a5,a4,a5
800044f0:	04078423          	sb	zero,72(a5)
                xReturn = pdPASS;
800044f4:	00100793          	addi	a5,zero,1
800044f8:	fef42623          	sw	a5,-20(s0)
800044fc:	0080006f          	jal	zero,80004504 <xTaskGenericNotifyStateClear+0x88>
            }
            else
            {
                xReturn = pdFAIL;
80004500:	fe042623          	sw	zero,-20(s0)
            }
        }
        taskEXIT_CRITICAL();
80004504:	800077b7          	lui	a5,0x80007
80004508:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
8000450c:	fff78713          	addi	a4,a5,-1
80004510:	800077b7          	lui	a5,0x80007
80004514:	c6e7a623          	sw	a4,-916(a5) # 80006c6c <xCriticalNesting>
80004518:	800077b7          	lui	a5,0x80007
8000451c:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
80004520:	00079463          	bne	a5,zero,80004528 <xTaskGenericNotifyStateClear+0xac>
80004524:	30046073          	csrrsi	zero,mstatus,8

        traceRETURN_xTaskGenericNotifyStateClear( xReturn );

        return xReturn;
80004528:	fec42783          	lw	a5,-20(s0)
    }
8000452c:	00078513          	addi	a0,a5,0
80004530:	02c12083          	lw	ra,44(sp)
80004534:	02812403          	lw	s0,40(sp)
80004538:	03010113          	addi	sp,sp,48
8000453c:	00008067          	jalr	zero,0(ra)

80004540 <ulTaskGenericNotifyValueClear>:
#if ( configUSE_TASK_NOTIFICATIONS == 1 )

    uint32_t ulTaskGenericNotifyValueClear( TaskHandle_t xTask,
                                            UBaseType_t uxIndexToClear,
                                            uint32_t ulBitsToClear )
    {
80004540:	fd010113          	addi	sp,sp,-48
80004544:	02112623          	sw	ra,44(sp)
80004548:	02812423          	sw	s0,40(sp)
8000454c:	03010413          	addi	s0,sp,48
80004550:	fca42e23          	sw	a0,-36(s0)
80004554:	fcb42c23          	sw	a1,-40(s0)
80004558:	fcc42a23          	sw	a2,-44(s0)

        configASSERT( uxIndexToClear < configTASK_NOTIFICATION_ARRAY_ENTRIES );

        /* If null is passed in here then it is the calling task that is having
         * its notification state cleared. */
        pxTCB = prvGetTCBFromHandle( xTask );
8000455c:	fdc42783          	lw	a5,-36(s0)
80004560:	00079863          	bne	a5,zero,80004570 <ulTaskGenericNotifyValueClear+0x30>
80004564:	800097b7          	lui	a5,0x80009
80004568:	9047a783          	lw	a5,-1788(a5) # 80008904 <pxCurrentTCB>
8000456c:	0080006f          	jal	zero,80004574 <ulTaskGenericNotifyValueClear+0x34>
80004570:	fdc42783          	lw	a5,-36(s0)
80004574:	fef42623          	sw	a5,-20(s0)

        taskENTER_CRITICAL();
80004578:	30047073          	csrrci	zero,mstatus,8
8000457c:	800077b7          	lui	a5,0x80007
80004580:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
80004584:	00178713          	addi	a4,a5,1
80004588:	800077b7          	lui	a5,0x80007
8000458c:	c6e7a623          	sw	a4,-916(a5) # 80006c6c <xCriticalNesting>
        {
            /* Return the notification as it was before the bits were cleared,
             * then clear the bit mask. */
            ulReturn = pxTCB->ulNotifiedValue[ uxIndexToClear ];
80004590:	fec42703          	lw	a4,-20(s0)
80004594:	fd842783          	lw	a5,-40(s0)
80004598:	01078793          	addi	a5,a5,16
8000459c:	00279793          	slli	a5,a5,0x2
800045a0:	00f707b3          	add	a5,a4,a5
800045a4:	0047a783          	lw	a5,4(a5)
800045a8:	fef42423          	sw	a5,-24(s0)
            pxTCB->ulNotifiedValue[ uxIndexToClear ] &= ~ulBitsToClear;
800045ac:	fec42703          	lw	a4,-20(s0)
800045b0:	fd842783          	lw	a5,-40(s0)
800045b4:	01078793          	addi	a5,a5,16
800045b8:	00279793          	slli	a5,a5,0x2
800045bc:	00f707b3          	add	a5,a4,a5
800045c0:	0047a703          	lw	a4,4(a5)
800045c4:	fd442783          	lw	a5,-44(s0)
800045c8:	fff7c793          	xori	a5,a5,-1
800045cc:	00f77733          	and	a4,a4,a5
800045d0:	fec42683          	lw	a3,-20(s0)
800045d4:	fd842783          	lw	a5,-40(s0)
800045d8:	01078793          	addi	a5,a5,16
800045dc:	00279793          	slli	a5,a5,0x2
800045e0:	00f687b3          	add	a5,a3,a5
800045e4:	00e7a223          	sw	a4,4(a5)
        }
        taskEXIT_CRITICAL();
800045e8:	800077b7          	lui	a5,0x80007
800045ec:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
800045f0:	fff78713          	addi	a4,a5,-1
800045f4:	800077b7          	lui	a5,0x80007
800045f8:	c6e7a623          	sw	a4,-916(a5) # 80006c6c <xCriticalNesting>
800045fc:	800077b7          	lui	a5,0x80007
80004600:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
80004604:	00079463          	bne	a5,zero,8000460c <ulTaskGenericNotifyValueClear+0xcc>
80004608:	30046073          	csrrsi	zero,mstatus,8

        traceRETURN_ulTaskGenericNotifyValueClear( ulReturn );

        return ulReturn;
8000460c:	fe842783          	lw	a5,-24(s0)
    }
80004610:	00078513          	addi	a0,a5,0
80004614:	02c12083          	lw	ra,44(sp)
80004618:	02812403          	lw	s0,40(sp)
8000461c:	03010113          	addi	sp,sp,48
80004620:	00008067          	jalr	zero,0(ra)

80004624 <prvAddCurrentTaskToDelayedList>:
#endif /* if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( INCLUDE_xTaskGetIdleTaskHandle == 1 ) ) */
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait,
                                            const BaseType_t xCanBlockIndefinitely )
{
80004624:	fd010113          	addi	sp,sp,-48
80004628:	02112623          	sw	ra,44(sp)
8000462c:	02812423          	sw	s0,40(sp)
80004630:	03010413          	addi	s0,sp,48
80004634:	fca42e23          	sw	a0,-36(s0)
80004638:	fcb42c23          	sw	a1,-40(s0)
    TickType_t xTimeToWake;
    const TickType_t xConstTickCount = xTickCount;
8000463c:	800087b7          	lui	a5,0x80008
80004640:	cdc7a783          	lw	a5,-804(a5) # 80007cdc <xTickCount>
80004644:	fef42623          	sw	a5,-20(s0)
    List_t * const pxDelayedList = pxDelayedTaskList;
80004648:	800087b7          	lui	a5,0x80008
8000464c:	cbc7a783          	lw	a5,-836(a5) # 80007cbc <pxDelayedTaskList>
80004650:	fef42423          	sw	a5,-24(s0)
    List_t * const pxOverflowDelayedList = pxOverflowDelayedTaskList;
80004654:	800087b7          	lui	a5,0x80008
80004658:	cc07a783          	lw	a5,-832(a5) # 80007cc0 <pxOverflowDelayedTaskList>
8000465c:	fef42223          	sw	a5,-28(s0)
    }
    #endif

    /* Remove the task from the ready list before adding it to the blocked list
     * as the same list item is used for both lists. */
    if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
80004660:	800097b7          	lui	a5,0x80009
80004664:	9047a783          	lw	a5,-1788(a5) # 80008904 <pxCurrentTCB>
80004668:	00478793          	addi	a5,a5,4
8000466c:	00078513          	addi	a0,a5,0
80004670:	c85fb0ef          	jal	ra,800002f4 <uxListRemove>
80004674:	00050793          	addi	a5,a0,0
80004678:	02079863          	bne	a5,zero,800046a8 <prvAddCurrentTaskToDelayedList+0x84>
    {
        /* The current task must be in a ready list, so there is no need to
         * check, and the port reset macro can be called directly. */
        portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority );
8000467c:	800097b7          	lui	a5,0x80009
80004680:	9047a783          	lw	a5,-1788(a5) # 80008904 <pxCurrentTCB>
80004684:	02c7a783          	lw	a5,44(a5)
80004688:	00100713          	addi	a4,zero,1
8000468c:	00f717b3          	sll	a5,a4,a5
80004690:	fff7c713          	xori	a4,a5,-1
80004694:	800087b7          	lui	a5,0x80008
80004698:	ce07a783          	lw	a5,-800(a5) # 80007ce0 <uxTopReadyPriority>
8000469c:	00f77733          	and	a4,a4,a5
800046a0:	800087b7          	lui	a5,0x80008
800046a4:	cee7a023          	sw	a4,-800(a5) # 80007ce0 <uxTopReadyPriority>
    #else /* INCLUDE_vTaskSuspend */
    {
        /* Calculate the time at which the task should be woken if the event
         * does not occur.  This may overflow but this doesn't matter, the kernel
         * will manage it correctly. */
        xTimeToWake = xConstTickCount + xTicksToWait;
800046a8:	fec42703          	lw	a4,-20(s0)
800046ac:	fdc42783          	lw	a5,-36(s0)
800046b0:	00f707b3          	add	a5,a4,a5
800046b4:	fef42023          	sw	a5,-32(s0)

        /* The list item will be inserted in wake time order. */
        listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
800046b8:	800097b7          	lui	a5,0x80009
800046bc:	9047a783          	lw	a5,-1788(a5) # 80008904 <pxCurrentTCB>
800046c0:	fe042703          	lw	a4,-32(s0)
800046c4:	00e7a223          	sw	a4,4(a5)

        if( xTimeToWake < xConstTickCount )
800046c8:	fe042703          	lw	a4,-32(s0)
800046cc:	fec42783          	lw	a5,-20(s0)
800046d0:	02f77063          	bgeu	a4,a5,800046f0 <prvAddCurrentTaskToDelayedList+0xcc>
        {
            traceMOVED_TASK_TO_OVERFLOW_DELAYED_LIST();
            /* Wake time has overflowed.  Place this item in the overflow list. */
            vListInsert( pxOverflowDelayedList, &( pxCurrentTCB->xStateListItem ) );
800046d4:	800097b7          	lui	a5,0x80009
800046d8:	9047a783          	lw	a5,-1788(a5) # 80008904 <pxCurrentTCB>
800046dc:	00478793          	addi	a5,a5,4
800046e0:	00078593          	addi	a1,a5,0
800046e4:	fe442503          	lw	a0,-28(s0)
800046e8:	b31fb0ef          	jal	ra,80000218 <vListInsert>

        /* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
        ( void ) xCanBlockIndefinitely;
    }
    #endif /* INCLUDE_vTaskSuspend */
}
800046ec:	0380006f          	jal	zero,80004724 <prvAddCurrentTaskToDelayedList+0x100>
            vListInsert( pxDelayedList, &( pxCurrentTCB->xStateListItem ) );
800046f0:	800097b7          	lui	a5,0x80009
800046f4:	9047a783          	lw	a5,-1788(a5) # 80008904 <pxCurrentTCB>
800046f8:	00478793          	addi	a5,a5,4
800046fc:	00078593          	addi	a1,a5,0
80004700:	fe842503          	lw	a0,-24(s0)
80004704:	b15fb0ef          	jal	ra,80000218 <vListInsert>
            if( xTimeToWake < xNextTaskUnblockTime )
80004708:	800087b7          	lui	a5,0x80008
8000470c:	cf87a783          	lw	a5,-776(a5) # 80007cf8 <xNextTaskUnblockTime>
80004710:	fe042703          	lw	a4,-32(s0)
80004714:	00f77863          	bgeu	a4,a5,80004724 <prvAddCurrentTaskToDelayedList+0x100>
                xNextTaskUnblockTime = xTimeToWake;
80004718:	800087b7          	lui	a5,0x80008
8000471c:	fe042703          	lw	a4,-32(s0)
80004720:	cee7ac23          	sw	a4,-776(a5) # 80007cf8 <xNextTaskUnblockTime>
}
80004724:	00000013          	addi	zero,zero,0
80004728:	02c12083          	lw	ra,44(sp)
8000472c:	02812403          	lw	s0,40(sp)
80004730:	03010113          	addi	sp,sp,48
80004734:	00008067          	jalr	zero,0(ra)

80004738 <vTaskResetState>:
 * Reset the state in this file. This state is normally initialized at start up.
 * This function must be called by the application before restarting the
 * scheduler.
 */
void vTaskResetState( void )
{
80004738:	fe010113          	addi	sp,sp,-32
8000473c:	00112e23          	sw	ra,28(sp)
80004740:	00812c23          	sw	s0,24(sp)
80004744:	02010413          	addi	s0,sp,32
    BaseType_t xCoreID;

    /* Task control block. */
    #if ( configNUMBER_OF_CORES == 1 )
    {
        pxCurrentTCB = NULL;
80004748:	800097b7          	lui	a5,0x80009
8000474c:	9007a223          	sw	zero,-1788(a5) # 80008904 <pxCurrentTCB>
        FreeRTOS_errno = 0;
    }
    #endif /* #if ( configUSE_POSIX_ERRNO == 1 ) */

    /* Other file private variables. */
    uxCurrentNumberOfTasks = ( UBaseType_t ) 0U;
80004750:	800087b7          	lui	a5,0x80008
80004754:	cc07ac23          	sw	zero,-808(a5) # 80007cd8 <uxCurrentNumberOfTasks>
    xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
80004758:	800087b7          	lui	a5,0x80008
8000475c:	cc07ae23          	sw	zero,-804(a5) # 80007cdc <xTickCount>
    uxTopReadyPriority = tskIDLE_PRIORITY;
80004760:	800087b7          	lui	a5,0x80008
80004764:	ce07a023          	sw	zero,-800(a5) # 80007ce0 <uxTopReadyPriority>
    xSchedulerRunning = pdFALSE;
80004768:	800087b7          	lui	a5,0x80008
8000476c:	ce07a223          	sw	zero,-796(a5) # 80007ce4 <xSchedulerRunning>
    xPendedTicks = ( TickType_t ) 0U;
80004770:	800087b7          	lui	a5,0x80008
80004774:	ce07a423          	sw	zero,-792(a5) # 80007ce8 <xPendedTicks>

    for( xCoreID = 0; xCoreID < configNUMBER_OF_CORES; xCoreID++ )
80004778:	fe042623          	sw	zero,-20(s0)
8000477c:	0280006f          	jal	zero,800047a4 <vTaskResetState+0x6c>
    {
        xYieldPendings[ xCoreID ] = pdFALSE;
80004780:	800087b7          	lui	a5,0x80008
80004784:	fec42703          	lw	a4,-20(s0)
80004788:	00271713          	slli	a4,a4,0x2
8000478c:	cec78793          	addi	a5,a5,-788 # 80007cec <xYieldPendings>
80004790:	00f707b3          	add	a5,a4,a5
80004794:	0007a023          	sw	zero,0(a5)
    for( xCoreID = 0; xCoreID < configNUMBER_OF_CORES; xCoreID++ )
80004798:	fec42783          	lw	a5,-20(s0)
8000479c:	00178793          	addi	a5,a5,1
800047a0:	fef42623          	sw	a5,-20(s0)
800047a4:	fec42783          	lw	a5,-20(s0)
800047a8:	fcf05ce3          	bge	zero,a5,80004780 <vTaskResetState+0x48>
    }

    xNumOfOverflows = ( BaseType_t ) 0;
800047ac:	800087b7          	lui	a5,0x80008
800047b0:	ce07a823          	sw	zero,-784(a5) # 80007cf0 <xNumOfOverflows>
    uxTaskNumber = ( UBaseType_t ) 0U;
800047b4:	800087b7          	lui	a5,0x80008
800047b8:	ce07aa23          	sw	zero,-780(a5) # 80007cf4 <uxTaskNumber>
    xNextTaskUnblockTime = ( TickType_t ) 0U;
800047bc:	800087b7          	lui	a5,0x80008
800047c0:	ce07ac23          	sw	zero,-776(a5) # 80007cf8 <xNextTaskUnblockTime>

    uxSchedulerSuspended = ( UBaseType_t ) 0U;
800047c4:	800087b7          	lui	a5,0x80008
800047c8:	d007a023          	sw	zero,-768(a5) # 80007d00 <uxSchedulerSuspended>
            ulTaskSwitchedInTime[ xCoreID ] = 0U;
            ulTotalRunTime[ xCoreID ] = 0U;
        }
    }
    #endif /* #if ( configGENERATE_RUN_TIME_STATS == 1 ) */
}
800047cc:	00000013          	addi	zero,zero,0
800047d0:	01c12083          	lw	ra,28(sp)
800047d4:	01812403          	lw	s0,24(sp)
800047d8:	02010113          	addi	sp,sp,32
800047dc:	00008067          	jalr	zero,0(ra)

800047e0 <vPortSetupTimerInterrupt>:
/*-----------------------------------------------------------*/

#if ( configMTIME_BASE_ADDRESS != 0 ) && ( configMTIMECMP_BASE_ADDRESS != 0 )

    void vPortSetupTimerInterrupt( void )
    {
800047e0:	fd010113          	addi	sp,sp,-48
800047e4:	02112623          	sw	ra,44(sp)
800047e8:	02812423          	sw	s0,40(sp)
800047ec:	03010413          	addi	s0,sp,48
        uint32_t ulCurrentTimeHigh, ulCurrentTimeLow;
        volatile uint32_t * const pulTimeHigh = ( volatile uint32_t * const ) ( ( configMTIME_BASE_ADDRESS ) + 4UL ); /* 8-byte type so high 32-bit word is 4 bytes up. */
800047f0:	20001f37          	lui	t5,0x20001
800047f4:	c0cf0f13          	addi	t5,t5,-1012 # 20000c0c <__start-0x5ffff3f4>
800047f8:	ffe42623          	sw	t5,-20(s0)
        volatile uint32_t * const pulTimeLow = ( volatile uint32_t * const ) ( configMTIME_BASE_ADDRESS );
800047fc:	20001f37          	lui	t5,0x20001
80004800:	c08f0f13          	addi	t5,t5,-1016 # 20000c08 <__start-0x5ffff3f8>
80004804:	ffe42423          	sw	t5,-24(s0)
        volatile uint32_t ulHartId;

        __asm volatile ( "csrr %0, mhartid" : "=r" ( ulHartId ) );
80004808:	f1402f73          	csrrs	t5,mhartid,zero
8000480c:	fde42e23          	sw	t5,-36(s0)

        pullMachineTimerCompareRegister = ( volatile uint64_t * ) ( ullMachineTimerCompareRegisterBase + ( ulHartId * sizeof( uint64_t ) ) );
80004810:	fdc42f03          	lw	t5,-36(s0)
80004814:	003f1f93          	slli	t6,t5,0x3
80004818:	20001f37          	lui	t5,0x20001
8000481c:	c00f0f13          	addi	t5,t5,-1024 # 20000c00 <__start-0x5ffff400>
80004820:	01ef8f33          	add	t5,t6,t5
80004824:	000f0f93          	addi	t6,t5,0
80004828:	80009f37          	lui	t5,0x80009
8000482c:	91ff2823          	sw	t6,-1776(t5) # 80008910 <pullMachineTimerCompareRegister>

        do
        {
            ulCurrentTimeHigh = *pulTimeHigh;
80004830:	fec42f03          	lw	t5,-20(s0)
80004834:	000f2f03          	lw	t5,0(t5)
80004838:	ffe42223          	sw	t5,-28(s0)
            ulCurrentTimeLow = *pulTimeLow;
8000483c:	fe842f03          	lw	t5,-24(s0)
80004840:	000f2f03          	lw	t5,0(t5)
80004844:	ffe42023          	sw	t5,-32(s0)
        } while( ulCurrentTimeHigh != *pulTimeHigh );
80004848:	fec42f03          	lw	t5,-20(s0)
8000484c:	000f2f03          	lw	t5,0(t5)
80004850:	fe442f83          	lw	t6,-28(s0)
80004854:	fdef9ee3          	bne	t6,t5,80004830 <vPortSetupTimerInterrupt+0x50>

        ullNextTime = ( uint64_t ) ulCurrentTimeHigh;
80004858:	fe442f03          	lw	t5,-28(s0)
8000485c:	000f0e13          	addi	t3,t5,0
80004860:	00000e93          	addi	t4,zero,0
80004864:	80009f37          	lui	t5,0x80009
80004868:	91cf2423          	sw	t3,-1784(t5) # 80008908 <ullNextTime>
8000486c:	91df2623          	sw	t4,-1780(t5)
        ullNextTime <<= 32ULL; /* High 4-byte word is 32-bits up. */
80004870:	80009e37          	lui	t3,0x80009
80004874:	90ce2e83          	lw	t4,-1780(t3) # 8000890c <ullNextTime+0x4>
80004878:	908e2e03          	lw	t3,-1784(t3)
8000487c:	000e1393          	slli	t2,t3,0x0
80004880:	00000313          	addi	t1,zero,0
80004884:	80009e37          	lui	t3,0x80009
80004888:	906e2423          	sw	t1,-1784(t3) # 80008908 <ullNextTime>
8000488c:	907e2623          	sw	t2,-1780(t3)
        ullNextTime |= ( uint64_t ) ulCurrentTimeLow;
80004890:	fe042303          	lw	t1,-32(s0)
80004894:	00030713          	addi	a4,t1,0
80004898:	00000793          	addi	a5,zero,0
8000489c:	80009337          	lui	t1,0x80009
800048a0:	90c32383          	lw	t2,-1780(t1) # 8000890c <ullNextTime+0x4>
800048a4:	90832303          	lw	t1,-1784(t1)
800048a8:	00676833          	or	a6,a4,t1
800048ac:	0077e8b3          	or	a7,a5,t2
800048b0:	800097b7          	lui	a5,0x80009
800048b4:	9107a423          	sw	a6,-1784(a5) # 80008908 <ullNextTime>
800048b8:	9117a623          	sw	a7,-1780(a5)
        ullNextTime += ( uint64_t ) uxTimerIncrementsForOneTick;
800048bc:	0003d7b7          	lui	a5,0x3d
800048c0:	09078793          	addi	a5,a5,144 # 3d090 <__start-0x7ffc2f70>
800048c4:	00078513          	addi	a0,a5,0
800048c8:	00000593          	addi	a1,zero,0
800048cc:	800097b7          	lui	a5,0x80009
800048d0:	9087a803          	lw	a6,-1784(a5) # 80008908 <ullNextTime>
800048d4:	90c7a883          	lw	a7,-1780(a5)
800048d8:	01050733          	add	a4,a0,a6
800048dc:	00070313          	addi	t1,a4,0
800048e0:	00a33333          	sltu	t1,t1,a0
800048e4:	011587b3          	add	a5,a1,a7
800048e8:	00f305b3          	add	a1,t1,a5
800048ec:	00058793          	addi	a5,a1,0
800048f0:	800095b7          	lui	a1,0x80009
800048f4:	90e5a423          	sw	a4,-1784(a1) # 80008908 <ullNextTime>
800048f8:	90f5a623          	sw	a5,-1780(a1)
        *pullMachineTimerCompareRegister = ullNextTime;
800048fc:	800097b7          	lui	a5,0x80009
80004900:	9107a583          	lw	a1,-1776(a5) # 80008910 <pullMachineTimerCompareRegister>
80004904:	800097b7          	lui	a5,0x80009
80004908:	9087a703          	lw	a4,-1784(a5) # 80008908 <ullNextTime>
8000490c:	90c7a783          	lw	a5,-1780(a5)
80004910:	00e5a023          	sw	a4,0(a1)
80004914:	00f5a223          	sw	a5,4(a1)

        /* Prepare the time to use after the next tick interrupt. */
        ullNextTime += ( uint64_t ) uxTimerIncrementsForOneTick;
80004918:	0003d7b7          	lui	a5,0x3d
8000491c:	09078793          	addi	a5,a5,144 # 3d090 <__start-0x7ffc2f70>
80004920:	00078613          	addi	a2,a5,0
80004924:	00000693          	addi	a3,zero,0
80004928:	800097b7          	lui	a5,0x80009
8000492c:	9087a503          	lw	a0,-1784(a5) # 80008908 <ullNextTime>
80004930:	90c7a583          	lw	a1,-1780(a5)
80004934:	00a60733          	add	a4,a2,a0
80004938:	00070813          	addi	a6,a4,0
8000493c:	00c83833          	sltu	a6,a6,a2
80004940:	00b687b3          	add	a5,a3,a1
80004944:	00f806b3          	add	a3,a6,a5
80004948:	00068793          	addi	a5,a3,0
8000494c:	800096b7          	lui	a3,0x80009
80004950:	90e6a423          	sw	a4,-1784(a3) # 80008908 <ullNextTime>
80004954:	90f6a623          	sw	a5,-1780(a3)
    }
80004958:	00000013          	addi	zero,zero,0
8000495c:	02c12083          	lw	ra,44(sp)
80004960:	02812403          	lw	s0,40(sp)
80004964:	03010113          	addi	sp,sp,48
80004968:	00008067          	jalr	zero,0(ra)

8000496c <xPortStartScheduler>:

#endif /* ( configMTIME_BASE_ADDRESS != 0 ) && ( configMTIME_BASE_ADDRESS != 0 ) */
/*-----------------------------------------------------------*/

BaseType_t xPortStartScheduler( void )
{
8000496c:	ff010113          	addi	sp,sp,-16
80004970:	00112623          	sw	ra,12(sp)
80004974:	00812423          	sw	s0,8(sp)
80004978:	01010413          	addi	s0,sp,16
    #endif /* configASSERT_DEFINED */

    /* If there is a CLINT then it is ok to use the default implementation
     * in this file, otherwise vPortSetupTimerInterrupt() must be implemented to
     * configure whichever clock is to be used to generate the tick interrupt. */
    vPortSetupTimerInterrupt();
8000497c:	e65ff0ef          	jal	ra,800047e0 <vPortSetupTimerInterrupt>
    #if ( ( configMTIME_BASE_ADDRESS != 0 ) && ( configMTIMECMP_BASE_ADDRESS != 0 ) )
    {
        /* Enable mtime and external interrupts.  1<<7 for timer interrupt,
         * 1<<11 for external interrupt.  _RB_ What happens here when mtime is
         * not present as with pulpino? */
        __asm volatile ( "csrs mie, %0" ::"r" ( 0x880 ) );
80004980:	000017b7          	lui	a5,0x1
80004984:	88078793          	addi	a5,a5,-1920 # 880 <__start-0x7ffff780>
80004988:	3047a073          	csrrs	zero,mie,a5
    }
    #endif /* ( configMTIME_BASE_ADDRESS != 0 ) && ( configMTIMECMP_BASE_ADDRESS != 0 ) */

    xPortStartFirstTask();
8000498c:	094000ef          	jal	ra,80004a20 <xPortStartFirstTask>

    /* Should not get here as after calling xPortStartFirstTask() only tasks
     * should be executing. */
    return pdFAIL;
80004990:	00000793          	addi	a5,zero,0
}
80004994:	00078513          	addi	a0,a5,0
80004998:	00c12083          	lw	ra,12(sp)
8000499c:	00812403          	lw	s0,8(sp)
800049a0:	01010113          	addi	sp,sp,16
800049a4:	00008067          	jalr	zero,0(ra)

800049a8 <vPortEndScheduler>:
/*-----------------------------------------------------------*/

void vPortEndScheduler( void )
{
800049a8:	ff010113          	addi	sp,sp,-16
800049ac:	00112623          	sw	ra,12(sp)
800049b0:	00812423          	sw	s0,8(sp)
800049b4:	01010413          	addi	s0,sp,16
    /* Not implemented. */
    for( ; ; )
800049b8:	00000013          	addi	zero,zero,0
800049bc:	ffdff06f          	jal	zero,800049b8 <vPortEndScheduler+0x10>

800049c0 <pxPortInitialiseStack>:
 * portTASK_RETURN_ADDRESS
 * [chip specific registers go here]
 * pxCode
 */
pxPortInitialiseStack:
    csrr t0, mstatus                    /* Obtain current mstatus value. */
800049c0:	300022f3          	csrrs	t0,mstatus,zero
    andi t0, t0, ~0x8                   /* Ensure interrupts are disabled when the stack is restored within an ISR.  Required when a task is created after the schedulre has been started, otherwise interrupts would be disabled anyway. */
800049c4:	ff72f293          	andi	t0,t0,-9
    addi t1, x0, 0x188                  /* Generate the value 0x1880, which are the MPIE and MPP bits to set in mstatus. */
800049c8:	18800313          	addi	t1,zero,392
    slli t1, t1, 4
800049cc:	00431313          	slli	t1,t1,0x4
    or t0, t0, t1                       /* Set MPIE and MPP bits in mstatus value. */
800049d0:	0062e2b3          	or	t0,t0,t1

    addi a0, a0, -portWORD_SIZE
800049d4:	ffc50513          	addi	a0,a0,-4
    store_x t0, 0(a0)                   /* mstatus onto the stack. */
800049d8:	00552023          	sw	t0,0(a0)
    addi a0, a0, -portWORD_SIZE         /* Space for critical nesting count. */
800049dc:	ffc50513          	addi	a0,a0,-4
    store_x x0, 0(a0)                   /* Critical nesting count starts at 0 for every task. */
800049e0:	00052023          	sw	zero,0(a0)

#ifdef __riscv_32e
    addi a0, a0, -(6 * portWORD_SIZE)   /* Space for registers x10-x15. */
#else
    addi a0, a0, -(22 * portWORD_SIZE)  /* Space for registers x10-x31. */
800049e4:	fa850513          	addi	a0,a0,-88
#endif
    store_x a2, 0(a0)                   /* Task parameters (pvParameters parameter) goes into register X10/a0 on the stack. */
800049e8:	00c52023          	sw	a2,0(a0)
    addi a0, a0, -(6 * portWORD_SIZE)   /* Space for registers x5-x9 + taskReturnAddress. */
800049ec:	fe850513          	addi	a0,a0,-24
    load_x t0, xTaskReturnAddress
800049f0:	00004297          	auipc	t0,0x4
800049f4:	f242a283          	lw	t0,-220(t0) # 80008914 <xTaskReturnAddress>
    store_x t0, 0(a0)                   /* Return address onto the stack. */
800049f8:	00552023          	sw	t0,0(a0)
    addi t0, x0, portasmADDITIONAL_CONTEXT_SIZE /* The number of chip specific additional registers. */
800049fc:	00000293          	addi	t0,zero,0

80004a00 <chip_specific_stack_frame>:
chip_specific_stack_frame:              /* First add any chip specific registers to the stack frame being created. */
    beq t0, x0, 1f                      /* No more chip specific registers to save. */
80004a00:	00028a63          	beq	t0,zero,80004a14 <chip_specific_stack_frame+0x14>
    addi a0, a0, -portWORD_SIZE         /* Make space for chip specific register. */
80004a04:	ffc50513          	addi	a0,a0,-4
    store_x x0, 0(a0)                   /* Give the chip specific register an initial value of zero. */
80004a08:	00052023          	sw	zero,0(a0)
    addi t0, t0, -1                     /* Decrement the count of chip specific registers remaining. */
80004a0c:	fff28293          	addi	t0,t0,-1
    j chip_specific_stack_frame         /* Until no more chip specific registers. */
80004a10:	ff1ff06f          	jal	zero,80004a00 <chip_specific_stack_frame>
1:
    addi a0, a0, -portWORD_SIZE
80004a14:	ffc50513          	addi	a0,a0,-4
    store_x a1, 0(a0)                   /* mret value (pxCode parameter) onto the stack. */
80004a18:	00b52023          	sw	a1,0(a0)
    ret
80004a1c:	00008067          	jalr	zero,0(ra)

80004a20 <xPortStartFirstTask>:
/*-----------------------------------------------------------*/

xPortStartFirstTask:
    load_x  sp, pxCurrentTCB            /* Load pxCurrentTCB. */
80004a20:	00004117          	auipc	sp,0x4
80004a24:	ee412103          	lw	sp,-284(sp) # 80008904 <pxCurrentTCB>
    load_x  sp, 0( sp )                 /* Read sp from first TCB member. */
80004a28:	00012103          	lw	sp,0(sp)

    load_x  x1, 0( sp ) /* Note for starting the scheduler the exception return address is used as the function return address. */
80004a2c:	00012083          	lw	ra,0(sp)

    portasmRESTORE_ADDITIONAL_REGISTERS /* Defined in freertos_risc_v_chip_specific_extensions.h to restore any registers unique to the RISC-V implementation. */

    load_x  x7, 4 * portWORD_SIZE( sp )     /* t2 */
80004a30:	01012383          	lw	t2,16(sp)
    load_x  x8, 5 * portWORD_SIZE( sp )     /* s0/fp */
80004a34:	01412403          	lw	s0,20(sp)
    load_x  x9, 6 * portWORD_SIZE( sp )     /* s1 */
80004a38:	01812483          	lw	s1,24(sp)
    load_x  x10, 7 * portWORD_SIZE( sp )    /* a0 */
80004a3c:	01c12503          	lw	a0,28(sp)
    load_x  x11, 8 * portWORD_SIZE( sp )    /* a1 */
80004a40:	02012583          	lw	a1,32(sp)
    load_x  x12, 9 * portWORD_SIZE( sp )    /* a2 */
80004a44:	02412603          	lw	a2,36(sp)
    load_x  x13, 10 * portWORD_SIZE( sp )   /* a3 */
80004a48:	02812683          	lw	a3,40(sp)
    load_x  x14, 11 * portWORD_SIZE( sp )   /* a4 */
80004a4c:	02c12703          	lw	a4,44(sp)
    load_x  x15, 12 * portWORD_SIZE( sp )   /* a5 */
80004a50:	03012783          	lw	a5,48(sp)
#ifndef __riscv_32e
    load_x  x16, 13 * portWORD_SIZE( sp )   /* a6 */
80004a54:	03412803          	lw	a6,52(sp)
    load_x  x17, 14 * portWORD_SIZE( sp )   /* a7 */
80004a58:	03812883          	lw	a7,56(sp)
    load_x  x18, 15 * portWORD_SIZE( sp )   /* s2 */
80004a5c:	03c12903          	lw	s2,60(sp)
    load_x  x19, 16 * portWORD_SIZE( sp )   /* s3 */
80004a60:	04012983          	lw	s3,64(sp)
    load_x  x20, 17 * portWORD_SIZE( sp )   /* s4 */
80004a64:	04412a03          	lw	s4,68(sp)
    load_x  x21, 18 * portWORD_SIZE( sp )   /* s5 */
80004a68:	04812a83          	lw	s5,72(sp)
    load_x  x22, 19 * portWORD_SIZE( sp )   /* s6 */
80004a6c:	04c12b03          	lw	s6,76(sp)
    load_x  x23, 20 * portWORD_SIZE( sp )   /* s7 */
80004a70:	05012b83          	lw	s7,80(sp)
    load_x  x24, 21 * portWORD_SIZE( sp )   /* s8 */
80004a74:	05412c03          	lw	s8,84(sp)
    load_x  x25, 22 * portWORD_SIZE( sp )   /* s9 */
80004a78:	05812c83          	lw	s9,88(sp)
    load_x  x26, 23 * portWORD_SIZE( sp )   /* s10 */
80004a7c:	05c12d03          	lw	s10,92(sp)
    load_x  x27, 24 * portWORD_SIZE( sp )   /* s11 */
80004a80:	06012d83          	lw	s11,96(sp)
    load_x  x28, 25 * portWORD_SIZE( sp )   /* t3 */
80004a84:	06412e03          	lw	t3,100(sp)
    load_x  x29, 26 * portWORD_SIZE( sp )   /* t4 */
80004a88:	06812e83          	lw	t4,104(sp)
    load_x  x30, 27 * portWORD_SIZE( sp )   /* t5 */
80004a8c:	06c12f03          	lw	t5,108(sp)
    load_x  x31, 28 * portWORD_SIZE( sp )   /* t6 */
80004a90:	07012f83          	lw	t6,112(sp)
#endif

    load_x  x5, portCRITICAL_NESTING_OFFSET * portWORD_SIZE( sp )    /* Obtain xCriticalNesting value for this task from task's stack. */
80004a94:	07412283          	lw	t0,116(sp)
    load_x  x6, pxCriticalNesting           /* Load the address of xCriticalNesting into x6. */
80004a98:	00002317          	auipc	t1,0x2
80004a9c:	1d832303          	lw	t1,472(t1) # 80006c70 <pxCriticalNesting>
    store_x x5, 0( x6 )                     /* Restore the critical nesting value for this task. */
80004aa0:	00532023          	sw	t0,0(t1)

    load_x  x5, portMSTATUS_OFFSET * portWORD_SIZE( sp )    /* Initial mstatus into x5 (t0). */
80004aa4:	07812283          	lw	t0,120(sp)
    addi    x5, x5, 0x08                    /* Set MIE bit so the first task starts with interrupts enabled - required as returns with ret not eret. */
80004aa8:	00828293          	addi	t0,t0,8
    csrrw   x0, mstatus, x5                 /* Interrupts enabled from here! */
80004aac:	30029073          	csrrw	zero,mstatus,t0

    load_x  x5, 2 * portWORD_SIZE( sp )     /* Initial x5 (t0) value. */
80004ab0:	00812283          	lw	t0,8(sp)
    load_x  x6, 3 * portWORD_SIZE( sp )     /* Initial x6 (t1) value. */
80004ab4:	00c12303          	lw	t1,12(sp)

    addi    sp, sp, portCONTEXT_SIZE
80004ab8:	07c10113          	addi	sp,sp,124
    ret
80004abc:	00008067          	jalr	zero,0(ra)

80004ac0 <freertos_risc_v_application_exception_handler>:
/*-----------------------------------------------------------*/

freertos_risc_v_application_exception_handler:
    csrr t0, mcause     /* For viewing in the debugger only. */
80004ac0:	342022f3          	csrrs	t0,mcause,zero
    csrr t1, mepc       /* For viewing in the debugger only */
80004ac4:	34102373          	csrrs	t1,mepc,zero
    csrr t2, mstatus    /* For viewing in the debugger only */
80004ac8:	300023f3          	csrrs	t2,mstatus,zero
    j .
80004acc:	0000006f          	jal	zero,80004acc <freertos_risc_v_application_exception_handler+0xc>

80004ad0 <freertos_risc_v_application_interrupt_handler>:
/*-----------------------------------------------------------*/

freertos_risc_v_application_interrupt_handler:
    csrr t0, mcause     /* For viewing in the debugger only. */
80004ad0:	342022f3          	csrrs	t0,mcause,zero
    csrr t1, mepc       /* For viewing in the debugger only */
80004ad4:	34102373          	csrrs	t1,mepc,zero
    csrr t2, mstatus    /* For viewing in the debugger only */
80004ad8:	300023f3          	csrrs	t2,mstatus,zero
    j .
80004adc:	0000006f          	jal	zero,80004adc <freertos_risc_v_application_interrupt_handler+0xc>

80004ae0 <freertos_risc_v_exception_handler>:
/*-----------------------------------------------------------*/

.section .text.freertos_risc_v_exception_handler
freertos_risc_v_exception_handler:
    portcontextSAVE_EXCEPTION_CONTEXT
80004ae0:	f8410113          	addi	sp,sp,-124
80004ae4:	00112223          	sw	ra,4(sp)
80004ae8:	00512423          	sw	t0,8(sp)
80004aec:	00612623          	sw	t1,12(sp)
80004af0:	00712823          	sw	t2,16(sp)
80004af4:	00812a23          	sw	s0,20(sp)
80004af8:	00912c23          	sw	s1,24(sp)
80004afc:	00a12e23          	sw	a0,28(sp)
80004b00:	02b12023          	sw	a1,32(sp)
80004b04:	02c12223          	sw	a2,36(sp)
80004b08:	02d12423          	sw	a3,40(sp)
80004b0c:	02e12623          	sw	a4,44(sp)
80004b10:	02f12823          	sw	a5,48(sp)
80004b14:	03012a23          	sw	a6,52(sp)
80004b18:	03112c23          	sw	a7,56(sp)
80004b1c:	03212e23          	sw	s2,60(sp)
80004b20:	05312023          	sw	s3,64(sp)
80004b24:	05412223          	sw	s4,68(sp)
80004b28:	05512423          	sw	s5,72(sp)
80004b2c:	05612623          	sw	s6,76(sp)
80004b30:	05712823          	sw	s7,80(sp)
80004b34:	05812a23          	sw	s8,84(sp)
80004b38:	05912c23          	sw	s9,88(sp)
80004b3c:	05a12e23          	sw	s10,92(sp)
80004b40:	07b12023          	sw	s11,96(sp)
80004b44:	07c12223          	sw	t3,100(sp)
80004b48:	07d12423          	sw	t4,104(sp)
80004b4c:	07e12623          	sw	t5,108(sp)
80004b50:	07f12823          	sw	t6,112(sp)
80004b54:	00002297          	auipc	t0,0x2
80004b58:	1182a283          	lw	t0,280(t0) # 80006c6c <xCriticalNesting>
80004b5c:	06512a23          	sw	t0,116(sp)
80004b60:	300022f3          	csrrs	t0,mstatus,zero
80004b64:	06512c23          	sw	t0,120(sp)
80004b68:	00004297          	auipc	t0,0x4
80004b6c:	d9c2a283          	lw	t0,-612(t0) # 80008904 <pxCurrentTCB>
80004b70:	0022a023          	sw	sp,0(t0)
80004b74:	34202573          	csrrs	a0,mcause,zero
80004b78:	341025f3          	csrrs	a1,mepc,zero
80004b7c:	00458593          	addi	a1,a1,4
80004b80:	00b12023          	sw	a1,0(sp)
80004b84:	00002117          	auipc	sp,0x2
80004b88:	0a412103          	lw	sp,164(sp) # 80006c28 <xISRStackTop>
    /* a0 now contains mcause. */
    li t0, 11                           /* 11 == environment call. */
80004b8c:	00b00293          	addi	t0,zero,11
    bne a0, t0, other_exception         /* Not an M environment call, so some other exception. */
80004b90:	0a551663          	bne	a0,t0,80004c3c <other_exception>
    call vTaskSwitchContext
80004b94:	f3dfd0ef          	jal	ra,80002ad0 <vTaskSwitchContext>
    portcontextRESTORE_CONTEXT
80004b98:	00004317          	auipc	t1,0x4
80004b9c:	d6c32303          	lw	t1,-660(t1) # 80008904 <pxCurrentTCB>
80004ba0:	00032103          	lw	sp,0(t1)
80004ba4:	00012283          	lw	t0,0(sp)
80004ba8:	34129073          	csrrw	zero,mepc,t0
80004bac:	07812283          	lw	t0,120(sp)
80004bb0:	30029073          	csrrw	zero,mstatus,t0
80004bb4:	07412283          	lw	t0,116(sp)
80004bb8:	00002317          	auipc	t1,0x2
80004bbc:	0b832303          	lw	t1,184(t1) # 80006c70 <pxCriticalNesting>
80004bc0:	00532023          	sw	t0,0(t1)
80004bc4:	00412083          	lw	ra,4(sp)
80004bc8:	00812283          	lw	t0,8(sp)
80004bcc:	00c12303          	lw	t1,12(sp)
80004bd0:	01012383          	lw	t2,16(sp)
80004bd4:	01412403          	lw	s0,20(sp)
80004bd8:	01812483          	lw	s1,24(sp)
80004bdc:	01c12503          	lw	a0,28(sp)
80004be0:	02012583          	lw	a1,32(sp)
80004be4:	02412603          	lw	a2,36(sp)
80004be8:	02812683          	lw	a3,40(sp)
80004bec:	02c12703          	lw	a4,44(sp)
80004bf0:	03012783          	lw	a5,48(sp)
80004bf4:	03412803          	lw	a6,52(sp)
80004bf8:	03812883          	lw	a7,56(sp)
80004bfc:	03c12903          	lw	s2,60(sp)
80004c00:	04012983          	lw	s3,64(sp)
80004c04:	04412a03          	lw	s4,68(sp)
80004c08:	04812a83          	lw	s5,72(sp)
80004c0c:	04c12b03          	lw	s6,76(sp)
80004c10:	05012b83          	lw	s7,80(sp)
80004c14:	05412c03          	lw	s8,84(sp)
80004c18:	05812c83          	lw	s9,88(sp)
80004c1c:	05c12d03          	lw	s10,92(sp)
80004c20:	06012d83          	lw	s11,96(sp)
80004c24:	06412e03          	lw	t3,100(sp)
80004c28:	06812e83          	lw	t4,104(sp)
80004c2c:	06c12f03          	lw	t5,108(sp)
80004c30:	07012f83          	lw	t6,112(sp)
80004c34:	07c10113          	addi	sp,sp,124
80004c38:	30200073          	mret

80004c3c <other_exception>:

other_exception:
    call freertos_risc_v_application_exception_handler
80004c3c:	e85ff0ef          	jal	ra,80004ac0 <freertos_risc_v_application_exception_handler>
    portcontextRESTORE_CONTEXT
80004c40:	00004317          	auipc	t1,0x4
80004c44:	cc432303          	lw	t1,-828(t1) # 80008904 <pxCurrentTCB>
80004c48:	00032103          	lw	sp,0(t1)
80004c4c:	00012283          	lw	t0,0(sp)
80004c50:	34129073          	csrrw	zero,mepc,t0
80004c54:	07812283          	lw	t0,120(sp)
80004c58:	30029073          	csrrw	zero,mstatus,t0
80004c5c:	07412283          	lw	t0,116(sp)
80004c60:	00002317          	auipc	t1,0x2
80004c64:	01032303          	lw	t1,16(t1) # 80006c70 <pxCriticalNesting>
80004c68:	00532023          	sw	t0,0(t1)
80004c6c:	00412083          	lw	ra,4(sp)
80004c70:	00812283          	lw	t0,8(sp)
80004c74:	00c12303          	lw	t1,12(sp)
80004c78:	01012383          	lw	t2,16(sp)
80004c7c:	01412403          	lw	s0,20(sp)
80004c80:	01812483          	lw	s1,24(sp)
80004c84:	01c12503          	lw	a0,28(sp)
80004c88:	02012583          	lw	a1,32(sp)
80004c8c:	02412603          	lw	a2,36(sp)
80004c90:	02812683          	lw	a3,40(sp)
80004c94:	02c12703          	lw	a4,44(sp)
80004c98:	03012783          	lw	a5,48(sp)
80004c9c:	03412803          	lw	a6,52(sp)
80004ca0:	03812883          	lw	a7,56(sp)
80004ca4:	03c12903          	lw	s2,60(sp)
80004ca8:	04012983          	lw	s3,64(sp)
80004cac:	04412a03          	lw	s4,68(sp)
80004cb0:	04812a83          	lw	s5,72(sp)
80004cb4:	04c12b03          	lw	s6,76(sp)
80004cb8:	05012b83          	lw	s7,80(sp)
80004cbc:	05412c03          	lw	s8,84(sp)
80004cc0:	05812c83          	lw	s9,88(sp)
80004cc4:	05c12d03          	lw	s10,92(sp)
80004cc8:	06012d83          	lw	s11,96(sp)
80004ccc:	06412e03          	lw	t3,100(sp)
80004cd0:	06812e83          	lw	t4,104(sp)
80004cd4:	06c12f03          	lw	t5,108(sp)
80004cd8:	07012f83          	lw	t6,112(sp)
80004cdc:	07c10113          	addi	sp,sp,124
80004ce0:	30200073          	mret

80004ce4 <freertos_risc_v_interrupt_handler>:
/*-----------------------------------------------------------*/

.section .text.freertos_risc_v_interrupt_handler
freertos_risc_v_interrupt_handler:
    portcontextSAVE_INTERRUPT_CONTEXT
80004ce4:	f8410113          	addi	sp,sp,-124
80004ce8:	00112223          	sw	ra,4(sp)
80004cec:	00512423          	sw	t0,8(sp)
80004cf0:	00612623          	sw	t1,12(sp)
80004cf4:	00712823          	sw	t2,16(sp)
80004cf8:	00812a23          	sw	s0,20(sp)
80004cfc:	00912c23          	sw	s1,24(sp)
80004d00:	00a12e23          	sw	a0,28(sp)
80004d04:	02b12023          	sw	a1,32(sp)
80004d08:	02c12223          	sw	a2,36(sp)
80004d0c:	02d12423          	sw	a3,40(sp)
80004d10:	02e12623          	sw	a4,44(sp)
80004d14:	02f12823          	sw	a5,48(sp)
80004d18:	03012a23          	sw	a6,52(sp)
80004d1c:	03112c23          	sw	a7,56(sp)
80004d20:	03212e23          	sw	s2,60(sp)
80004d24:	05312023          	sw	s3,64(sp)
80004d28:	05412223          	sw	s4,68(sp)
80004d2c:	05512423          	sw	s5,72(sp)
80004d30:	05612623          	sw	s6,76(sp)
80004d34:	05712823          	sw	s7,80(sp)
80004d38:	05812a23          	sw	s8,84(sp)
80004d3c:	05912c23          	sw	s9,88(sp)
80004d40:	05a12e23          	sw	s10,92(sp)
80004d44:	07b12023          	sw	s11,96(sp)
80004d48:	07c12223          	sw	t3,100(sp)
80004d4c:	07d12423          	sw	t4,104(sp)
80004d50:	07e12623          	sw	t5,108(sp)
80004d54:	07f12823          	sw	t6,112(sp)
80004d58:	00002297          	auipc	t0,0x2
80004d5c:	f142a283          	lw	t0,-236(t0) # 80006c6c <xCriticalNesting>
80004d60:	06512a23          	sw	t0,116(sp)
80004d64:	300022f3          	csrrs	t0,mstatus,zero
80004d68:	06512c23          	sw	t0,120(sp)
80004d6c:	00004297          	auipc	t0,0x4
80004d70:	b982a283          	lw	t0,-1128(t0) # 80008904 <pxCurrentTCB>
80004d74:	0022a023          	sw	sp,0(t0)
80004d78:	34202573          	csrrs	a0,mcause,zero
80004d7c:	341025f3          	csrrs	a1,mepc,zero
80004d80:	00b12023          	sw	a1,0(sp)
80004d84:	00002117          	auipc	sp,0x2
80004d88:	ea412103          	lw	sp,-348(sp) # 80006c28 <xISRStackTop>
    call freertos_risc_v_application_interrupt_handler
80004d8c:	d45ff0ef          	jal	ra,80004ad0 <freertos_risc_v_application_interrupt_handler>
    portcontextRESTORE_CONTEXT
80004d90:	00004317          	auipc	t1,0x4
80004d94:	b7432303          	lw	t1,-1164(t1) # 80008904 <pxCurrentTCB>
80004d98:	00032103          	lw	sp,0(t1)
80004d9c:	00012283          	lw	t0,0(sp)
80004da0:	34129073          	csrrw	zero,mepc,t0
80004da4:	07812283          	lw	t0,120(sp)
80004da8:	30029073          	csrrw	zero,mstatus,t0
80004dac:	07412283          	lw	t0,116(sp)
80004db0:	00002317          	auipc	t1,0x2
80004db4:	ec032303          	lw	t1,-320(t1) # 80006c70 <pxCriticalNesting>
80004db8:	00532023          	sw	t0,0(t1)
80004dbc:	00412083          	lw	ra,4(sp)
80004dc0:	00812283          	lw	t0,8(sp)
80004dc4:	00c12303          	lw	t1,12(sp)
80004dc8:	01012383          	lw	t2,16(sp)
80004dcc:	01412403          	lw	s0,20(sp)
80004dd0:	01812483          	lw	s1,24(sp)
80004dd4:	01c12503          	lw	a0,28(sp)
80004dd8:	02012583          	lw	a1,32(sp)
80004ddc:	02412603          	lw	a2,36(sp)
80004de0:	02812683          	lw	a3,40(sp)
80004de4:	02c12703          	lw	a4,44(sp)
80004de8:	03012783          	lw	a5,48(sp)
80004dec:	03412803          	lw	a6,52(sp)
80004df0:	03812883          	lw	a7,56(sp)
80004df4:	03c12903          	lw	s2,60(sp)
80004df8:	04012983          	lw	s3,64(sp)
80004dfc:	04412a03          	lw	s4,68(sp)
80004e00:	04812a83          	lw	s5,72(sp)
80004e04:	04c12b03          	lw	s6,76(sp)
80004e08:	05012b83          	lw	s7,80(sp)
80004e0c:	05412c03          	lw	s8,84(sp)
80004e10:	05812c83          	lw	s9,88(sp)
80004e14:	05c12d03          	lw	s10,92(sp)
80004e18:	06012d83          	lw	s11,96(sp)
80004e1c:	06412e03          	lw	t3,100(sp)
80004e20:	06812e83          	lw	t4,104(sp)
80004e24:	06c12f03          	lw	t5,108(sp)
80004e28:	07012f83          	lw	t6,112(sp)
80004e2c:	07c10113          	addi	sp,sp,124
80004e30:	30200073          	mret

80004e34 <freertos_risc_v_mtimer_interrupt_handler>:
/*-----------------------------------------------------------*/

.section .text.freertos_risc_v_mtimer_interrupt_handler
freertos_risc_v_mtimer_interrupt_handler:
    portcontextSAVE_INTERRUPT_CONTEXT
80004e34:	f8410113          	addi	sp,sp,-124
80004e38:	00112223          	sw	ra,4(sp)
80004e3c:	00512423          	sw	t0,8(sp)
80004e40:	00612623          	sw	t1,12(sp)
80004e44:	00712823          	sw	t2,16(sp)
80004e48:	00812a23          	sw	s0,20(sp)
80004e4c:	00912c23          	sw	s1,24(sp)
80004e50:	00a12e23          	sw	a0,28(sp)
80004e54:	02b12023          	sw	a1,32(sp)
80004e58:	02c12223          	sw	a2,36(sp)
80004e5c:	02d12423          	sw	a3,40(sp)
80004e60:	02e12623          	sw	a4,44(sp)
80004e64:	02f12823          	sw	a5,48(sp)
80004e68:	03012a23          	sw	a6,52(sp)
80004e6c:	03112c23          	sw	a7,56(sp)
80004e70:	03212e23          	sw	s2,60(sp)
80004e74:	05312023          	sw	s3,64(sp)
80004e78:	05412223          	sw	s4,68(sp)
80004e7c:	05512423          	sw	s5,72(sp)
80004e80:	05612623          	sw	s6,76(sp)
80004e84:	05712823          	sw	s7,80(sp)
80004e88:	05812a23          	sw	s8,84(sp)
80004e8c:	05912c23          	sw	s9,88(sp)
80004e90:	05a12e23          	sw	s10,92(sp)
80004e94:	07b12023          	sw	s11,96(sp)
80004e98:	07c12223          	sw	t3,100(sp)
80004e9c:	07d12423          	sw	t4,104(sp)
80004ea0:	07e12623          	sw	t5,108(sp)
80004ea4:	07f12823          	sw	t6,112(sp)
80004ea8:	00002297          	auipc	t0,0x2
80004eac:	dc42a283          	lw	t0,-572(t0) # 80006c6c <xCriticalNesting>
80004eb0:	06512a23          	sw	t0,116(sp)
80004eb4:	300022f3          	csrrs	t0,mstatus,zero
80004eb8:	06512c23          	sw	t0,120(sp)
80004ebc:	00004297          	auipc	t0,0x4
80004ec0:	a482a283          	lw	t0,-1464(t0) # 80008904 <pxCurrentTCB>
80004ec4:	0022a023          	sw	sp,0(t0)
80004ec8:	34202573          	csrrs	a0,mcause,zero
80004ecc:	341025f3          	csrrs	a1,mepc,zero
80004ed0:	00b12023          	sw	a1,0(sp)
80004ed4:	00002117          	auipc	sp,0x2
80004ed8:	d5412103          	lw	sp,-684(sp) # 80006c28 <xISRStackTop>
    portUPDATE_MTIMER_COMPARE_REGISTER
80004edc:	00004517          	auipc	a0,0x4
80004ee0:	a3452503          	lw	a0,-1484(a0) # 80008910 <pullMachineTimerCompareRegister>
80004ee4:	00002597          	auipc	a1,0x2
80004ee8:	d845a583          	lw	a1,-636(a1) # 80006c68 <pullNextTime>
80004eec:	fff00713          	addi	a4,zero,-1
80004ef0:	0005a603          	lw	a2,0(a1)
80004ef4:	0045a683          	lw	a3,4(a1)
80004ef8:	00e52023          	sw	a4,0(a0)
80004efc:	00d52223          	sw	a3,4(a0)
80004f00:	00c52023          	sw	a2,0(a0)
80004f04:	00002297          	auipc	t0,0x2
80004f08:	d282a283          	lw	t0,-728(t0) # 80006c2c <uxTimerIncrementsForOneTick>
80004f0c:	00c28733          	add	a4,t0,a2
80004f10:	00c73333          	sltu	t1,a4,a2
80004f14:	006683b3          	add	t2,a3,t1
80004f18:	00e5a023          	sw	a4,0(a1)
80004f1c:	0075a223          	sw	t2,4(a1)
    call xTaskIncrementTick
80004f20:	88dfd0ef          	jal	ra,800027ac <xTaskIncrementTick>
    beqz a0, exit_without_context_switch    /* Don't switch context if incrementing tick didn't unblock a task. */
80004f24:	00050463          	beq	a0,zero,80004f2c <exit_without_context_switch>
    call vTaskSwitchContext
80004f28:	ba9fd0ef          	jal	ra,80002ad0 <vTaskSwitchContext>

80004f2c <exit_without_context_switch>:
exit_without_context_switch:
    portcontextRESTORE_CONTEXT
80004f2c:	00004317          	auipc	t1,0x4
80004f30:	9d832303          	lw	t1,-1576(t1) # 80008904 <pxCurrentTCB>
80004f34:	00032103          	lw	sp,0(t1)
80004f38:	00012283          	lw	t0,0(sp)
80004f3c:	34129073          	csrrw	zero,mepc,t0
80004f40:	07812283          	lw	t0,120(sp)
80004f44:	30029073          	csrrw	zero,mstatus,t0
80004f48:	07412283          	lw	t0,116(sp)
80004f4c:	00002317          	auipc	t1,0x2
80004f50:	d2432303          	lw	t1,-732(t1) # 80006c70 <pxCriticalNesting>
80004f54:	00532023          	sw	t0,0(t1)
80004f58:	00412083          	lw	ra,4(sp)
80004f5c:	00812283          	lw	t0,8(sp)
80004f60:	00c12303          	lw	t1,12(sp)
80004f64:	01012383          	lw	t2,16(sp)
80004f68:	01412403          	lw	s0,20(sp)
80004f6c:	01812483          	lw	s1,24(sp)
80004f70:	01c12503          	lw	a0,28(sp)
80004f74:	02012583          	lw	a1,32(sp)
80004f78:	02412603          	lw	a2,36(sp)
80004f7c:	02812683          	lw	a3,40(sp)
80004f80:	02c12703          	lw	a4,44(sp)
80004f84:	03012783          	lw	a5,48(sp)
80004f88:	03412803          	lw	a6,52(sp)
80004f8c:	03812883          	lw	a7,56(sp)
80004f90:	03c12903          	lw	s2,60(sp)
80004f94:	04012983          	lw	s3,64(sp)
80004f98:	04412a03          	lw	s4,68(sp)
80004f9c:	04812a83          	lw	s5,72(sp)
80004fa0:	04c12b03          	lw	s6,76(sp)
80004fa4:	05012b83          	lw	s7,80(sp)
80004fa8:	05412c03          	lw	s8,84(sp)
80004fac:	05812c83          	lw	s9,88(sp)
80004fb0:	05c12d03          	lw	s10,92(sp)
80004fb4:	06012d83          	lw	s11,96(sp)
80004fb8:	06412e03          	lw	t3,100(sp)
80004fbc:	06812e83          	lw	t4,104(sp)
80004fc0:	06c12f03          	lw	t5,108(sp)
80004fc4:	07012f83          	lw	t6,112(sp)
80004fc8:	07c10113          	addi	sp,sp,124
80004fcc:	30200073          	mret
	...

80005000 <freertos_risc_v_trap_handler>:
/*-----------------------------------------------------------*/

.section .text.freertos_risc_v_trap_handler
.align 8
freertos_risc_v_trap_handler:
    portcontextSAVE_CONTEXT_INTERNAL
80005000:	f8410113          	addi	sp,sp,-124
80005004:	00112223          	sw	ra,4(sp)
80005008:	00512423          	sw	t0,8(sp)
8000500c:	00612623          	sw	t1,12(sp)
80005010:	00712823          	sw	t2,16(sp)
80005014:	00812a23          	sw	s0,20(sp)
80005018:	00912c23          	sw	s1,24(sp)
8000501c:	00a12e23          	sw	a0,28(sp)
80005020:	02b12023          	sw	a1,32(sp)
80005024:	02c12223          	sw	a2,36(sp)
80005028:	02d12423          	sw	a3,40(sp)
8000502c:	02e12623          	sw	a4,44(sp)
80005030:	02f12823          	sw	a5,48(sp)
80005034:	03012a23          	sw	a6,52(sp)
80005038:	03112c23          	sw	a7,56(sp)
8000503c:	03212e23          	sw	s2,60(sp)
80005040:	05312023          	sw	s3,64(sp)
80005044:	05412223          	sw	s4,68(sp)
80005048:	05512423          	sw	s5,72(sp)
8000504c:	05612623          	sw	s6,76(sp)
80005050:	05712823          	sw	s7,80(sp)
80005054:	05812a23          	sw	s8,84(sp)
80005058:	05912c23          	sw	s9,88(sp)
8000505c:	05a12e23          	sw	s10,92(sp)
80005060:	07b12023          	sw	s11,96(sp)
80005064:	07c12223          	sw	t3,100(sp)
80005068:	07d12423          	sw	t4,104(sp)
8000506c:	07e12623          	sw	t5,108(sp)
80005070:	07f12823          	sw	t6,112(sp)
80005074:	00002297          	auipc	t0,0x2
80005078:	bf82a283          	lw	t0,-1032(t0) # 80006c6c <xCriticalNesting>
8000507c:	06512a23          	sw	t0,116(sp)
80005080:	300022f3          	csrrs	t0,mstatus,zero
80005084:	06512c23          	sw	t0,120(sp)
80005088:	00004297          	auipc	t0,0x4
8000508c:	87c2a283          	lw	t0,-1924(t0) # 80008904 <pxCurrentTCB>
80005090:	0022a023          	sw	sp,0(t0)

    csrr a0, mcause
80005094:	34202573          	csrrs	a0,mcause,zero
    csrr a1, mepc
80005098:	341025f3          	csrrs	a1,mepc,zero

    bge a0, x0, synchronous_exception
8000509c:	00055a63          	bge	a0,zero,800050b0 <synchronous_exception>

800050a0 <asynchronous_interrupt>:

asynchronous_interrupt:
    store_x a1, 0( sp )                 /* Asynchronous interrupt so save unmodified exception return address. */
800050a0:	00b12023          	sw	a1,0(sp)
    load_x sp, xISRStackTop             /* Switch to ISR stack. */
800050a4:	00002117          	auipc	sp,0x2
800050a8:	b8412103          	lw	sp,-1148(sp) # 80006c28 <xISRStackTop>
    j handle_interrupt
800050ac:	0180006f          	jal	zero,800050c4 <handle_interrupt>

800050b0 <synchronous_exception>:

synchronous_exception:
    addi a1, a1, 4                      /* Synchronous so update exception return address to the instruction after the instruction that generated the exeption. */
800050b0:	00458593          	addi	a1,a1,4
    store_x a1, 0( sp )                 /* Save updated exception return address. */
800050b4:	00b12023          	sw	a1,0(sp)
    load_x sp, xISRStackTop             /* Switch to ISR stack. */
800050b8:	00002117          	auipc	sp,0x2
800050bc:	b7012103          	lw	sp,-1168(sp) # 80006c28 <xISRStackTop>
    j handle_exception
800050c0:	0700006f          	jal	zero,80005130 <handle_exception>

800050c4 <handle_interrupt>:

handle_interrupt:
#if( portasmHAS_MTIME != 0 )

    test_if_mtimer:                     /* If there is a CLINT then the mtimer is used to generate the tick interrupt. */
        addi t0, x0, 1
800050c4:	00100293          	addi	t0,zero,1
        slli t0, t0, __riscv_xlen - 1   /* LSB is already set, shift into MSB.  Shift 31 on 32-bit or 63 on 64-bit cores. */
800050c8:	01f29293          	slli	t0,t0,0x1f
        addi t1, t0, 7                  /* 0x8000[]0007 == machine timer interrupt. */
800050cc:	00728313          	addi	t1,t0,7
        bne a0, t1, application_interrupt_handler
800050d0:	04651c63          	bne	a0,t1,80005128 <application_interrupt_handler>

        portUPDATE_MTIMER_COMPARE_REGISTER
800050d4:	00004517          	auipc	a0,0x4
800050d8:	83c52503          	lw	a0,-1988(a0) # 80008910 <pullMachineTimerCompareRegister>
800050dc:	00002597          	auipc	a1,0x2
800050e0:	b8c5a583          	lw	a1,-1140(a1) # 80006c68 <pullNextTime>
800050e4:	fff00713          	addi	a4,zero,-1
800050e8:	0005a603          	lw	a2,0(a1)
800050ec:	0045a683          	lw	a3,4(a1)
800050f0:	00e52023          	sw	a4,0(a0)
800050f4:	00d52223          	sw	a3,4(a0)
800050f8:	00c52023          	sw	a2,0(a0)
800050fc:	00002297          	auipc	t0,0x2
80005100:	b302a283          	lw	t0,-1232(t0) # 80006c2c <uxTimerIncrementsForOneTick>
80005104:	00c28733          	add	a4,t0,a2
80005108:	00c73333          	sltu	t1,a4,a2
8000510c:	006683b3          	add	t2,a3,t1
80005110:	00e5a023          	sw	a4,0(a1)
80005114:	0075a223          	sw	t2,4(a1)
        call xTaskIncrementTick
80005118:	e94fd0ef          	jal	ra,800027ac <xTaskIncrementTick>
        beqz a0, processed_source       /* Don't switch context if incrementing tick didn't unblock a task. */
8000511c:	02050663          	beq	a0,zero,80005148 <processed_source>
        call vTaskSwitchContext
80005120:	9b1fd0ef          	jal	ra,80002ad0 <vTaskSwitchContext>
        j processed_source
80005124:	0240006f          	jal	zero,80005148 <processed_source>

80005128 <application_interrupt_handler>:

#endif /* portasmHAS_MTIME */

application_interrupt_handler:
    call freertos_risc_v_application_interrupt_handler
80005128:	9a9ff0ef          	jal	ra,80004ad0 <freertos_risc_v_application_interrupt_handler>
    j processed_source
8000512c:	01c0006f          	jal	zero,80005148 <processed_source>

80005130 <handle_exception>:

handle_exception:
    /* a0 contains mcause. */
    li t0, 11                                   /* 11 == environment call. */
80005130:	00b00293          	addi	t0,zero,11
    bne a0, t0, application_exception_handler   /* Not an M environment call, so some other exception. */
80005134:	00551663          	bne	a0,t0,80005140 <application_exception_handler>
    call vTaskSwitchContext
80005138:	999fd0ef          	jal	ra,80002ad0 <vTaskSwitchContext>
    j processed_source
8000513c:	00c0006f          	jal	zero,80005148 <processed_source>

80005140 <application_exception_handler>:

application_exception_handler:
    call freertos_risc_v_application_exception_handler
80005140:	981ff0ef          	jal	ra,80004ac0 <freertos_risc_v_application_exception_handler>
    j processed_source                  /* No other exceptions handled yet. */
80005144:	0040006f          	jal	zero,80005148 <processed_source>

80005148 <processed_source>:

processed_source:
    portcontextRESTORE_CONTEXT
80005148:	00003317          	auipc	t1,0x3
8000514c:	7bc32303          	lw	t1,1980(t1) # 80008904 <pxCurrentTCB>
80005150:	00032103          	lw	sp,0(t1)
80005154:	00012283          	lw	t0,0(sp)
80005158:	34129073          	csrrw	zero,mepc,t0
8000515c:	07812283          	lw	t0,120(sp)
80005160:	30029073          	csrrw	zero,mstatus,t0
80005164:	07412283          	lw	t0,116(sp)
80005168:	00002317          	auipc	t1,0x2
8000516c:	b0832303          	lw	t1,-1272(t1) # 80006c70 <pxCriticalNesting>
80005170:	00532023          	sw	t0,0(t1)
80005174:	00412083          	lw	ra,4(sp)
80005178:	00812283          	lw	t0,8(sp)
8000517c:	00c12303          	lw	t1,12(sp)
80005180:	01012383          	lw	t2,16(sp)
80005184:	01412403          	lw	s0,20(sp)
80005188:	01812483          	lw	s1,24(sp)
8000518c:	01c12503          	lw	a0,28(sp)
80005190:	02012583          	lw	a1,32(sp)
80005194:	02412603          	lw	a2,36(sp)
80005198:	02812683          	lw	a3,40(sp)
8000519c:	02c12703          	lw	a4,44(sp)
800051a0:	03012783          	lw	a5,48(sp)
800051a4:	03412803          	lw	a6,52(sp)
800051a8:	03812883          	lw	a7,56(sp)
800051ac:	03c12903          	lw	s2,60(sp)
800051b0:	04012983          	lw	s3,64(sp)
800051b4:	04412a03          	lw	s4,68(sp)
800051b8:	04812a83          	lw	s5,72(sp)
800051bc:	04c12b03          	lw	s6,76(sp)
800051c0:	05012b83          	lw	s7,80(sp)
800051c4:	05412c03          	lw	s8,84(sp)
800051c8:	05812c83          	lw	s9,88(sp)
800051cc:	05c12d03          	lw	s10,92(sp)
800051d0:	06012d83          	lw	s11,96(sp)
800051d4:	06412e03          	lw	t3,100(sp)
800051d8:	06812e83          	lw	t4,104(sp)
800051dc:	06c12f03          	lw	t5,108(sp)
800051e0:	07012f83          	lw	t6,112(sp)
800051e4:	07c10113          	addi	sp,sp,124
800051e8:	30200073          	mret
800051ec:	0000                	.insn	2, 0x
	...

800051f0 <pvPortMalloc>:
PRIVILEGED_DATA static size_t xNumberOfSuccessfulFrees = ( size_t ) 0U;

/*-----------------------------------------------------------*/

void * pvPortMalloc( size_t xWantedSize )
{
800051f0:	fc010113          	addi	sp,sp,-64
800051f4:	02112e23          	sw	ra,60(sp)
800051f8:	02812c23          	sw	s0,56(sp)
800051fc:	04010413          	addi	s0,sp,64
80005200:	fca42623          	sw	a0,-52(s0)
    BlockLink_t * pxBlock;
    BlockLink_t * pxPreviousBlock;
    BlockLink_t * pxNewBlockLink;
    void * pvReturn = NULL;
80005204:	fe042223          	sw	zero,-28(s0)
    size_t xAdditionalRequiredSize;

    if( xWantedSize > 0 )
80005208:	fcc42783          	lw	a5,-52(s0)
8000520c:	06078a63          	beq	a5,zero,80005280 <pvPortMalloc+0x90>
    {
        /* The wanted size must be increased so it can contain a BlockLink_t
         * structure in addition to the requested amount of bytes. */
        if( heapADD_WILL_OVERFLOW( xWantedSize, xHeapStructSize ) == 0 )
80005210:	01000793          	addi	a5,zero,16
80005214:	fff7c793          	xori	a5,a5,-1
80005218:	fcc42703          	lw	a4,-52(s0)
8000521c:	06e7e063          	bltu	a5,a4,8000527c <pvPortMalloc+0x8c>
        {
            xWantedSize += xHeapStructSize;
80005220:	01000793          	addi	a5,zero,16
80005224:	fcc42703          	lw	a4,-52(s0)
80005228:	00f707b3          	add	a5,a4,a5
8000522c:	fcf42623          	sw	a5,-52(s0)

            /* Ensure that blocks are always aligned to the required number
             * of bytes. */
            if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
80005230:	fcc42783          	lw	a5,-52(s0)
80005234:	00f7f793          	andi	a5,a5,15
80005238:	04078463          	beq	a5,zero,80005280 <pvPortMalloc+0x90>
            {
                /* Byte alignment required. */
                xAdditionalRequiredSize = portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK );
8000523c:	fcc42783          	lw	a5,-52(s0)
80005240:	00f7f793          	andi	a5,a5,15
80005244:	01000713          	addi	a4,zero,16
80005248:	40f707b3          	sub	a5,a4,a5
8000524c:	fef42023          	sw	a5,-32(s0)

                if( heapADD_WILL_OVERFLOW( xWantedSize, xAdditionalRequiredSize ) == 0 )
80005250:	fe042783          	lw	a5,-32(s0)
80005254:	fff7c793          	xori	a5,a5,-1
80005258:	fcc42703          	lw	a4,-52(s0)
8000525c:	00e7ec63          	bltu	a5,a4,80005274 <pvPortMalloc+0x84>
                {
                    xWantedSize += xAdditionalRequiredSize;
80005260:	fcc42703          	lw	a4,-52(s0)
80005264:	fe042783          	lw	a5,-32(s0)
80005268:	00f707b3          	add	a5,a4,a5
8000526c:	fcf42623          	sw	a5,-52(s0)
80005270:	0100006f          	jal	zero,80005280 <pvPortMalloc+0x90>
                }
                else
                {
                    xWantedSize = 0;
80005274:	fc042623          	sw	zero,-52(s0)
80005278:	0080006f          	jal	zero,80005280 <pvPortMalloc+0x90>
                mtCOVERAGE_TEST_MARKER();
            }
        }
        else
        {
            xWantedSize = 0;
8000527c:	fc042623          	sw	zero,-52(s0)
    else
    {
        mtCOVERAGE_TEST_MARKER();
    }

    vTaskSuspendAll();
80005280:	818fd0ef          	jal	ra,80002298 <vTaskSuspendAll>
    {
        /* If this is the first call to malloc then the heap will require
         * initialisation to setup the list of free blocks. */
        if( pxEnd == NULL )
80005284:	800097b7          	lui	a5,0x80009
80005288:	8e87a783          	lw	a5,-1816(a5) # 800088e8 <pxEnd>
8000528c:	00079463          	bne	a5,zero,80005294 <pvPortMalloc+0xa4>
        {
            prvHeapInit();
80005290:	394000ef          	jal	ra,80005624 <prvHeapInit>

        /* Check the block size we are trying to allocate is not so large that the
         * top bit is set.  The top bit of the block size member of the BlockLink_t
         * structure is used to determine who owns the block - the application or
         * the kernel, so it must be free. */
        if( heapBLOCK_SIZE_IS_VALID( xWantedSize ) != 0 )
80005294:	fcc42783          	lw	a5,-52(s0)
80005298:	1807c063          	blt	a5,zero,80005418 <pvPortMalloc+0x228>
        {
            if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
8000529c:	fcc42783          	lw	a5,-52(s0)
800052a0:	16078c63          	beq	a5,zero,80005418 <pvPortMalloc+0x228>
800052a4:	800097b7          	lui	a5,0x80009
800052a8:	8ec7a783          	lw	a5,-1812(a5) # 800088ec <xFreeBytesRemaining>
800052ac:	fcc42703          	lw	a4,-52(s0)
800052b0:	16e7e463          	bltu	a5,a4,80005418 <pvPortMalloc+0x228>
            {
                /* Traverse the list from the start (lowest address) block until
                 * one of adequate size is found. */
                pxPreviousBlock = &xStart;
800052b4:	800097b7          	lui	a5,0x80009
800052b8:	8e078793          	addi	a5,a5,-1824 # 800088e0 <xStart>
800052bc:	fef42423          	sw	a5,-24(s0)
                pxBlock = heapPROTECT_BLOCK_POINTER( xStart.pxNextFreeBlock );
800052c0:	800097b7          	lui	a5,0x80009
800052c4:	8e078793          	addi	a5,a5,-1824 # 800088e0 <xStart>
800052c8:	0007a783          	lw	a5,0(a5)
800052cc:	fef42623          	sw	a5,-20(s0)
                heapVALIDATE_BLOCK_POINTER( pxBlock );

                while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != heapPROTECT_BLOCK_POINTER( NULL ) ) )
800052d0:	0180006f          	jal	zero,800052e8 <pvPortMalloc+0xf8>
                {
                    pxPreviousBlock = pxBlock;
800052d4:	fec42783          	lw	a5,-20(s0)
800052d8:	fef42423          	sw	a5,-24(s0)
                    pxBlock = heapPROTECT_BLOCK_POINTER( pxBlock->pxNextFreeBlock );
800052dc:	fec42783          	lw	a5,-20(s0)
800052e0:	0007a783          	lw	a5,0(a5)
800052e4:	fef42623          	sw	a5,-20(s0)
                while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != heapPROTECT_BLOCK_POINTER( NULL ) ) )
800052e8:	fec42783          	lw	a5,-20(s0)
800052ec:	0047a783          	lw	a5,4(a5)
800052f0:	fcc42703          	lw	a4,-52(s0)
800052f4:	00e7f863          	bgeu	a5,a4,80005304 <pvPortMalloc+0x114>
800052f8:	fec42783          	lw	a5,-20(s0)
800052fc:	0007a783          	lw	a5,0(a5)
80005300:	fc079ae3          	bne	a5,zero,800052d4 <pvPortMalloc+0xe4>
                    heapVALIDATE_BLOCK_POINTER( pxBlock );
                }

                /* If the end marker was reached then a block of adequate size
                 * was not found. */
                if( pxBlock != pxEnd )
80005304:	800097b7          	lui	a5,0x80009
80005308:	8e87a783          	lw	a5,-1816(a5) # 800088e8 <pxEnd>
8000530c:	fec42703          	lw	a4,-20(s0)
80005310:	10f70463          	beq	a4,a5,80005418 <pvPortMalloc+0x228>
                {
                    /* Return the memory space pointed to - jumping over the
                     * BlockLink_t structure at its start. */
                    pvReturn = ( void * ) ( ( ( uint8_t * ) heapPROTECT_BLOCK_POINTER( pxPreviousBlock->pxNextFreeBlock ) ) + xHeapStructSize );
80005314:	fe842783          	lw	a5,-24(s0)
80005318:	0007a703          	lw	a4,0(a5)
8000531c:	01000793          	addi	a5,zero,16
80005320:	00f707b3          	add	a5,a4,a5
80005324:	fef42223          	sw	a5,-28(s0)
                    heapVALIDATE_BLOCK_POINTER( pvReturn );

                    /* This block is being returned for use so must be taken out
                     * of the list of free blocks. */
                    pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
80005328:	fec42783          	lw	a5,-20(s0)
8000532c:	0007a703          	lw	a4,0(a5)
80005330:	fe842783          	lw	a5,-24(s0)
80005334:	00e7a023          	sw	a4,0(a5)

                    /* If the block is larger than required it can be split into
                     * two. */
                    configASSERT( heapSUBTRACT_WILL_UNDERFLOW( pxBlock->xBlockSize, xWantedSize ) == 0 );

                    if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
80005338:	fec42783          	lw	a5,-20(s0)
8000533c:	0047a703          	lw	a4,4(a5)
80005340:	fcc42783          	lw	a5,-52(s0)
80005344:	40f70733          	sub	a4,a4,a5
80005348:	01000793          	addi	a5,zero,16
8000534c:	00179793          	slli	a5,a5,0x1
80005350:	04e7fa63          	bgeu	a5,a4,800053a4 <pvPortMalloc+0x1b4>
                    {
                        /* This block is to be split into two.  Create a new
                         * block following the number of bytes requested. The void
                         * cast is used to prevent byte alignment warnings from the
                         * compiler. */
                        pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
80005354:	fec42703          	lw	a4,-20(s0)
80005358:	fcc42783          	lw	a5,-52(s0)
8000535c:	00f707b3          	add	a5,a4,a5
80005360:	fcf42e23          	sw	a5,-36(s0)
                        configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );

                        /* Calculate the sizes of two blocks split from the
                         * single block. */
                        pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
80005364:	fec42783          	lw	a5,-20(s0)
80005368:	0047a703          	lw	a4,4(a5)
8000536c:	fcc42783          	lw	a5,-52(s0)
80005370:	40f70733          	sub	a4,a4,a5
80005374:	fdc42783          	lw	a5,-36(s0)
80005378:	00e7a223          	sw	a4,4(a5)
                        pxBlock->xBlockSize = xWantedSize;
8000537c:	fec42783          	lw	a5,-20(s0)
80005380:	fcc42703          	lw	a4,-52(s0)
80005384:	00e7a223          	sw	a4,4(a5)

                        /* Insert the new block into the list of free blocks. */
                        pxNewBlockLink->pxNextFreeBlock = pxPreviousBlock->pxNextFreeBlock;
80005388:	fe842783          	lw	a5,-24(s0)
8000538c:	0007a703          	lw	a4,0(a5)
80005390:	fdc42783          	lw	a5,-36(s0)
80005394:	00e7a023          	sw	a4,0(a5)
                        pxPreviousBlock->pxNextFreeBlock = heapPROTECT_BLOCK_POINTER( pxNewBlockLink );
80005398:	fe842783          	lw	a5,-24(s0)
8000539c:	fdc42703          	lw	a4,-36(s0)
800053a0:	00e7a023          	sw	a4,0(a5)
                    else
                    {
                        mtCOVERAGE_TEST_MARKER();
                    }

                    xFreeBytesRemaining -= pxBlock->xBlockSize;
800053a4:	800097b7          	lui	a5,0x80009
800053a8:	8ec7a703          	lw	a4,-1812(a5) # 800088ec <xFreeBytesRemaining>
800053ac:	fec42783          	lw	a5,-20(s0)
800053b0:	0047a783          	lw	a5,4(a5)
800053b4:	40f70733          	sub	a4,a4,a5
800053b8:	800097b7          	lui	a5,0x80009
800053bc:	8ee7a623          	sw	a4,-1812(a5) # 800088ec <xFreeBytesRemaining>

                    if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
800053c0:	800097b7          	lui	a5,0x80009
800053c4:	8ec7a703          	lw	a4,-1812(a5) # 800088ec <xFreeBytesRemaining>
800053c8:	800097b7          	lui	a5,0x80009
800053cc:	8f07a783          	lw	a5,-1808(a5) # 800088f0 <xMinimumEverFreeBytesRemaining>
800053d0:	00f77a63          	bgeu	a4,a5,800053e4 <pvPortMalloc+0x1f4>
                    {
                        xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
800053d4:	800097b7          	lui	a5,0x80009
800053d8:	8ec7a703          	lw	a4,-1812(a5) # 800088ec <xFreeBytesRemaining>
800053dc:	800097b7          	lui	a5,0x80009
800053e0:	8ee7a823          	sw	a4,-1808(a5) # 800088f0 <xMinimumEverFreeBytesRemaining>
                        mtCOVERAGE_TEST_MARKER();
                    }

                    /* The block is being returned - it is allocated and owned
                     * by the application and has no "next" block. */
                    heapALLOCATE_BLOCK( pxBlock );
800053e4:	fec42783          	lw	a5,-20(s0)
800053e8:	0047a703          	lw	a4,4(a5)
800053ec:	800007b7          	lui	a5,0x80000
800053f0:	00f76733          	or	a4,a4,a5
800053f4:	fec42783          	lw	a5,-20(s0)
800053f8:	00e7a223          	sw	a4,4(a5) # 80000004 <__start+0x4>
                    pxBlock->pxNextFreeBlock = NULL;
800053fc:	fec42783          	lw	a5,-20(s0)
80005400:	0007a023          	sw	zero,0(a5)
                    xNumberOfSuccessfulAllocations++;
80005404:	800097b7          	lui	a5,0x80009
80005408:	8f47a783          	lw	a5,-1804(a5) # 800088f4 <xNumberOfSuccessfulAllocations>
8000540c:	00178713          	addi	a4,a5,1
80005410:	800097b7          	lui	a5,0x80009
80005414:	8ee7aa23          	sw	a4,-1804(a5) # 800088f4 <xNumberOfSuccessfulAllocations>
            mtCOVERAGE_TEST_MARKER();
        }

        traceMALLOC( pvReturn, xWantedSize );
    }
    ( void ) xTaskResumeAll();
80005418:	eb9fc0ef          	jal	ra,800022d0 <xTaskResumeAll>
        }
    }
    #endif /* if ( configUSE_MALLOC_FAILED_HOOK == 1 ) */

    configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
    return pvReturn;
8000541c:	fe442783          	lw	a5,-28(s0)
}
80005420:	00078513          	addi	a0,a5,0
80005424:	03c12083          	lw	ra,60(sp)
80005428:	03812403          	lw	s0,56(sp)
8000542c:	04010113          	addi	sp,sp,64
80005430:	00008067          	jalr	zero,0(ra)

80005434 <vPortFree>:
/*-----------------------------------------------------------*/

void vPortFree( void * pv )
{
80005434:	fd010113          	addi	sp,sp,-48
80005438:	02112623          	sw	ra,44(sp)
8000543c:	02812423          	sw	s0,40(sp)
80005440:	03010413          	addi	s0,sp,48
80005444:	fca42e23          	sw	a0,-36(s0)
    uint8_t * puc = ( uint8_t * ) pv;
80005448:	fdc42783          	lw	a5,-36(s0)
8000544c:	fef42623          	sw	a5,-20(s0)
    BlockLink_t * pxLink;

    if( pv != NULL )
80005450:	fdc42783          	lw	a5,-36(s0)
80005454:	08078a63          	beq	a5,zero,800054e8 <vPortFree+0xb4>
    {
        /* The memory being freed will have an BlockLink_t structure immediately
         * before it. */
        puc -= xHeapStructSize;
80005458:	01000793          	addi	a5,zero,16
8000545c:	40f007b3          	sub	a5,zero,a5
80005460:	fec42703          	lw	a4,-20(s0)
80005464:	00f707b3          	add	a5,a4,a5
80005468:	fef42623          	sw	a5,-20(s0)

        /* This casting is to keep the compiler from issuing warnings. */
        pxLink = ( void * ) puc;
8000546c:	fec42783          	lw	a5,-20(s0)
80005470:	fef42423          	sw	a5,-24(s0)

        heapVALIDATE_BLOCK_POINTER( pxLink );
        configASSERT( heapBLOCK_IS_ALLOCATED( pxLink ) != 0 );
        configASSERT( pxLink->pxNextFreeBlock == NULL );

        if( heapBLOCK_IS_ALLOCATED( pxLink ) != 0 )
80005474:	fe842783          	lw	a5,-24(s0)
80005478:	0047a783          	lw	a5,4(a5)
8000547c:	0607d663          	bge	a5,zero,800054e8 <vPortFree+0xb4>
        {
            if( pxLink->pxNextFreeBlock == NULL )
80005480:	fe842783          	lw	a5,-24(s0)
80005484:	0007a783          	lw	a5,0(a5)
80005488:	06079063          	bne	a5,zero,800054e8 <vPortFree+0xb4>
            {
                /* The block is being returned to the heap - it is no longer
                 * allocated. */
                heapFREE_BLOCK( pxLink );
8000548c:	fe842783          	lw	a5,-24(s0)
80005490:	0047a703          	lw	a4,4(a5)
80005494:	800007b7          	lui	a5,0x80000
80005498:	fff78793          	addi	a5,a5,-1 # 7fffffff <__start-0x1>
8000549c:	00f77733          	and	a4,a4,a5
800054a0:	fe842783          	lw	a5,-24(s0)
800054a4:	00e7a223          	sw	a4,4(a5)
                        ( void ) memset( puc + xHeapStructSize, 0, pxLink->xBlockSize - xHeapStructSize );
                    }
                }
                #endif

                vTaskSuspendAll();
800054a8:	df1fc0ef          	jal	ra,80002298 <vTaskSuspendAll>
                {
                    /* Add this block to the list of free blocks. */
                    xFreeBytesRemaining += pxLink->xBlockSize;
800054ac:	fe842783          	lw	a5,-24(s0)
800054b0:	0047a703          	lw	a4,4(a5)
800054b4:	800097b7          	lui	a5,0x80009
800054b8:	8ec7a783          	lw	a5,-1812(a5) # 800088ec <xFreeBytesRemaining>
800054bc:	00f70733          	add	a4,a4,a5
800054c0:	800097b7          	lui	a5,0x80009
800054c4:	8ee7a623          	sw	a4,-1812(a5) # 800088ec <xFreeBytesRemaining>
                    traceFREE( pv, pxLink->xBlockSize );
                    prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
800054c8:	fe842503          	lw	a0,-24(s0)
800054cc:	288000ef          	jal	ra,80005754 <prvInsertBlockIntoFreeList>
                    xNumberOfSuccessfulFrees++;
800054d0:	800097b7          	lui	a5,0x80009
800054d4:	8f87a783          	lw	a5,-1800(a5) # 800088f8 <xNumberOfSuccessfulFrees>
800054d8:	00178713          	addi	a4,a5,1
800054dc:	800097b7          	lui	a5,0x80009
800054e0:	8ee7ac23          	sw	a4,-1800(a5) # 800088f8 <xNumberOfSuccessfulFrees>
                }
                ( void ) xTaskResumeAll();
800054e4:	dedfc0ef          	jal	ra,800022d0 <xTaskResumeAll>
        else
        {
            mtCOVERAGE_TEST_MARKER();
        }
    }
}
800054e8:	00000013          	addi	zero,zero,0
800054ec:	02c12083          	lw	ra,44(sp)
800054f0:	02812403          	lw	s0,40(sp)
800054f4:	03010113          	addi	sp,sp,48
800054f8:	00008067          	jalr	zero,0(ra)

800054fc <xPortGetFreeHeapSize>:
/*-----------------------------------------------------------*/

size_t xPortGetFreeHeapSize( void )
{
800054fc:	ff010113          	addi	sp,sp,-16
80005500:	00112623          	sw	ra,12(sp)
80005504:	00812423          	sw	s0,8(sp)
80005508:	01010413          	addi	s0,sp,16
    return xFreeBytesRemaining;
8000550c:	800097b7          	lui	a5,0x80009
80005510:	8ec7a783          	lw	a5,-1812(a5) # 800088ec <xFreeBytesRemaining>
}
80005514:	00078513          	addi	a0,a5,0
80005518:	00c12083          	lw	ra,12(sp)
8000551c:	00812403          	lw	s0,8(sp)
80005520:	01010113          	addi	sp,sp,16
80005524:	00008067          	jalr	zero,0(ra)

80005528 <xPortGetMinimumEverFreeHeapSize>:
/*-----------------------------------------------------------*/

size_t xPortGetMinimumEverFreeHeapSize( void )
{
80005528:	ff010113          	addi	sp,sp,-16
8000552c:	00112623          	sw	ra,12(sp)
80005530:	00812423          	sw	s0,8(sp)
80005534:	01010413          	addi	s0,sp,16
    return xMinimumEverFreeBytesRemaining;
80005538:	800097b7          	lui	a5,0x80009
8000553c:	8f07a783          	lw	a5,-1808(a5) # 800088f0 <xMinimumEverFreeBytesRemaining>
}
80005540:	00078513          	addi	a0,a5,0
80005544:	00c12083          	lw	ra,12(sp)
80005548:	00812403          	lw	s0,8(sp)
8000554c:	01010113          	addi	sp,sp,16
80005550:	00008067          	jalr	zero,0(ra)

80005554 <vPortInitialiseBlocks>:
/*-----------------------------------------------------------*/

void vPortInitialiseBlocks( void )
{
80005554:	ff010113          	addi	sp,sp,-16
80005558:	00112623          	sw	ra,12(sp)
8000555c:	00812423          	sw	s0,8(sp)
80005560:	01010413          	addi	s0,sp,16
    /* This just exists to keep the linker quiet. */
}
80005564:	00000013          	addi	zero,zero,0
80005568:	00c12083          	lw	ra,12(sp)
8000556c:	00812403          	lw	s0,8(sp)
80005570:	01010113          	addi	sp,sp,16
80005574:	00008067          	jalr	zero,0(ra)

80005578 <pvPortCalloc>:
/*-----------------------------------------------------------*/

void * pvPortCalloc( size_t xNum,
                     size_t xSize )
{
80005578:	fd010113          	addi	sp,sp,-48
8000557c:	02112623          	sw	ra,44(sp)
80005580:	02812423          	sw	s0,40(sp)
80005584:	03010413          	addi	s0,sp,48
80005588:	fca42e23          	sw	a0,-36(s0)
8000558c:	fcb42c23          	sw	a1,-40(s0)
    void * pv = NULL;
80005590:	fe042623          	sw	zero,-20(s0)

    if( heapMULTIPLY_WILL_OVERFLOW( xNum, xSize ) == 0 )
80005594:	fdc42783          	lw	a5,-36(s0)
80005598:	02078463          	beq	a5,zero,800055c0 <pvPortCalloc+0x48>
8000559c:	fdc42583          	lw	a1,-36(s0)
800055a0:	fff00513          	addi	a0,zero,-1
800055a4:	5e0000ef          	jal	ra,80005b84 <__udivsi3>
800055a8:	00050793          	addi	a5,a0,0
800055ac:	00078713          	addi	a4,a5,0
800055b0:	fd842783          	lw	a5,-40(s0)
800055b4:	00f77663          	bgeu	a4,a5,800055c0 <pvPortCalloc+0x48>
800055b8:	00100793          	addi	a5,zero,1
800055bc:	0080006f          	jal	zero,800055c4 <pvPortCalloc+0x4c>
800055c0:	00000793          	addi	a5,zero,0
800055c4:	04079463          	bne	a5,zero,8000560c <pvPortCalloc+0x94>
    {
        pv = pvPortMalloc( xNum * xSize );
800055c8:	fd842583          	lw	a1,-40(s0)
800055cc:	fdc42503          	lw	a0,-36(s0)
800055d0:	470000ef          	jal	ra,80005a40 <__mulsi3>
800055d4:	00050793          	addi	a5,a0,0
800055d8:	00078513          	addi	a0,a5,0
800055dc:	c15ff0ef          	jal	ra,800051f0 <pvPortMalloc>
800055e0:	fea42623          	sw	a0,-20(s0)

        if( pv != NULL )
800055e4:	fec42783          	lw	a5,-20(s0)
800055e8:	02078263          	beq	a5,zero,8000560c <pvPortCalloc+0x94>
        {
            ( void ) memset( pv, 0, xNum * xSize );
800055ec:	fd842583          	lw	a1,-40(s0)
800055f0:	fdc42503          	lw	a0,-36(s0)
800055f4:	44c000ef          	jal	ra,80005a40 <__mulsi3>
800055f8:	00050793          	addi	a5,a0,0
800055fc:	00078613          	addi	a2,a5,0
80005600:	00000593          	addi	a1,zero,0
80005604:	fec42503          	lw	a0,-20(s0)
80005608:	6a0000ef          	jal	ra,80005ca8 <memset>
        }
    }

    return pv;
8000560c:	fec42783          	lw	a5,-20(s0)
}
80005610:	00078513          	addi	a0,a5,0
80005614:	02c12083          	lw	ra,44(sp)
80005618:	02812403          	lw	s0,40(sp)
8000561c:	03010113          	addi	sp,sp,48
80005620:	00008067          	jalr	zero,0(ra)

80005624 <prvHeapInit>:
/*-----------------------------------------------------------*/

static void prvHeapInit( void ) /* PRIVILEGED_FUNCTION */
{
80005624:	fe010113          	addi	sp,sp,-32
80005628:	00112e23          	sw	ra,28(sp)
8000562c:	00812c23          	sw	s0,24(sp)
80005630:	02010413          	addi	s0,sp,32
    BlockLink_t * pxFirstFreeBlock;
    portPOINTER_SIZE_TYPE uxStartAddress, uxEndAddress;
    size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
80005634:	40000793          	addi	a5,zero,1024
80005638:	fef42423          	sw	a5,-24(s0)

    /* Ensure the heap starts on a correctly aligned boundary. */
    uxStartAddress = ( portPOINTER_SIZE_TYPE ) ucHeap;
8000563c:	800087b7          	lui	a5,0x80008
80005640:	4e078793          	addi	a5,a5,1248 # 800084e0 <ucHeap>
80005644:	fef42623          	sw	a5,-20(s0)

    if( ( uxStartAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
80005648:	fec42783          	lw	a5,-20(s0)
8000564c:	00f7f793          	andi	a5,a5,15
80005650:	02078c63          	beq	a5,zero,80005688 <prvHeapInit+0x64>
    {
        uxStartAddress += ( portBYTE_ALIGNMENT - 1 );
80005654:	fec42783          	lw	a5,-20(s0)
80005658:	00f78793          	addi	a5,a5,15
8000565c:	fef42623          	sw	a5,-20(s0)
        uxStartAddress &= ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK );
80005660:	fec42783          	lw	a5,-20(s0)
80005664:	ff07f793          	andi	a5,a5,-16
80005668:	fef42623          	sw	a5,-20(s0)
        xTotalHeapSize -= ( size_t ) ( uxStartAddress - ( portPOINTER_SIZE_TYPE ) ucHeap );
8000566c:	fe842703          	lw	a4,-24(s0)
80005670:	fec42783          	lw	a5,-20(s0)
80005674:	40f70733          	sub	a4,a4,a5
80005678:	800087b7          	lui	a5,0x80008
8000567c:	4e078793          	addi	a5,a5,1248 # 800084e0 <ucHeap>
80005680:	00f707b3          	add	a5,a4,a5
80005684:	fef42423          	sw	a5,-24(s0)
    }
    #endif

    /* xStart is used to hold a pointer to the first item in the list of free
     * blocks.  The void cast is used to prevent compiler warnings. */
    xStart.pxNextFreeBlock = ( void * ) heapPROTECT_BLOCK_POINTER( uxStartAddress );
80005688:	fec42703          	lw	a4,-20(s0)
8000568c:	800097b7          	lui	a5,0x80009
80005690:	8e078793          	addi	a5,a5,-1824 # 800088e0 <xStart>
80005694:	00e7a023          	sw	a4,0(a5)
    xStart.xBlockSize = ( size_t ) 0;
80005698:	800097b7          	lui	a5,0x80009
8000569c:	8e078793          	addi	a5,a5,-1824 # 800088e0 <xStart>
800056a0:	0007a223          	sw	zero,4(a5)

    /* pxEnd is used to mark the end of the list of free blocks and is inserted
     * at the end of the heap space. */
    uxEndAddress = uxStartAddress + ( portPOINTER_SIZE_TYPE ) xTotalHeapSize;
800056a4:	fec42703          	lw	a4,-20(s0)
800056a8:	fe842783          	lw	a5,-24(s0)
800056ac:	00f707b3          	add	a5,a4,a5
800056b0:	fef42223          	sw	a5,-28(s0)
    uxEndAddress -= ( portPOINTER_SIZE_TYPE ) xHeapStructSize;
800056b4:	01000793          	addi	a5,zero,16
800056b8:	fe442703          	lw	a4,-28(s0)
800056bc:	40f707b3          	sub	a5,a4,a5
800056c0:	fef42223          	sw	a5,-28(s0)
    uxEndAddress &= ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK );
800056c4:	fe442783          	lw	a5,-28(s0)
800056c8:	ff07f793          	andi	a5,a5,-16
800056cc:	fef42223          	sw	a5,-28(s0)
    pxEnd = ( BlockLink_t * ) uxEndAddress;
800056d0:	fe442703          	lw	a4,-28(s0)
800056d4:	800097b7          	lui	a5,0x80009
800056d8:	8ee7a423          	sw	a4,-1816(a5) # 800088e8 <pxEnd>
    pxEnd->xBlockSize = 0;
800056dc:	800097b7          	lui	a5,0x80009
800056e0:	8e87a783          	lw	a5,-1816(a5) # 800088e8 <pxEnd>
800056e4:	0007a223          	sw	zero,4(a5)
    pxEnd->pxNextFreeBlock = heapPROTECT_BLOCK_POINTER( NULL );
800056e8:	800097b7          	lui	a5,0x80009
800056ec:	8e87a783          	lw	a5,-1816(a5) # 800088e8 <pxEnd>
800056f0:	0007a023          	sw	zero,0(a5)

    /* To start with there is a single free block that is sized to take up the
     * entire heap space, minus the space taken by pxEnd. */
    pxFirstFreeBlock = ( BlockLink_t * ) uxStartAddress;
800056f4:	fec42783          	lw	a5,-20(s0)
800056f8:	fef42023          	sw	a5,-32(s0)
    pxFirstFreeBlock->xBlockSize = ( size_t ) ( uxEndAddress - ( portPOINTER_SIZE_TYPE ) pxFirstFreeBlock );
800056fc:	fe042783          	lw	a5,-32(s0)
80005700:	fe442703          	lw	a4,-28(s0)
80005704:	40f70733          	sub	a4,a4,a5
80005708:	fe042783          	lw	a5,-32(s0)
8000570c:	00e7a223          	sw	a4,4(a5)
    pxFirstFreeBlock->pxNextFreeBlock = heapPROTECT_BLOCK_POINTER( pxEnd );
80005710:	800097b7          	lui	a5,0x80009
80005714:	8e87a703          	lw	a4,-1816(a5) # 800088e8 <pxEnd>
80005718:	fe042783          	lw	a5,-32(s0)
8000571c:	00e7a023          	sw	a4,0(a5)

    /* Only one block exists - and it covers the entire usable heap space. */
    xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
80005720:	fe042783          	lw	a5,-32(s0)
80005724:	0047a703          	lw	a4,4(a5)
80005728:	800097b7          	lui	a5,0x80009
8000572c:	8ee7a823          	sw	a4,-1808(a5) # 800088f0 <xMinimumEverFreeBytesRemaining>
    xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
80005730:	fe042783          	lw	a5,-32(s0)
80005734:	0047a703          	lw	a4,4(a5)
80005738:	800097b7          	lui	a5,0x80009
8000573c:	8ee7a623          	sw	a4,-1812(a5) # 800088ec <xFreeBytesRemaining>
}
80005740:	00000013          	addi	zero,zero,0
80005744:	01c12083          	lw	ra,28(sp)
80005748:	01812403          	lw	s0,24(sp)
8000574c:	02010113          	addi	sp,sp,32
80005750:	00008067          	jalr	zero,0(ra)

80005754 <prvInsertBlockIntoFreeList>:
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t * pxBlockToInsert ) /* PRIVILEGED_FUNCTION */
{
80005754:	fd010113          	addi	sp,sp,-48
80005758:	02112623          	sw	ra,44(sp)
8000575c:	02812423          	sw	s0,40(sp)
80005760:	03010413          	addi	s0,sp,48
80005764:	fca42e23          	sw	a0,-36(s0)
    BlockLink_t * pxIterator;
    uint8_t * puc;

    /* Iterate through the list until a block is found that has a higher address
     * than the block being inserted. */
    for( pxIterator = &xStart; heapPROTECT_BLOCK_POINTER( pxIterator->pxNextFreeBlock ) < pxBlockToInsert; pxIterator = heapPROTECT_BLOCK_POINTER( pxIterator->pxNextFreeBlock ) )
80005768:	800097b7          	lui	a5,0x80009
8000576c:	8e078793          	addi	a5,a5,-1824 # 800088e0 <xStart>
80005770:	fef42623          	sw	a5,-20(s0)
80005774:	0100006f          	jal	zero,80005784 <prvInsertBlockIntoFreeList+0x30>
80005778:	fec42783          	lw	a5,-20(s0)
8000577c:	0007a783          	lw	a5,0(a5)
80005780:	fef42623          	sw	a5,-20(s0)
80005784:	fec42783          	lw	a5,-20(s0)
80005788:	0007a783          	lw	a5,0(a5)
8000578c:	fdc42703          	lw	a4,-36(s0)
80005790:	fee7e4e3          	bltu	a5,a4,80005778 <prvInsertBlockIntoFreeList+0x24>
        heapVALIDATE_BLOCK_POINTER( pxIterator );
    }

    /* Do the block being inserted, and the block it is being inserted after
     * make a contiguous block of memory? */
    puc = ( uint8_t * ) pxIterator;
80005794:	fec42783          	lw	a5,-20(s0)
80005798:	fef42423          	sw	a5,-24(s0)

    if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
8000579c:	fec42783          	lw	a5,-20(s0)
800057a0:	0047a783          	lw	a5,4(a5)
800057a4:	fe842703          	lw	a4,-24(s0)
800057a8:	00f707b3          	add	a5,a4,a5
800057ac:	fdc42703          	lw	a4,-36(s0)
800057b0:	02f71463          	bne	a4,a5,800057d8 <prvInsertBlockIntoFreeList+0x84>
    {
        pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
800057b4:	fec42783          	lw	a5,-20(s0)
800057b8:	0047a703          	lw	a4,4(a5)
800057bc:	fdc42783          	lw	a5,-36(s0)
800057c0:	0047a783          	lw	a5,4(a5)
800057c4:	00f70733          	add	a4,a4,a5
800057c8:	fec42783          	lw	a5,-20(s0)
800057cc:	00e7a223          	sw	a4,4(a5)
        pxBlockToInsert = pxIterator;
800057d0:	fec42783          	lw	a5,-20(s0)
800057d4:	fcf42e23          	sw	a5,-36(s0)
        mtCOVERAGE_TEST_MARKER();
    }

    /* Do the block being inserted, and the block it is being inserted before
     * make a contiguous block of memory? */
    puc = ( uint8_t * ) pxBlockToInsert;
800057d8:	fdc42783          	lw	a5,-36(s0)
800057dc:	fef42423          	sw	a5,-24(s0)

    if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) heapPROTECT_BLOCK_POINTER( pxIterator->pxNextFreeBlock ) )
800057e0:	fdc42783          	lw	a5,-36(s0)
800057e4:	0047a783          	lw	a5,4(a5)
800057e8:	fe842703          	lw	a4,-24(s0)
800057ec:	00f70733          	add	a4,a4,a5
800057f0:	fec42783          	lw	a5,-20(s0)
800057f4:	0007a783          	lw	a5,0(a5)
800057f8:	06f71263          	bne	a4,a5,8000585c <prvInsertBlockIntoFreeList+0x108>
    {
        if( heapPROTECT_BLOCK_POINTER( pxIterator->pxNextFreeBlock ) != pxEnd )
800057fc:	fec42783          	lw	a5,-20(s0)
80005800:	0007a703          	lw	a4,0(a5)
80005804:	800097b7          	lui	a5,0x80009
80005808:	8e87a783          	lw	a5,-1816(a5) # 800088e8 <pxEnd>
8000580c:	02f70e63          	beq	a4,a5,80005848 <prvInsertBlockIntoFreeList+0xf4>
        {
            /* Form one big block from the two blocks. */
            pxBlockToInsert->xBlockSize += heapPROTECT_BLOCK_POINTER( pxIterator->pxNextFreeBlock )->xBlockSize;
80005810:	fdc42783          	lw	a5,-36(s0)
80005814:	0047a703          	lw	a4,4(a5)
80005818:	fec42783          	lw	a5,-20(s0)
8000581c:	0007a783          	lw	a5,0(a5)
80005820:	0047a783          	lw	a5,4(a5)
80005824:	00f70733          	add	a4,a4,a5
80005828:	fdc42783          	lw	a5,-36(s0)
8000582c:	00e7a223          	sw	a4,4(a5)
            pxBlockToInsert->pxNextFreeBlock = heapPROTECT_BLOCK_POINTER( pxIterator->pxNextFreeBlock )->pxNextFreeBlock;
80005830:	fec42783          	lw	a5,-20(s0)
80005834:	0007a783          	lw	a5,0(a5)
80005838:	0007a703          	lw	a4,0(a5)
8000583c:	fdc42783          	lw	a5,-36(s0)
80005840:	00e7a023          	sw	a4,0(a5)
80005844:	0280006f          	jal	zero,8000586c <prvInsertBlockIntoFreeList+0x118>
        }
        else
        {
            pxBlockToInsert->pxNextFreeBlock = heapPROTECT_BLOCK_POINTER( pxEnd );
80005848:	800097b7          	lui	a5,0x80009
8000584c:	8e87a703          	lw	a4,-1816(a5) # 800088e8 <pxEnd>
80005850:	fdc42783          	lw	a5,-36(s0)
80005854:	00e7a023          	sw	a4,0(a5)
80005858:	0140006f          	jal	zero,8000586c <prvInsertBlockIntoFreeList+0x118>
        }
    }
    else
    {
        pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
8000585c:	fec42783          	lw	a5,-20(s0)
80005860:	0007a703          	lw	a4,0(a5)
80005864:	fdc42783          	lw	a5,-36(s0)
80005868:	00e7a023          	sw	a4,0(a5)

    /* If the block being inserted plugged a gab, so was merged with the block
     * before and the block after, then it's pxNextFreeBlock pointer will have
     * already been set, and should not be set here as that would make it point
     * to itself. */
    if( pxIterator != pxBlockToInsert )
8000586c:	fec42703          	lw	a4,-20(s0)
80005870:	fdc42783          	lw	a5,-36(s0)
80005874:	00f70863          	beq	a4,a5,80005884 <prvInsertBlockIntoFreeList+0x130>
    {
        pxIterator->pxNextFreeBlock = heapPROTECT_BLOCK_POINTER( pxBlockToInsert );
80005878:	fec42783          	lw	a5,-20(s0)
8000587c:	fdc42703          	lw	a4,-36(s0)
80005880:	00e7a023          	sw	a4,0(a5)
    }
    else
    {
        mtCOVERAGE_TEST_MARKER();
    }
}
80005884:	00000013          	addi	zero,zero,0
80005888:	02c12083          	lw	ra,44(sp)
8000588c:	02812403          	lw	s0,40(sp)
80005890:	03010113          	addi	sp,sp,48
80005894:	00008067          	jalr	zero,0(ra)

80005898 <vPortGetHeapStats>:
/*-----------------------------------------------------------*/

void vPortGetHeapStats( HeapStats_t * pxHeapStats )
{
80005898:	fd010113          	addi	sp,sp,-48
8000589c:	02112623          	sw	ra,44(sp)
800058a0:	02812423          	sw	s0,40(sp)
800058a4:	03010413          	addi	s0,sp,48
800058a8:	fca42e23          	sw	a0,-36(s0)
    BlockLink_t * pxBlock;
    size_t xBlocks = 0, xMaxSize = 0, xMinSize = portMAX_DELAY; /* portMAX_DELAY used as a portable way of getting the maximum value. */
800058ac:	fe042423          	sw	zero,-24(s0)
800058b0:	fe042223          	sw	zero,-28(s0)
800058b4:	fff00793          	addi	a5,zero,-1
800058b8:	fef42023          	sw	a5,-32(s0)

    vTaskSuspendAll();
800058bc:	9ddfc0ef          	jal	ra,80002298 <vTaskSuspendAll>
    {
        pxBlock = heapPROTECT_BLOCK_POINTER( xStart.pxNextFreeBlock );
800058c0:	800097b7          	lui	a5,0x80009
800058c4:	8e078793          	addi	a5,a5,-1824 # 800088e0 <xStart>
800058c8:	0007a783          	lw	a5,0(a5)
800058cc:	fef42623          	sw	a5,-20(s0)

        /* pxBlock will be NULL if the heap has not been initialised.  The heap
         * is initialised automatically when the first allocation is made. */
        if( pxBlock != NULL )
800058d0:	fec42783          	lw	a5,-20(s0)
800058d4:	06078463          	beq	a5,zero,8000593c <vPortGetHeapStats+0xa4>
        {
            while( pxBlock != pxEnd )
800058d8:	0540006f          	jal	zero,8000592c <vPortGetHeapStats+0x94>
            {
                /* Increment the number of blocks and record the largest block seen
                 * so far. */
                xBlocks++;
800058dc:	fe842783          	lw	a5,-24(s0)
800058e0:	00178793          	addi	a5,a5,1
800058e4:	fef42423          	sw	a5,-24(s0)

                if( pxBlock->xBlockSize > xMaxSize )
800058e8:	fec42783          	lw	a5,-20(s0)
800058ec:	0047a783          	lw	a5,4(a5)
800058f0:	fe442703          	lw	a4,-28(s0)
800058f4:	00f77863          	bgeu	a4,a5,80005904 <vPortGetHeapStats+0x6c>
                {
                    xMaxSize = pxBlock->xBlockSize;
800058f8:	fec42783          	lw	a5,-20(s0)
800058fc:	0047a783          	lw	a5,4(a5)
80005900:	fef42223          	sw	a5,-28(s0)
                }

                if( pxBlock->xBlockSize < xMinSize )
80005904:	fec42783          	lw	a5,-20(s0)
80005908:	0047a783          	lw	a5,4(a5)
8000590c:	fe042703          	lw	a4,-32(s0)
80005910:	00e7f863          	bgeu	a5,a4,80005920 <vPortGetHeapStats+0x88>
                {
                    xMinSize = pxBlock->xBlockSize;
80005914:	fec42783          	lw	a5,-20(s0)
80005918:	0047a783          	lw	a5,4(a5)
8000591c:	fef42023          	sw	a5,-32(s0)
                }

                /* Move to the next block in the chain until the last block is
                 * reached. */
                pxBlock = heapPROTECT_BLOCK_POINTER( pxBlock->pxNextFreeBlock );
80005920:	fec42783          	lw	a5,-20(s0)
80005924:	0007a783          	lw	a5,0(a5)
80005928:	fef42623          	sw	a5,-20(s0)
            while( pxBlock != pxEnd )
8000592c:	800097b7          	lui	a5,0x80009
80005930:	8e87a783          	lw	a5,-1816(a5) # 800088e8 <pxEnd>
80005934:	fec42703          	lw	a4,-20(s0)
80005938:	faf712e3          	bne	a4,a5,800058dc <vPortGetHeapStats+0x44>
            }
        }
    }
    ( void ) xTaskResumeAll();
8000593c:	995fc0ef          	jal	ra,800022d0 <xTaskResumeAll>

    pxHeapStats->xSizeOfLargestFreeBlockInBytes = xMaxSize;
80005940:	fdc42783          	lw	a5,-36(s0)
80005944:	fe442703          	lw	a4,-28(s0)
80005948:	00e7a223          	sw	a4,4(a5)
    pxHeapStats->xSizeOfSmallestFreeBlockInBytes = xMinSize;
8000594c:	fdc42783          	lw	a5,-36(s0)
80005950:	fe042703          	lw	a4,-32(s0)
80005954:	00e7a423          	sw	a4,8(a5)
    pxHeapStats->xNumberOfFreeBlocks = xBlocks;
80005958:	fdc42783          	lw	a5,-36(s0)
8000595c:	fe842703          	lw	a4,-24(s0)
80005960:	00e7a623          	sw	a4,12(a5)

    taskENTER_CRITICAL();
80005964:	30047073          	csrrci	zero,mstatus,8
80005968:	800077b7          	lui	a5,0x80007
8000596c:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
80005970:	00178713          	addi	a4,a5,1
80005974:	800077b7          	lui	a5,0x80007
80005978:	c6e7a623          	sw	a4,-916(a5) # 80006c6c <xCriticalNesting>
    {
        pxHeapStats->xAvailableHeapSpaceInBytes = xFreeBytesRemaining;
8000597c:	800097b7          	lui	a5,0x80009
80005980:	8ec7a703          	lw	a4,-1812(a5) # 800088ec <xFreeBytesRemaining>
80005984:	fdc42783          	lw	a5,-36(s0)
80005988:	00e7a023          	sw	a4,0(a5)
        pxHeapStats->xNumberOfSuccessfulAllocations = xNumberOfSuccessfulAllocations;
8000598c:	800097b7          	lui	a5,0x80009
80005990:	8f47a703          	lw	a4,-1804(a5) # 800088f4 <xNumberOfSuccessfulAllocations>
80005994:	fdc42783          	lw	a5,-36(s0)
80005998:	00e7aa23          	sw	a4,20(a5)
        pxHeapStats->xNumberOfSuccessfulFrees = xNumberOfSuccessfulFrees;
8000599c:	800097b7          	lui	a5,0x80009
800059a0:	8f87a703          	lw	a4,-1800(a5) # 800088f8 <xNumberOfSuccessfulFrees>
800059a4:	fdc42783          	lw	a5,-36(s0)
800059a8:	00e7ac23          	sw	a4,24(a5)
        pxHeapStats->xMinimumEverFreeBytesRemaining = xMinimumEverFreeBytesRemaining;
800059ac:	800097b7          	lui	a5,0x80009
800059b0:	8f07a703          	lw	a4,-1808(a5) # 800088f0 <xMinimumEverFreeBytesRemaining>
800059b4:	fdc42783          	lw	a5,-36(s0)
800059b8:	00e7a823          	sw	a4,16(a5)
    }
    taskEXIT_CRITICAL();
800059bc:	800077b7          	lui	a5,0x80007
800059c0:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
800059c4:	fff78713          	addi	a4,a5,-1
800059c8:	800077b7          	lui	a5,0x80007
800059cc:	c6e7a623          	sw	a4,-916(a5) # 80006c6c <xCriticalNesting>
800059d0:	800077b7          	lui	a5,0x80007
800059d4:	c6c7a783          	lw	a5,-916(a5) # 80006c6c <xCriticalNesting>
800059d8:	00079463          	bne	a5,zero,800059e0 <vPortGetHeapStats+0x148>
800059dc:	30046073          	csrrsi	zero,mstatus,8
}
800059e0:	00000013          	addi	zero,zero,0
800059e4:	02c12083          	lw	ra,44(sp)
800059e8:	02812403          	lw	s0,40(sp)
800059ec:	03010113          	addi	sp,sp,48
800059f0:	00008067          	jalr	zero,0(ra)

800059f4 <vPortHeapResetState>:
 * Reset the state in this file. This state is normally initialized at start up.
 * This function must be called by the application before restarting the
 * scheduler.
 */
void vPortHeapResetState( void )
{
800059f4:	ff010113          	addi	sp,sp,-16
800059f8:	00112623          	sw	ra,12(sp)
800059fc:	00812423          	sw	s0,8(sp)
80005a00:	01010413          	addi	s0,sp,16
    pxEnd = NULL;
80005a04:	800097b7          	lui	a5,0x80009
80005a08:	8e07a423          	sw	zero,-1816(a5) # 800088e8 <pxEnd>

    xFreeBytesRemaining = ( size_t ) 0U;
80005a0c:	800097b7          	lui	a5,0x80009
80005a10:	8e07a623          	sw	zero,-1812(a5) # 800088ec <xFreeBytesRemaining>
    xMinimumEverFreeBytesRemaining = ( size_t ) 0U;
80005a14:	800097b7          	lui	a5,0x80009
80005a18:	8e07a823          	sw	zero,-1808(a5) # 800088f0 <xMinimumEverFreeBytesRemaining>
    xNumberOfSuccessfulAllocations = ( size_t ) 0U;
80005a1c:	800097b7          	lui	a5,0x80009
80005a20:	8e07aa23          	sw	zero,-1804(a5) # 800088f4 <xNumberOfSuccessfulAllocations>
    xNumberOfSuccessfulFrees = ( size_t ) 0U;
80005a24:	800097b7          	lui	a5,0x80009
80005a28:	8e07ac23          	sw	zero,-1800(a5) # 800088f8 <xNumberOfSuccessfulFrees>
}
80005a2c:	00000013          	addi	zero,zero,0
80005a30:	00c12083          	lw	ra,12(sp)
80005a34:	00812403          	lw	s0,8(sp)
80005a38:	01010113          	addi	sp,sp,16
80005a3c:	00008067          	jalr	zero,0(ra)

80005a40 <__mulsi3>:
#include <stddef.h>

#include <stdint.h>

// 32-bit signed multiplication using bitwise operations and addition
int32_t __mulsi3(int32_t a, int32_t b) {
80005a40:	fd010113          	addi	sp,sp,-48
80005a44:	02112623          	sw	ra,44(sp)
80005a48:	02812423          	sw	s0,40(sp)
80005a4c:	03010413          	addi	s0,sp,48
80005a50:	fca42e23          	sw	a0,-36(s0)
80005a54:	fcb42c23          	sw	a1,-40(s0)
    int32_t result = 0;
80005a58:	fe042623          	sw	zero,-20(s0)
    int negative = (a < 0) ^ (b < 0);  // Determine if the result should be negative
80005a5c:	fdc42703          	lw	a4,-36(s0)
80005a60:	fd842783          	lw	a5,-40(s0)
80005a64:	00f747b3          	xor	a5,a4,a5
80005a68:	01f7d793          	srli	a5,a5,0x1f
80005a6c:	0ff7f793          	andi	a5,a5,255
80005a70:	fef42023          	sw	a5,-32(s0)
    
    // Convert to absolute values
    uint32_t x = (a < 0) ? -a : a;
80005a74:	fdc42783          	lw	a5,-36(s0)
80005a78:	41f7d713          	srai	a4,a5,0x1f
80005a7c:	fdc42783          	lw	a5,-36(s0)
80005a80:	00f747b3          	xor	a5,a4,a5
80005a84:	40e787b3          	sub	a5,a5,a4
80005a88:	fef42423          	sw	a5,-24(s0)
    uint32_t y = (b < 0) ? -b : b;
80005a8c:	fd842783          	lw	a5,-40(s0)
80005a90:	41f7d713          	srai	a4,a5,0x1f
80005a94:	fd842783          	lw	a5,-40(s0)
80005a98:	00f747b3          	xor	a5,a4,a5
80005a9c:	40e787b3          	sub	a5,a5,a4
80005aa0:	fef42223          	sw	a5,-28(s0)

    while (y) {
80005aa4:	0380006f          	jal	zero,80005adc <__mulsi3+0x9c>
        if (y & 1) {
80005aa8:	fe442783          	lw	a5,-28(s0)
80005aac:	0017f793          	andi	a5,a5,1
80005ab0:	00078a63          	beq	a5,zero,80005ac4 <__mulsi3+0x84>
            result += x;
80005ab4:	fec42703          	lw	a4,-20(s0)
80005ab8:	fe842783          	lw	a5,-24(s0)
80005abc:	00f707b3          	add	a5,a4,a5
80005ac0:	fef42623          	sw	a5,-20(s0)
        }
        x <<= 1;  // Shift left (multiply by 2)
80005ac4:	fe842783          	lw	a5,-24(s0)
80005ac8:	00179793          	slli	a5,a5,0x1
80005acc:	fef42423          	sw	a5,-24(s0)
        y >>= 1;  // Shift right (divide by 2)
80005ad0:	fe442783          	lw	a5,-28(s0)
80005ad4:	0017d793          	srli	a5,a5,0x1
80005ad8:	fef42223          	sw	a5,-28(s0)
    while (y) {
80005adc:	fe442783          	lw	a5,-28(s0)
80005ae0:	fc0794e3          	bne	a5,zero,80005aa8 <__mulsi3+0x68>
    }

    return negative ? -result : result;
80005ae4:	fe042783          	lw	a5,-32(s0)
80005ae8:	00078863          	beq	a5,zero,80005af8 <__mulsi3+0xb8>
80005aec:	fec42783          	lw	a5,-20(s0)
80005af0:	40f007b3          	sub	a5,zero,a5
80005af4:	0080006f          	jal	zero,80005afc <__mulsi3+0xbc>
80005af8:	fec42783          	lw	a5,-20(s0)
}
80005afc:	00078513          	addi	a0,a5,0
80005b00:	02c12083          	lw	ra,44(sp)
80005b04:	02812403          	lw	s0,40(sp)
80005b08:	03010113          	addi	sp,sp,48
80005b0c:	00008067          	jalr	zero,0(ra)

80005b10 <__clzsi2>:

// Count leading zeros for 32-bit integer
int32_t __clzsi2(uint32_t x) {
80005b10:	fd010113          	addi	sp,sp,-48
80005b14:	02112623          	sw	ra,44(sp)
80005b18:	02812423          	sw	s0,40(sp)
80005b1c:	03010413          	addi	s0,sp,48
80005b20:	fca42e23          	sw	a0,-36(s0)
    if (x == 0) return 32;
80005b24:	fdc42783          	lw	a5,-36(s0)
80005b28:	00079663          	bne	a5,zero,80005b34 <__clzsi2+0x24>
80005b2c:	02000793          	addi	a5,zero,32
80005b30:	0400006f          	jal	zero,80005b70 <__clzsi2+0x60>
    int count = 0;
80005b34:	fe042623          	sw	zero,-20(s0)
    for (int32_t mask = 0x80000000; (x & mask) == 0; mask >>= 1) {
80005b38:	800007b7          	lui	a5,0x80000
80005b3c:	fef42423          	sw	a5,-24(s0)
80005b40:	01c0006f          	jal	zero,80005b5c <__clzsi2+0x4c>
        count++;
80005b44:	fec42783          	lw	a5,-20(s0)
80005b48:	00178793          	addi	a5,a5,1 # 80000001 <__start+0x1>
80005b4c:	fef42623          	sw	a5,-20(s0)
    for (int32_t mask = 0x80000000; (x & mask) == 0; mask >>= 1) {
80005b50:	fe842783          	lw	a5,-24(s0)
80005b54:	4017d793          	srai	a5,a5,0x1
80005b58:	fef42423          	sw	a5,-24(s0)
80005b5c:	fe842703          	lw	a4,-24(s0)
80005b60:	fdc42783          	lw	a5,-36(s0)
80005b64:	00f777b3          	and	a5,a4,a5
80005b68:	fc078ee3          	beq	a5,zero,80005b44 <__clzsi2+0x34>
    }
    return count;
80005b6c:	fec42783          	lw	a5,-20(s0)
}
80005b70:	00078513          	addi	a0,a5,0
80005b74:	02c12083          	lw	ra,44(sp)
80005b78:	02812403          	lw	s0,40(sp)
80005b7c:	03010113          	addi	sp,sp,48
80005b80:	00008067          	jalr	zero,0(ra)

80005b84 <__udivsi3>:

unsigned int __udivsi3(unsigned int a, unsigned int b) {
80005b84:	fd010113          	addi	sp,sp,-48
80005b88:	02112623          	sw	ra,44(sp)
80005b8c:	02812423          	sw	s0,40(sp)
80005b90:	03010413          	addi	s0,sp,48
80005b94:	fca42e23          	sw	a0,-36(s0)
80005b98:	fcb42c23          	sw	a1,-40(s0)
    unsigned int q = 0;
80005b9c:	fe042623          	sw	zero,-20(s0)
    unsigned int r = 0;
80005ba0:	fe042423          	sw	zero,-24(s0)
    
    // Loop over the bits of the dividend
    for (int i = 31; i >= 0; --i) {
80005ba4:	01f00793          	addi	a5,zero,31
80005ba8:	fef42223          	sw	a5,-28(s0)
80005bac:	0640006f          	jal	zero,80005c10 <__udivsi3+0x8c>
        // Shift remainder left and add the next bit of the dividend
        r = (r << 1) | ((a >> i) & 1);
80005bb0:	fe842783          	lw	a5,-24(s0)
80005bb4:	00179713          	slli	a4,a5,0x1
80005bb8:	fe442783          	lw	a5,-28(s0)
80005bbc:	fdc42683          	lw	a3,-36(s0)
80005bc0:	00f6d7b3          	srl	a5,a3,a5
80005bc4:	0017f793          	andi	a5,a5,1
80005bc8:	00f767b3          	or	a5,a4,a5
80005bcc:	fef42423          	sw	a5,-24(s0)
        
        // If the remainder is greater than or equal to the divisor, subtract divisor
        if (r >= b) {
80005bd0:	fe842703          	lw	a4,-24(s0)
80005bd4:	fd842783          	lw	a5,-40(s0)
80005bd8:	02f76663          	bltu	a4,a5,80005c04 <__udivsi3+0x80>
            r -= b;
80005bdc:	fe842703          	lw	a4,-24(s0)
80005be0:	fd842783          	lw	a5,-40(s0)
80005be4:	40f707b3          	sub	a5,a4,a5
80005be8:	fef42423          	sw	a5,-24(s0)
            q |= (1U << i);
80005bec:	fe442783          	lw	a5,-28(s0)
80005bf0:	00100713          	addi	a4,zero,1
80005bf4:	00f717b3          	sll	a5,a4,a5
80005bf8:	fec42703          	lw	a4,-20(s0)
80005bfc:	00f767b3          	or	a5,a4,a5
80005c00:	fef42623          	sw	a5,-20(s0)
    for (int i = 31; i >= 0; --i) {
80005c04:	fe442783          	lw	a5,-28(s0)
80005c08:	fff78793          	addi	a5,a5,-1
80005c0c:	fef42223          	sw	a5,-28(s0)
80005c10:	fe442783          	lw	a5,-28(s0)
80005c14:	f807dee3          	bge	a5,zero,80005bb0 <__udivsi3+0x2c>
        }
    }
    
    return q;
80005c18:	fec42783          	lw	a5,-20(s0)
}
80005c1c:	00078513          	addi	a0,a5,0
80005c20:	02c12083          	lw	ra,44(sp)
80005c24:	02812403          	lw	s0,40(sp)
80005c28:	03010113          	addi	sp,sp,48
80005c2c:	00008067          	jalr	zero,0(ra)

80005c30 <memcpy>:


void *memcpy(void *dest, const void *src, size_t n) {
80005c30:	fd010113          	addi	sp,sp,-48
80005c34:	02112623          	sw	ra,44(sp)
80005c38:	02812423          	sw	s0,40(sp)
80005c3c:	03010413          	addi	s0,sp,48
80005c40:	fca42e23          	sw	a0,-36(s0)
80005c44:	fcb42c23          	sw	a1,-40(s0)
80005c48:	fcc42a23          	sw	a2,-44(s0)
    char *d = dest;
80005c4c:	fdc42783          	lw	a5,-36(s0)
80005c50:	fef42623          	sw	a5,-20(s0)
    const char *s = src;
80005c54:	fd842783          	lw	a5,-40(s0)
80005c58:	fef42423          	sw	a5,-24(s0)
    while (n--) *d++ = *s++;
80005c5c:	0240006f          	jal	zero,80005c80 <memcpy+0x50>
80005c60:	fe842703          	lw	a4,-24(s0)
80005c64:	00170793          	addi	a5,a4,1
80005c68:	fef42423          	sw	a5,-24(s0)
80005c6c:	fec42783          	lw	a5,-20(s0)
80005c70:	00178693          	addi	a3,a5,1
80005c74:	fed42623          	sw	a3,-20(s0)
80005c78:	00074703          	lbu	a4,0(a4)
80005c7c:	00e78023          	sb	a4,0(a5)
80005c80:	fd442783          	lw	a5,-44(s0)
80005c84:	fff78713          	addi	a4,a5,-1
80005c88:	fce42a23          	sw	a4,-44(s0)
80005c8c:	fc079ae3          	bne	a5,zero,80005c60 <memcpy+0x30>
    return dest;
80005c90:	fdc42783          	lw	a5,-36(s0)
}
80005c94:	00078513          	addi	a0,a5,0
80005c98:	02c12083          	lw	ra,44(sp)
80005c9c:	02812403          	lw	s0,40(sp)
80005ca0:	03010113          	addi	sp,sp,48
80005ca4:	00008067          	jalr	zero,0(ra)

80005ca8 <memset>:

void *memset(void *s, int c, size_t n) {
80005ca8:	fd010113          	addi	sp,sp,-48
80005cac:	02112623          	sw	ra,44(sp)
80005cb0:	02812423          	sw	s0,40(sp)
80005cb4:	03010413          	addi	s0,sp,48
80005cb8:	fca42e23          	sw	a0,-36(s0)
80005cbc:	fcb42c23          	sw	a1,-40(s0)
80005cc0:	fcc42a23          	sw	a2,-44(s0)
    char *p = s;
80005cc4:	fdc42783          	lw	a5,-36(s0)
80005cc8:	fef42623          	sw	a5,-20(s0)
    while (n--) *p++ = c;
80005ccc:	01c0006f          	jal	zero,80005ce8 <memset+0x40>
80005cd0:	fec42783          	lw	a5,-20(s0)
80005cd4:	00178713          	addi	a4,a5,1
80005cd8:	fee42623          	sw	a4,-20(s0)
80005cdc:	fd842703          	lw	a4,-40(s0)
80005ce0:	0ff77713          	andi	a4,a4,255
80005ce4:	00e78023          	sb	a4,0(a5)
80005ce8:	fd442783          	lw	a5,-44(s0)
80005cec:	fff78713          	addi	a4,a5,-1
80005cf0:	fce42a23          	sw	a4,-44(s0)
80005cf4:	fc079ee3          	bne	a5,zero,80005cd0 <memset+0x28>
    return s;
80005cf8:	fdc42783          	lw	a5,-36(s0)
}
80005cfc:	00078513          	addi	a0,a5,0
80005d00:	02c12083          	lw	ra,44(sp)
80005d04:	02812403          	lw	s0,40(sp)
80005d08:	03010113          	addi	sp,sp,48
80005d0c:	00008067          	jalr	zero,0(ra)

Disassembly of section .eh_frame:

80005d10 <.eh_frame>:
80005d10:	0010                	.insn	2, 0x0010
80005d12:	0000                	.insn	2, 0x
80005d14:	0000                	.insn	2, 0x
80005d16:	0000                	.insn	2, 0x
80005d18:	00527a03          	.insn	4, 0x00527a03
80005d1c:	7c01                	.insn	2, 0x7c01
80005d1e:	0101                	.insn	2, 0x0101
80005d20:	00020c1b          	.insn	4, 0x00020c1b
80005d24:	001c                	.insn	2, 0x001c
80005d26:	0000                	.insn	2, 0x
80005d28:	0018                	.insn	2, 0x0018
80005d2a:	0000                	.insn	2, 0x
80005d2c:	a2e4                	.insn	2, 0xa2e4
80005d2e:	ffff                	.insn	2, 0xffff
80005d30:	0028                	.insn	2, 0x0028
80005d32:	0000                	.insn	2, 0x
80005d34:	4400                	.insn	2, 0x4400
80005d36:	100e                	.insn	2, 0x100e
80005d38:	8148                	.insn	2, 0x8148
80005d3a:	8801                	.insn	2, 0x8801
80005d3c:	4402                	.insn	2, 0x4402
80005d3e:	080c                	.insn	2, 0x080c
80005d40:	0000                	.insn	2, 0x
80005d42:	0000                	.insn	2, 0x
80005d44:	0024                	.insn	2, 0x0024
80005d46:	0000                	.insn	2, 0x
80005d48:	0038                	.insn	2, 0x0038
80005d4a:	0000                	.insn	2, 0x
80005d4c:	a2ec                	.insn	2, 0xa2ec
80005d4e:	ffff                	.insn	2, 0xffff
80005d50:	0024                	.insn	2, 0x0024
80005d52:	0000                	.insn	2, 0x
80005d54:	4400                	.insn	2, 0x4400
80005d56:	100e                	.insn	2, 0x100e
80005d58:	8148                	.insn	2, 0x8148
80005d5a:	8801                	.insn	2, 0x8801
80005d5c:	4402                	.insn	2, 0x4402
80005d5e:	080c                	.insn	2, 0x080c
80005d60:	4800                	.insn	2, 0x4800
80005d62:	44c1                	.insn	2, 0x44c1
80005d64:	0cc8                	.insn	2, 0x0cc8
80005d66:	1002                	.insn	2, 0x1002
80005d68:	0e44                	.insn	2, 0x0e44
80005d6a:	0000                	.insn	2, 0x
80005d6c:	0024                	.insn	2, 0x0024
80005d6e:	0000                	.insn	2, 0x
80005d70:	0060                	.insn	2, 0x0060
80005d72:	0000                	.insn	2, 0x
80005d74:	a2e8                	.insn	2, 0xa2e8
80005d76:	ffff                	.insn	2, 0xffff
80005d78:	0024                	.insn	2, 0x0024
80005d7a:	0000                	.insn	2, 0x
80005d7c:	4400                	.insn	2, 0x4400
80005d7e:	100e                	.insn	2, 0x100e
80005d80:	8148                	.insn	2, 0x8148
80005d82:	8801                	.insn	2, 0x8801
80005d84:	4402                	.insn	2, 0x4402
80005d86:	080c                	.insn	2, 0x080c
80005d88:	4800                	.insn	2, 0x4800
80005d8a:	44c1                	.insn	2, 0x44c1
80005d8c:	0cc8                	.insn	2, 0x0cc8
80005d8e:	1002                	.insn	2, 0x1002
80005d90:	0e44                	.insn	2, 0x0e44
80005d92:	0000                	.insn	2, 0x
80005d94:	0024                	.insn	2, 0x0024
80005d96:	0000                	.insn	2, 0x
80005d98:	0088                	.insn	2, 0x0088
80005d9a:	0000                	.insn	2, 0x
80005d9c:	a2e4                	.insn	2, 0xa2e4
80005d9e:	ffff                	.insn	2, 0xffff
80005da0:	0024                	.insn	2, 0x0024
80005da2:	0000                	.insn	2, 0x
80005da4:	4400                	.insn	2, 0x4400
80005da6:	100e                	.insn	2, 0x100e
80005da8:	8148                	.insn	2, 0x8148
80005daa:	8801                	.insn	2, 0x8801
80005dac:	4402                	.insn	2, 0x4402
80005dae:	080c                	.insn	2, 0x080c
80005db0:	4800                	.insn	2, 0x4800
80005db2:	44c1                	.insn	2, 0x44c1
80005db4:	0cc8                	.insn	2, 0x0cc8
80005db6:	1002                	.insn	2, 0x1002
80005db8:	0e44                	.insn	2, 0x0e44
80005dba:	0000                	.insn	2, 0x
80005dbc:	0024                	.insn	2, 0x0024
80005dbe:	0000                	.insn	2, 0x
80005dc0:	00b0                	.insn	2, 0x00b0
80005dc2:	0000                	.insn	2, 0x
80005dc4:	a2e0                	.insn	2, 0xa2e0
80005dc6:	ffff                	.insn	2, 0xffff
80005dc8:	0024                	.insn	2, 0x0024
80005dca:	0000                	.insn	2, 0x
80005dcc:	4400                	.insn	2, 0x4400
80005dce:	100e                	.insn	2, 0x100e
80005dd0:	8148                	.insn	2, 0x8148
80005dd2:	8801                	.insn	2, 0x8801
80005dd4:	4402                	.insn	2, 0x4402
80005dd6:	080c                	.insn	2, 0x080c
80005dd8:	4800                	.insn	2, 0x4800
80005dda:	44c1                	.insn	2, 0x44c1
80005ddc:	0cc8                	.insn	2, 0x0cc8
80005dde:	1002                	.insn	2, 0x1002
80005de0:	0e44                	.insn	2, 0x0e44
80005de2:	0000                	.insn	2, 0x
80005de4:	0024                	.insn	2, 0x0024
80005de6:	0000                	.insn	2, 0x
80005de8:	00d8                	.insn	2, 0x00d8
80005dea:	0000                	.insn	2, 0x
80005dec:	a2dc                	.insn	2, 0xa2dc
80005dee:	ffff                	.insn	2, 0xffff
80005df0:	0024                	.insn	2, 0x0024
80005df2:	0000                	.insn	2, 0x
80005df4:	4400                	.insn	2, 0x4400
80005df6:	100e                	.insn	2, 0x100e
80005df8:	8148                	.insn	2, 0x8148
80005dfa:	8801                	.insn	2, 0x8801
80005dfc:	4402                	.insn	2, 0x4402
80005dfe:	080c                	.insn	2, 0x080c
80005e00:	4800                	.insn	2, 0x4800
80005e02:	44c1                	.insn	2, 0x44c1
80005e04:	0cc8                	.insn	2, 0x0cc8
80005e06:	1002                	.insn	2, 0x1002
80005e08:	0e44                	.insn	2, 0x0e44
80005e0a:	0000                	.insn	2, 0x
80005e0c:	0024                	.insn	2, 0x0024
80005e0e:	0000                	.insn	2, 0x
80005e10:	0100                	.insn	2, 0x0100
80005e12:	0000                	.insn	2, 0x
80005e14:	a2d8                	.insn	2, 0xa2d8
80005e16:	ffff                	.insn	2, 0xffff
80005e18:	006c                	.insn	2, 0x006c
80005e1a:	0000                	.insn	2, 0x
80005e1c:	4400                	.insn	2, 0x4400
80005e1e:	200e                	.insn	2, 0x200e
80005e20:	8148                	.insn	2, 0x8148
80005e22:	8801                	.insn	2, 0x8801
80005e24:	4402                	.insn	2, 0x4402
80005e26:	080c                	.insn	2, 0x080c
80005e28:	0200                	.insn	2, 0x0200
80005e2a:	c150                	.insn	2, 0xc150
80005e2c:	c844                	.insn	2, 0xc844
80005e2e:	020c                	.insn	2, 0x020c
80005e30:	4420                	.insn	2, 0x4420
80005e32:	000e                	.insn	2, 0x000e
80005e34:	0024                	.insn	2, 0x0024
80005e36:	0000                	.insn	2, 0x
80005e38:	0128                	.insn	2, 0x0128
80005e3a:	0000                	.insn	2, 0x
80005e3c:	a31c                	.insn	2, 0xa31c
80005e3e:	ffff                	.insn	2, 0xffff
80005e40:	0030                	.insn	2, 0x0030
80005e42:	0000                	.insn	2, 0x
80005e44:	4400                	.insn	2, 0x4400
80005e46:	200e                	.insn	2, 0x200e
80005e48:	8148                	.insn	2, 0x8148
80005e4a:	8801                	.insn	2, 0x8801
80005e4c:	4402                	.insn	2, 0x4402
80005e4e:	080c                	.insn	2, 0x080c
80005e50:	5400                	.insn	2, 0x5400
80005e52:	44c1                	.insn	2, 0x44c1
80005e54:	0cc8                	.insn	2, 0x0cc8
80005e56:	2002                	.insn	2, 0x2002
80005e58:	0e44                	.insn	2, 0x0e44
80005e5a:	0000                	.insn	2, 0x
80005e5c:	0024                	.insn	2, 0x0024
80005e5e:	0000                	.insn	2, 0x
80005e60:	0150                	.insn	2, 0x0150
80005e62:	0000                	.insn	2, 0x
80005e64:	a324                	.insn	2, 0xa324
80005e66:	ffff                	.insn	2, 0xffff
80005e68:	0090                	.insn	2, 0x0090
80005e6a:	0000                	.insn	2, 0x
80005e6c:	4400                	.insn	2, 0x4400
80005e6e:	300e                	.insn	2, 0x300e
80005e70:	8148                	.insn	2, 0x8148
80005e72:	8801                	.insn	2, 0x8801
80005e74:	4402                	.insn	2, 0x4402
80005e76:	080c                	.insn	2, 0x080c
80005e78:	0200                	.insn	2, 0x0200
80005e7a:	c174                	.insn	2, 0xc174
80005e7c:	c844                	.insn	2, 0xc844
80005e7e:	020c                	.insn	2, 0x020c
80005e80:	4430                	.insn	2, 0x4430
80005e82:	000e                	.insn	2, 0x000e
80005e84:	0024                	.insn	2, 0x0024
80005e86:	0000                	.insn	2, 0x
80005e88:	0178                	.insn	2, 0x0178
80005e8a:	0000                	.insn	2, 0x
80005e8c:	a38c                	.insn	2, 0xa38c
80005e8e:	ffff                	.insn	2, 0xffff
80005e90:	00dc                	.insn	2, 0x00dc
80005e92:	0000                	.insn	2, 0x
80005e94:	4400                	.insn	2, 0x4400
80005e96:	300e                	.insn	2, 0x300e
80005e98:	8148                	.insn	2, 0x8148
80005e9a:	8801                	.insn	2, 0x8801
80005e9c:	4402                	.insn	2, 0x4402
80005e9e:	080c                	.insn	2, 0x080c
80005ea0:	0200                	.insn	2, 0x0200
80005ea2:	c1c0                	.insn	2, 0xc1c0
80005ea4:	c844                	.insn	2, 0xc844
80005ea6:	020c                	.insn	2, 0x020c
80005ea8:	4430                	.insn	2, 0x4430
80005eaa:	000e                	.insn	2, 0x000e
80005eac:	0024                	.insn	2, 0x0024
80005eae:	0000                	.insn	2, 0x
80005eb0:	01a0                	.insn	2, 0x01a0
80005eb2:	0000                	.insn	2, 0x
80005eb4:	a440                	.insn	2, 0xa440
80005eb6:	ffff                	.insn	2, 0xffff
80005eb8:	00a0                	.insn	2, 0x00a0
80005eba:	0000                	.insn	2, 0x
80005ebc:	4400                	.insn	2, 0x4400
80005ebe:	300e                	.insn	2, 0x300e
80005ec0:	8148                	.insn	2, 0x8148
80005ec2:	8801                	.insn	2, 0x8801
80005ec4:	4402                	.insn	2, 0x4402
80005ec6:	080c                	.insn	2, 0x080c
80005ec8:	0200                	.insn	2, 0x0200
80005eca:	c184                	.insn	2, 0xc184
80005ecc:	c844                	.insn	2, 0xc844
80005ece:	020c                	.insn	2, 0x020c
80005ed0:	4430                	.insn	2, 0x4430
80005ed2:	000e                	.insn	2, 0x000e
80005ed4:	0040                	.insn	2, 0x0040
80005ed6:	0000                	.insn	2, 0x
80005ed8:	01c8                	.insn	2, 0x01c8
80005eda:	0000                	.insn	2, 0x
80005edc:	a4b8                	.insn	2, 0xa4b8
80005ede:	ffff                	.insn	2, 0xffff
80005ee0:	02a0                	.insn	2, 0x02a0
80005ee2:	0000                	.insn	2, 0x
80005ee4:	4400                	.insn	2, 0x4400
80005ee6:	400e                	.insn	2, 0x400e
80005ee8:	8160                	.insn	2, 0x8160
80005eea:	8801                	.insn	2, 0x8801
80005eec:	8902                	.insn	2, 0x8902
80005eee:	93049203          	lh	tp,-1744(s1)
80005ef2:	9405                	.insn	2, 0x9405
80005ef4:	9506                	.insn	2, 0x9506
80005ef6:	44089607          	.insn	4, 0x44089607
80005efa:	080c                	.insn	2, 0x080c
80005efc:	0300                	.insn	2, 0x0300
80005efe:	0254                	.insn	2, 0x0254
80005f00:	44c1                	.insn	2, 0x44c1
80005f02:	0cc8                	.insn	2, 0x0cc8
80005f04:	4002                	.insn	2, 0x4002
80005f06:	c944                	.insn	2, 0xc944
80005f08:	d244                	.insn	2, 0xd244
80005f0a:	d344                	.insn	2, 0xd344
80005f0c:	d444                	.insn	2, 0xd444
80005f0e:	d544                	.insn	2, 0xd544
80005f10:	d644                	.insn	2, 0xd644
80005f12:	0e44                	.insn	2, 0x0e44
80005f14:	0000                	.insn	2, 0x
80005f16:	0000                	.insn	2, 0x
80005f18:	0038                	.insn	2, 0x0038
80005f1a:	0000                	.insn	2, 0x
80005f1c:	020c                	.insn	2, 0x020c
80005f1e:	0000                	.insn	2, 0x
80005f20:	a714                	.insn	2, 0xa714
80005f22:	ffff                	.insn	2, 0xffff
80005f24:	01d4                	.insn	2, 0x01d4
80005f26:	0000                	.insn	2, 0x
80005f28:	4400                	.insn	2, 0x4400
80005f2a:	400e                	.insn	2, 0x400e
80005f2c:	8158                	.insn	2, 0x8158
80005f2e:	8801                	.insn	2, 0x8801
80005f30:	8902                	.insn	2, 0x8902
80005f32:	93049203          	lh	tp,-1744(s1)
80005f36:	9405                	.insn	2, 0x9405
80005f38:	4406                	.insn	2, 0x4406
80005f3a:	080c                	.insn	2, 0x080c
80005f3c:	0300                	.insn	2, 0x0300
80005f3e:	0198                	.insn	2, 0x0198
80005f40:	44c1                	.insn	2, 0x44c1
80005f42:	0cc8                	.insn	2, 0x0cc8
80005f44:	4002                	.insn	2, 0x4002
80005f46:	c944                	.insn	2, 0xc944
80005f48:	d244                	.insn	2, 0xd244
80005f4a:	d344                	.insn	2, 0xd344
80005f4c:	d444                	.insn	2, 0xd444
80005f4e:	0e44                	.insn	2, 0x0e44
80005f50:	0000                	.insn	2, 0x
80005f52:	0000                	.insn	2, 0x
80005f54:	0024                	.insn	2, 0x0024
80005f56:	0000                	.insn	2, 0x
80005f58:	0248                	.insn	2, 0x0248
80005f5a:	0000                	.insn	2, 0x
80005f5c:	a8ac                	.insn	2, 0xa8ac
80005f5e:	ffff                	.insn	2, 0xffff
80005f60:	0084                	.insn	2, 0x0084
80005f62:	0000                	.insn	2, 0x
80005f64:	4400                	.insn	2, 0x4400
80005f66:	300e                	.insn	2, 0x300e
80005f68:	8148                	.insn	2, 0x8148
80005f6a:	8801                	.insn	2, 0x8801
80005f6c:	4402                	.insn	2, 0x4402
80005f6e:	080c                	.insn	2, 0x080c
80005f70:	0200                	.insn	2, 0x0200
80005f72:	c168                	.insn	2, 0xc168
80005f74:	c844                	.insn	2, 0xc844
80005f76:	020c                	.insn	2, 0x020c
80005f78:	4430                	.insn	2, 0x4430
80005f7a:	000e                	.insn	2, 0x000e
80005f7c:	0028                	.insn	2, 0x0028
80005f7e:	0000                	.insn	2, 0x
80005f80:	0270                	.insn	2, 0x0270
80005f82:	0000                	.insn	2, 0x
80005f84:	a908                	.insn	2, 0xa908
80005f86:	ffff                	.insn	2, 0xffff
80005f88:	0248                	.insn	2, 0x0248
80005f8a:	0000                	.insn	2, 0x
80005f8c:	4400                	.insn	2, 0x4400
80005f8e:	400e                	.insn	2, 0x400e
80005f90:	8148                	.insn	2, 0x8148
80005f92:	8801                	.insn	2, 0x8801
80005f94:	4402                	.insn	2, 0x4402
80005f96:	080c                	.insn	2, 0x080c
80005f98:	0300                	.insn	2, 0x0300
80005f9a:	022c                	.insn	2, 0x022c
80005f9c:	44c1                	.insn	2, 0x44c1
80005f9e:	0cc8                	.insn	2, 0x0cc8
80005fa0:	4002                	.insn	2, 0x4002
80005fa2:	0e44                	.insn	2, 0x0e44
80005fa4:	0000                	.insn	2, 0x
80005fa6:	0000                	.insn	2, 0x
80005fa8:	0028                	.insn	2, 0x0028
80005faa:	0000                	.insn	2, 0x
80005fac:	029c                	.insn	2, 0x029c
80005fae:	0000                	.insn	2, 0x
80005fb0:	ab24                	.insn	2, 0xab24
80005fb2:	ffff                	.insn	2, 0xffff
80005fb4:	0114                	.insn	2, 0x0114
80005fb6:	0000                	.insn	2, 0x
80005fb8:	4400                	.insn	2, 0x4400
80005fba:	400e                	.insn	2, 0x400e
80005fbc:	8148                	.insn	2, 0x8148
80005fbe:	8801                	.insn	2, 0x8801
80005fc0:	4402                	.insn	2, 0x4402
80005fc2:	080c                	.insn	2, 0x080c
80005fc4:	0300                	.insn	2, 0x0300
80005fc6:	00f8                	.insn	2, 0x00f8
80005fc8:	44c1                	.insn	2, 0x44c1
80005fca:	0cc8                	.insn	2, 0x0cc8
80005fcc:	4002                	.insn	2, 0x4002
80005fce:	0e44                	.insn	2, 0x0e44
80005fd0:	0000                	.insn	2, 0x
80005fd2:	0000                	.insn	2, 0x
80005fd4:	0024                	.insn	2, 0x0024
80005fd6:	0000                	.insn	2, 0x
80005fd8:	02c8                	.insn	2, 0x02c8
80005fda:	0000                	.insn	2, 0x
80005fdc:	ac0c                	.insn	2, 0xac0c
80005fde:	ffff                	.insn	2, 0xffff
80005fe0:	00fc                	.insn	2, 0x00fc
80005fe2:	0000                	.insn	2, 0x
80005fe4:	4400                	.insn	2, 0x4400
80005fe6:	400e                	.insn	2, 0x400e
80005fe8:	8148                	.insn	2, 0x8148
80005fea:	8801                	.insn	2, 0x8801
80005fec:	4402                	.insn	2, 0x4402
80005fee:	080c                	.insn	2, 0x080c
80005ff0:	0200                	.insn	2, 0x0200
80005ff2:	c1e0                	.insn	2, 0xc1e0
80005ff4:	c844                	.insn	2, 0xc844
80005ff6:	020c                	.insn	2, 0x020c
80005ff8:	4440                	.insn	2, 0x4440
80005ffa:	000e                	.insn	2, 0x000e
80005ffc:	0028                	.insn	2, 0x0028
80005ffe:	0000                	.insn	2, 0x
80006000:	02f0                	.insn	2, 0x02f0
80006002:	0000                	.insn	2, 0x
80006004:	ace0                	.insn	2, 0xace0
80006006:	ffff                	.insn	2, 0xffff
80006008:	0250                	.insn	2, 0x0250
8000600a:	0000                	.insn	2, 0x
8000600c:	4400                	.insn	2, 0x4400
8000600e:	400e                	.insn	2, 0x400e
80006010:	8148                	.insn	2, 0x8148
80006012:	8801                	.insn	2, 0x8801
80006014:	4402                	.insn	2, 0x4402
80006016:	080c                	.insn	2, 0x080c
80006018:	0300                	.insn	2, 0x0300
8000601a:	0234                	.insn	2, 0x0234
8000601c:	44c1                	.insn	2, 0x44c1
8000601e:	0cc8                	.insn	2, 0x0cc8
80006020:	4002                	.insn	2, 0x4002
80006022:	0e44                	.insn	2, 0x0e44
80006024:	0000                	.insn	2, 0x
80006026:	0000                	.insn	2, 0x
80006028:	0028                	.insn	2, 0x0028
8000602a:	0000                	.insn	2, 0x
8000602c:	031c                	.insn	2, 0x031c
8000602e:	0000                	.insn	2, 0x
80006030:	af04                	.insn	2, 0xaf04
80006032:	ffff                	.insn	2, 0xffff
80006034:	0240                	.insn	2, 0x0240
80006036:	0000                	.insn	2, 0x
80006038:	4400                	.insn	2, 0x4400
8000603a:	400e                	.insn	2, 0x400e
8000603c:	8148                	.insn	2, 0x8148
8000603e:	8801                	.insn	2, 0x8801
80006040:	4402                	.insn	2, 0x4402
80006042:	080c                	.insn	2, 0x080c
80006044:	0300                	.insn	2, 0x0300
80006046:	0224                	.insn	2, 0x0224
80006048:	44c1                	.insn	2, 0x44c1
8000604a:	0cc8                	.insn	2, 0x0cc8
8000604c:	4002                	.insn	2, 0x4002
8000604e:	0e44                	.insn	2, 0x0e44
80006050:	0000                	.insn	2, 0x
80006052:	0000                	.insn	2, 0x
80006054:	0028                	.insn	2, 0x0028
80006056:	0000                	.insn	2, 0x
80006058:	0348                	.insn	2, 0x0348
8000605a:	0000                	.insn	2, 0x
8000605c:	b118                	.insn	2, 0xb118
8000605e:	ffff                	.insn	2, 0xffff
80006060:	0258                	.insn	2, 0x0258
80006062:	0000                	.insn	2, 0x
80006064:	4400                	.insn	2, 0x4400
80006066:	400e                	.insn	2, 0x400e
80006068:	8148                	.insn	2, 0x8148
8000606a:	8801                	.insn	2, 0x8801
8000606c:	4402                	.insn	2, 0x4402
8000606e:	080c                	.insn	2, 0x080c
80006070:	0300                	.insn	2, 0x0300
80006072:	023c                	.insn	2, 0x023c
80006074:	44c1                	.insn	2, 0x44c1
80006076:	0cc8                	.insn	2, 0x0cc8
80006078:	4002                	.insn	2, 0x4002
8000607a:	0e44                	.insn	2, 0x0e44
8000607c:	0000                	.insn	2, 0x
8000607e:	0000                	.insn	2, 0x
80006080:	0024                	.insn	2, 0x0024
80006082:	0000                	.insn	2, 0x
80006084:	0374                	.insn	2, 0x0374
80006086:	0000                	.insn	2, 0x
80006088:	b344                	.insn	2, 0xb344
8000608a:	ffff                	.insn	2, 0xffff
8000608c:	0104                	.insn	2, 0x0104
8000608e:	0000                	.insn	2, 0x
80006090:	4400                	.insn	2, 0x4400
80006092:	400e                	.insn	2, 0x400e
80006094:	8148                	.insn	2, 0x8148
80006096:	8801                	.insn	2, 0x8801
80006098:	4402                	.insn	2, 0x4402
8000609a:	080c                	.insn	2, 0x080c
8000609c:	0200                	.insn	2, 0x0200
8000609e:	c1e8                	.insn	2, 0xc1e8
800060a0:	c844                	.insn	2, 0xc844
800060a2:	020c                	.insn	2, 0x020c
800060a4:	4440                	.insn	2, 0x4440
800060a6:	000e                	.insn	2, 0x000e
800060a8:	0024                	.insn	2, 0x0024
800060aa:	0000                	.insn	2, 0x
800060ac:	039c                	.insn	2, 0x039c
800060ae:	0000                	.insn	2, 0x
800060b0:	b420                	.insn	2, 0xb420
800060b2:	ffff                	.insn	2, 0xffff
800060b4:	007c                	.insn	2, 0x007c
800060b6:	0000                	.insn	2, 0x
800060b8:	4400                	.insn	2, 0x4400
800060ba:	300e                	.insn	2, 0x300e
800060bc:	8148                	.insn	2, 0x8148
800060be:	8801                	.insn	2, 0x8801
800060c0:	4402                	.insn	2, 0x4402
800060c2:	080c                	.insn	2, 0x080c
800060c4:	0200                	.insn	2, 0x0200
800060c6:	c160                	.insn	2, 0xc160
800060c8:	c844                	.insn	2, 0xc844
800060ca:	020c                	.insn	2, 0x020c
800060cc:	4430                	.insn	2, 0x4430
800060ce:	000e                	.insn	2, 0x000e
800060d0:	0024                	.insn	2, 0x0024
800060d2:	0000                	.insn	2, 0x
800060d4:	03c4                	.insn	2, 0x03c4
800060d6:	0000                	.insn	2, 0x
800060d8:	b474                	.insn	2, 0xb474
800060da:	ffff                	.insn	2, 0xffff
800060dc:	0074                	.insn	2, 0x0074
800060de:	0000                	.insn	2, 0x
800060e0:	4400                	.insn	2, 0x4400
800060e2:	300e                	.insn	2, 0x300e
800060e4:	8148                	.insn	2, 0x8148
800060e6:	8801                	.insn	2, 0x8801
800060e8:	4402                	.insn	2, 0x4402
800060ea:	080c                	.insn	2, 0x080c
800060ec:	0200                	.insn	2, 0x0200
800060ee:	c158                	.insn	2, 0xc158
800060f0:	c844                	.insn	2, 0xc844
800060f2:	020c                	.insn	2, 0x020c
800060f4:	4430                	.insn	2, 0x4430
800060f6:	000e                	.insn	2, 0x000e
800060f8:	0024                	.insn	2, 0x0024
800060fa:	0000                	.insn	2, 0x
800060fc:	03ec                	.insn	2, 0x03ec
800060fe:	0000                	.insn	2, 0x
80006100:	b4c0                	.insn	2, 0xb4c0
80006102:	ffff                	.insn	2, 0xffff
80006104:	0088                	.insn	2, 0x0088
80006106:	0000                	.insn	2, 0x
80006108:	4400                	.insn	2, 0x4400
8000610a:	300e                	.insn	2, 0x300e
8000610c:	8148                	.insn	2, 0x8148
8000610e:	8801                	.insn	2, 0x8801
80006110:	4402                	.insn	2, 0x4402
80006112:	080c                	.insn	2, 0x080c
80006114:	0200                	.insn	2, 0x0200
80006116:	c16c                	.insn	2, 0xc16c
80006118:	c844                	.insn	2, 0xc844
8000611a:	020c                	.insn	2, 0x020c
8000611c:	4430                	.insn	2, 0x4430
8000611e:	000e                	.insn	2, 0x000e
80006120:	0024                	.insn	2, 0x0024
80006122:	0000                	.insn	2, 0x
80006124:	0414                	.insn	2, 0x0414
80006126:	0000                	.insn	2, 0x
80006128:	b520                	.insn	2, 0xb520
8000612a:	ffff                	.insn	2, 0xffff
8000612c:	0040                	.insn	2, 0x0040
8000612e:	0000                	.insn	2, 0x
80006130:	4400                	.insn	2, 0x4400
80006132:	300e                	.insn	2, 0x300e
80006134:	8148                	.insn	2, 0x8148
80006136:	8801                	.insn	2, 0x8801
80006138:	4402                	.insn	2, 0x4402
8000613a:	080c                	.insn	2, 0x080c
8000613c:	6400                	.insn	2, 0x6400
8000613e:	44c1                	.insn	2, 0x44c1
80006140:	0cc8                	.insn	2, 0x0cc8
80006142:	3002                	.insn	2, 0x3002
80006144:	0e44                	.insn	2, 0x0e44
80006146:	0000                	.insn	2, 0x
80006148:	0024                	.insn	2, 0x0024
8000614a:	0000                	.insn	2, 0x
8000614c:	043c                	.insn	2, 0x043c
8000614e:	0000                	.insn	2, 0x
80006150:	b538                	.insn	2, 0xb538
80006152:	ffff                	.insn	2, 0xffff
80006154:	0038                	.insn	2, 0x0038
80006156:	0000                	.insn	2, 0x
80006158:	4400                	.insn	2, 0x4400
8000615a:	300e                	.insn	2, 0x300e
8000615c:	8148                	.insn	2, 0x8148
8000615e:	8801                	.insn	2, 0x8801
80006160:	4402                	.insn	2, 0x4402
80006162:	080c                	.insn	2, 0x080c
80006164:	5c00                	.insn	2, 0x5c00
80006166:	44c1                	.insn	2, 0x44c1
80006168:	0cc8                	.insn	2, 0x0cc8
8000616a:	3002                	.insn	2, 0x3002
8000616c:	0e44                	.insn	2, 0x0e44
8000616e:	0000                	.insn	2, 0x
80006170:	0024                	.insn	2, 0x0024
80006172:	0000                	.insn	2, 0x
80006174:	0464                	.insn	2, 0x0464
80006176:	0000                	.insn	2, 0x
80006178:	b548                	.insn	2, 0xb548
8000617a:	ffff                	.insn	2, 0xffff
8000617c:	0030                	.insn	2, 0x0030
8000617e:	0000                	.insn	2, 0x
80006180:	4400                	.insn	2, 0x4400
80006182:	200e                	.insn	2, 0x200e
80006184:	8148                	.insn	2, 0x8148
80006186:	8801                	.insn	2, 0x8801
80006188:	4402                	.insn	2, 0x4402
8000618a:	080c                	.insn	2, 0x080c
8000618c:	5400                	.insn	2, 0x5400
8000618e:	44c1                	.insn	2, 0x44c1
80006190:	0cc8                	.insn	2, 0x0cc8
80006192:	2002                	.insn	2, 0x2002
80006194:	0e44                	.insn	2, 0x0e44
80006196:	0000                	.insn	2, 0x
80006198:	0024                	.insn	2, 0x0024
8000619a:	0000                	.insn	2, 0x
8000619c:	048c                	.insn	2, 0x048c
8000619e:	0000                	.insn	2, 0x
800061a0:	b550                	.insn	2, 0xb550
800061a2:	ffff                	.insn	2, 0xffff
800061a4:	0030                	.insn	2, 0x0030
800061a6:	0000                	.insn	2, 0x
800061a8:	4400                	.insn	2, 0x4400
800061aa:	200e                	.insn	2, 0x200e
800061ac:	8148                	.insn	2, 0x8148
800061ae:	8801                	.insn	2, 0x8801
800061b0:	4402                	.insn	2, 0x4402
800061b2:	080c                	.insn	2, 0x080c
800061b4:	5400                	.insn	2, 0x5400
800061b6:	44c1                	.insn	2, 0x44c1
800061b8:	0cc8                	.insn	2, 0x0cc8
800061ba:	2002                	.insn	2, 0x2002
800061bc:	0e44                	.insn	2, 0x0e44
800061be:	0000                	.insn	2, 0x
800061c0:	0028                	.insn	2, 0x0028
800061c2:	0000                	.insn	2, 0x
800061c4:	04b4                	.insn	2, 0x04b4
800061c6:	0000                	.insn	2, 0x
800061c8:	b558                	.insn	2, 0xb558
800061ca:	ffff                	.insn	2, 0xffff
800061cc:	0160                	.insn	2, 0x0160
800061ce:	0000                	.insn	2, 0x
800061d0:	4400                	.insn	2, 0x4400
800061d2:	300e                	.insn	2, 0x300e
800061d4:	8148                	.insn	2, 0x8148
800061d6:	8801                	.insn	2, 0x8801
800061d8:	4402                	.insn	2, 0x4402
800061da:	080c                	.insn	2, 0x080c
800061dc:	0300                	.insn	2, 0x0300
800061de:	0144                	.insn	2, 0x0144
800061e0:	44c1                	.insn	2, 0x44c1
800061e2:	0cc8                	.insn	2, 0x0cc8
800061e4:	3002                	.insn	2, 0x3002
800061e6:	0e44                	.insn	2, 0x0e44
800061e8:	0000                	.insn	2, 0x
800061ea:	0000                	.insn	2, 0x
800061ec:	0024                	.insn	2, 0x0024
800061ee:	0000                	.insn	2, 0x
800061f0:	04e0                	.insn	2, 0x04e0
800061f2:	0000                	.insn	2, 0x
800061f4:	b68c                	.insn	2, 0xb68c
800061f6:	ffff                	.insn	2, 0xffff
800061f8:	0098                	.insn	2, 0x0098
800061fa:	0000                	.insn	2, 0x
800061fc:	4400                	.insn	2, 0x4400
800061fe:	200e                	.insn	2, 0x200e
80006200:	8148                	.insn	2, 0x8148
80006202:	8801                	.insn	2, 0x8801
80006204:	4402                	.insn	2, 0x4402
80006206:	080c                	.insn	2, 0x080c
80006208:	0200                	.insn	2, 0x0200
8000620a:	c17c                	.insn	2, 0xc17c
8000620c:	c844                	.insn	2, 0xc844
8000620e:	020c                	.insn	2, 0x020c
80006210:	4420                	.insn	2, 0x4420
80006212:	000e                	.insn	2, 0x000e
80006214:	0028                	.insn	2, 0x0028
80006216:	0000                	.insn	2, 0x
80006218:	0508                	.insn	2, 0x0508
8000621a:	0000                	.insn	2, 0x
8000621c:	b6fc                	.insn	2, 0xb6fc
8000621e:	ffff                	.insn	2, 0xffff
80006220:	0168                	.insn	2, 0x0168
80006222:	0000                	.insn	2, 0x
80006224:	4400                	.insn	2, 0x4400
80006226:	300e                	.insn	2, 0x300e
80006228:	8148                	.insn	2, 0x8148
8000622a:	8801                	.insn	2, 0x8801
8000622c:	4402                	.insn	2, 0x4402
8000622e:	080c                	.insn	2, 0x080c
80006230:	0300                	.insn	2, 0x0300
80006232:	014c                	.insn	2, 0x014c
80006234:	44c1                	.insn	2, 0x44c1
80006236:	0cc8                	.insn	2, 0x0cc8
80006238:	3002                	.insn	2, 0x3002
8000623a:	0e44                	.insn	2, 0x0e44
8000623c:	0000                	.insn	2, 0x
8000623e:	0000                	.insn	2, 0x
80006240:	0024                	.insn	2, 0x0024
80006242:	0000                	.insn	2, 0x
80006244:	0534                	.insn	2, 0x0534
80006246:	0000                	.insn	2, 0x
80006248:	b838                	.insn	2, 0xb838
8000624a:	ffff                	.insn	2, 0xffff
8000624c:	0084                	.insn	2, 0x0084
8000624e:	0000                	.insn	2, 0x
80006250:	4400                	.insn	2, 0x4400
80006252:	300e                	.insn	2, 0x300e
80006254:	8148                	.insn	2, 0x8148
80006256:	8801                	.insn	2, 0x8801
80006258:	4402                	.insn	2, 0x4402
8000625a:	080c                	.insn	2, 0x080c
8000625c:	0200                	.insn	2, 0x0200
8000625e:	c168                	.insn	2, 0xc168
80006260:	c844                	.insn	2, 0xc844
80006262:	020c                	.insn	2, 0x020c
80006264:	4430                	.insn	2, 0x4430
80006266:	000e                	.insn	2, 0x000e
80006268:	0024                	.insn	2, 0x0024
8000626a:	0000                	.insn	2, 0x
8000626c:	055c                	.insn	2, 0x055c
8000626e:	0000                	.insn	2, 0x
80006270:	b894                	.insn	2, 0xb894
80006272:	ffff                	.insn	2, 0xffff
80006274:	0050                	.insn	2, 0x0050
80006276:	0000                	.insn	2, 0x
80006278:	4400                	.insn	2, 0x4400
8000627a:	300e                	.insn	2, 0x300e
8000627c:	8148                	.insn	2, 0x8148
8000627e:	8801                	.insn	2, 0x8801
80006280:	4402                	.insn	2, 0x4402
80006282:	080c                	.insn	2, 0x080c
80006284:	7400                	.insn	2, 0x7400
80006286:	44c1                	.insn	2, 0x44c1
80006288:	0cc8                	.insn	2, 0x0cc8
8000628a:	3002                	.insn	2, 0x3002
8000628c:	0e44                	.insn	2, 0x0e44
8000628e:	0000                	.insn	2, 0x
80006290:	0024                	.insn	2, 0x0024
80006292:	0000                	.insn	2, 0x
80006294:	0584                	.insn	2, 0x0584
80006296:	0000                	.insn	2, 0x
80006298:	b8bc                	.insn	2, 0xb8bc
8000629a:	ffff                	.insn	2, 0xffff
8000629c:	008c                	.insn	2, 0x008c
8000629e:	0000                	.insn	2, 0x
800062a0:	4400                	.insn	2, 0x4400
800062a2:	300e                	.insn	2, 0x300e
800062a4:	8148                	.insn	2, 0x8148
800062a6:	8801                	.insn	2, 0x8801
800062a8:	4402                	.insn	2, 0x4402
800062aa:	080c                	.insn	2, 0x080c
800062ac:	0200                	.insn	2, 0x0200
800062ae:	c170                	.insn	2, 0xc170
800062b0:	c844                	.insn	2, 0xc844
800062b2:	020c                	.insn	2, 0x020c
800062b4:	4430                	.insn	2, 0x4430
800062b6:	000e                	.insn	2, 0x000e
800062b8:	0024                	.insn	2, 0x0024
800062ba:	0000                	.insn	2, 0x
800062bc:	05ac                	.insn	2, 0x05ac
800062be:	0000                	.insn	2, 0x
800062c0:	b920                	.insn	2, 0xb920
800062c2:	ffff                	.insn	2, 0xffff
800062c4:	0058                	.insn	2, 0x0058
800062c6:	0000                	.insn	2, 0x
800062c8:	4400                	.insn	2, 0x4400
800062ca:	300e                	.insn	2, 0x300e
800062cc:	8148                	.insn	2, 0x8148
800062ce:	8801                	.insn	2, 0x8801
800062d0:	4402                	.insn	2, 0x4402
800062d2:	080c                	.insn	2, 0x080c
800062d4:	7c00                	.insn	2, 0x7c00
800062d6:	44c1                	.insn	2, 0x44c1
800062d8:	0cc8                	.insn	2, 0x0cc8
800062da:	3002                	.insn	2, 0x3002
800062dc:	0e44                	.insn	2, 0x0e44
800062de:	0000                	.insn	2, 0x
800062e0:	0024                	.insn	2, 0x0024
800062e2:	0000                	.insn	2, 0x
800062e4:	05d4                	.insn	2, 0x05d4
800062e6:	0000                	.insn	2, 0x
800062e8:	b950                	.insn	2, 0xb950
800062ea:	ffff                	.insn	2, 0xffff
800062ec:	00cc                	.insn	2, 0x00cc
800062ee:	0000                	.insn	2, 0x
800062f0:	4400                	.insn	2, 0x4400
800062f2:	400e                	.insn	2, 0x400e
800062f4:	8148                	.insn	2, 0x8148
800062f6:	8801                	.insn	2, 0x8801
800062f8:	4402                	.insn	2, 0x4402
800062fa:	080c                	.insn	2, 0x080c
800062fc:	0200                	.insn	2, 0x0200
800062fe:	c1b0                	.insn	2, 0xc1b0
80006300:	c844                	.insn	2, 0xc844
80006302:	020c                	.insn	2, 0x020c
80006304:	4440                	.insn	2, 0x4440
80006306:	000e                	.insn	2, 0x000e
80006308:	0024                	.insn	2, 0x0024
8000630a:	0000                	.insn	2, 0x
8000630c:	05fc                	.insn	2, 0x05fc
8000630e:	0000                	.insn	2, 0x
80006310:	b9f4                	.insn	2, 0xb9f4
80006312:	ffff                	.insn	2, 0xffff
80006314:	0084                	.insn	2, 0x0084
80006316:	0000                	.insn	2, 0x
80006318:	4400                	.insn	2, 0x4400
8000631a:	400e                	.insn	2, 0x400e
8000631c:	8148                	.insn	2, 0x8148
8000631e:	8801                	.insn	2, 0x8801
80006320:	4402                	.insn	2, 0x4402
80006322:	080c                	.insn	2, 0x080c
80006324:	0200                	.insn	2, 0x0200
80006326:	c168                	.insn	2, 0xc168
80006328:	c844                	.insn	2, 0xc844
8000632a:	020c                	.insn	2, 0x020c
8000632c:	4440                	.insn	2, 0x4440
8000632e:	000e                	.insn	2, 0x000e
80006330:	0028                	.insn	2, 0x0028
80006332:	0000                	.insn	2, 0x
80006334:	0624                	.insn	2, 0x0624
80006336:	0000                	.insn	2, 0x
80006338:	ba50                	.insn	2, 0xba50
8000633a:	ffff                	.insn	2, 0xffff
8000633c:	0174                	.insn	2, 0x0174
8000633e:	0000                	.insn	2, 0x
80006340:	4400                	.insn	2, 0x4400
80006342:	400e                	.insn	2, 0x400e
80006344:	8148                	.insn	2, 0x8148
80006346:	8801                	.insn	2, 0x8801
80006348:	4402                	.insn	2, 0x4402
8000634a:	080c                	.insn	2, 0x080c
8000634c:	0300                	.insn	2, 0x0300
8000634e:	0158                	.insn	2, 0x0158
80006350:	44c1                	.insn	2, 0x44c1
80006352:	0cc8                	.insn	2, 0x0cc8
80006354:	4002                	.insn	2, 0x4002
80006356:	0e44                	.insn	2, 0x0e44
80006358:	0000                	.insn	2, 0x
8000635a:	0000                	.insn	2, 0x
8000635c:	0028                	.insn	2, 0x0028
8000635e:	0000                	.insn	2, 0x
80006360:	0650                	.insn	2, 0x0650
80006362:	0000                	.insn	2, 0x
80006364:	bb98                	.insn	2, 0xbb98
80006366:	ffff                	.insn	2, 0xffff
80006368:	0204                	.insn	2, 0x0204
8000636a:	0000                	.insn	2, 0x
8000636c:	4400                	.insn	2, 0x4400
8000636e:	300e                	.insn	2, 0x300e
80006370:	8148                	.insn	2, 0x8148
80006372:	8801                	.insn	2, 0x8801
80006374:	4402                	.insn	2, 0x4402
80006376:	080c                	.insn	2, 0x080c
80006378:	0300                	.insn	2, 0x0300
8000637a:	01e8                	.insn	2, 0x01e8
8000637c:	44c1                	.insn	2, 0x44c1
8000637e:	0cc8                	.insn	2, 0x0cc8
80006380:	3002                	.insn	2, 0x3002
80006382:	0e44                	.insn	2, 0x0e44
80006384:	0000                	.insn	2, 0x
80006386:	0000                	.insn	2, 0x
80006388:	0024                	.insn	2, 0x0024
8000638a:	0000                	.insn	2, 0x
8000638c:	067c                	.insn	2, 0x067c
8000638e:	0000                	.insn	2, 0x
80006390:	bd70                	.insn	2, 0xbd70
80006392:	ffff                	.insn	2, 0xffff
80006394:	00fc                	.insn	2, 0x00fc
80006396:	0000                	.insn	2, 0x
80006398:	4400                	.insn	2, 0x4400
8000639a:	300e                	.insn	2, 0x300e
8000639c:	8148                	.insn	2, 0x8148
8000639e:	8801                	.insn	2, 0x8801
800063a0:	4402                	.insn	2, 0x4402
800063a2:	080c                	.insn	2, 0x080c
800063a4:	0200                	.insn	2, 0x0200
800063a6:	c1e0                	.insn	2, 0xc1e0
800063a8:	c844                	.insn	2, 0xc844
800063aa:	020c                	.insn	2, 0x020c
800063ac:	4430                	.insn	2, 0x4430
800063ae:	000e                	.insn	2, 0x000e
800063b0:	0024                	.insn	2, 0x0024
800063b2:	0000                	.insn	2, 0x
800063b4:	06a4                	.insn	2, 0x06a4
800063b6:	0000                	.insn	2, 0x
800063b8:	be44                	.insn	2, 0xbe44
800063ba:	ffff                	.insn	2, 0xffff
800063bc:	0068                	.insn	2, 0x0068
800063be:	0000                	.insn	2, 0x
800063c0:	4400                	.insn	2, 0x4400
800063c2:	200e                	.insn	2, 0x200e
800063c4:	8148                	.insn	2, 0x8148
800063c6:	8801                	.insn	2, 0x8801
800063c8:	4402                	.insn	2, 0x4402
800063ca:	080c                	.insn	2, 0x080c
800063cc:	0200                	.insn	2, 0x0200
800063ce:	c14c                	.insn	2, 0xc14c
800063d0:	c844                	.insn	2, 0xc844
800063d2:	020c                	.insn	2, 0x020c
800063d4:	4420                	.insn	2, 0x4420
800063d6:	000e                	.insn	2, 0x000e
800063d8:	0024                	.insn	2, 0x0024
800063da:	0000                	.insn	2, 0x
800063dc:	06cc                	.insn	2, 0x06cc
800063de:	0000                	.insn	2, 0x
800063e0:	be84                	.insn	2, 0xbe84
800063e2:	ffff                	.insn	2, 0xffff
800063e4:	0034                	.insn	2, 0x0034
800063e6:	0000                	.insn	2, 0x
800063e8:	4400                	.insn	2, 0x4400
800063ea:	100e                	.insn	2, 0x100e
800063ec:	8148                	.insn	2, 0x8148
800063ee:	8801                	.insn	2, 0x8801
800063f0:	4402                	.insn	2, 0x4402
800063f2:	080c                	.insn	2, 0x080c
800063f4:	5800                	.insn	2, 0x5800
800063f6:	44c1                	.insn	2, 0x44c1
800063f8:	0cc8                	.insn	2, 0x0cc8
800063fa:	1002                	.insn	2, 0x1002
800063fc:	0e44                	.insn	2, 0x0e44
800063fe:	0000                	.insn	2, 0x
80006400:	0024                	.insn	2, 0x0024
80006402:	0000                	.insn	2, 0x
80006404:	06f4                	.insn	2, 0x06f4
80006406:	0000                	.insn	2, 0x
80006408:	be90                	.insn	2, 0xbe90
8000640a:	ffff                	.insn	2, 0xffff
8000640c:	0038                	.insn	2, 0x0038
8000640e:	0000                	.insn	2, 0x
80006410:	4400                	.insn	2, 0x4400
80006412:	100e                	.insn	2, 0x100e
80006414:	8148                	.insn	2, 0x8148
80006416:	8801                	.insn	2, 0x8801
80006418:	4402                	.insn	2, 0x4402
8000641a:	080c                	.insn	2, 0x080c
8000641c:	5c00                	.insn	2, 0x5c00
8000641e:	44c1                	.insn	2, 0x44c1
80006420:	0cc8                	.insn	2, 0x0cc8
80006422:	1002                	.insn	2, 0x1002
80006424:	0e44                	.insn	2, 0x0e44
80006426:	0000                	.insn	2, 0x
80006428:	0028                	.insn	2, 0x0028
8000642a:	0000                	.insn	2, 0x
8000642c:	071c                	.insn	2, 0x071c
8000642e:	0000                	.insn	2, 0x
80006430:	bea0                	.insn	2, 0xbea0
80006432:	ffff                	.insn	2, 0xffff
80006434:	036c                	.insn	2, 0x036c
80006436:	0000                	.insn	2, 0x
80006438:	4400                	.insn	2, 0x4400
8000643a:	300e                	.insn	2, 0x300e
8000643c:	8148                	.insn	2, 0x8148
8000643e:	8801                	.insn	2, 0x8801
80006440:	4402                	.insn	2, 0x4402
80006442:	080c                	.insn	2, 0x080c
80006444:	0300                	.insn	2, 0x0300
80006446:	0350                	.insn	2, 0x0350
80006448:	44c1                	.insn	2, 0x44c1
8000644a:	0cc8                	.insn	2, 0x0cc8
8000644c:	3002                	.insn	2, 0x3002
8000644e:	0e44                	.insn	2, 0x0e44
80006450:	0000                	.insn	2, 0x
80006452:	0000                	.insn	2, 0x
80006454:	0024                	.insn	2, 0x0024
80006456:	0000                	.insn	2, 0x
80006458:	0748                	.insn	2, 0x0748
8000645a:	0000                	.insn	2, 0x
8000645c:	c1e0                	.insn	2, 0xc1e0
8000645e:	ffff                	.insn	2, 0xffff
80006460:	0034                	.insn	2, 0x0034
80006462:	0000                	.insn	2, 0x
80006464:	4400                	.insn	2, 0x4400
80006466:	200e                	.insn	2, 0x200e
80006468:	8148                	.insn	2, 0x8148
8000646a:	8801                	.insn	2, 0x8801
8000646c:	4402                	.insn	2, 0x4402
8000646e:	080c                	.insn	2, 0x080c
80006470:	5800                	.insn	2, 0x5800
80006472:	44c1                	.insn	2, 0x44c1
80006474:	0cc8                	.insn	2, 0x0cc8
80006476:	2002                	.insn	2, 0x2002
80006478:	0e44                	.insn	2, 0x0e44
8000647a:	0000                	.insn	2, 0x
8000647c:	0024                	.insn	2, 0x0024
8000647e:	0000                	.insn	2, 0x
80006480:	0770                	.insn	2, 0x0770
80006482:	0000                	.insn	2, 0x
80006484:	c1ec                	.insn	2, 0xc1ec
80006486:	ffff                	.insn	2, 0xffff
80006488:	0038                	.insn	2, 0x0038
8000648a:	0000                	.insn	2, 0x
8000648c:	4400                	.insn	2, 0x4400
8000648e:	200e                	.insn	2, 0x200e
80006490:	8148                	.insn	2, 0x8148
80006492:	8801                	.insn	2, 0x8801
80006494:	4402                	.insn	2, 0x4402
80006496:	080c                	.insn	2, 0x080c
80006498:	5c00                	.insn	2, 0x5c00
8000649a:	44c1                	.insn	2, 0x44c1
8000649c:	0cc8                	.insn	2, 0x0cc8
8000649e:	2002                	.insn	2, 0x2002
800064a0:	0e44                	.insn	2, 0x0e44
800064a2:	0000                	.insn	2, 0x
800064a4:	0024                	.insn	2, 0x0024
800064a6:	0000                	.insn	2, 0x
800064a8:	0798                	.insn	2, 0x0798
800064aa:	0000                	.insn	2, 0x
800064ac:	c1fc                	.insn	2, 0xc1fc
800064ae:	ffff                	.insn	2, 0xffff
800064b0:	002c                	.insn	2, 0x002c
800064b2:	0000                	.insn	2, 0x
800064b4:	4400                	.insn	2, 0x4400
800064b6:	100e                	.insn	2, 0x100e
800064b8:	8148                	.insn	2, 0x8148
800064ba:	8801                	.insn	2, 0x8801
800064bc:	4402                	.insn	2, 0x4402
800064be:	080c                	.insn	2, 0x080c
800064c0:	5000                	.insn	2, 0x5000
800064c2:	44c1                	.insn	2, 0x44c1
800064c4:	0cc8                	.insn	2, 0x0cc8
800064c6:	1002                	.insn	2, 0x1002
800064c8:	0e44                	.insn	2, 0x0e44
800064ca:	0000                	.insn	2, 0x
800064cc:	0024                	.insn	2, 0x0024
800064ce:	0000                	.insn	2, 0x
800064d0:	07c0                	.insn	2, 0x07c0
800064d2:	0000                	.insn	2, 0x
800064d4:	c200                	.insn	2, 0xc200
800064d6:	ffff                	.insn	2, 0xffff
800064d8:	004c                	.insn	2, 0x004c
800064da:	0000                	.insn	2, 0x
800064dc:	4400                	.insn	2, 0x4400
800064de:	300e                	.insn	2, 0x300e
800064e0:	8148                	.insn	2, 0x8148
800064e2:	8801                	.insn	2, 0x8801
800064e4:	4402                	.insn	2, 0x4402
800064e6:	080c                	.insn	2, 0x080c
800064e8:	7000                	.insn	2, 0x7000
800064ea:	44c1                	.insn	2, 0x44c1
800064ec:	0cc8                	.insn	2, 0x0cc8
800064ee:	3002                	.insn	2, 0x3002
800064f0:	0e44                	.insn	2, 0x0e44
800064f2:	0000                	.insn	2, 0x
800064f4:	0024                	.insn	2, 0x0024
800064f6:	0000                	.insn	2, 0x
800064f8:	07e8                	.insn	2, 0x07e8
800064fa:	0000                	.insn	2, 0x
800064fc:	c224                	.insn	2, 0xc224
800064fe:	ffff                	.insn	2, 0xffff
80006500:	008c                	.insn	2, 0x008c
80006502:	0000                	.insn	2, 0x
80006504:	4400                	.insn	2, 0x4400
80006506:	300e                	.insn	2, 0x300e
80006508:	8148                	.insn	2, 0x8148
8000650a:	8801                	.insn	2, 0x8801
8000650c:	4402                	.insn	2, 0x4402
8000650e:	080c                	.insn	2, 0x080c
80006510:	0200                	.insn	2, 0x0200
80006512:	c170                	.insn	2, 0xc170
80006514:	c844                	.insn	2, 0xc844
80006516:	020c                	.insn	2, 0x020c
80006518:	4430                	.insn	2, 0x4430
8000651a:	000e                	.insn	2, 0x000e
8000651c:	0028                	.insn	2, 0x0028
8000651e:	0000                	.insn	2, 0x
80006520:	0810                	.insn	2, 0x0810
80006522:	0000                	.insn	2, 0x
80006524:	c288                	.insn	2, 0xc288
80006526:	ffff                	.insn	2, 0xffff
80006528:	0324                	.insn	2, 0x0324
8000652a:	0000                	.insn	2, 0x
8000652c:	4400                	.insn	2, 0x4400
8000652e:	300e                	.insn	2, 0x300e
80006530:	8148                	.insn	2, 0x8148
80006532:	8801                	.insn	2, 0x8801
80006534:	4402                	.insn	2, 0x4402
80006536:	080c                	.insn	2, 0x080c
80006538:	0300                	.insn	2, 0x0300
8000653a:	0308                	.insn	2, 0x0308
8000653c:	44c1                	.insn	2, 0x44c1
8000653e:	0cc8                	.insn	2, 0x0cc8
80006540:	3002                	.insn	2, 0x3002
80006542:	0e44                	.insn	2, 0x0e44
80006544:	0000                	.insn	2, 0x
80006546:	0000                	.insn	2, 0x
80006548:	0024                	.insn	2, 0x0024
8000654a:	0000                	.insn	2, 0x
8000654c:	083c                	.insn	2, 0x083c
8000654e:	0000                	.insn	2, 0x
80006550:	c580                	.insn	2, 0xc580
80006552:	ffff                	.insn	2, 0xffff
80006554:	00e4                	.insn	2, 0x00e4
80006556:	0000                	.insn	2, 0x
80006558:	4400                	.insn	2, 0x4400
8000655a:	200e                	.insn	2, 0x200e
8000655c:	8148                	.insn	2, 0x8148
8000655e:	8801                	.insn	2, 0x8801
80006560:	4402                	.insn	2, 0x4402
80006562:	080c                	.insn	2, 0x080c
80006564:	0200                	.insn	2, 0x0200
80006566:	c1c8                	.insn	2, 0xc1c8
80006568:	c844                	.insn	2, 0xc844
8000656a:	020c                	.insn	2, 0x020c
8000656c:	4420                	.insn	2, 0x4420
8000656e:	000e                	.insn	2, 0x000e
80006570:	0024                	.insn	2, 0x0024
80006572:	0000                	.insn	2, 0x
80006574:	0864                	.insn	2, 0x0864
80006576:	0000                	.insn	2, 0x
80006578:	c63c                	.insn	2, 0xc63c
8000657a:	ffff                	.insn	2, 0xffff
8000657c:	0050                	.insn	2, 0x0050
8000657e:	0000                	.insn	2, 0x
80006580:	4400                	.insn	2, 0x4400
80006582:	200e                	.insn	2, 0x200e
80006584:	8148                	.insn	2, 0x8148
80006586:	8801                	.insn	2, 0x8801
80006588:	4402                	.insn	2, 0x4402
8000658a:	080c                	.insn	2, 0x080c
8000658c:	7400                	.insn	2, 0x7400
8000658e:	44c1                	.insn	2, 0x44c1
80006590:	0cc8                	.insn	2, 0x0cc8
80006592:	2002                	.insn	2, 0x2002
80006594:	0e44                	.insn	2, 0x0e44
80006596:	0000                	.insn	2, 0x
80006598:	0024                	.insn	2, 0x0024
8000659a:	0000                	.insn	2, 0x
8000659c:	088c                	.insn	2, 0x088c
8000659e:	0000                	.insn	2, 0x
800065a0:	c664                	.insn	2, 0xc664
800065a2:	ffff                	.insn	2, 0xffff
800065a4:	00d4                	.insn	2, 0x00d4
800065a6:	0000                	.insn	2, 0x
800065a8:	4400                	.insn	2, 0x4400
800065aa:	300e                	.insn	2, 0x300e
800065ac:	8148                	.insn	2, 0x8148
800065ae:	8801                	.insn	2, 0x8801
800065b0:	4402                	.insn	2, 0x4402
800065b2:	080c                	.insn	2, 0x080c
800065b4:	0200                	.insn	2, 0x0200
800065b6:	c1b8                	.insn	2, 0xc1b8
800065b8:	c844                	.insn	2, 0xc844
800065ba:	020c                	.insn	2, 0x020c
800065bc:	4430                	.insn	2, 0x4430
800065be:	000e                	.insn	2, 0x000e
800065c0:	0028                	.insn	2, 0x0028
800065c2:	0000                	.insn	2, 0x
800065c4:	08b4                	.insn	2, 0x08b4
800065c6:	0000                	.insn	2, 0x
800065c8:	c710                	.insn	2, 0xc710
800065ca:	ffff                	.insn	2, 0xffff
800065cc:	02f4                	.insn	2, 0x02f4
800065ce:	0000                	.insn	2, 0x
800065d0:	4400                	.insn	2, 0x4400
800065d2:	400e                	.insn	2, 0x400e
800065d4:	8148                	.insn	2, 0x8148
800065d6:	8801                	.insn	2, 0x8801
800065d8:	4402                	.insn	2, 0x4402
800065da:	080c                	.insn	2, 0x080c
800065dc:	0300                	.insn	2, 0x0300
800065de:	02d8                	.insn	2, 0x02d8
800065e0:	44c1                	.insn	2, 0x44c1
800065e2:	0cc8                	.insn	2, 0x0cc8
800065e4:	4002                	.insn	2, 0x4002
800065e6:	0e44                	.insn	2, 0x0e44
800065e8:	0000                	.insn	2, 0x
800065ea:	0000                	.insn	2, 0x
800065ec:	0028                	.insn	2, 0x0028
800065ee:	0000                	.insn	2, 0x
800065f0:	08e0                	.insn	2, 0x08e0
800065f2:	0000                	.insn	2, 0x
800065f4:	c9d8                	.insn	2, 0xc9d8
800065f6:	ffff                	.insn	2, 0xffff
800065f8:	0264                	.insn	2, 0x0264
800065fa:	0000                	.insn	2, 0x
800065fc:	4400                	.insn	2, 0x4400
800065fe:	300e                	.insn	2, 0x300e
80006600:	8148                	.insn	2, 0x8148
80006602:	8801                	.insn	2, 0x8801
80006604:	4402                	.insn	2, 0x4402
80006606:	080c                	.insn	2, 0x080c
80006608:	0300                	.insn	2, 0x0300
8000660a:	0248                	.insn	2, 0x0248
8000660c:	44c1                	.insn	2, 0x44c1
8000660e:	0cc8                	.insn	2, 0x0cc8
80006610:	3002                	.insn	2, 0x3002
80006612:	0e44                	.insn	2, 0x0e44
80006614:	0000                	.insn	2, 0x
80006616:	0000                	.insn	2, 0x
80006618:	0024                	.insn	2, 0x0024
8000661a:	0000                	.insn	2, 0x
8000661c:	090c                	.insn	2, 0x090c
8000661e:	0000                	.insn	2, 0x
80006620:	cc10                	.insn	2, 0xcc10
80006622:	ffff                	.insn	2, 0xffff
80006624:	0084                	.insn	2, 0x0084
80006626:	0000                	.insn	2, 0x
80006628:	4400                	.insn	2, 0x4400
8000662a:	200e                	.insn	2, 0x200e
8000662c:	8148                	.insn	2, 0x8148
8000662e:	8801                	.insn	2, 0x8801
80006630:	4402                	.insn	2, 0x4402
80006632:	080c                	.insn	2, 0x080c
80006634:	0200                	.insn	2, 0x0200
80006636:	c168                	.insn	2, 0xc168
80006638:	c844                	.insn	2, 0xc844
8000663a:	020c                	.insn	2, 0x020c
8000663c:	4420                	.insn	2, 0x4420
8000663e:	000e                	.insn	2, 0x000e
80006640:	0024                	.insn	2, 0x0024
80006642:	0000                	.insn	2, 0x
80006644:	0934                	.insn	2, 0x0934
80006646:	0000                	.insn	2, 0x
80006648:	cc6c                	.insn	2, 0xcc6c
8000664a:	ffff                	.insn	2, 0xffff
8000664c:	0048                	.insn	2, 0x0048
8000664e:	0000                	.insn	2, 0x
80006650:	4400                	.insn	2, 0x4400
80006652:	200e                	.insn	2, 0x200e
80006654:	8148                	.insn	2, 0x8148
80006656:	8801                	.insn	2, 0x8801
80006658:	4402                	.insn	2, 0x4402
8000665a:	080c                	.insn	2, 0x080c
8000665c:	6c00                	.insn	2, 0x6c00
8000665e:	44c1                	.insn	2, 0x44c1
80006660:	0cc8                	.insn	2, 0x0cc8
80006662:	2002                	.insn	2, 0x2002
80006664:	0e44                	.insn	2, 0x0e44
80006666:	0000                	.insn	2, 0x
80006668:	0024                	.insn	2, 0x0024
8000666a:	0000                	.insn	2, 0x
8000666c:	095c                	.insn	2, 0x095c
8000666e:	0000                	.insn	2, 0x
80006670:	cc8c                	.insn	2, 0xcc8c
80006672:	ffff                	.insn	2, 0xffff
80006674:	010c                	.insn	2, 0x010c
80006676:	0000                	.insn	2, 0x
80006678:	4400                	.insn	2, 0x4400
8000667a:	300e                	.insn	2, 0x300e
8000667c:	8148                	.insn	2, 0x8148
8000667e:	8801                	.insn	2, 0x8801
80006680:	4402                	.insn	2, 0x4402
80006682:	080c                	.insn	2, 0x080c
80006684:	0200                	.insn	2, 0x0200
80006686:	c1f0                	.insn	2, 0xc1f0
80006688:	c844                	.insn	2, 0xc844
8000668a:	020c                	.insn	2, 0x020c
8000668c:	4430                	.insn	2, 0x4430
8000668e:	000e                	.insn	2, 0x000e
80006690:	0024                	.insn	2, 0x0024
80006692:	0000                	.insn	2, 0x
80006694:	0984                	.insn	2, 0x0984
80006696:	0000                	.insn	2, 0x
80006698:	cd70                	.insn	2, 0xcd70
8000669a:	ffff                	.insn	2, 0xffff
8000669c:	0030                	.insn	2, 0x0030
8000669e:	0000                	.insn	2, 0x
800066a0:	4400                	.insn	2, 0x4400
800066a2:	100e                	.insn	2, 0x100e
800066a4:	8148                	.insn	2, 0x8148
800066a6:	8801                	.insn	2, 0x8801
800066a8:	4402                	.insn	2, 0x4402
800066aa:	080c                	.insn	2, 0x080c
800066ac:	5400                	.insn	2, 0x5400
800066ae:	44c1                	.insn	2, 0x44c1
800066b0:	0cc8                	.insn	2, 0x0cc8
800066b2:	1002                	.insn	2, 0x1002
800066b4:	0e44                	.insn	2, 0x0e44
800066b6:	0000                	.insn	2, 0x
800066b8:	001c                	.insn	2, 0x001c
800066ba:	0000                	.insn	2, 0x
800066bc:	09ac                	.insn	2, 0x09ac
800066be:	0000                	.insn	2, 0x
800066c0:	cd78                	.insn	2, 0xcd78
800066c2:	ffff                	.insn	2, 0xffff
800066c4:	0024                	.insn	2, 0x0024
800066c6:	0000                	.insn	2, 0x
800066c8:	4400                	.insn	2, 0x4400
800066ca:	200e                	.insn	2, 0x200e
800066cc:	8148                	.insn	2, 0x8148
800066ce:	8801                	.insn	2, 0x8801
800066d0:	4402                	.insn	2, 0x4402
800066d2:	080c                	.insn	2, 0x080c
800066d4:	0000                	.insn	2, 0x
800066d6:	0000                	.insn	2, 0x
800066d8:	0024                	.insn	2, 0x0024
800066da:	0000                	.insn	2, 0x
800066dc:	09cc                	.insn	2, 0x09cc
800066de:	0000                	.insn	2, 0x
800066e0:	cd7c                	.insn	2, 0xcd7c
800066e2:	ffff                	.insn	2, 0xffff
800066e4:	00ac                	.insn	2, 0x00ac
800066e6:	0000                	.insn	2, 0x
800066e8:	4400                	.insn	2, 0x4400
800066ea:	200e                	.insn	2, 0x200e
800066ec:	8148                	.insn	2, 0x8148
800066ee:	8801                	.insn	2, 0x8801
800066f0:	4402                	.insn	2, 0x4402
800066f2:	080c                	.insn	2, 0x080c
800066f4:	0200                	.insn	2, 0x0200
800066f6:	c190                	.insn	2, 0xc190
800066f8:	c844                	.insn	2, 0xc844
800066fa:	020c                	.insn	2, 0x020c
800066fc:	4420                	.insn	2, 0x4420
800066fe:	000e                	.insn	2, 0x000e
80006700:	0024                	.insn	2, 0x0024
80006702:	0000                	.insn	2, 0x
80006704:	09f4                	.insn	2, 0x09f4
80006706:	0000                	.insn	2, 0x
80006708:	ce00                	.insn	2, 0xce00
8000670a:	ffff                	.insn	2, 0xffff
8000670c:	0024                	.insn	2, 0x0024
8000670e:	0000                	.insn	2, 0x
80006710:	4400                	.insn	2, 0x4400
80006712:	100e                	.insn	2, 0x100e
80006714:	8148                	.insn	2, 0x8148
80006716:	8801                	.insn	2, 0x8801
80006718:	4402                	.insn	2, 0x4402
8000671a:	080c                	.insn	2, 0x080c
8000671c:	4800                	.insn	2, 0x4800
8000671e:	44c1                	.insn	2, 0x44c1
80006720:	0cc8                	.insn	2, 0x0cc8
80006722:	1002                	.insn	2, 0x1002
80006724:	0e44                	.insn	2, 0x0e44
80006726:	0000                	.insn	2, 0x
80006728:	0024                	.insn	2, 0x0024
8000672a:	0000                	.insn	2, 0x
8000672c:	0a1c                	.insn	2, 0x0a1c
8000672e:	0000                	.insn	2, 0x
80006730:	cdfc                	.insn	2, 0xcdfc
80006732:	ffff                	.insn	2, 0xffff
80006734:	005c                	.insn	2, 0x005c
80006736:	0000                	.insn	2, 0x
80006738:	4400                	.insn	2, 0x4400
8000673a:	100e                	.insn	2, 0x100e
8000673c:	8148                	.insn	2, 0x8148
8000673e:	8801                	.insn	2, 0x8801
80006740:	4402                	.insn	2, 0x4402
80006742:	080c                	.insn	2, 0x080c
80006744:	0200                	.insn	2, 0x0200
80006746:	c140                	.insn	2, 0xc140
80006748:	c844                	.insn	2, 0xc844
8000674a:	020c                	.insn	2, 0x020c
8000674c:	4410                	.insn	2, 0x4410
8000674e:	000e                	.insn	2, 0x000e
80006750:	0024                	.insn	2, 0x0024
80006752:	0000                	.insn	2, 0x
80006754:	0a44                	.insn	2, 0x0a44
80006756:	0000                	.insn	2, 0x
80006758:	ce30                	.insn	2, 0xce30
8000675a:	ffff                	.insn	2, 0xffff
8000675c:	0034                	.insn	2, 0x0034
8000675e:	0000                	.insn	2, 0x
80006760:	4400                	.insn	2, 0x4400
80006762:	200e                	.insn	2, 0x200e
80006764:	8148                	.insn	2, 0x8148
80006766:	8801                	.insn	2, 0x8801
80006768:	4402                	.insn	2, 0x4402
8000676a:	080c                	.insn	2, 0x080c
8000676c:	5800                	.insn	2, 0x5800
8000676e:	44c1                	.insn	2, 0x44c1
80006770:	0cc8                	.insn	2, 0x0cc8
80006772:	2002                	.insn	2, 0x2002
80006774:	0e44                	.insn	2, 0x0e44
80006776:	0000                	.insn	2, 0x
80006778:	0024                	.insn	2, 0x0024
8000677a:	0000                	.insn	2, 0x
8000677c:	0a6c                	.insn	2, 0x0a6c
8000677e:	0000                	.insn	2, 0x
80006780:	ce3c                	.insn	2, 0xce3c
80006782:	ffff                	.insn	2, 0xffff
80006784:	0044                	.insn	2, 0x0044
80006786:	0000                	.insn	2, 0x
80006788:	4400                	.insn	2, 0x4400
8000678a:	300e                	.insn	2, 0x300e
8000678c:	8148                	.insn	2, 0x8148
8000678e:	8801                	.insn	2, 0x8801
80006790:	4402                	.insn	2, 0x4402
80006792:	080c                	.insn	2, 0x080c
80006794:	6800                	.insn	2, 0x6800
80006796:	44c1                	.insn	2, 0x44c1
80006798:	0cc8                	.insn	2, 0x0cc8
8000679a:	3002                	.insn	2, 0x3002
8000679c:	0e44                	.insn	2, 0x0e44
8000679e:	0000                	.insn	2, 0x
800067a0:	0024                	.insn	2, 0x0024
800067a2:	0000                	.insn	2, 0x
800067a4:	0a94                	.insn	2, 0x0a94
800067a6:	0000                	.insn	2, 0x
800067a8:	ce58                	.insn	2, 0xce58
800067aa:	ffff                	.insn	2, 0xffff
800067ac:	0058                	.insn	2, 0x0058
800067ae:	0000                	.insn	2, 0x
800067b0:	4400                	.insn	2, 0x4400
800067b2:	200e                	.insn	2, 0x200e
800067b4:	8148                	.insn	2, 0x8148
800067b6:	8801                	.insn	2, 0x8801
800067b8:	4402                	.insn	2, 0x4402
800067ba:	080c                	.insn	2, 0x080c
800067bc:	7c00                	.insn	2, 0x7c00
800067be:	44c1                	.insn	2, 0x44c1
800067c0:	0cc8                	.insn	2, 0x0cc8
800067c2:	2002                	.insn	2, 0x2002
800067c4:	0e44                	.insn	2, 0x0e44
800067c6:	0000                	.insn	2, 0x
800067c8:	0028                	.insn	2, 0x0028
800067ca:	0000                	.insn	2, 0x
800067cc:	0abc                	.insn	2, 0x0abc
800067ce:	0000                	.insn	2, 0x
800067d0:	ce88                	.insn	2, 0xce88
800067d2:	ffff                	.insn	2, 0xffff
800067d4:	01bc                	.insn	2, 0x01bc
800067d6:	0000                	.insn	2, 0x
800067d8:	4400                	.insn	2, 0x4400
800067da:	300e                	.insn	2, 0x300e
800067dc:	8148                	.insn	2, 0x8148
800067de:	8801                	.insn	2, 0x8801
800067e0:	4402                	.insn	2, 0x4402
800067e2:	080c                	.insn	2, 0x080c
800067e4:	0300                	.insn	2, 0x0300
800067e6:	01a0                	.insn	2, 0x01a0
800067e8:	44c1                	.insn	2, 0x44c1
800067ea:	0cc8                	.insn	2, 0x0cc8
800067ec:	3002                	.insn	2, 0x3002
800067ee:	0e44                	.insn	2, 0x0e44
800067f0:	0000                	.insn	2, 0x
800067f2:	0000                	.insn	2, 0x
800067f4:	0028                	.insn	2, 0x0028
800067f6:	0000                	.insn	2, 0x
800067f8:	0ae8                	.insn	2, 0x0ae8
800067fa:	0000                	.insn	2, 0x
800067fc:	d018                	.insn	2, 0xd018
800067fe:	ffff                	.insn	2, 0xffff
80006800:	0224                	.insn	2, 0x0224
80006802:	0000                	.insn	2, 0x
80006804:	4400                	.insn	2, 0x4400
80006806:	400e                	.insn	2, 0x400e
80006808:	8148                	.insn	2, 0x8148
8000680a:	8801                	.insn	2, 0x8801
8000680c:	4402                	.insn	2, 0x4402
8000680e:	080c                	.insn	2, 0x080c
80006810:	0300                	.insn	2, 0x0300
80006812:	0208                	.insn	2, 0x0208
80006814:	44c1                	.insn	2, 0x44c1
80006816:	0cc8                	.insn	2, 0x0cc8
80006818:	4002                	.insn	2, 0x4002
8000681a:	0e44                	.insn	2, 0x0e44
8000681c:	0000                	.insn	2, 0x
8000681e:	0000                	.insn	2, 0x
80006820:	0028                	.insn	2, 0x0028
80006822:	0000                	.insn	2, 0x
80006824:	0b14                	.insn	2, 0x0b14
80006826:	0000                	.insn	2, 0x
80006828:	d210                	.insn	2, 0xd210
8000682a:	ffff                	.insn	2, 0xffff
8000682c:	0364                	.insn	2, 0x0364
8000682e:	0000                	.insn	2, 0x
80006830:	4400                	.insn	2, 0x4400
80006832:	500e                	.insn	2, 0x500e
80006834:	8148                	.insn	2, 0x8148
80006836:	8801                	.insn	2, 0x8801
80006838:	4402                	.insn	2, 0x4402
8000683a:	080c                	.insn	2, 0x080c
8000683c:	0300                	.insn	2, 0x0300
8000683e:	0348                	.insn	2, 0x0348
80006840:	44c1                	.insn	2, 0x44c1
80006842:	0cc8                	.insn	2, 0x0cc8
80006844:	5002                	.insn	2, 0x5002
80006846:	0e44                	.insn	2, 0x0e44
80006848:	0000                	.insn	2, 0x
8000684a:	0000                	.insn	2, 0x
8000684c:	0028                	.insn	2, 0x0028
8000684e:	0000                	.insn	2, 0x
80006850:	0b40                	.insn	2, 0x0b40
80006852:	0000                	.insn	2, 0x
80006854:	d548                	.insn	2, 0xd548
80006856:	ffff                	.insn	2, 0xffff
80006858:	03f4                	.insn	2, 0x03f4
8000685a:	0000                	.insn	2, 0x
8000685c:	4400                	.insn	2, 0x4400
8000685e:	500e                	.insn	2, 0x500e
80006860:	8148                	.insn	2, 0x8148
80006862:	8801                	.insn	2, 0x8801
80006864:	4402                	.insn	2, 0x4402
80006866:	080c                	.insn	2, 0x080c
80006868:	0300                	.insn	2, 0x0300
8000686a:	03d8                	.insn	2, 0x03d8
8000686c:	44c1                	.insn	2, 0x44c1
8000686e:	0cc8                	.insn	2, 0x0cc8
80006870:	5002                	.insn	2, 0x5002
80006872:	0e44                	.insn	2, 0x0e44
80006874:	0000                	.insn	2, 0x
80006876:	0000                	.insn	2, 0x
80006878:	0028                	.insn	2, 0x0028
8000687a:	0000                	.insn	2, 0x
8000687c:	0b6c                	.insn	2, 0x0b6c
8000687e:	0000                	.insn	2, 0x
80006880:	d910                	.insn	2, 0xd910
80006882:	ffff                	.insn	2, 0xffff
80006884:	02ec                	.insn	2, 0x02ec
80006886:	0000                	.insn	2, 0x
80006888:	4400                	.insn	2, 0x4400
8000688a:	400e                	.insn	2, 0x400e
8000688c:	8148                	.insn	2, 0x8148
8000688e:	8801                	.insn	2, 0x8801
80006890:	4402                	.insn	2, 0x4402
80006892:	080c                	.insn	2, 0x080c
80006894:	0300                	.insn	2, 0x0300
80006896:	02d0                	.insn	2, 0x02d0
80006898:	44c1                	.insn	2, 0x44c1
8000689a:	0cc8                	.insn	2, 0x0cc8
8000689c:	4002                	.insn	2, 0x4002
8000689e:	0e44                	.insn	2, 0x0e44
800068a0:	0000                	.insn	2, 0x
800068a2:	0000                	.insn	2, 0x
800068a4:	0024                	.insn	2, 0x0024
800068a6:	0000                	.insn	2, 0x
800068a8:	0b98                	.insn	2, 0x0b98
800068aa:	0000                	.insn	2, 0x
800068ac:	dbd0                	.insn	2, 0xdbd0
800068ae:	ffff                	.insn	2, 0xffff
800068b0:	00c4                	.insn	2, 0x00c4
800068b2:	0000                	.insn	2, 0x
800068b4:	4400                	.insn	2, 0x4400
800068b6:	300e                	.insn	2, 0x300e
800068b8:	8148                	.insn	2, 0x8148
800068ba:	8801                	.insn	2, 0x8801
800068bc:	4402                	.insn	2, 0x4402
800068be:	080c                	.insn	2, 0x080c
800068c0:	0200                	.insn	2, 0x0200
800068c2:	c1a8                	.insn	2, 0xc1a8
800068c4:	c844                	.insn	2, 0xc844
800068c6:	020c                	.insn	2, 0x020c
800068c8:	4430                	.insn	2, 0x4430
800068ca:	000e                	.insn	2, 0x000e
800068cc:	0024                	.insn	2, 0x0024
800068ce:	0000                	.insn	2, 0x
800068d0:	0bc0                	.insn	2, 0x0bc0
800068d2:	0000                	.insn	2, 0x
800068d4:	dc6c                	.insn	2, 0xdc6c
800068d6:	ffff                	.insn	2, 0xffff
800068d8:	00e4                	.insn	2, 0x00e4
800068da:	0000                	.insn	2, 0x
800068dc:	4400                	.insn	2, 0x4400
800068de:	300e                	.insn	2, 0x300e
800068e0:	8148                	.insn	2, 0x8148
800068e2:	8801                	.insn	2, 0x8801
800068e4:	4402                	.insn	2, 0x4402
800068e6:	080c                	.insn	2, 0x080c
800068e8:	0200                	.insn	2, 0x0200
800068ea:	c1c8                	.insn	2, 0xc1c8
800068ec:	c844                	.insn	2, 0xc844
800068ee:	020c                	.insn	2, 0x020c
800068f0:	4430                	.insn	2, 0x4430
800068f2:	000e                	.insn	2, 0x000e
800068f4:	0028                	.insn	2, 0x0028
800068f6:	0000                	.insn	2, 0x
800068f8:	0be8                	.insn	2, 0x0be8
800068fa:	0000                	.insn	2, 0x
800068fc:	dd28                	.insn	2, 0xdd28
800068fe:	ffff                	.insn	2, 0xffff
80006900:	0114                	.insn	2, 0x0114
80006902:	0000                	.insn	2, 0x
80006904:	4400                	.insn	2, 0x4400
80006906:	300e                	.insn	2, 0x300e
80006908:	8148                	.insn	2, 0x8148
8000690a:	8801                	.insn	2, 0x8801
8000690c:	4402                	.insn	2, 0x4402
8000690e:	080c                	.insn	2, 0x080c
80006910:	0300                	.insn	2, 0x0300
80006912:	00f8                	.insn	2, 0x00f8
80006914:	44c1                	.insn	2, 0x44c1
80006916:	0cc8                	.insn	2, 0x0cc8
80006918:	3002                	.insn	2, 0x3002
8000691a:	0e44                	.insn	2, 0x0e44
8000691c:	0000                	.insn	2, 0x
8000691e:	0000                	.insn	2, 0x
80006920:	0024                	.insn	2, 0x0024
80006922:	0000                	.insn	2, 0x
80006924:	0c14                	.insn	2, 0x0c14
80006926:	0000                	.insn	2, 0x
80006928:	de10                	.insn	2, 0xde10
8000692a:	ffff                	.insn	2, 0xffff
8000692c:	00a8                	.insn	2, 0x00a8
8000692e:	0000                	.insn	2, 0x
80006930:	4400                	.insn	2, 0x4400
80006932:	200e                	.insn	2, 0x200e
80006934:	8148                	.insn	2, 0x8148
80006936:	8801                	.insn	2, 0x8801
80006938:	4402                	.insn	2, 0x4402
8000693a:	080c                	.insn	2, 0x080c
8000693c:	0200                	.insn	2, 0x0200
8000693e:	c18c                	.insn	2, 0xc18c
80006940:	c844                	.insn	2, 0xc844
80006942:	020c                	.insn	2, 0x020c
80006944:	4420                	.insn	2, 0x4420
80006946:	000e                	.insn	2, 0x000e
80006948:	0028                	.insn	2, 0x0028
8000694a:	0000                	.insn	2, 0x
8000694c:	0c3c                	.insn	2, 0x0c3c
8000694e:	0000                	.insn	2, 0x
80006950:	de90                	.insn	2, 0xde90
80006952:	ffff                	.insn	2, 0xffff
80006954:	018c                	.insn	2, 0x018c
80006956:	0000                	.insn	2, 0x
80006958:	4400                	.insn	2, 0x4400
8000695a:	300e                	.insn	2, 0x300e
8000695c:	8148                	.insn	2, 0x8148
8000695e:	8801                	.insn	2, 0x8801
80006960:	4402                	.insn	2, 0x4402
80006962:	080c                	.insn	2, 0x080c
80006964:	0300                	.insn	2, 0x0300
80006966:	0170                	.insn	2, 0x0170
80006968:	44c1                	.insn	2, 0x44c1
8000696a:	0cc8                	.insn	2, 0x0cc8
8000696c:	3002                	.insn	2, 0x3002
8000696e:	0e44                	.insn	2, 0x0e44
80006970:	0000                	.insn	2, 0x
80006972:	0000                	.insn	2, 0x
80006974:	0024                	.insn	2, 0x0024
80006976:	0000                	.insn	2, 0x
80006978:	0c68                	.insn	2, 0x0c68
8000697a:	0000                	.insn	2, 0x
8000697c:	dff0                	.insn	2, 0xdff0
8000697e:	ffff                	.insn	2, 0xffff
80006980:	003c                	.insn	2, 0x003c
80006982:	0000                	.insn	2, 0x
80006984:	4400                	.insn	2, 0x4400
80006986:	100e                	.insn	2, 0x100e
80006988:	8148                	.insn	2, 0x8148
8000698a:	8801                	.insn	2, 0x8801
8000698c:	4402                	.insn	2, 0x4402
8000698e:	080c                	.insn	2, 0x080c
80006990:	6000                	.insn	2, 0x6000
80006992:	44c1                	.insn	2, 0x44c1
80006994:	0cc8                	.insn	2, 0x0cc8
80006996:	1002                	.insn	2, 0x1002
80006998:	0e44                	.insn	2, 0x0e44
8000699a:	0000                	.insn	2, 0x
8000699c:	001c                	.insn	2, 0x001c
8000699e:	0000                	.insn	2, 0x
800069a0:	0c90                	.insn	2, 0x0c90
800069a2:	0000                	.insn	2, 0x
800069a4:	e004                	.insn	2, 0xe004
800069a6:	ffff                	.insn	2, 0xffff
800069a8:	0018                	.insn	2, 0x0018
800069aa:	0000                	.insn	2, 0x
800069ac:	4400                	.insn	2, 0x4400
800069ae:	100e                	.insn	2, 0x100e
800069b0:	8148                	.insn	2, 0x8148
800069b2:	8801                	.insn	2, 0x8801
800069b4:	4402                	.insn	2, 0x4402
800069b6:	080c                	.insn	2, 0x080c
800069b8:	0000                	.insn	2, 0x
800069ba:	0000                	.insn	2, 0x
800069bc:	0028                	.insn	2, 0x0028
800069be:	0000                	.insn	2, 0x
800069c0:	0cb0                	.insn	2, 0x0cb0
800069c2:	0000                	.insn	2, 0x
800069c4:	e82c                	.insn	2, 0xe82c
800069c6:	ffff                	.insn	2, 0xffff
800069c8:	0244                	.insn	2, 0x0244
800069ca:	0000                	.insn	2, 0x
800069cc:	4400                	.insn	2, 0x4400
800069ce:	400e                	.insn	2, 0x400e
800069d0:	8148                	.insn	2, 0x8148
800069d2:	8801                	.insn	2, 0x8801
800069d4:	4402                	.insn	2, 0x4402
800069d6:	080c                	.insn	2, 0x080c
800069d8:	0300                	.insn	2, 0x0300
800069da:	0228                	.insn	2, 0x0228
800069dc:	44c1                	.insn	2, 0x44c1
800069de:	0cc8                	.insn	2, 0x0cc8
800069e0:	4002                	.insn	2, 0x4002
800069e2:	0e44                	.insn	2, 0x0e44
800069e4:	0000                	.insn	2, 0x
800069e6:	0000                	.insn	2, 0x
800069e8:	0024                	.insn	2, 0x0024
800069ea:	0000                	.insn	2, 0x
800069ec:	0cdc                	.insn	2, 0x0cdc
800069ee:	0000                	.insn	2, 0x
800069f0:	ea44                	.insn	2, 0xea44
800069f2:	ffff                	.insn	2, 0xffff
800069f4:	00c8                	.insn	2, 0x00c8
800069f6:	0000                	.insn	2, 0x
800069f8:	4400                	.insn	2, 0x4400
800069fa:	300e                	.insn	2, 0x300e
800069fc:	8148                	.insn	2, 0x8148
800069fe:	8801                	.insn	2, 0x8801
80006a00:	4402                	.insn	2, 0x4402
80006a02:	080c                	.insn	2, 0x080c
80006a04:	0200                	.insn	2, 0x0200
80006a06:	c1ac                	.insn	2, 0xc1ac
80006a08:	c844                	.insn	2, 0xc844
80006a0a:	020c                	.insn	2, 0x020c
80006a0c:	4430                	.insn	2, 0x4430
80006a0e:	000e                	.insn	2, 0x000e
80006a10:	0024                	.insn	2, 0x0024
80006a12:	0000                	.insn	2, 0x
80006a14:	0d04                	.insn	2, 0x0d04
80006a16:	0000                	.insn	2, 0x
80006a18:	eae4                	.insn	2, 0xeae4
80006a1a:	ffff                	.insn	2, 0xffff
80006a1c:	002c                	.insn	2, 0x002c
80006a1e:	0000                	.insn	2, 0x
80006a20:	4400                	.insn	2, 0x4400
80006a22:	100e                	.insn	2, 0x100e
80006a24:	8148                	.insn	2, 0x8148
80006a26:	8801                	.insn	2, 0x8801
80006a28:	4402                	.insn	2, 0x4402
80006a2a:	080c                	.insn	2, 0x080c
80006a2c:	5000                	.insn	2, 0x5000
80006a2e:	44c1                	.insn	2, 0x44c1
80006a30:	0cc8                	.insn	2, 0x0cc8
80006a32:	1002                	.insn	2, 0x1002
80006a34:	0e44                	.insn	2, 0x0e44
80006a36:	0000                	.insn	2, 0x
80006a38:	0024                	.insn	2, 0x0024
80006a3a:	0000                	.insn	2, 0x
80006a3c:	0d2c                	.insn	2, 0x0d2c
80006a3e:	0000                	.insn	2, 0x
80006a40:	eae8                	.insn	2, 0xeae8
80006a42:	ffff                	.insn	2, 0xffff
80006a44:	002c                	.insn	2, 0x002c
80006a46:	0000                	.insn	2, 0x
80006a48:	4400                	.insn	2, 0x4400
80006a4a:	100e                	.insn	2, 0x100e
80006a4c:	8148                	.insn	2, 0x8148
80006a4e:	8801                	.insn	2, 0x8801
80006a50:	4402                	.insn	2, 0x4402
80006a52:	080c                	.insn	2, 0x080c
80006a54:	5000                	.insn	2, 0x5000
80006a56:	44c1                	.insn	2, 0x44c1
80006a58:	0cc8                	.insn	2, 0x0cc8
80006a5a:	1002                	.insn	2, 0x1002
80006a5c:	0e44                	.insn	2, 0x0e44
80006a5e:	0000                	.insn	2, 0x
80006a60:	0024                	.insn	2, 0x0024
80006a62:	0000                	.insn	2, 0x
80006a64:	0d54                	.insn	2, 0x0d54
80006a66:	0000                	.insn	2, 0x
80006a68:	eaec                	.insn	2, 0xeaec
80006a6a:	ffff                	.insn	2, 0xffff
80006a6c:	0024                	.insn	2, 0x0024
80006a6e:	0000                	.insn	2, 0x
80006a70:	4400                	.insn	2, 0x4400
80006a72:	100e                	.insn	2, 0x100e
80006a74:	8148                	.insn	2, 0x8148
80006a76:	8801                	.insn	2, 0x8801
80006a78:	4402                	.insn	2, 0x4402
80006a7a:	080c                	.insn	2, 0x080c
80006a7c:	4800                	.insn	2, 0x4800
80006a7e:	44c1                	.insn	2, 0x44c1
80006a80:	0cc8                	.insn	2, 0x0cc8
80006a82:	1002                	.insn	2, 0x1002
80006a84:	0e44                	.insn	2, 0x0e44
80006a86:	0000                	.insn	2, 0x
80006a88:	0024                	.insn	2, 0x0024
80006a8a:	0000                	.insn	2, 0x
80006a8c:	0d7c                	.insn	2, 0x0d7c
80006a8e:	0000                	.insn	2, 0x
80006a90:	eae8                	.insn	2, 0xeae8
80006a92:	ffff                	.insn	2, 0xffff
80006a94:	00ac                	.insn	2, 0x00ac
80006a96:	0000                	.insn	2, 0x
80006a98:	4400                	.insn	2, 0x4400
80006a9a:	300e                	.insn	2, 0x300e
80006a9c:	8148                	.insn	2, 0x8148
80006a9e:	8801                	.insn	2, 0x8801
80006aa0:	4402                	.insn	2, 0x4402
80006aa2:	080c                	.insn	2, 0x080c
80006aa4:	0200                	.insn	2, 0x0200
80006aa6:	c190                	.insn	2, 0xc190
80006aa8:	c844                	.insn	2, 0xc844
80006aaa:	020c                	.insn	2, 0x020c
80006aac:	4430                	.insn	2, 0x4430
80006aae:	000e                	.insn	2, 0x000e
80006ab0:	0028                	.insn	2, 0x0028
80006ab2:	0000                	.insn	2, 0x
80006ab4:	0da4                	.insn	2, 0x0da4
80006ab6:	0000                	.insn	2, 0x
80006ab8:	eb6c                	.insn	2, 0xeb6c
80006aba:	ffff                	.insn	2, 0xffff
80006abc:	0130                	.insn	2, 0x0130
80006abe:	0000                	.insn	2, 0x
80006ac0:	4400                	.insn	2, 0x4400
80006ac2:	200e                	.insn	2, 0x200e
80006ac4:	8148                	.insn	2, 0x8148
80006ac6:	8801                	.insn	2, 0x8801
80006ac8:	4402                	.insn	2, 0x4402
80006aca:	080c                	.insn	2, 0x080c
80006acc:	0300                	.insn	2, 0x0300
80006ace:	0114                	.insn	2, 0x0114
80006ad0:	44c1                	.insn	2, 0x44c1
80006ad2:	0cc8                	.insn	2, 0x0cc8
80006ad4:	2002                	.insn	2, 0x2002
80006ad6:	0e44                	.insn	2, 0x0e44
80006ad8:	0000                	.insn	2, 0x
80006ada:	0000                	.insn	2, 0x
80006adc:	0028                	.insn	2, 0x0028
80006ade:	0000                	.insn	2, 0x
80006ae0:	0dd0                	.insn	2, 0x0dd0
80006ae2:	0000                	.insn	2, 0x
80006ae4:	ec70                	.insn	2, 0xec70
80006ae6:	ffff                	.insn	2, 0xffff
80006ae8:	0144                	.insn	2, 0x0144
80006aea:	0000                	.insn	2, 0x
80006aec:	4400                	.insn	2, 0x4400
80006aee:	300e                	.insn	2, 0x300e
80006af0:	8148                	.insn	2, 0x8148
80006af2:	8801                	.insn	2, 0x8801
80006af4:	4402                	.insn	2, 0x4402
80006af6:	080c                	.insn	2, 0x080c
80006af8:	0300                	.insn	2, 0x0300
80006afa:	0128                	.insn	2, 0x0128
80006afc:	44c1                	.insn	2, 0x44c1
80006afe:	0cc8                	.insn	2, 0x0cc8
80006b00:	3002                	.insn	2, 0x3002
80006b02:	0e44                	.insn	2, 0x0e44
80006b04:	0000                	.insn	2, 0x
80006b06:	0000                	.insn	2, 0x
80006b08:	0028                	.insn	2, 0x0028
80006b0a:	0000                	.insn	2, 0x
80006b0c:	0dfc                	.insn	2, 0x0dfc
80006b0e:	0000                	.insn	2, 0x
80006b10:	ed88                	.insn	2, 0xed88
80006b12:	ffff                	.insn	2, 0xffff
80006b14:	015c                	.insn	2, 0x015c
80006b16:	0000                	.insn	2, 0x
80006b18:	4400                	.insn	2, 0x4400
80006b1a:	300e                	.insn	2, 0x300e
80006b1c:	8148                	.insn	2, 0x8148
80006b1e:	8801                	.insn	2, 0x8801
80006b20:	4402                	.insn	2, 0x4402
80006b22:	080c                	.insn	2, 0x080c
80006b24:	0300                	.insn	2, 0x0300
80006b26:	0140                	.insn	2, 0x0140
80006b28:	44c1                	.insn	2, 0x44c1
80006b2a:	0cc8                	.insn	2, 0x0cc8
80006b2c:	3002                	.insn	2, 0x3002
80006b2e:	0e44                	.insn	2, 0x0e44
80006b30:	0000                	.insn	2, 0x
80006b32:	0000                	.insn	2, 0x
80006b34:	0024                	.insn	2, 0x0024
80006b36:	0000                	.insn	2, 0x
80006b38:	0e28                	.insn	2, 0x0e28
80006b3a:	0000                	.insn	2, 0x
80006b3c:	eeb8                	.insn	2, 0xeeb8
80006b3e:	ffff                	.insn	2, 0xffff
80006b40:	004c                	.insn	2, 0x004c
80006b42:	0000                	.insn	2, 0x
80006b44:	4400                	.insn	2, 0x4400
80006b46:	100e                	.insn	2, 0x100e
80006b48:	8148                	.insn	2, 0x8148
80006b4a:	8801                	.insn	2, 0x8801
80006b4c:	4402                	.insn	2, 0x4402
80006b4e:	080c                	.insn	2, 0x080c
80006b50:	7000                	.insn	2, 0x7000
80006b52:	44c1                	.insn	2, 0x44c1
80006b54:	0cc8                	.insn	2, 0x0cc8
80006b56:	1002                	.insn	2, 0x1002
80006b58:	0e44                	.insn	2, 0x0e44
80006b5a:	0000                	.insn	2, 0x
80006b5c:	0024                	.insn	2, 0x0024
80006b5e:	0000                	.insn	2, 0x
80006b60:	0e50                	.insn	2, 0x0e50
80006b62:	0000                	.insn	2, 0x
80006b64:	eedc                	.insn	2, 0xeedc
80006b66:	ffff                	.insn	2, 0xffff
80006b68:	00d0                	.insn	2, 0x00d0
80006b6a:	0000                	.insn	2, 0x
80006b6c:	4400                	.insn	2, 0x4400
80006b6e:	300e                	.insn	2, 0x300e
80006b70:	8148                	.insn	2, 0x8148
80006b72:	8801                	.insn	2, 0x8801
80006b74:	4402                	.insn	2, 0x4402
80006b76:	080c                	.insn	2, 0x080c
80006b78:	0200                	.insn	2, 0x0200
80006b7a:	c1b4                	.insn	2, 0xc1b4
80006b7c:	c844                	.insn	2, 0xc844
80006b7e:	020c                	.insn	2, 0x020c
80006b80:	4430                	.insn	2, 0x4430
80006b82:	000e                	.insn	2, 0x000e
80006b84:	0024                	.insn	2, 0x0024
80006b86:	0000                	.insn	2, 0x
80006b88:	0e78                	.insn	2, 0x0e78
80006b8a:	0000                	.insn	2, 0x
80006b8c:	ef84                	.insn	2, 0xef84
80006b8e:	ffff                	.insn	2, 0xffff
80006b90:	0074                	.insn	2, 0x0074
80006b92:	0000                	.insn	2, 0x
80006b94:	4400                	.insn	2, 0x4400
80006b96:	300e                	.insn	2, 0x300e
80006b98:	8148                	.insn	2, 0x8148
80006b9a:	8801                	.insn	2, 0x8801
80006b9c:	4402                	.insn	2, 0x4402
80006b9e:	080c                	.insn	2, 0x080c
80006ba0:	0200                	.insn	2, 0x0200
80006ba2:	c158                	.insn	2, 0xc158
80006ba4:	c844                	.insn	2, 0xc844
80006ba6:	020c                	.insn	2, 0x020c
80006ba8:	4430                	.insn	2, 0x4430
80006baa:	000e                	.insn	2, 0x000e
80006bac:	0024                	.insn	2, 0x0024
80006bae:	0000                	.insn	2, 0x
80006bb0:	0ea0                	.insn	2, 0x0ea0
80006bb2:	0000                	.insn	2, 0x
80006bb4:	efd0                	.insn	2, 0xefd0
80006bb6:	ffff                	.insn	2, 0xffff
80006bb8:	00ac                	.insn	2, 0x00ac
80006bba:	0000                	.insn	2, 0x
80006bbc:	4400                	.insn	2, 0x4400
80006bbe:	300e                	.insn	2, 0x300e
80006bc0:	8148                	.insn	2, 0x8148
80006bc2:	8801                	.insn	2, 0x8801
80006bc4:	4402                	.insn	2, 0x4402
80006bc6:	080c                	.insn	2, 0x080c
80006bc8:	0200                	.insn	2, 0x0200
80006bca:	c190                	.insn	2, 0xc190
80006bcc:	c844                	.insn	2, 0xc844
80006bce:	020c                	.insn	2, 0x020c
80006bd0:	4430                	.insn	2, 0x4430
80006bd2:	000e                	.insn	2, 0x000e
80006bd4:	0024                	.insn	2, 0x0024
80006bd6:	0000                	.insn	2, 0x
80006bd8:	0ec8                	.insn	2, 0x0ec8
80006bda:	0000                	.insn	2, 0x
80006bdc:	f054                	.insn	2, 0xf054
80006bde:	ffff                	.insn	2, 0xffff
80006be0:	0078                	.insn	2, 0x0078
80006be2:	0000                	.insn	2, 0x
80006be4:	4400                	.insn	2, 0x4400
80006be6:	300e                	.insn	2, 0x300e
80006be8:	8148                	.insn	2, 0x8148
80006bea:	8801                	.insn	2, 0x8801
80006bec:	4402                	.insn	2, 0x4402
80006bee:	080c                	.insn	2, 0x080c
80006bf0:	0200                	.insn	2, 0x0200
80006bf2:	c15c                	.insn	2, 0xc15c
80006bf4:	c844                	.insn	2, 0xc844
80006bf6:	020c                	.insn	2, 0x020c
80006bf8:	4430                	.insn	2, 0x4430
80006bfa:	000e                	.insn	2, 0x000e
80006bfc:	0024                	.insn	2, 0x0024
80006bfe:	0000                	.insn	2, 0x
80006c00:	0ef0                	.insn	2, 0x0ef0
80006c02:	0000                	.insn	2, 0x
80006c04:	f0a4                	.insn	2, 0xf0a4
80006c06:	ffff                	.insn	2, 0xffff
80006c08:	0068                	.insn	2, 0x0068
80006c0a:	0000                	.insn	2, 0x
80006c0c:	4400                	.insn	2, 0x4400
80006c0e:	300e                	.insn	2, 0x300e
80006c10:	8148                	.insn	2, 0x8148
80006c12:	8801                	.insn	2, 0x8801
80006c14:	4402                	.insn	2, 0x4402
80006c16:	080c                	.insn	2, 0x080c
80006c18:	0200                	.insn	2, 0x0200
80006c1a:	c14c                	.insn	2, 0xc14c
80006c1c:	c844                	.insn	2, 0xc844
80006c1e:	020c                	.insn	2, 0x020c
80006c20:	4430                	.insn	2, 0x4430
80006c22:	000e                	.insn	2, 0x000e

Disassembly of section .srodata:

80006c24 <uxTopUsedPriority>:
static const volatile UBaseType_t uxTopUsedPriority = configMAX_PRIORITIES - 1U;
80006c24:	0000                	.insn	2, 0x
	...

80006c28 <xISRStackTop>:
const StackType_t xISRStackTop = ( StackType_t ) &( xISRStack[ configISR_STACK_SIZE_WORDS & ~portBYTE_ALIGNMENT_MASK ] );
80006c28:	84d0                	.insn	2, 0x84d0
80006c2a:	8000                	.insn	2, 0x8000

80006c2c <uxTimerIncrementsForOneTick>:
const size_t uxTimerIncrementsForOneTick = ( size_t ) ( ( configCPU_CLOCK_HZ ) / ( configTICK_RATE_HZ ) ); /* Assumes increment won't go over 32-bits. */
80006c2c:	d090                	.insn	2, 0xd090
80006c2e:	          	lb	zero,192(zero) # c0 <__start-0x7fffff40>

80006c30 <ullMachineTimerCompareRegisterBase>:
uint32_t const ullMachineTimerCompareRegisterBase = configMTIMECMP_BASE_ADDRESS;
80006c30:	0c00                	.insn	2, 0x0c00
80006c32:	2000                	.insn	2, 0x2000

80006c34 <xHeapStructSize>:
static const size_t xHeapStructSize = ( sizeof( BlockLink_t ) + ( ( size_t ) ( portBYTE_ALIGNMENT - 1 ) ) ) & ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
80006c34:	0010                	.insn	2, 0x0010
	...

Disassembly of section .rodata:

80006c38 <.rodata>:
80006c38:	4449                	.insn	2, 0x4449
80006c3a:	454c                	.insn	2, 0x454c
80006c3c:	0000                	.insn	2, 0x
80006c3e:	0000                	.insn	2, 0x
80006c40:	3bcc                	.insn	2, 0x3bcc
80006c42:	8000                	.insn	2, 0x8000
80006c44:	3afc                	.insn	2, 0x3afc
80006c46:	8000                	.insn	2, 0x8000
80006c48:	3b38                	.insn	2, 0x3b38
80006c4a:	8000                	.insn	2, 0x8000
80006c4c:	3b70                	.insn	2, 0x3b70
80006c4e:	8000                	.insn	2, 0x8000
80006c50:	3b90                	.insn	2, 0x3b90
80006c52:	8000                	.insn	2, 0x8000
80006c54:	3f20                	.insn	2, 0x3f20
80006c56:	8000                	.insn	2, 0x8000
80006c58:	3e50                	.insn	2, 0x3e50
80006c5a:	8000                	.insn	2, 0x8000
80006c5c:	3e8c                	.insn	2, 0x3e8c
80006c5e:	8000                	.insn	2, 0x8000
80006c60:	3ec4                	.insn	2, 0x3ec4
80006c62:	8000                	.insn	2, 0x8000
80006c64:	3ee4                	.insn	2, 0x3ee4
80006c66:	8000                	.insn	2, 0x8000

Disassembly of section .sdata:

80006c68 <pullNextTime>:
const uint64_t * pullNextTime = &ullNextTime;
80006c68:	8908                	.insn	2, 0x8908
80006c6a:	8000                	.insn	2, 0x8000

80006c6c <xCriticalNesting>:
size_t xCriticalNesting = ( size_t ) 0xaaaaaaaa;
80006c6c:	aaaa                	.insn	2, 0xaaaa
80006c6e:	aaaa                	.insn	2, 0xaaaa

80006c70 <pxCriticalNesting>:
size_t * pxCriticalNesting = &xCriticalNesting;
80006c70:	6c6c                	.insn	2, 0x6c6c
80006c72:	8000                	.insn	2, 0x8000

Disassembly of section .data.__stack:

80006c80 <__stack_top-0x1000>:
	...

Disassembly of section .debug_info:

00000000 <.debug_info>:
       0:	00d2                	.insn	2, 0x00d2
       2:	0000                	.insn	2, 0x
       4:	0005                	.insn	2, 0x0005
       6:	0401                	.insn	2, 0x0401
       8:	0000                	.insn	2, 0x
       a:	0000                	.insn	2, 0x
       c:	00006303          	.insn	4, 0x6303
      10:	1d00                	.insn	2, 0x1d00
      12:	002d                	.insn	2, 0x002d
      14:	0000                	.insn	2, 0x
      16:	0000                	.insn	2, 0x
      18:	0000                	.insn	2, 0x
      1a:	0010                	.insn	2, 0x0010
      1c:	8000                	.insn	2, 0x8000
      1e:	00dc                	.insn	2, 0x00dc
      20:	0000                	.insn	2, 0x
      22:	0000                	.insn	2, 0x
      24:	0000                	.insn	2, 0x
      26:	0101                	.insn	2, 0x0101
      28:	0206                	.insn	2, 0x0206
      2a:	0000                	.insn	2, 0x
      2c:	0100                	.insn	2, 0x0100
      2e:	0502                	.insn	2, 0x0502
      30:	00fd                	.insn	2, 0x00fd
      32:	0000                	.insn	2, 0x
      34:	0404                	.insn	2, 0x0404
      36:	6905                	.insn	2, 0x6905
      38:	746e                	.insn	2, 0x746e
      3a:	0100                	.insn	2, 0x0100
      3c:	0508                	.insn	2, 0x0508
      3e:	000000ef          	jal	ra,3e <__start-0x7fffffc2>
      42:	0101                	.insn	2, 0x0101
      44:	0008                	.insn	2, 0x0008
      46:	0000                	.insn	2, 0x
      48:	0100                	.insn	2, 0x0100
      4a:	0702                	.insn	2, 0x0702
      4c:	000e                	.insn	2, 0x000e
      4e:	0000                	.insn	2, 0x
      50:	0401                	.insn	2, 0x0401
      52:	0000e207          	.insn	4, 0xe207
      56:	0100                	.insn	2, 0x0100
      58:	0708                	.insn	2, 0x0708
      5a:	00d8                	.insn	2, 0x00d8
      5c:	0000                	.insn	2, 0x
      5e:	1001                	.insn	2, 0x1001
      60:	1c04                	.insn	2, 0x1c04
      62:	0001                	.insn	2, 0x0001
      64:	0500                	.insn	2, 0x0500
      66:	0069                	.insn	2, 0x0069
      68:	0401                	.insn	2, 0x0401
      6a:	3405                	.insn	2, 0x3405
      6c:	0000                	.insn	2, 0x
      6e:	0500                	.insn	2, 0x0500
      70:	00890003          	lb	zero,8(s2)
      74:	0280                	.insn	2, 0x0280
      76:	0021                	.insn	2, 0x0021
      78:	0000                	.insn	2, 0x
      7a:	c81e                	.insn	2, 0xc81e
      7c:	0000                	.insn	2, 0x
      7e:	2480                	.insn	2, 0x2480
      80:	0000                	.insn	2, 0x
      82:	0100                	.insn	2, 0x0100
      84:	029c                	.insn	2, 0x029c
      86:	0045                	.insn	2, 0x0045
      88:	0000                	.insn	2, 0x
      8a:	a41a                	.insn	2, 0xa41a
      8c:	0000                	.insn	2, 0x
      8e:	2480                	.insn	2, 0x2480
      90:	0000                	.insn	2, 0x
      92:	0100                	.insn	2, 0x0100
      94:	029c                	.insn	2, 0x029c
      96:	0128                	.insn	2, 0x0128
      98:	0000                	.insn	2, 0x
      9a:	8016                	.insn	2, 0x8016
      9c:	0000                	.insn	2, 0x
      9e:	2480                	.insn	2, 0x2480
      a0:	0000                	.insn	2, 0x
      a2:	0100                	.insn	2, 0x0100
      a4:	029c                	.insn	2, 0x029c
      a6:	00000107          	.insn	4, 0x0107
      aa:	5c12                	.insn	2, 0x5c12
      ac:	0000                	.insn	2, 0x
      ae:	2480                	.insn	2, 0x2480
      b0:	0000                	.insn	2, 0x
      b2:	0100                	.insn	2, 0x0100
      b4:	029c                	.insn	2, 0x029c
      b6:	0146                	.insn	2, 0x0146
      b8:	0000                	.insn	2, 0x
      ba:	380e                	.insn	2, 0x380e
      bc:	0000                	.insn	2, 0x
      be:	2480                	.insn	2, 0x2480
      c0:	0000                	.insn	2, 0x
      c2:	0100                	.insn	2, 0x0100
      c4:	029c                	.insn	2, 0x029c
      c6:	0040                	.insn	2, 0x0040
      c8:	0000                	.insn	2, 0x
      ca:	1006                	.insn	2, 0x1006
      cc:	0000                	.insn	2, 0x
      ce:	2880                	.insn	2, 0x2880
      d0:	0000                	.insn	2, 0x
      d2:	0100                	.insn	2, 0x0100
      d4:	009c                	.insn	2, 0x009c
      d6:	0296                	.insn	2, 0x0296
      d8:	0000                	.insn	2, 0x
      da:	0005                	.insn	2, 0x0005
      dc:	0401                	.insn	2, 0x0401
      de:	0058                	.insn	2, 0x0058
      e0:	0000                	.insn	2, 0x
      e2:	630a                	.insn	2, 0x630a
      e4:	0000                	.insn	2, 0x
      e6:	1d00                	.insn	2, 0x1d00
      e8:	003c                	.insn	2, 0x003c
      ea:	0000                	.insn	2, 0x
      ec:	0000                	.insn	2, 0x
      ee:	0000                	.insn	2, 0x
      f0:	00ec                	.insn	2, 0x00ec
      f2:	8000                	.insn	2, 0x8000
      f4:	02a8                	.insn	2, 0x02a8
      f6:	0000                	.insn	2, 0x
      f8:	00b2                	.insn	2, 0x00b2
      fa:	0000                	.insn	2, 0x
      fc:	0401                	.insn	2, 0x0401
      fe:	0000e207          	.insn	4, 0xe207
     102:	0b00                	.insn	2, 0x0b00
     104:	0504                	.insn	2, 0x0504
     106:	6e69                	.insn	2, 0x6e69
     108:	0074                	.insn	2, 0x0074
     10a:	0401                	.insn	2, 0x0401
     10c:	f405                	.insn	2, 0xf405
     10e:	0000                	.insn	2, 0x
     110:	0100                	.insn	2, 0x0100
     112:	0508                	.insn	2, 0x0508
     114:	000000ef          	jal	ra,114 <__start-0x7ffffeec>
     118:	0101                	.insn	2, 0x0101
     11a:	0008                	.insn	2, 0x0008
     11c:	0000                	.insn	2, 0x
     11e:	0100                	.insn	2, 0x0100
     120:	0702                	.insn	2, 0x0702
     122:	000e                	.insn	2, 0x000e
     124:	0000                	.insn	2, 0x
     126:	0401                	.insn	2, 0x0401
     128:	0000dd07          	.insn	4, 0xdd07
     12c:	0100                	.insn	2, 0x0100
     12e:	0601                	.insn	2, 0x0601
     130:	0002                	.insn	2, 0x0002
     132:	0000                	.insn	2, 0x
     134:	0201                	.insn	2, 0x0201
     136:	fd05                	.insn	2, 0xfd05
     138:	0000                	.insn	2, 0x
     13a:	0100                	.insn	2, 0x0100
     13c:	0708                	.insn	2, 0x0708
     13e:	00d8                	.insn	2, 0x00d8
     140:	0000                	.insn	2, 0x
     142:	040c                	.insn	2, 0x040c
     144:	0101                	.insn	2, 0x0101
     146:	0908                	.insn	2, 0x0908
     148:	0000                	.insn	2, 0x
     14a:	0100                	.insn	2, 0x0100
     14c:	0410                	.insn	2, 0x0410
     14e:	011c                	.insn	2, 0x011c
     150:	0000                	.insn	2, 0x
     152:	4b04                	.insn	2, 0x4b04
     154:	0002                	.insn	2, 0x0002
     156:	0200                	.insn	2, 0x0200
     158:	1934                	.insn	2, 0x1934
     15a:	0026                	.insn	2, 0x0026
     15c:	0000                	.insn	2, 0x
     15e:	2104                	.insn	2, 0x2104
     160:	0002                	.insn	2, 0x0002
     162:	0300                	.insn	2, 0x0300
     164:	007c1a43          	.insn	4, 0x007c1a43
     168:	0000                	.insn	2, 0x
     16a:	6704                	.insn	2, 0x6704
     16c:	0001                	.insn	2, 0x0001
     16e:	0300                	.insn	2, 0x0300
     170:	1a44                	.insn	2, 0x1a44
     172:	007c                	.insn	2, 0x007c
     174:	0000                	.insn	2, 0x
     176:	00009407          	.insn	4, 0x9407
     17a:	0800                	.insn	2, 0x0800
     17c:	019d                	.insn	2, 0x019d
     17e:	0000                	.insn	2, 0x
     180:	9014                	.insn	2, 0x9014
     182:	ee08                	.insn	2, 0xee08
     184:	0000                	.insn	2, 0x
     186:	0200                	.insn	2, 0x0200
     188:	0181                	.insn	2, 0x0181
     18a:	0000                	.insn	2, 0x
     18c:	00942493          	slti	s1,s0,9
     190:	0000                	.insn	2, 0x
     192:	0200                	.insn	2, 0x0200
     194:	01f1                	.insn	2, 0x01f1
     196:	0000                	.insn	2, 0x
     198:	2d94                	.insn	2, 0x2d94
     19a:	00ee                	.insn	2, 0x00ee
     19c:	0000                	.insn	2, 0x
     19e:	0204                	.insn	2, 0x0204
     1a0:	0240                	.insn	2, 0x0240
     1a2:	0000                	.insn	2, 0x
     1a4:	2d95                	.insn	2, 0x2d95
     1a6:	00ee                	.insn	2, 0x00ee
     1a8:	0000                	.insn	2, 0x
     1aa:	0208                	.insn	2, 0x0208
     1ac:	0195                	.insn	2, 0x0195
     1ae:	0000                	.insn	2, 0x
     1b0:	0c96                	.insn	2, 0x0c96
     1b2:	006c                	.insn	2, 0x006c
     1b4:	0000                	.insn	2, 0x
     1b6:	020c                	.insn	2, 0x020c
     1b8:	0000015b          	.insn	4, 0x015b
     1bc:	01242897          	auipc	a7,0x1242
     1c0:	0000                	.insn	2, 0x
     1c2:	0010                	.insn	2, 0x0010
     1c4:	a505                	.insn	2, 0xa505
     1c6:	0000                	.insn	2, 0x
     1c8:	0800                	.insn	2, 0x0800
     1ca:	0000026b          	.insn	4, 0x026b
     1ce:	ac14                	.insn	2, 0xac14
     1d0:	2410                	.insn	2, 0x2410
     1d2:	0001                	.insn	2, 0x0001
     1d4:	0200                	.insn	2, 0x0200
     1d6:	01d2                	.insn	2, 0x01d2
     1d8:	0000                	.insn	2, 0x
     1da:	008825af          	.insn	4, 0x008825af
     1de:	0000                	.insn	2, 0x
     1e0:	0200                	.insn	2, 0x0200
     1e2:	0238                	.insn	2, 0x0238
     1e4:	0000                	.insn	2, 0x
     1e6:	26b0                	.insn	2, 0x26b0
     1e8:	0172                	.insn	2, 0x0172
     1ea:	0000                	.insn	2, 0x
     1ec:	0204                	.insn	2, 0x0204
     1ee:	018c                	.insn	2, 0x018c
     1f0:	0000                	.insn	2, 0x
     1f2:	14b1                	.insn	2, 0x14b1
     1f4:	0166                	.insn	2, 0x0166
     1f6:	0000                	.insn	2, 0x
     1f8:	0008                	.insn	2, 0x0008
     1fa:	f305                	.insn	2, 0xf305
     1fc:	0000                	.insn	2, 0x
     1fe:	0400                	.insn	2, 0x0400
     200:	0176                	.insn	2, 0x0176
     202:	0000                	.insn	2, 0x
     204:	9a04                	.insn	2, 0x9a04
     206:	0000a51b          	.insn	4, 0xa51b
     20a:	0800                	.insn	2, 0x0800
     20c:	0254                	.insn	2, 0x0254
     20e:	0000                	.insn	2, 0x
     210:	9d0c                	.insn	2, 0x9d0c
     212:	660c                	.insn	2, 0x660c
     214:	0001                	.insn	2, 0x0001
     216:	0200                	.insn	2, 0x0200
     218:	0181                	.insn	2, 0x0181
     21a:	0000                	.insn	2, 0x
     21c:	28a0                	.insn	2, 0x28a0
     21e:	0094                	.insn	2, 0x0094
     220:	0000                	.insn	2, 0x
     222:	0200                	.insn	2, 0x0200
     224:	01f1                	.insn	2, 0x01f1
     226:	0000                	.insn	2, 0x
     228:	31a1                	.insn	2, 0x31a1
     22a:	00ee                	.insn	2, 0x00ee
     22c:	0000                	.insn	2, 0x
     22e:	0204                	.insn	2, 0x0204
     230:	0240                	.insn	2, 0x0240
     232:	0000                	.insn	2, 0x
     234:	31a2                	.insn	2, 0x31a2
     236:	00ee                	.insn	2, 0x00ee
     238:	0000                	.insn	2, 0x
     23a:	0008                	.insn	2, 0x0008
     23c:	7204                	.insn	2, 0x7204
     23e:	0001                	.insn	2, 0x0001
     240:	0400                	.insn	2, 0x0400
     242:	24a4                	.insn	2, 0x24a4
     244:	0135                	.insn	2, 0x0135
     246:	0000                	.insn	2, 0x
     248:	2905                	.insn	2, 0x2905
     24a:	0001                	.insn	2, 0x0001
     24c:	0700                	.insn	2, 0x0700
     24e:	0172                	.insn	2, 0x0172
     250:	0000                	.insn	2, 0x
     252:	cb04                	.insn	2, 0xcb04
     254:	0001                	.insn	2, 0x0001
     256:	0400                	.insn	2, 0x0400
     258:	00f303b3          	add	t2,t1,a5
     25c:	0000                	.insn	2, 0x
     25e:	710d                	.insn	2, 0x710d
     260:	0002                	.insn	2, 0x0002
     262:	0100                	.insn	2, 0x0100
     264:	00880dd7          	.insn	4, 0x00880dd7
     268:	0000                	.insn	2, 0x
     26a:	02f4                	.insn	2, 0x02f4
     26c:	8000                	.insn	2, 0x8000
     26e:	00a0                	.insn	2, 0x00a0
     270:	0000                	.insn	2, 0x
     272:	9c01                	.insn	2, 0x9c01
     274:	000001bf 0001a803 	.insn	8, 0x0001a803000001bf
     27c:	d700                	.insn	2, 0xd700
     27e:	772e                	.insn	2, 0x772e
     280:	0001                	.insn	2, 0x0001
     282:	0200                	.insn	2, 0x0200
     284:	5c91                	.insn	2, 0x5c91
     286:	6406                	.insn	2, 0x6406
     288:	0002                	.insn	2, 0x0002
     28a:	db00                	.insn	2, 0xdb00
     28c:	c414                	.insn	2, 0xc414
     28e:	0001                	.insn	2, 0x0001
     290:	0200                	.insn	2, 0x0200
     292:	6c91                	.insn	2, 0x6c91
     294:	0500                	.insn	2, 0x0500
     296:	017c                	.insn	2, 0x017c
     298:	0000                	.insn	2, 0x
     29a:	0001bf07          	.insn	4, 0x0001bf07
     29e:	0900                	.insn	2, 0x0900
     2a0:	028c                	.insn	2, 0x028c
     2a2:	0000                	.insn	2, 0x
     2a4:	0002188b          	.insn	4, 0x0002188b
     2a8:	dc80                	.insn	2, 0xdc80
     2aa:	0000                	.insn	2, 0x
     2ac:	0100                	.insn	2, 0x0100
     2ae:	169c                	.insn	2, 0x169c
     2b0:	0002                	.insn	2, 0x0002
     2b2:	0300                	.insn	2, 0x0300
     2b4:	0264                	.insn	2, 0x0264
     2b6:	0000                	.insn	2, 0x
     2b8:	01c4228b          	.insn	4, 0x01c4228b
     2bc:	0000                	.insn	2, 0x
     2be:	9102                	.insn	2, 0x9102
     2c0:	035c                	.insn	2, 0x035c
     2c2:	027e                	.insn	2, 0x027e
     2c4:	0000                	.insn	2, 0x
     2c6:	268c                	.insn	2, 0x268c
     2c8:	00000177          	.insn	4, 0x0177
     2cc:	9102                	.insn	2, 0x9102
     2ce:	0658                	.insn	2, 0x0658
     2d0:	022d                	.insn	2, 0x022d
     2d2:	0000                	.insn	2, 0x
     2d4:	128e                	.insn	2, 0x128e
     2d6:	0172                	.insn	2, 0x0172
     2d8:	0000                	.insn	2, 0x
     2da:	9102                	.insn	2, 0x9102
     2dc:	066c                	.insn	2, 0x066c
     2de:	0208                	.insn	2, 0x0208
     2e0:	0000                	.insn	2, 0x
     2e2:	00a0168f          	.insn	4, 0x00a0168f
     2e6:	0000                	.insn	2, 0x
     2e8:	9102                	.insn	2, 0x9102
     2ea:	0068                	.insn	2, 0x0068
     2ec:	e209                	.insn	2, 0xe209
     2ee:	0001                	.insn	2, 0x0001
     2f0:	6900                	.insn	2, 0x6900
     2f2:	0188                	.insn	2, 0x0188
     2f4:	8000                	.insn	2, 0x8000
     2f6:	0090                	.insn	2, 0x0090
     2f8:	0000                	.insn	2, 0x
     2fa:	9c01                	.insn	2, 0x9c01
     2fc:	0255                	.insn	2, 0x0255
     2fe:	0000                	.insn	2, 0x
     300:	00026403          	.insn	4, 0x00026403
     304:	6900                	.insn	2, 0x6900
     306:	c425                	.insn	2, 0xc425
     308:	0001                	.insn	2, 0x0001
     30a:	0200                	.insn	2, 0x0200
     30c:	5c91                	.insn	2, 0x5c91
     30e:	00027e03          	.insn	4, 0x00027e03
     312:	6a00                	.insn	2, 0x6a00
     314:	7729                	.insn	2, 0x7729
     316:	0001                	.insn	2, 0x0001
     318:	0200                	.insn	2, 0x0200
     31a:	5891                	.insn	2, 0x5891
     31c:	3806                	.insn	2, 0x3806
     31e:	0002                	.insn	2, 0x0002
     320:	6c00                	.insn	2, 0x6c00
     322:	7718                	.insn	2, 0x7718
     324:	0001                	.insn	2, 0x0001
     326:	0200                	.insn	2, 0x0200
     328:	6c91                	.insn	2, 0x6c91
     32a:	0900                	.insn	2, 0x0900
     32c:	000001b7          	lui	gp,0x0
     330:	5859                	.insn	2, 0x5859
     332:	0001                	.insn	2, 0x0001
     334:	3080                	.insn	2, 0x3080
     336:	0000                	.insn	2, 0x
     338:	0100                	.insn	2, 0x0100
     33a:	789c                	.insn	2, 0x789c
     33c:	0002                	.insn	2, 0x0002
     33e:	0300                	.insn	2, 0x0300
     340:	021a                	.insn	2, 0x021a
     342:	0000                	.insn	2, 0x
     344:	2e59                	.insn	2, 0x2e59
     346:	00000177          	.insn	4, 0x0177
     34a:	9102                	.insn	2, 0x9102
     34c:	006c                	.insn	2, 0x006c
     34e:	f80e                	.insn	2, 0xf80e
     350:	0001                	.insn	2, 0x0001
     352:	0100                	.insn	2, 0x0100
     354:	0631                	.insn	2, 0x0631
     356:	00ec                	.insn	2, 0x00ec
     358:	8000                	.insn	2, 0x8000
     35a:	006c                	.insn	2, 0x006c
     35c:	0000                	.insn	2, 0x
     35e:	9c01                	.insn	2, 0x9c01
     360:	00026403          	.insn	4, 0x00026403
     364:	3100                	.insn	2, 0x3100
     366:	c426                	.insn	2, 0xc426
     368:	0001                	.insn	2, 0x0001
     36a:	0200                	.insn	2, 0x0200
     36c:	6c91                	.insn	2, 0x6c91
     36e:	0000                	.insn	2, 0x
     370:	0e3a                	.insn	2, 0x0e3a
     372:	0000                	.insn	2, 0x
     374:	0005                	.insn	2, 0x0005
     376:	0401                	.insn	2, 0x0401
     378:	0144                	.insn	2, 0x0144
     37a:	0000                	.insn	2, 0x
     37c:	00006317          	auipc	t1,0x6
     380:	1d00                	.insn	2, 0x1d00
     382:	000000fb          	.insn	4, 0x00fb
     386:	0000                	.insn	2, 0x
     388:	0000                	.insn	2, 0x
     38a:	0394                	.insn	2, 0x0394
     38c:	8000                	.insn	2, 0x8000
     38e:	18a4                	.insn	2, 0x18a4
     390:	0000                	.insn	2, 0x
     392:	0322                	.insn	2, 0x0322
     394:	0000                	.insn	2, 0x
     396:	ee04                	.insn	2, 0xee04
     398:	0002                	.insn	2, 0x0002
     39a:	0200                	.insn	2, 0x0200
     39c:	17d6                	.insn	2, 0x17d6
     39e:	0032                	.insn	2, 0x0032
     3a0:	0000                	.insn	2, 0x
     3a2:	0409                	.insn	2, 0x0409
     3a4:	0000e207          	.insn	4, 0xe207
     3a8:	1800                	.insn	2, 0x1800
     3aa:	0504                	.insn	2, 0x0504
     3ac:	6e69                	.insn	2, 0x6e69
     3ae:	0074                	.insn	2, 0x0074
     3b0:	0409                	.insn	2, 0x0409
     3b2:	f405                	.insn	2, 0xf405
     3b4:	0000                	.insn	2, 0x
     3b6:	0900                	.insn	2, 0x0900
     3b8:	0508                	.insn	2, 0x0508
     3ba:	000000ef          	jal	ra,3ba <__start-0x7ffffc46>
     3be:	0109                	.insn	2, 0x0109
     3c0:	0008                	.insn	2, 0x0008
     3c2:	0000                	.insn	2, 0x
     3c4:	0900                	.insn	2, 0x0900
     3c6:	0702                	.insn	2, 0x0702
     3c8:	000e                	.insn	2, 0x000e
     3ca:	0000                	.insn	2, 0x
     3cc:	0409                	.insn	2, 0x0409
     3ce:	0000dd07          	.insn	4, 0xdd07
     3d2:	0400                	.insn	2, 0x0400
     3d4:	061d                	.insn	2, 0x061d
     3d6:	0000                	.insn	2, 0x
     3d8:	6f152503          	lw	a0,1777(a0)
     3dc:	0000                	.insn	2, 0x
     3de:	0900                	.insn	2, 0x0900
     3e0:	0601                	.insn	2, 0x0601
     3e2:	0002                	.insn	2, 0x0002
     3e4:	0000                	.insn	2, 0x
     3e6:	0209                	.insn	2, 0x0209
     3e8:	fd05                	.insn	2, 0xfd05
     3ea:	0000                	.insn	2, 0x
     3ec:	0400                	.insn	2, 0x0400
     3ee:	0714                	.insn	2, 0x0714
     3f0:	0000                	.insn	2, 0x
     3f2:	39142903          	lw	s2,913(s0)
     3f6:	0000                	.insn	2, 0x
     3f8:	0900                	.insn	2, 0x0900
     3fa:	0708                	.insn	2, 0x0708
     3fc:	00d8                	.insn	2, 0x00d8
     3fe:	0000                	.insn	2, 0x
     400:	0419                	.insn	2, 0x0419
     402:	0000900f          	.insn	4, 0x900f
     406:	0500                	.insn	2, 0x0500
     408:	0090                	.insn	2, 0x0090
     40a:	0000                	.insn	2, 0x
     40c:	0109                	.insn	2, 0x0109
     40e:	0908                	.insn	2, 0x0908
     410:	0000                	.insn	2, 0x
     412:	0400                	.insn	2, 0x0400
     414:	061f 0000 1804      	.insn	6, 0x18040000061f
     41a:	6312                	.insn	2, 0x6312
     41c:	0000                	.insn	2, 0x
     41e:	1000                	.insn	2, 0x1000
     420:	000000a3          	sb	zero,1(zero) # 1 <__start-0x7fffffff>
     424:	a305                	.insn	2, 0xa305
     426:	0000                	.insn	2, 0x
     428:	0400                	.insn	2, 0x0400
     42a:	0716                	.insn	2, 0x0716
     42c:	0000                	.insn	2, 0x
     42e:	1a04                	.insn	2, 0x1a04
     430:	00007d13          	andi	s10,zero,0
     434:	0600                	.insn	2, 0x0600
     436:	00d4                	.insn	2, 0x00d4
     438:	0000                	.insn	2, 0x
     43a:	0000c50f          	.insn	4, 0xc50f
     43e:	0500                	.insn	2, 0x0500
     440:	00c5                	.insn	2, 0x00c5
     442:	0000                	.insn	2, 0x
     444:	091a                	.insn	2, 0x091a
     446:	0410                	.insn	2, 0x0410
     448:	011c                	.insn	2, 0x011c
     44a:	0000                	.insn	2, 0x
     44c:	bf04                	.insn	2, 0xbf04
     44e:	05000007          	.insn	4, 0x05000007
     452:	182e                	.insn	2, 0x182e
     454:	004e                	.insn	2, 0x004e
     456:	0000                	.insn	2, 0x
     458:	dc05                	.insn	2, 0xdc05
     45a:	0000                	.insn	2, 0x
     45c:	0400                	.insn	2, 0x0400
     45e:	0000024b          	.insn	4, 0x024b
     462:	3405                	.insn	2, 0x3405
     464:	3219                	.insn	2, 0x3219
     466:	0000                	.insn	2, 0x
     468:	0400                	.insn	2, 0x0400
     46a:	0222                	.insn	2, 0x0222
     46c:	0000                	.insn	2, 0x
     46e:	4206                	.insn	2, 0x4206
     470:	b91a                	.insn	2, 0xb91a
     472:	0000                	.insn	2, 0x
     474:	0500                	.insn	2, 0x0500
     476:	00f9                	.insn	2, 0x00f9
     478:	0000                	.insn	2, 0x
     47a:	2104                	.insn	2, 0x2104
     47c:	0002                	.insn	2, 0x0002
     47e:	0600                	.insn	2, 0x0600
     480:	00ed1a43          	.insn	4, 0x00ed1a43
     484:	0000                	.insn	2, 0x
     486:	0a10                	.insn	2, 0x0a10
     488:	0001                	.insn	2, 0x0001
     48a:	0500                	.insn	2, 0x0500
     48c:	010a                	.insn	2, 0x010a
     48e:	0000                	.insn	2, 0x
     490:	6704                	.insn	2, 0x6704
     492:	0001                	.insn	2, 0x0001
     494:	0600                	.insn	2, 0x0600
     496:	1a44                	.insn	2, 0x1a44
     498:	00ed                	.insn	2, 0x00ed
     49a:	0000                	.insn	2, 0x
     49c:	2005                	.insn	2, 0x2005
     49e:	0001                	.insn	2, 0x0001
     4a0:	1b00                	.insn	2, 0x1b00
     4a2:	108d                	.insn	2, 0x108d
     4a4:	0000                	.insn	2, 0x
     4a6:	7506                	.insn	2, 0x7506
     4a8:	0000260f          	.insn	4, 0x260f
     4ac:	0600                	.insn	2, 0x0600
     4ae:	00dc                	.insn	2, 0x00dc
     4b0:	0000                	.insn	2, 0x
     4b2:	00019d0b          	.insn	4, 0x00019d0b
     4b6:	1400                	.insn	2, 0x1400
     4b8:	91089007          	.insn	4, 0x91089007
     4bc:	0001                	.insn	2, 0x0001
     4be:	0300                	.insn	2, 0x0300
     4c0:	0181                	.insn	2, 0x0181
     4c2:	0000                	.insn	2, 0x
     4c4:	20249307          	.insn	4, 0x20249307
     4c8:	0001                	.insn	2, 0x0001
     4ca:	0000                	.insn	2, 0x
     4cc:	0001f103          	.insn	4, 0x0001f103
     4d0:	0700                	.insn	2, 0x0700
     4d2:	2d94                	.insn	2, 0x2d94
     4d4:	0191                	.insn	2, 0x0191
     4d6:	0000                	.insn	2, 0x
     4d8:	0304                	.insn	2, 0x0304
     4da:	0240                	.insn	2, 0x0240
     4dc:	0000                	.insn	2, 0x
     4de:	912d9507          	.insn	4, 0x912d9507
     4e2:	0001                	.insn	2, 0x0001
     4e4:	0800                	.insn	2, 0x0800
     4e6:	00019503          	lh	a0,0(gp) # 0 <__start-0x80000000>
     4ea:	0700                	.insn	2, 0x0700
     4ec:	0c96                	.insn	2, 0x0c96
     4ee:	0090                	.insn	2, 0x0090
     4f0:	0000                	.insn	2, 0x
     4f2:	030c                	.insn	2, 0x030c
     4f4:	0000015b          	.insn	4, 0x015b
     4f8:	cb289707          	.insn	4, 0xcb289707
     4fc:	0001                	.insn	2, 0x0001
     4fe:	1000                	.insn	2, 0x1000
     500:	0600                	.insn	2, 0x0600
     502:	0142                	.insn	2, 0x0142
     504:	0000                	.insn	2, 0x
     506:	00026b0b          	.insn	4, 0x00026b0b
     50a:	1400                	.insn	2, 0x1400
     50c:	cb10ac07          	.insn	4, 0xcb10ac07
     510:	0001                	.insn	2, 0x0001
     512:	0300                	.insn	2, 0x0300
     514:	01d2                	.insn	2, 0x01d2
     516:	0000                	.insn	2, 0x
     518:	0a25af07          	.insn	4, 0x0a25af07
     51c:	0001                	.insn	2, 0x0001
     51e:	0000                	.insn	2, 0x
     520:	00023803          	.insn	4, 0x00023803
     524:	0700                	.insn	2, 0x0700
     526:	26b0                	.insn	2, 0x26b0
     528:	021d                	.insn	2, 0x021d
     52a:	0000                	.insn	2, 0x
     52c:	0304                	.insn	2, 0x0304
     52e:	018c                	.insn	2, 0x018c
     530:	0000                	.insn	2, 0x
     532:	1114b107          	.insn	4, 0x1114b107
     536:	0002                	.insn	2, 0x0002
     538:	0800                	.insn	2, 0x0800
     53a:	0600                	.insn	2, 0x0600
     53c:	0196                	.insn	2, 0x0196
     53e:	0000                	.insn	2, 0x
     540:	7604                	.insn	2, 0x7604
     542:	0001                	.insn	2, 0x0001
     544:	0700                	.insn	2, 0x0700
     546:	1b9a                	.insn	2, 0x1b9a
     548:	0142                	.insn	2, 0x0142
     54a:	0000                	.insn	2, 0x
     54c:	0002540b          	.insn	4, 0x0002540b
     550:	0c00                	.insn	2, 0x0c00
     552:	110c9d07          	.insn	4, 0x110c9d07
     556:	0002                	.insn	2, 0x0002
     558:	0300                	.insn	2, 0x0300
     55a:	0181                	.insn	2, 0x0181
     55c:	0000                	.insn	2, 0x
     55e:	2028a007          	.insn	4, 0x2028a007
     562:	0001                	.insn	2, 0x0001
     564:	0000                	.insn	2, 0x
     566:	0001f103          	.insn	4, 0x0001f103
     56a:	0700                	.insn	2, 0x0700
     56c:	31a1                	.insn	2, 0x31a1
     56e:	0191                	.insn	2, 0x0191
     570:	0000                	.insn	2, 0x
     572:	0304                	.insn	2, 0x0304
     574:	0240                	.insn	2, 0x0240
     576:	0000                	.insn	2, 0x
     578:	9131a207          	.insn	4, 0x9131a207
     57c:	0001                	.insn	2, 0x0001
     57e:	0800                	.insn	2, 0x0800
     580:	0400                	.insn	2, 0x0400
     582:	0172                	.insn	2, 0x0172
     584:	0000                	.insn	2, 0x
     586:	dc24a407          	.insn	4, 0xdc24a407
     58a:	0001                	.insn	2, 0x0001
     58c:	0600                	.insn	2, 0x0600
     58e:	01d0                	.insn	2, 0x01d0
     590:	0000                	.insn	2, 0x
     592:	cb04                	.insn	2, 0xcb04
     594:	0001                	.insn	2, 0x0001
     596:	0700                	.insn	2, 0x0700
     598:	019603b3          	add	t2,a2,s9
     59c:	0000                	.insn	2, 0x
     59e:	2205                	.insn	2, 0x2205
     5a0:	0002                	.insn	2, 0x0002
     5a2:	0400                	.insn	2, 0x0400
     5a4:	0408                	.insn	2, 0x0408
     5a6:	0000                	.insn	2, 0x
     5a8:	5c08                	.insn	2, 0x5c08
     5aa:	3f2e                	.insn	2, 0x3f2e
     5ac:	0002                	.insn	2, 0x0002
     5ae:	0600                	.insn	2, 0x0600
     5b0:	0244                	.insn	2, 0x0244
     5b2:	0000                	.insn	2, 0x
     5b4:	ec1c                	.insn	2, 0xec1c
     5b6:	0b000003          	lb	zero,176(zero) # b0 <__start-0x7fffff50>
     5ba:	03b9                	.insn	2, 0x03b9
     5bc:	0000                	.insn	2, 0x
     5be:	0808                	.insn	2, 0x0808
     5c0:	107d                	.insn	2, 0x107d
     5c2:	0271                	.insn	2, 0x0271
     5c4:	0000                	.insn	2, 0x
     5c6:	00044e03          	lbu	t3,0(s0)
     5ca:	0800                	.insn	2, 0x0800
     5cc:	00f9107f 03000000 	.insn	12, 0x049d0300000000f9107f
     5d4:	0000049d 
     5d8:	8008                	.insn	2, 0x8008
     5da:	2010                	.insn	2, 0x2010
     5dc:	0001                	.insn	2, 0x0001
     5de:	0400                	.insn	2, 0x0400
     5e0:	0400                	.insn	2, 0x0400
     5e2:	02f5                	.insn	2, 0x02f5
     5e4:	0000                	.insn	2, 0x
     5e6:	8108                	.insn	2, 0x8108
     5e8:	00024903          	lbu	s2,0(tp) # 0 <__start-0x80000000>
     5ec:	0400                	.insn	2, 0x0400
     5ee:	000003ab          	.insn	4, 0x03ab
     5f2:	3309                	.insn	2, 0x3309
     5f4:	8e24                	.insn	2, 0x8e24
     5f6:	0002                	.insn	2, 0x0002
     5f8:	0500                	.insn	2, 0x0500
     5fa:	027d                	.insn	2, 0x027d
     5fc:	0000                	.insn	2, 0x
     5fe:	9306                	.insn	2, 0x9306
     600:	0002                	.insn	2, 0x0002
     602:	0b00                	.insn	2, 0x0b00
     604:	05ff 0000 0148 1067 	.insn	10, 0x032110670148000005ff
     60c:	0321 
     60e:	0000                	.insn	2, 0x
     610:	00049603          	lh	a2,0(s1)
     614:	0100                	.insn	2, 0x0100
     616:	0e69                	.insn	2, 0x0e69
     618:	0349                	.insn	2, 0x0349
     61a:	0000                	.insn	2, 0x
     61c:	0300                	.insn	2, 0x0300
     61e:	000007c7          	.insn	4, 0x07c7
     622:	6a01                	.insn	2, 0x6a01
     624:	490e                	.insn	2, 0x490e
     626:	04000003          	lb	zero,64(zero) # 40 <__start-0x7fffffc0>
     62a:	751d                	.insn	2, 0x751d
     62c:	0100                	.insn	2, 0x0100
     62e:	0770                	.insn	2, 0x0770
     630:	038e                	.insn	2, 0x038e
     632:	0000                	.insn	2, 0x
     634:	0308                	.insn	2, 0x0308
     636:	0791                	.insn	2, 0x0791
     638:	0000                	.insn	2, 0x
     63a:	7201                	.insn	2, 0x7201
     63c:	220c                	.insn	2, 0x220c
     63e:	0002                	.insn	2, 0x0002
     640:	1000                	.insn	2, 0x1000
     642:	00059c03          	lh	s8,0(a1)
     646:	0100                	.insn	2, 0x0100
     648:	02220c73          	.insn	4, 0x02220c73
     64c:	0000                	.insn	2, 0x
     64e:	0324                	.insn	2, 0x0324
     650:	000006b7          	lui	a3,0x0
     654:	7501                	.insn	2, 0x7501
     656:	161a                	.insn	2, 0x161a
     658:	0001                	.insn	2, 0x0001
     65a:	3800                	.insn	2, 0x3800
     65c:	00047703          	.insn	4, 0x00047703
     660:	0100                	.insn	2, 0x0100
     662:	1176                	.insn	2, 0x1176
     664:	010a                	.insn	2, 0x010a
     666:	0000                	.insn	2, 0x
     668:	033c                	.insn	2, 0x033c
     66a:	07d1                	.insn	2, 0x07d1
     66c:	0000                	.insn	2, 0x
     66e:	7701                	.insn	2, 0x7701
     670:	0a11                	.insn	2, 0x0a11
     672:	0001                	.insn	2, 0x0001
     674:	4000                	.insn	2, 0x4000
     676:	00063b03          	.insn	4, 0x00063b03
     67a:	0100                	.insn	2, 0x0100
     67c:	1579                	.insn	2, 0x1579
     67e:	000000af          	.insn	4, 0x00af
     682:	0344                	.insn	2, 0x0344
     684:	0400                	.insn	2, 0x0400
     686:	0000                	.insn	2, 0x
     688:	7a01                	.insn	2, 0x7a01
     68a:	af15                	.insn	2, 0xaf15
     68c:	0000                	.insn	2, 0x
     68e:	4500                	.insn	2, 0x4500
     690:	0b00                	.insn	2, 0x0b00
     692:	0549                	.insn	2, 0x0549
     694:	0000                	.insn	2, 0x
     696:	0108                	.insn	2, 0x0108
     698:	1044                	.insn	2, 0x1044
     69a:	0349                	.insn	2, 0x0349
     69c:	0000                	.insn	2, 0x
     69e:	00070d03          	lb	s10,0(a4)
     6a2:	0100                	.insn	2, 0x0100
     6a4:	0e46                	.insn	2, 0x0e46
     6a6:	0349                	.insn	2, 0x0349
     6a8:	0000                	.insn	2, 0x
     6aa:	0300                	.insn	2, 0x0300
     6ac:	041c                	.insn	2, 0x041c
     6ae:	0000                	.insn	2, 0x
     6b0:	4701                	.insn	2, 0x4701
     6b2:	490e                	.insn	2, 0x490e
     6b4:	04000003          	lb	zero,64(zero) # 40 <__start-0x7fffffc0>
     6b8:	0600                	.insn	2, 0x0600
     6ba:	000000a3          	sb	zero,1(zero) # 1 <__start-0x7fffffff>
     6be:	4304                	.insn	2, 0x4304
     6c0:	0006                	.insn	2, 0x0006
     6c2:	0100                	.insn	2, 0x0100
     6c4:	0348                	.insn	2, 0x0348
     6c6:	0321                	.insn	2, 0x0321
     6c8:	0000                	.insn	2, 0x
     6ca:	00060f0b          	.insn	4, 0x00060f0b
     6ce:	0800                	.insn	2, 0x0800
     6d0:	4a01                	.insn	2, 0x4a01
     6d2:	8210                	.insn	2, 0x8210
     6d4:	03000003          	lb	zero,48(zero) # 30 <__start-0x7fffffd0>
     6d8:	00000507          	.insn	4, 0x0507
     6dc:	4c01                	.insn	2, 0x4c01
     6de:	3312                	.insn	2, 0x3312
     6e0:	0002                	.insn	2, 0x0002
     6e2:	0000                	.insn	2, 0x
     6e4:	00062603          	lw	a2,0(a2)
     6e8:	0100                	.insn	2, 0x0100
     6ea:	114d                	.insn	2, 0x114d
     6ec:	010a                	.insn	2, 0x010a
     6ee:	0000                	.insn	2, 0x
     6f0:	0004                	.insn	2, 0x0004
     6f2:	6604                	.insn	2, 0x6604
     6f4:	0005                	.insn	2, 0x0005
     6f6:	0100                	.insn	2, 0x0100
     6f8:	034e                	.insn	2, 0x034e
     6fa:	035a                	.insn	2, 0x035a
     6fc:	0000                	.insn	2, 0x
     6fe:	081e                	.insn	2, 0x081e
     700:	6c01                	.insn	2, 0x6c01
     702:	ac05                	.insn	2, 0xac05
     704:	11000003          	lb	zero,272(zero) # 110 <__start-0x7ffffef0>
     708:	07b8                	.insn	2, 0x07b8
     70a:	0000                	.insn	2, 0x
     70c:	4e6e                	.insn	2, 0x4e6e
     70e:	11000003          	lb	zero,272(zero) # 110 <__start-0x7ffffef0>
     712:	05d1                	.insn	2, 0x05d1
     714:	0000                	.insn	2, 0x
     716:	0003826f          	jal	tp,38716 <__start-0x7ffc78ea>
     71a:	0000                	.insn	2, 0x
     71c:	ea04                	.insn	2, 0xea04
     71e:	0005                	.insn	2, 0x0005
     720:	0100                	.insn	2, 0x0100
     722:	0388                	.insn	2, 0x0388
     724:	00000293          	addi	t0,zero,0
     728:	7604                	.insn	2, 0x7604
     72a:	0005                	.insn	2, 0x0005
     72c:	0100                	.insn	2, 0x0100
     72e:	108c                	.insn	2, 0x108c
     730:	03ac                	.insn	2, 0x03ac
     732:	0000                	.insn	2, 0x
     734:	b805                	.insn	2, 0xb805
     736:	12000003          	lb	zero,288(zero) # 120 <__start-0x7ffffee0>
     73a:	0000068f          	.insn	4, 0x068f
     73e:	0e0e                	.insn	2, 0x0e0e
     740:	00041513          	slli	a0,s0,0x0
     744:	0b00                	.insn	2, 0x0b00
     746:	00900e2b          	.insn	4, 0x00900e2b
     74a:	0000                	.insn	2, 0x
     74c:	03f0                	.insn	2, 0x03f0
     74e:	0000                	.insn	2, 0x
     750:	00009207          	.insn	4, 0x9207
     754:	0700                	.insn	2, 0x0700
     756:	00ca                	.insn	2, 0x00ca
     758:	0000                	.insn	2, 0x
     75a:	00002607          	.insn	4, 0x2607
     75e:	0000                	.insn	2, 0x
     760:	141f 0005 0a00      	.insn	6, 0x0a000005141f
     766:	06b8                	.insn	2, 0x06b8
     768:	0402                	.insn	2, 0x0402
     76a:	0000                	.insn	2, 0x
     76c:	00009007          	.insn	4, 0x9007
     770:	0000                	.insn	2, 0x
     772:	4314                	.insn	2, 0x4314
     774:	c6000007          	.insn	4, 0xc6000007
     778:	0d06                	.insn	2, 0x0d06
     77a:	010a                	.insn	2, 0x010a
     77c:	0000                	.insn	2, 0x
     77e:	5314                	.insn	2, 0x5314
     780:	0006                	.insn	2, 0x0006
     782:	9300                	.insn	2, 0x9300
     784:	0c06                	.insn	2, 0x0c06
     786:	00f9                	.insn	2, 0x00f9
     788:	0000                	.insn	2, 0x
     78a:	800d                	.insn	2, 0x800d
     78c:	0004                	.insn	2, 0x0004
     78e:	0800                	.insn	2, 0x0800
     790:	04310dbb          	.insn	4, 0x04310dbb
     794:	0000                	.insn	2, 0x
     796:	00043607          	.insn	4, 0x00043607
     79a:	0700                	.insn	2, 0x0700
     79c:	012c                	.insn	2, 0x012c
     79e:	0000                	.insn	2, 0x
     7a0:	0600                	.insn	2, 0x0600
     7a2:	0222                	.insn	2, 0x0222
     7a4:	0000                	.insn	2, 0x
     7a6:	3105                	.insn	2, 0x3105
     7a8:	0004                	.insn	2, 0x0004
     7aa:	1500                	.insn	2, 0x1500
     7ac:	071e                	.insn	2, 0x071e
     7ae:	0000                	.insn	2, 0x
     7b0:	00f90d53          	.insn	4, 0x00f90d53
     7b4:	0000                	.insn	2, 0x
     7b6:	0455                	.insn	2, 0x0455
     7b8:	0000                	.insn	2, 0x
     7ba:	00045a07          	.insn	4, 0x00045a07
     7be:	0700                	.insn	2, 0x0700
     7c0:	0464                	.insn	2, 0x0464
     7c2:	0000                	.insn	2, 0x
     7c4:	0600                	.insn	2, 0x0600
     7c6:	0271                	.insn	2, 0x0271
     7c8:	0000                	.insn	2, 0x
     7ca:	5505                	.insn	2, 0x5505
     7cc:	0004                	.insn	2, 0x0004
     7ce:	0600                	.insn	2, 0x0600
     7d0:	0120                	.insn	2, 0x0120
     7d2:	0000                	.insn	2, 0x
     7d4:	5f05                	.insn	2, 0x5f05
     7d6:	0004                	.insn	2, 0x0004
     7d8:	1200                	.insn	2, 0x1200
     7da:	0764                	.insn	2, 0x0764
     7dc:	0000                	.insn	2, 0x
     7de:	740d065b          	.insn	4, 0x740d065b
     7e2:	08000007          	.insn	4, 0x08000007
     7e6:	0e65                	.insn	2, 0x0e65
     7e8:	0482                	.insn	2, 0x0482
     7ea:	0000                	.insn	2, 0x
     7ec:	00045a07          	.insn	4, 0x00045a07
     7f0:	0000                	.insn	2, 0x
     7f2:	00045d13          	srli	s10,s0,0x0
     7f6:	0a00                	.insn	2, 0x0a00
     7f8:	08b5                	.insn	2, 0x08b5
     7fa:	0090                	.insn	2, 0x0090
     7fc:	0000                	.insn	2, 0x
     7fe:	0498                	.insn	2, 0x0498
     800:	0000                	.insn	2, 0x
     802:	00002607          	.insn	4, 0x2607
     806:	0000                	.insn	2, 0x
     808:	f80d                	.insn	2, 0xf80d
     80a:	0001                	.insn	2, 0x0001
     80c:	0700                	.insn	2, 0x0700
     80e:	01b9                	.insn	2, 0x01b9
     810:	04aa                	.insn	2, 0x04aa
     812:	0000                	.insn	2, 0x
     814:	00043607          	.insn	4, 0x00043607
     818:	0000                	.insn	2, 0x
     81a:	e515                	.insn	2, 0xe515
     81c:	0006                	.insn	2, 0x0006
     81e:	e800                	.insn	2, 0xe800
     820:	f90d                	.insn	2, 0xf90d
     822:	0000                	.insn	2, 0x
     824:	bf00                	.insn	2, 0xbf00
     826:	0004                	.insn	2, 0x0004
     828:	0700                	.insn	2, 0x0700
     82a:	04c4                	.insn	2, 0x04c4
     82c:	0000                	.insn	2, 0x
     82e:	0600                	.insn	2, 0x0600
     830:	022e                	.insn	2, 0x022e
     832:	0000                	.insn	2, 0x
     834:	bf05                	.insn	2, 0xbf05
     836:	0004                	.insn	2, 0x0004
     838:	0c00                	.insn	2, 0x0c00
     83a:	0662                	.insn	2, 0x0662
     83c:	0000                	.insn	2, 0x
     83e:	0a78                	.insn	2, 0x0a78
     840:	f90c                	.insn	2, 0xf90c
     842:	0000                	.insn	2, 0x
     844:	e000                	.insn	2, 0xe000
     846:	5880001b          	.insn	4, 0x5880001b
     84a:	0000                	.insn	2, 0x
     84c:	0100                	.insn	2, 0x0100
     84e:	119c                	.insn	2, 0x119c
     850:	0005                	.insn	2, 0x0005
     852:	0200                	.insn	2, 0x0200
     854:	07b8                	.insn	2, 0x07b8
     856:	0000                	.insn	2, 0x
     858:	0a78                	.insn	2, 0x0a78
     85a:	893a                	.insn	2, 0x893a
     85c:	0002                	.insn	2, 0x0002
     85e:	0200                	.insn	2, 0x0200
     860:	5c91                	.insn	2, 0x5c91
     862:	ff01                	.insn	2, 0xff01
     864:	0004                	.insn	2, 0x0004
     866:	7a00                	.insn	2, 0x7a00
     868:	100a                	.insn	2, 0x100a
     86a:	00f9                	.insn	2, 0x00f9
     86c:	0000                	.insn	2, 0x
     86e:	9102                	.insn	2, 0x9102
     870:	016c                	.insn	2, 0x016c
     872:	000007b7          	lui	a5,0x0
     876:	16150a7b          	.insn	4, 0x16150a7b
     87a:	0005                	.insn	2, 0x0005
     87c:	0200                	.insn	2, 0x0200
     87e:	6891                	.insn	2, 0x6891
     880:	0600                	.insn	2, 0x0600
     882:	03b8                	.insn	2, 0x03b8
     884:	0000                	.insn	2, 0x
     886:	1105                	.insn	2, 0x1105
     888:	0005                	.insn	2, 0x0005
     88a:	1600                	.insn	2, 0x1600
     88c:	00000557          	.insn	4, 0x0557
     890:	00f90a63          	beq	s2,a5,8a4 <__start-0x7ffff75c>
     894:	0000                	.insn	2, 0x
     896:	1b54                	.insn	2, 0x1b54
     898:	8000                	.insn	2, 0x8000
     89a:	008c                	.insn	2, 0x008c
     89c:	0000                	.insn	2, 0x
     89e:	9c01                	.insn	2, 0x9c01
     8a0:	00000553          	.insn	4, 0x0553
     8a4:	b702                	.insn	2, 0xb702
     8a6:	63000007          	.insn	4, 0x63000007
     8aa:	330a                	.insn	2, 0x330a
     8ac:	00000553          	.insn	4, 0x0553
     8b0:	9102                	.insn	2, 0x9102
     8b2:	015c                	.insn	2, 0x015c
     8b4:	04ff 0000 0a65 f910 	.insn	10, 0xf9100a65000004ff
     8bc:	0000 
     8be:	0200                	.insn	2, 0x0200
     8c0:	6c91                	.insn	2, 0x6c91
     8c2:	0600                	.insn	2, 0x0600
     8c4:	03c4                	.insn	2, 0x03c4
     8c6:	0000                	.insn	2, 0x
     8c8:	190c                	.insn	2, 0x190c
     8ca:	4b000003          	lb	zero,1200(zero) # 4b0 <__start-0x7ffffb50>
     8ce:	0c0a                	.insn	2, 0x0c0a
     8d0:	00f9                	.insn	2, 0x00f9
     8d2:	0000                	.insn	2, 0x
     8d4:	1b04                	.insn	2, 0x1b04
     8d6:	8000                	.insn	2, 0x8000
     8d8:	0050                	.insn	2, 0x0050
     8da:	0000                	.insn	2, 0x
     8dc:	9c01                	.insn	2, 0x9c01
     8de:	05a0                	.insn	2, 0x05a0
     8e0:	0000                	.insn	2, 0x
     8e2:	b802                	.insn	2, 0xb802
     8e4:	4b000007          	.insn	4, 0x4b000007
     8e8:	3b0a                	.insn	2, 0x3b0a
     8ea:	0289                	.insn	2, 0x0289
     8ec:	0000                	.insn	2, 0x
     8ee:	9102                	.insn	2, 0x9102
     8f0:	015c                	.insn	2, 0x015c
     8f2:	04ff 0000 0a4d f910 	.insn	10, 0xf9100a4d000004ff
     8fa:	0000 
     8fc:	0200                	.insn	2, 0x0200
     8fe:	6c91                	.insn	2, 0x6c91
     900:	b701                	.insn	2, 0xb701
     902:	4e000007          	.insn	4, 0x4e000007
     906:	150a                	.insn	2, 0x150a
     908:	0516                	.insn	2, 0x0516
     90a:	0000                	.insn	2, 0x
     90c:	9102                	.insn	2, 0x9102
     90e:	0068                	.insn	2, 0x0068
     910:	3316                	.insn	2, 0x3316
     912:	36000003          	lb	zero,864(zero) # 360 <__start-0x7ffffca0>
     916:	f90a                	.insn	2, 0xf90a
     918:	0000                	.insn	2, 0x
     91a:	8000                	.insn	2, 0x8000
     91c:	001a                	.insn	2, 0x001a
     91e:	8480                	.insn	2, 0x8480
     920:	0000                	.insn	2, 0x
     922:	0100                	.insn	2, 0x0100
     924:	d89c                	.insn	2, 0xd89c
     926:	0005                	.insn	2, 0x0005
     928:	0200                	.insn	2, 0x0200
     92a:	000007b7          	lui	a5,0x0
     92e:	0a36                	.insn	2, 0x0a36
     930:	5334                	.insn	2, 0x5334
     932:	0005                	.insn	2, 0x0005
     934:	0200                	.insn	2, 0x0200
     936:	5c91                	.insn	2, 0x5c91
     938:	ff01                	.insn	2, 0xff01
     93a:	0004                	.insn	2, 0x0004
     93c:	3800                	.insn	2, 0x3800
     93e:	100a                	.insn	2, 0x100a
     940:	00f9                	.insn	2, 0x00f9
     942:	0000                	.insn	2, 0x
     944:	9102                	.insn	2, 0x9102
     946:	006c                	.insn	2, 0x006c
     948:	fe0e                	.insn	2, 0xfe0e
     94a:	0006                	.insn	2, 0x0006
     94c:	be00                	.insn	2, 0xbe00
     94e:	1809                	.insn	2, 0x1809
     950:	0019                	.insn	2, 0x0019
     952:	6880                	.insn	2, 0x6880
     954:	0001                	.insn	2, 0x0001
     956:	0100                	.insn	2, 0x0100
     958:	339c                	.insn	2, 0x339c
     95a:	0006                	.insn	2, 0x0006
     95c:	0200                	.insn	2, 0x0200
     95e:	000007b7          	lui	a5,0x0
     962:	09be                	.insn	2, 0x09be
     964:	162d                	.insn	2, 0x162d
     966:	0005                	.insn	2, 0x0005
     968:	0200                	.insn	2, 0x0200
     96a:	5c91                	.insn	2, 0x5c91
     96c:	4420                	.insn	2, 0x4420
     96e:	0019                	.insn	2, 0x0019
     970:	6480                	.insn	2, 0x6480
     972:	0000                	.insn	2, 0x
     974:	1900                	.insn	2, 0x1900
     976:	0006                	.insn	2, 0x0006
     978:	0100                	.insn	2, 0x0100
     97a:	0400                	.insn	2, 0x0400
     97c:	0000                	.insn	2, 0x
     97e:	09c8                	.insn	2, 0x09c8
     980:	a310                	.insn	2, 0xa310
     982:	0000                	.insn	2, 0x
     984:	0200                	.insn	2, 0x0200
     986:	6f91                	.insn	2, 0x6f91
     988:	0800                	.insn	2, 0x0800
     98a:	19e4                	.insn	2, 0x19e4
     98c:	8000                	.insn	2, 0x8000
     98e:	0064                	.insn	2, 0x0064
     990:	0000                	.insn	2, 0x
     992:	3b01                	.insn	2, 0x3b01
     994:	0006                	.insn	2, 0x0006
     996:	1900                	.insn	2, 0x1900
     998:	100a                	.insn	2, 0x100a
     99a:	000000a3          	sb	zero,1(zero) # 1 <__start-0x7fffffff>
     99e:	9102                	.insn	2, 0x9102
     9a0:	006e                	.insn	2, 0x006e
     9a2:	0e00                	.insn	2, 0x0e00
     9a4:	0378                	.insn	2, 0x0378
     9a6:	0000                	.insn	2, 0x
     9a8:	09a9                	.insn	2, 0x09a9
     9aa:	1880                	.insn	2, 0x1880
     9ac:	8000                	.insn	2, 0x8000
     9ae:	0098                	.insn	2, 0x0098
     9b0:	0000                	.insn	2, 0x
     9b2:	9c01                	.insn	2, 0x9c01
     9b4:	00000667          	jalr	a2,0(zero) # 0 <__start-0x80000000>
     9b8:	b702                	.insn	2, 0xb702
     9ba:	a9000007          	.insn	4, 0xa9000007
     9be:	3309                	.insn	2, 0x3309
     9c0:	0516                	.insn	2, 0x0516
     9c2:	0000                	.insn	2, 0x
     9c4:	9102                	.insn	2, 0x9102
     9c6:	026c                	.insn	2, 0x026c
     9c8:	06c9                	.insn	2, 0x06c9
     9ca:	0000                	.insn	2, 0x
     9cc:	09aa                	.insn	2, 0x09aa
     9ce:	9730                	.insn	2, 0x9730
     9d0:	0000                	.insn	2, 0x
     9d2:	0200                	.insn	2, 0x0200
     9d4:	6891                	.insn	2, 0x6891
     9d6:	2100                	.insn	2, 0x2100
     9d8:	0398                	.insn	2, 0x0398
     9da:	0000                	.insn	2, 0x
     9dc:	5601                	.insn	2, 0x5601
     9de:	1309                	.insn	2, 0x1309
     9e0:	00f9                	.insn	2, 0x00f9
     9e2:	0000                	.insn	2, 0x
     9e4:	1720                	.insn	2, 0x1720
     9e6:	8000                	.insn	2, 0x8000
     9e8:	0160                	.insn	2, 0x0160
     9ea:	0000                	.insn	2, 0x
     9ec:	9c01                	.insn	2, 0x9c01
     9ee:	06ce                	.insn	2, 0x06ce
     9f0:	0000                	.insn	2, 0x
     9f2:	b702                	.insn	2, 0xb702
     9f4:	56000007          	.insn	4, 0x56000007
     9f8:	3709                	.insn	2, 0x3709
     9fa:	0516                	.insn	2, 0x0516
     9fc:	0000                	.insn	2, 0x
     9fe:	9102                	.insn	2, 0x9102
     a00:	025c                	.insn	2, 0x025c
     a02:	05dc                	.insn	2, 0x05dc
     a04:	0000                	.insn	2, 0x
     a06:	c5340957          	.insn	4, 0xc5340957
     a0a:	0000                	.insn	2, 0x
     a0c:	0200                	.insn	2, 0x0200
     a0e:	5891                	.insn	2, 0x5891
     a10:	5a02                	.insn	2, 0x5a02
     a12:	58000007          	.insn	4, 0x58000007
     a16:	3809                	.insn	2, 0x3809
     a18:	0105                	.insn	2, 0x0105
     a1a:	0000                	.insn	2, 0x
     a1c:	9102                	.insn	2, 0x9102
     a1e:	0154                	.insn	2, 0x0154
     a20:	04ff 0000 095a f910 	.insn	10, 0xf910095a000004ff
     a28:	0000 
     a2a:	0200                	.insn	2, 0x0200
     a2c:	6891                	.insn	2, 0x6891
     a2e:	b701                	.insn	2, 0xb701
     a30:	0006                	.insn	2, 0x0006
     a32:	5b00                	.insn	2, 0x5b00
     a34:	1109                	.insn	2, 0x1109
     a36:	010a                	.insn	2, 0x010a
     a38:	0000                	.insn	2, 0x
     a3a:	9102                	.insn	2, 0x9102
     a3c:	006c                	.insn	2, 0x006c
     a3e:	330c                	.insn	2, 0x330c
     a40:	0005                	.insn	2, 0x0005
     a42:	3100                	.insn	2, 0x3100
     a44:	0d09                	.insn	2, 0x0d09
     a46:	010a                	.insn	2, 0x010a
     a48:	0000                	.insn	2, 0x
     a4a:	16f0                	.insn	2, 0x16f0
     a4c:	8000                	.insn	2, 0x8000
     a4e:	0030                	.insn	2, 0x0030
     a50:	0000                	.insn	2, 0x
     a52:	9c01                	.insn	2, 0x9c01
     a54:	06f8                	.insn	2, 0x06f8
     a56:	0000                	.insn	2, 0x
     a58:	b802                	.insn	2, 0xb802
     a5a:	31000007          	.insn	4, 0x31000007
     a5e:	3209                	.insn	2, 0x3209
     a60:	027d                	.insn	2, 0x027d
     a62:	0000                	.insn	2, 0x
     a64:	9102                	.insn	2, 0x9102
     a66:	006c                	.insn	2, 0x006c
     a68:	600c                	.insn	2, 0x600c
     a6a:	27000003          	lb	zero,624(zero) # 270 <__start-0x7ffffd90>
     a6e:	0d09                	.insn	2, 0x0d09
     a70:	010a                	.insn	2, 0x010a
     a72:	0000                	.insn	2, 0x
     a74:	16c0                	.insn	2, 0x16c0
     a76:	8000                	.insn	2, 0x8000
     a78:	0030                	.insn	2, 0x0030
     a7a:	0000                	.insn	2, 0x
     a7c:	9c01                	.insn	2, 0x9c01
     a7e:	0722                	.insn	2, 0x0722
     a80:	0000                	.insn	2, 0x
     a82:	b802                	.insn	2, 0xb802
     a84:	27000007          	.insn	4, 0x27000007
     a88:	3409                	.insn	2, 0x3409
     a8a:	027d                	.insn	2, 0x027d
     a8c:	0000                	.insn	2, 0x
     a8e:	9102                	.insn	2, 0x9102
     a90:	006c                	.insn	2, 0x006c
     a92:	6a22                	.insn	2, 0x6a22
     a94:	0004                	.insn	2, 0x0004
     a96:	0100                	.insn	2, 0x0100
     a98:	08ce                	.insn	2, 0x08ce
     a9a:	8806                	.insn	2, 0x8806
     a9c:	0016                	.insn	2, 0x0016
     a9e:	3880                	.insn	2, 0x3880
     aa0:	0000                	.insn	2, 0x
     aa2:	0100                	.insn	2, 0x0100
     aa4:	589c                	.insn	2, 0x589c
     aa6:	02000007          	.insn	4, 0x02000007
     aaa:	07b8                	.insn	2, 0x07b8
     aac:	0000                	.insn	2, 0x
     aae:	08ce                	.insn	2, 0x08ce
     ab0:	7d22                	.insn	2, 0x7d22
     ab2:	0002                	.insn	2, 0x0002
     ab4:	0200                	.insn	2, 0x0200
     ab6:	5c91                	.insn	2, 0x5c91
     ab8:	b701                	.insn	2, 0xb701
     aba:	d0000007          	.insn	4, 0xd0000007
     abe:	1508                	.insn	2, 0x1508
     ac0:	0516                	.insn	2, 0x0516
     ac2:	0000                	.insn	2, 0x
     ac4:	9102                	.insn	2, 0x9102
     ac6:	006c                	.insn	2, 0x006c
     ac8:	b30c                	.insn	2, 0xb30c
     aca:	0005                	.insn	2, 0x0005
     acc:	be00                	.insn	2, 0xbe00
     ace:	0d08                	.insn	2, 0x0d08
     ad0:	010a                	.insn	2, 0x010a
     ad2:	0000                	.insn	2, 0x
     ad4:	1648                	.insn	2, 0x1648
     ad6:	8000                	.insn	2, 0x8000
     ad8:	0040                	.insn	2, 0x0040
     ada:	0000                	.insn	2, 0x
     adc:	9c01                	.insn	2, 0x9c01
     ade:	07a0                	.insn	2, 0x07a0
     ae0:	0000                	.insn	2, 0x
     ae2:	b802                	.insn	2, 0xb802
     ae4:	be000007          	.insn	4, 0xbe000007
     ae8:	4008                	.insn	2, 0x4008
     aea:	0289                	.insn	2, 0x0289
     aec:	0000                	.insn	2, 0x
     aee:	9102                	.insn	2, 0x9102
     af0:	015c                	.insn	2, 0x015c
     af2:	04fe                	.insn	2, 0x04fe
     af4:	0000                	.insn	2, 0x
     af6:	08c0                	.insn	2, 0x08c0
     af8:	0a11                	.insn	2, 0x0a11
     afa:	0001                	.insn	2, 0x0001
     afc:	0200                	.insn	2, 0x0200
     afe:	6891                	.insn	2, 0x6891
     b00:	b701                	.insn	2, 0xb701
     b02:	c1000007          	.insn	4, 0xc1000007
     b06:	1508                	.insn	2, 0x1508
     b08:	0516                	.insn	2, 0x0516
     b0a:	0000                	.insn	2, 0x
     b0c:	9102                	.insn	2, 0x9102
     b0e:	006c                	.insn	2, 0x006c
     b10:	dc0c                	.insn	2, 0xdc0c
     b12:	a9000007          	.insn	4, 0xa9000007
     b16:	0d08                	.insn	2, 0x0d08
     b18:	010a                	.insn	2, 0x010a
     b1a:	0000                	.insn	2, 0x
     b1c:	15c0                	.insn	2, 0x15c0
     b1e:	8000                	.insn	2, 0x8000
     b20:	0088                	.insn	2, 0x0088
     b22:	0000                	.insn	2, 0x
     b24:	9c01                	.insn	2, 0x9c01
     b26:	07e8                	.insn	2, 0x07e8
     b28:	0000                	.insn	2, 0x
     b2a:	b802                	.insn	2, 0xb802
     b2c:	a9000007          	.insn	4, 0xa9000007
     b30:	3908                	.insn	2, 0x3908
     b32:	0289                	.insn	2, 0x0289
     b34:	0000                	.insn	2, 0x
     b36:	9102                	.insn	2, 0x9102
     b38:	015c                	.insn	2, 0x015c
     b3a:	04fe                	.insn	2, 0x04fe
     b3c:	0000                	.insn	2, 0x
     b3e:	0a1108ab          	.insn	4, 0x0a1108ab
     b42:	0001                	.insn	2, 0x0001
     b44:	0200                	.insn	2, 0x0200
     b46:	6891                	.insn	2, 0x6891
     b48:	b701                	.insn	2, 0xb701
     b4a:	ac000007          	.insn	4, 0xac000007
     b4e:	1508                	.insn	2, 0x1508
     b50:	0516                	.insn	2, 0x0516
     b52:	0000                	.insn	2, 0x
     b54:	9102                	.insn	2, 0x9102
     b56:	006c                	.insn	2, 0x006c
     b58:	d70c                	.insn	2, 0xd70c
     b5a:	0002                	.insn	2, 0x0002
     b5c:	9500                	.insn	2, 0x9500
     b5e:	0d08                	.insn	2, 0x0d08
     b60:	010a                	.insn	2, 0x010a
     b62:	0000                	.insn	2, 0x
     b64:	154c                	.insn	2, 0x154c
     b66:	8000                	.insn	2, 0x8000
     b68:	0074                	.insn	2, 0x0074
     b6a:	0000                	.insn	2, 0x
     b6c:	9c01                	.insn	2, 0x9c01
     b6e:	0821                	.insn	2, 0x0821
     b70:	0000                	.insn	2, 0x
     b72:	b802                	.insn	2, 0xb802
     b74:	95000007          	.insn	4, 0x95000007
     b78:	3908                	.insn	2, 0x3908
     b7a:	0289                	.insn	2, 0x0289
     b7c:	0000                	.insn	2, 0x
     b7e:	9102                	.insn	2, 0x9102
     b80:	015c                	.insn	2, 0x015c
     b82:	04fe                	.insn	2, 0x04fe
     b84:	0000                	.insn	2, 0x
     b86:	0a110897          	auipc	a7,0xa110
     b8a:	0001                	.insn	2, 0x0001
     b8c:	0200                	.insn	2, 0x0200
     b8e:	6c91                	.insn	2, 0x6c91
     b90:	0a00                	.insn	2, 0x0a00
     b92:	034e                	.insn	2, 0x034e
     b94:	0000                	.insn	2, 0x
     b96:	f90c0857          	.insn	4, 0xf90c0857
     b9a:	0000                	.insn	2, 0x
     b9c:	d000                	.insn	2, 0xd000
     b9e:	0014                	.insn	2, 0x0014
     ba0:	7c80                	.insn	2, 0x7c80
     ba2:	0000                	.insn	2, 0x
     ba4:	0100                	.insn	2, 0x0100
     ba6:	969c                	.insn	2, 0x969c
     ba8:	0008                	.insn	2, 0x0008
     baa:	0200                	.insn	2, 0x0200
     bac:	07b8                	.insn	2, 0x07b8
     bae:	0000                	.insn	2, 0x
     bb0:	7d2d0857          	.insn	4, 0x7d2d0857
     bb4:	0002                	.insn	2, 0x0002
     bb6:	0200                	.insn	2, 0x0200
     bb8:	5c91                	.insn	2, 0x5c91
     bba:	c902                	.insn	2, 0xc902
     bbc:	0006                	.insn	2, 0x0006
     bbe:	5800                	.insn	2, 0x5800
     bc0:	2c08                	.insn	2, 0x2c08
     bc2:	00000097          	auipc	ra,0x0
     bc6:	9102                	.insn	2, 0x9102
     bc8:	0158                	.insn	2, 0x0158
     bca:	04ff 0000 085a f910 	.insn	10, 0xf910085a000004ff
     bd2:	0000 
     bd4:	0200                	.insn	2, 0x0200
     bd6:	6c91                	.insn	2, 0x6c91
     bd8:	a001                	.insn	2, 0xa001
     bda:	0006                	.insn	2, 0x0006
     bdc:	5b00                	.insn	2, 0x5b00
     bde:	1108                	.insn	2, 0x1108
     be0:	010a                	.insn	2, 0x010a
     be2:	0000                	.insn	2, 0x
     be4:	9102                	.insn	2, 0x9102
     be6:	0164                	.insn	2, 0x0164
     be8:	000003c3          	.insn	4, 0x03c3
     bec:	085c                	.insn	2, 0x085c
     bee:	490e                	.insn	2, 0x490e
     bf0:	02000003          	lb	zero,32(zero) # 20 <__start-0x7fffffe0>
     bf4:	6091                	.insn	2, 0x6091
     bf6:	b701                	.insn	2, 0xb701
     bf8:	5d000007          	.insn	4, 0x5d000007
     bfc:	1508                	.insn	2, 0x1508
     bfe:	0516                	.insn	2, 0x0516
     c00:	0000                	.insn	2, 0x
     c02:	9102                	.insn	2, 0x9102
     c04:	0068                	.insn	2, 0x0068
     c06:	1e0a                	.insn	2, 0x1e0a
     c08:	0005                	.insn	2, 0x0005
     c0a:	f300                	.insn	2, 0xf300
     c0c:	00f90c07          	.insn	4, 0x00f90c07
     c10:	0000                	.insn	2, 0x
     c12:	13cc                	.insn	2, 0x13cc
     c14:	8000                	.insn	2, 0x8000
     c16:	0104                	.insn	2, 0x0104
     c18:	0000                	.insn	2, 0x
     c1a:	9c01                	.insn	2, 0x9c01
     c1c:	0956                	.insn	2, 0x0956
     c1e:	0000                	.insn	2, 0x
     c20:	b802                	.insn	2, 0xb802
     c22:	f3000007          	.insn	4, 0xf3000007
     c26:	027d3007          	.insn	4, 0x027d3007
     c2a:	0000                	.insn	2, 0x
     c2c:	9102                	.insn	2, 0x9102
     c2e:	024c                	.insn	2, 0x024c
     c30:	06c9                	.insn	2, 0x06c9
     c32:	0000                	.insn	2, 0x
     c34:	07f4                	.insn	2, 0x07f4
     c36:	0000972f          	.insn	4, 0x972f
     c3a:	0200                	.insn	2, 0x0200
     c3c:	4891                	.insn	2, 0x4891
     c3e:	ff02                	.insn	2, 0xff02
     c40:	0002                	.insn	2, 0x0002
     c42:	f500                	.insn	2, 0xf500
     c44:	095b3507          	.insn	4, 0x095b3507
     c48:	0000                	.insn	2, 0x
     c4a:	9102                	.insn	2, 0x9102
     c4c:	0144                	.insn	2, 0x0144
     c4e:	04ff 0000 07f7 f910 	.insn	10, 0xf91007f7000004ff
     c56:	0000 
     c58:	0200                	.insn	2, 0x0200
     c5a:	6c91                	.insn	2, 0x6c91
     c5c:	a001                	.insn	2, 0xa001
     c5e:	0006                	.insn	2, 0x0006
     c60:	f800                	.insn	2, 0xf800
     c62:	010a1107          	.insn	4, 0x010a1107
     c66:	0000                	.insn	2, 0x
     c68:	9102                	.insn	2, 0x9102
     c6a:	0164                	.insn	2, 0x0164
     c6c:	000007b7          	lui	a5,0x0
     c70:	07f9                	.insn	2, 0x07f9
     c72:	1615                	.insn	2, 0x1615
     c74:	0005                	.insn	2, 0x0005
     c76:	0200                	.insn	2, 0x0200
     c78:	6891                	.insn	2, 0x6891
     c7a:	f408                	.insn	2, 0xf408
     c7c:	c4800013          	addi	zero,zero,-952
     c80:	0000                	.insn	2, 0x
     c82:	0100                	.insn	2, 0x0100
     c84:	000006b7          	lui	a3,0x0
     c88:	0815                	.insn	2, 0x0815
     c8a:	00011b1b          	.insn	4, 0x00011b1b
     c8e:	0200                	.insn	2, 0x0200
     c90:	6091                	.insn	2, 0x6091
     c92:	0808                	.insn	2, 0x0808
     c94:	0014                	.insn	2, 0x0014
     c96:	a880                	.insn	2, 0xa880
     c98:	0000                	.insn	2, 0x
     c9a:	0100                	.insn	2, 0x0100
     c9c:	0000063b          	.insn	4, 0x063b
     ca0:	081a                	.insn	2, 0x081a
     ca2:	b41a                	.insn	2, 0xb41a
     ca4:	0000                	.insn	2, 0x
     ca6:	0200                	.insn	2, 0x0200
     ca8:	5f91                	.insn	2, 0x5f91
     caa:	7808                	.insn	2, 0x7808
     cac:	0014                	.insn	2, 0x0014
     cae:	3080                	.insn	2, 0x3080
     cb0:	0000                	.insn	2, 0x
     cb2:	0100                	.insn	2, 0x0100
     cb4:	058c                	.insn	2, 0x058c
     cb6:	0000                	.insn	2, 0x
     cb8:	0844                	.insn	2, 0x0844
     cba:	1b11                	.insn	2, 0x1b11
     cbc:	0001                	.insn	2, 0x0001
     cbe:	0200                	.insn	2, 0x0200
     cc0:	5891                	.insn	2, 0x5891
     cc2:	0000                	.insn	2, 0x
     cc4:	0000                	.insn	2, 0x
     cc6:	f906                	.insn	2, 0xf906
     cc8:	0000                	.insn	2, 0x
     cca:	0500                	.insn	2, 0x0500
     ccc:	0956                	.insn	2, 0x0956
     cce:	0000                	.insn	2, 0x
     cd0:	430a                	.insn	2, 0x430a
     cd2:	55000003          	lb	zero,1360(zero) # 550 <__start-0x7ffffab0>
     cd6:	00f90c07          	.insn	4, 0x00f90c07
     cda:	0000                	.insn	2, 0x
     cdc:	1174                	.insn	2, 0x1174
     cde:	8000                	.insn	2, 0x8000
     ce0:	0258                	.insn	2, 0x0258
     ce2:	0000                	.insn	2, 0x
     ce4:	9c01                	.insn	2, 0x9c01
     ce6:	09fd                	.insn	2, 0x09fd
     ce8:	0000                	.insn	2, 0x
     cea:	b802                	.insn	2, 0xb802
     cec:	55000007          	.insn	4, 0x55000007
     cf0:	027d2607          	.insn	4, 0x027d2607
     cf4:	0000                	.insn	2, 0x
     cf6:	9102                	.insn	2, 0x9102
     cf8:	024c                	.insn	2, 0x024c
     cfa:	06c9                	.insn	2, 0x06c9
     cfc:	0000                	.insn	2, 0x
     cfe:	0756                	.insn	2, 0x0756
     d00:	9725                	.insn	2, 0x9725
     d02:	0000                	.insn	2, 0x
     d04:	0200                	.insn	2, 0x0200
     d06:	4891                	.insn	2, 0x4891
     d08:	8802                	.insn	2, 0x8802
     d0a:	000e                	.insn	2, 0x000e
     d0c:	5700                	.insn	2, 0x5700
     d0e:	01202307          	.insn	4, 0x01202307
     d12:	0000                	.insn	2, 0x
     d14:	9102                	.insn	2, 0x9102
     d16:	0144                	.insn	2, 0x0144
     d18:	05f1                	.insn	2, 0x05f1
     d1a:	0000                	.insn	2, 0x
     d1c:	0759                	.insn	2, 0x0759
     d1e:	f910                	.insn	2, 0xf910
     d20:	0000                	.insn	2, 0x
     d22:	0200                	.insn	2, 0x0200
     d24:	6c91                	.insn	2, 0x6c91
     d26:	b701                	.insn	2, 0xb701
     d28:	000c                	.insn	2, 0x000c
     d2a:	5a00                	.insn	2, 0x5a00
     d2c:	02710f07          	.insn	4, 0x02710f07
     d30:	0000                	.insn	2, 0x
     d32:	9102                	.insn	2, 0x9102
     d34:	0158                	.insn	2, 0x0158
     d36:	000003c3          	.insn	4, 0x03c3
     d3a:	490e075b          	.insn	4, 0x490e075b
     d3e:	02000003          	lb	zero,32(zero) # 20 <__start-0x7fffffe0>
     d42:	6091                	.insn	2, 0x6091
     d44:	b701                	.insn	2, 0xb701
     d46:	5c000007          	.insn	4, 0x5c000007
     d4a:	05161507          	.insn	4, 0x05161507
     d4e:	0000                	.insn	2, 0x
     d50:	9102                	.insn	2, 0x9102
     d52:	0868                	.insn	2, 0x0868
     d54:	11b4                	.insn	2, 0x11b4
     d56:	8000                	.insn	2, 0x8000
     d58:	00d0                	.insn	2, 0x00d0
     d5a:	0000                	.insn	2, 0x
     d5c:	b701                	.insn	2, 0xb701
     d5e:	0006                	.insn	2, 0x0006
     d60:	7200                	.insn	2, 0x7200
     d62:	011b1f07          	.insn	4, 0x011b1f07
     d66:	0000                	.insn	2, 0x
     d68:	9102                	.insn	2, 0x9102
     d6a:	0064                	.insn	2, 0x0064
     d6c:	0a00                	.insn	2, 0x0a00
     d6e:	000004bb          	.insn	4, 0x04bb
     d72:	0674                	.insn	2, 0x0674
     d74:	f90c                	.insn	2, 0xf90c
     d76:	0000                	.insn	2, 0x
     d78:	3400                	.insn	2, 0x3400
     d7a:	4080000f          	.insn	4, 0x4080000f
     d7e:	0002                	.insn	2, 0x0002
     d80:	0100                	.insn	2, 0x0100
     d82:	7c9c                	.insn	2, 0x7c9c
     d84:	000a                	.insn	2, 0x000a
     d86:	0200                	.insn	2, 0x0200
     d88:	07b8                	.insn	2, 0x07b8
     d8a:	0000                	.insn	2, 0x
     d8c:	0674                	.insn	2, 0x0674
     d8e:	00027d2f          	.insn	4, 0x00027d2f
     d92:	0200                	.insn	2, 0x0200
     d94:	4c91                	.insn	2, 0x4c91
     d96:	8802                	.insn	2, 0x8802
     d98:	000e                	.insn	2, 0x000e
     d9a:	7500                	.insn	2, 0x7500
     d9c:	2c06                	.insn	2, 0x2c06
     d9e:	0120                	.insn	2, 0x0120
     da0:	0000                	.insn	2, 0x
     da2:	9102                	.insn	2, 0x9102
     da4:	0148                	.insn	2, 0x0148
     da6:	05f1                	.insn	2, 0x05f1
     da8:	0000                	.insn	2, 0x
     daa:	f9100677          	.insn	4, 0xf9100677
     dae:	0000                	.insn	2, 0x
     db0:	0200                	.insn	2, 0x0200
     db2:	6c91                	.insn	2, 0x6c91
     db4:	b701                	.insn	2, 0xb701
     db6:	000c                	.insn	2, 0x000c
     db8:	7800                	.insn	2, 0x7800
     dba:	0f06                	.insn	2, 0x0f06
     dbc:	0271                	.insn	2, 0x0271
     dbe:	0000                	.insn	2, 0x
     dc0:	9102                	.insn	2, 0x9102
     dc2:	015c                	.insn	2, 0x015c
     dc4:	000007b7          	lui	a5,0x0
     dc8:	0679                	.insn	2, 0x0679
     dca:	1615                	.insn	2, 0x1615
     dcc:	0005                	.insn	2, 0x0005
     dce:	0200                	.insn	2, 0x0200
     dd0:	6891                	.insn	2, 0x6891
     dd2:	7008                	.insn	2, 0x7008
     dd4:	bc80000f          	.insn	4, 0xbc80000f
     dd8:	0000                	.insn	2, 0x
     dda:	0100                	.insn	2, 0x0100
     ddc:	00000427          	.insn	4, 0x0427
     de0:	0695                	.insn	2, 0x0695
     de2:	1b1f 0001 0200      	.insn	6, 0x020000011b1f
     de8:	6491                	.insn	2, 0x6491
     dea:	0000                	.insn	2, 0x
     dec:	f00a                	.insn	2, 0xf00a
     dee:	0004                	.insn	2, 0x0004
     df0:	de00                	.insn	2, 0xde00
     df2:	0c05                	.insn	2, 0x0c05
     df4:	00f9                	.insn	2, 0x00f9
     df6:	0000                	.insn	2, 0x
     df8:	0ce4                	.insn	2, 0x0ce4
     dfa:	8000                	.insn	2, 0x8000
     dfc:	0250                	.insn	2, 0x0250
     dfe:	0000                	.insn	2, 0x
     e00:	9c01                	.insn	2, 0x9c01
     e02:	0b0a                	.insn	2, 0x0b0a
     e04:	0000                	.insn	2, 0x
     e06:	b802                	.insn	2, 0xb802
     e08:	de000007          	.insn	4, 0xde000007
     e0c:	2905                	.insn	2, 0x2905
     e0e:	027d                	.insn	2, 0x027d
     e10:	0000                	.insn	2, 0x
     e12:	9102                	.insn	2, 0x9102
     e14:	024c                	.insn	2, 0x024c
     e16:	06c9                	.insn	2, 0x06c9
     e18:	0000                	.insn	2, 0x
     e1a:	05df 9728 0000      	.insn	6, 0x972805df
     e20:	0200                	.insn	2, 0x0200
     e22:	4891                	.insn	2, 0x4891
     e24:	8802                	.insn	2, 0x8802
     e26:	000e                	.insn	2, 0x000e
     e28:	e000                	.insn	2, 0xe000
     e2a:	2605                	.insn	2, 0x2605
     e2c:	0120                	.insn	2, 0x0120
     e2e:	0000                	.insn	2, 0x
     e30:	9102                	.insn	2, 0x9102
     e32:	0144                	.insn	2, 0x0144
     e34:	05f1                	.insn	2, 0x05f1
     e36:	0000                	.insn	2, 0x
     e38:	05e2                	.insn	2, 0x05e2
     e3a:	f910                	.insn	2, 0xf910
     e3c:	0000                	.insn	2, 0x
     e3e:	0200                	.insn	2, 0x0200
     e40:	6c91                	.insn	2, 0x6c91
     e42:	b701                	.insn	2, 0xb701
     e44:	000c                	.insn	2, 0x000c
     e46:	e300                	.insn	2, 0xe300
     e48:	0f05                	.insn	2, 0x0f05
     e4a:	0271                	.insn	2, 0x0271
     e4c:	0000                	.insn	2, 0x
     e4e:	9102                	.insn	2, 0x9102
     e50:	015c                	.insn	2, 0x015c
     e52:	000007b7          	lui	a5,0x0
     e56:	05e4                	.insn	2, 0x05e4
     e58:	1615                	.insn	2, 0x1615
     e5a:	0005                	.insn	2, 0x0005
     e5c:	0200                	.insn	2, 0x0200
     e5e:	6891                	.insn	2, 0x6891
     e60:	2408                	.insn	2, 0x2408
     e62:	000d                	.insn	2, 0x000d
     e64:	c880                	.insn	2, 0xc880
     e66:	0000                	.insn	2, 0x
     e68:	0100                	.insn	2, 0x0100
     e6a:	000006b7          	lui	a3,0x0
     e6e:	05fa                	.insn	2, 0x05fa
     e70:	1b1f 0001 0200      	.insn	6, 0x020000011b1f
     e76:	6491                	.insn	2, 0x6491
     e78:	0000                	.insn	2, 0x
     e7a:	da0a                	.insn	2, 0xda0a
     e7c:	31000003          	lb	zero,784(zero) # 310 <__start-0x7ffffcf0>
     e80:	0c05                	.insn	2, 0x0c05
     e82:	00f9                	.insn	2, 0x00f9
     e84:	0000                	.insn	2, 0x
     e86:	0be8                	.insn	2, 0x0be8
     e88:	8000                	.insn	2, 0x8000
     e8a:	00fc                	.insn	2, 0x00fc
     e8c:	0000                	.insn	2, 0x
     e8e:	9c01                	.insn	2, 0x9c01
     e90:	00000bbb          	.insn	4, 0x0bbb
     e94:	b802                	.insn	2, 0xb802
     e96:	31000007          	.insn	4, 0x31000007
     e9a:	2d05                	.insn	2, 0x2d05
     e9c:	027d                	.insn	2, 0x027d
     e9e:	0000                	.insn	2, 0x
     ea0:	9102                	.insn	2, 0x9102
     ea2:	024c                	.insn	2, 0x024c
     ea4:	02ff 0000 0532 5b32 	.insn	10, 0x00095b320532000002ff
     eac:	0009 
     eae:	0200                	.insn	2, 0x0200
     eb0:	4891                	.insn	2, 0x4891
     eb2:	ff01                	.insn	2, 0xff01
     eb4:	0004                	.insn	2, 0x0004
     eb6:	3400                	.insn	2, 0x3400
     eb8:	1005                	.insn	2, 0x1005
     eba:	00f9                	.insn	2, 0x00f9
     ebc:	0000                	.insn	2, 0x
     ebe:	9102                	.insn	2, 0x9102
     ec0:	016c                	.insn	2, 0x016c
     ec2:	06a0                	.insn	2, 0x06a0
     ec4:	0000                	.insn	2, 0x
     ec6:	0535                	.insn	2, 0x0535
     ec8:	0a11                	.insn	2, 0x0a11
     eca:	0001                	.insn	2, 0x0001
     ecc:	0200                	.insn	2, 0x0200
     ece:	6491                	.insn	2, 0x6491
     ed0:	b701                	.insn	2, 0xb701
     ed2:	36000007          	.insn	4, 0x36000007
     ed6:	1505                	.insn	2, 0x1505
     ed8:	0516                	.insn	2, 0x0516
     eda:	0000                	.insn	2, 0x
     edc:	9102                	.insn	2, 0x9102
     ede:	0868                	.insn	2, 0x0868
     ee0:	0c0c                	.insn	2, 0x0c0c
     ee2:	8000                	.insn	2, 0x8000
     ee4:	00c0                	.insn	2, 0x00c0
     ee6:	0000                	.insn	2, 0x
     ee8:	b701                	.insn	2, 0xb701
     eea:	0006                	.insn	2, 0x0006
     eec:	6000                	.insn	2, 0x6000
     eee:	1b05                	.insn	2, 0x1b05
     ef0:	0000011b          	.insn	4, 0x011b
     ef4:	9102                	.insn	2, 0x9102
     ef6:	0860                	.insn	2, 0x0860
     ef8:	0c28                	.insn	2, 0x0c28
     efa:	8000                	.insn	2, 0x8000
     efc:	009c                	.insn	2, 0x009c
     efe:	0000                	.insn	2, 0x
     f00:	0001                	.insn	2, 0x0001
     f02:	0004                	.insn	2, 0x0004
     f04:	6700                	.insn	2, 0x6700
     f06:	1a05                	.insn	2, 0x1a05
     f08:	00b4                	.insn	2, 0x00b4
     f0a:	0000                	.insn	2, 0x
     f0c:	9102                	.insn	2, 0x9102
     f0e:	085f 0c8c 8000      	.insn	6, 0x80000c8c085f
     f14:	0030                	.insn	2, 0x0030
     f16:	0000                	.insn	2, 0x
     f18:	8c01                	.insn	2, 0x8c01
     f1a:	0005                	.insn	2, 0x0005
     f1c:	cb00                	.insn	2, 0xcb00
     f1e:	1105                	.insn	2, 0x1105
     f20:	0000011b          	.insn	4, 0x011b
     f24:	9102                	.insn	2, 0x9102
     f26:	0058                	.insn	2, 0x0058
     f28:	0000                	.insn	2, 0x
     f2a:	0a00                	.insn	2, 0x0a00
     f2c:	02be                	.insn	2, 0x02be
     f2e:	0000                	.insn	2, 0x
     f30:	0485                	.insn	2, 0x0485
     f32:	f90c                	.insn	2, 0xf90c
     f34:	0000                	.insn	2, 0x
     f36:	d400                	.insn	2, 0xd400
     f38:	000a                	.insn	2, 0x000a
     f3a:	1480                	.insn	2, 0x1480
     f3c:	0001                	.insn	2, 0x0001
     f3e:	0100                	.insn	2, 0x0100
     f40:	809c                	.insn	2, 0x809c
     f42:	000c                	.insn	2, 0x000c
     f44:	0200                	.insn	2, 0x0200
     f46:	07b8                	.insn	2, 0x07b8
     f48:	0000                	.insn	2, 0x
     f4a:	0485                	.insn	2, 0x0485
     f4c:	7d34                	.insn	2, 0x7d34
     f4e:	0002                	.insn	2, 0x0002
     f50:	0200                	.insn	2, 0x0200
     f52:	4c91                	.insn	2, 0x4c91
     f54:	dc02                	.insn	2, 0xdc02
     f56:	0005                	.insn	2, 0x0005
     f58:	8600                	.insn	2, 0x8600
     f5a:	3904                	.insn	2, 0x3904
     f5c:	000000cf          	.insn	4, 0x00cf
     f60:	9102                	.insn	2, 0x9102
     f62:	0248                	.insn	2, 0x0248
     f64:	02ff 0000 0487 5b39 	.insn	10, 0x00095b390487000002ff
     f6c:	0009 
     f6e:	0200                	.insn	2, 0x0200
     f70:	4491                	.insn	2, 0x4491
     f72:	ad02                	.insn	2, 0xad02
     f74:	0004                	.insn	2, 0x0004
     f76:	8800                	.insn	2, 0x8800
     f78:	3704                	.insn	2, 0x3704
     f7a:	0105                	.insn	2, 0x0105
     f7c:	0000                	.insn	2, 0x
     f7e:	9102                	.insn	2, 0x9102
     f80:	0140                	.insn	2, 0x0140
     f82:	04ff 0000 048a f910 	.insn	10, 0xf910048a000004ff
     f8a:	0000 
     f8c:	0200                	.insn	2, 0x0200
     f8e:	6c91                	.insn	2, 0x6c91
     f90:	a001                	.insn	2, 0xa001
     f92:	0006                	.insn	2, 0x0006
     f94:	8b00                	.insn	2, 0x8b00
     f96:	1104                	.insn	2, 0x1104
     f98:	010a                	.insn	2, 0x010a
     f9a:	0000                	.insn	2, 0x
     f9c:	9102                	.insn	2, 0x9102
     f9e:	0164                	.insn	2, 0x0164
     fa0:	000007b7          	lui	a5,0x0
     fa4:	048c                	.insn	2, 0x048c
     fa6:	1615                	.insn	2, 0x1615
     fa8:	0005                	.insn	2, 0x0005
     faa:	0200                	.insn	2, 0x0200
     fac:	6891                	.insn	2, 0x6891
     fae:	2008                	.insn	2, 0x2008
     fb0:	a880000b          	.insn	4, 0xa880000b
     fb4:	0000                	.insn	2, 0x
     fb6:	0100                	.insn	2, 0x0100
     fb8:	0400                	.insn	2, 0x0400
     fba:	0000                	.insn	2, 0x
     fbc:	04b0                	.insn	2, 0x04b0
     fbe:	b41a                	.insn	2, 0xb41a
     fc0:	0000                	.insn	2, 0x
     fc2:	0200                	.insn	2, 0x0200
     fc4:	6391                	.insn	2, 0x6391
     fc6:	9801                	.insn	2, 0x9801
     fc8:	0002                	.insn	2, 0x0002
     fca:	b100                	.insn	2, 0xb100
     fcc:	1f04                	.insn	2, 0x1f04
     fce:	0000011b          	.insn	4, 0x011b
     fd2:	9102                	.insn	2, 0x9102
     fd4:	085c                	.insn	2, 0x085c
     fd6:	0b90                	.insn	2, 0x0b90
     fd8:	8000                	.insn	2, 0x8000
     fda:	0030                	.insn	2, 0x0030
     fdc:	0000                	.insn	2, 0x
     fde:	8c01                	.insn	2, 0x8c01
     fe0:	0005                	.insn	2, 0x0005
     fe2:	1e00                	.insn	2, 0x1e00
     fe4:	1105                	.insn	2, 0x1105
     fe6:	0000011b          	.insn	4, 0x011b
     fea:	9102                	.insn	2, 0x9102
     fec:	0058                	.insn	2, 0x0058
     fee:	0000                	.insn	2, 0x
     ff0:	cf0a                	.insn	2, 0xcf0a
     ff2:	0004                	.insn	2, 0x0004
     ff4:	ab00                	.insn	2, 0xab00
     ff6:	00f90c03          	lb	s8,15(s2)
     ffa:	0000                	.insn	2, 0x
     ffc:	088c                	.insn	2, 0x088c
     ffe:	8000                	.insn	2, 0x8000
    1000:	0248                	.insn	2, 0x0248
    1002:	0000                	.insn	2, 0x
    1004:	9c01                	.insn	2, 0x9c01
    1006:	00000d13          	addi	s10,zero,0
    100a:	b802                	.insn	2, 0xb802
    100c:	ab000007          	.insn	4, 0xab000007
    1010:	027d2d03          	lw	s10,39(s10)
    1014:	0000                	.insn	2, 0x
    1016:	9102                	.insn	2, 0x9102
    1018:	024c                	.insn	2, 0x024c
    101a:	05dc                	.insn	2, 0x05dc
    101c:	0000                	.insn	2, 0x
    101e:	03ac                	.insn	2, 0x03ac
    1020:	cf32                	.insn	2, 0xcf32
    1022:	0000                	.insn	2, 0x
    1024:	0200                	.insn	2, 0x0200
    1026:	4891                	.insn	2, 0x4891
    1028:	8802                	.insn	2, 0x8802
    102a:	000e                	.insn	2, 0x000e
    102c:	ad00                	.insn	2, 0xad00
    102e:	01202a03          	lw	s4,18(zero) # 12 <__start-0x7fffffee>
    1032:	0000                	.insn	2, 0x
    1034:	9102                	.insn	2, 0x9102
    1036:	0244                	.insn	2, 0x0244
    1038:	04ad                	.insn	2, 0x04ad
    103a:	0000                	.insn	2, 0x
    103c:	03ae                	.insn	2, 0x03ae
    103e:	0530                	.insn	2, 0x0530
    1040:	0001                	.insn	2, 0x0001
    1042:	0200                	.insn	2, 0x0200
    1044:	4091                	.insn	2, 0x4091
    1046:	f101                	.insn	2, 0xf101
    1048:	0005                	.insn	2, 0x0005
    104a:	b000                	.insn	2, 0xb000
    104c:	00f91003          	lh	zero,15(s2)
    1050:	0000                	.insn	2, 0x
    1052:	9102                	.insn	2, 0x9102
    1054:	016c                	.insn	2, 0x016c
    1056:	04e1                	.insn	2, 0x04e1
    1058:	0000                	.insn	2, 0x
    105a:	03b0                	.insn	2, 0x03b0
    105c:	f929                	.insn	2, 0xf929
    105e:	0000                	.insn	2, 0x
    1060:	0200                	.insn	2, 0x0200
    1062:	6491                	.insn	2, 0x6491
    1064:	b701                	.insn	2, 0xb701
    1066:	000c                	.insn	2, 0x000c
    1068:	b100                	.insn	2, 0xb100
    106a:	02710f03          	lb	t5,39(sp)
    106e:	0000                	.insn	2, 0x
    1070:	9102                	.insn	2, 0x9102
    1072:	015c                	.insn	2, 0x015c
    1074:	000007b7          	lui	a5,0x0
    1078:	03b2                	.insn	2, 0x03b2
    107a:	1615                	.insn	2, 0x1615
    107c:	0005                	.insn	2, 0x0005
    107e:	0200                	.insn	2, 0x0200
    1080:	6891                	.insn	2, 0x6891
    1082:	0e00                	.insn	2, 0x0e00
    1084:	0438                	.insn	2, 0x0438
    1086:	0000                	.insn	2, 0x
    1088:	0236                	.insn	2, 0x0236
    108a:	0808                	.insn	2, 0x0808
    108c:	8000                	.insn	2, 0x8000
    108e:	0084                	.insn	2, 0x0084
    1090:	0000                	.insn	2, 0x
    1092:	9c01                	.insn	2, 0x9c01
    1094:	0d74                	.insn	2, 0x0d74
    1096:	0000                	.insn	2, 0x
    1098:	7e02                	.insn	2, 0x7e02
    109a:	0005                	.insn	2, 0x0005
    109c:	3600                	.insn	2, 0x3600
    109e:	3602                	.insn	2, 0x3602
    10a0:	0000011b          	.insn	4, 0x011b
    10a4:	9102                	.insn	2, 0x9102
    10a6:	026c                	.insn	2, 0x026c
    10a8:	07d1                	.insn	2, 0x07d1
    10aa:	0000                	.insn	2, 0x
    10ac:	1b360237          	lui	tp,0x1b360
    10b0:	0001                	.insn	2, 0x0001
    10b2:	0200                	.insn	2, 0x0200
    10b4:	6891                	.insn	2, 0x6891
    10b6:	3302                	.insn	2, 0x3302
    10b8:	38000007          	.insn	4, 0x38000007
    10bc:	2e02                	.insn	2, 0x2e02
    10be:	013d                	.insn	2, 0x013d
    10c0:	0000                	.insn	2, 0x
    10c2:	9102                	.insn	2, 0x9102
    10c4:	0264                	.insn	2, 0x0264
    10c6:	02b2                	.insn	2, 0x02b2
    10c8:	0000                	.insn	2, 0x
    10ca:	0239                	.insn	2, 0x0239
    10cc:	e832                	.insn	2, 0xe832
    10ce:	0000                	.insn	2, 0x
    10d0:	0200                	.insn	2, 0x0200
    10d2:	6391                	.insn	2, 0x6391
    10d4:	8d02                	.insn	2, 0x8d02
    10d6:	3a000003          	lb	zero,928(zero) # 3a0 <__start-0x7ffffc60>
    10da:	2e02                	.insn	2, 0x2e02
    10dc:	0511                	.insn	2, 0x0511
    10de:	0000                	.insn	2, 0x
    10e0:	9102                	.insn	2, 0x9102
    10e2:	005c                	.insn	2, 0x005c
    10e4:	7b0a                	.insn	2, 0x7b0a
    10e6:	0006                	.insn	2, 0x0006
    10e8:	f600                	.insn	2, 0xf600
    10ea:	1301                	.insn	2, 0x1301
    10ec:	027d                	.insn	2, 0x027d
    10ee:	0000                	.insn	2, 0x
    10f0:	0634                	.insn	2, 0x0634
    10f2:	8000                	.insn	2, 0x8000
    10f4:	01d4                	.insn	2, 0x01d4
    10f6:	0000                	.insn	2, 0x
    10f8:	9c01                	.insn	2, 0x9c01
    10fa:	0de9                	.insn	2, 0x0de9
    10fc:	0000                	.insn	2, 0x
    10fe:	7e02                	.insn	2, 0x7e02
    1100:	0005                	.insn	2, 0x0005
    1102:	f600                	.insn	2, 0xf600
    1104:	3a01                	.insn	2, 0x3a01
    1106:	0000011b          	.insn	4, 0x011b
    110a:	9102                	.insn	2, 0x9102
    110c:	024c                	.insn	2, 0x024c
    110e:	07d1                	.insn	2, 0x07d1
    1110:	0000                	.insn	2, 0x
    1112:	1b3a01f7          	.insn	4, 0x1b3a01f7
    1116:	0001                	.insn	2, 0x0001
    1118:	0200                	.insn	2, 0x0200
    111a:	4891                	.insn	2, 0x4891
    111c:	b202                	.insn	2, 0xb202
    111e:	0002                	.insn	2, 0x0002
    1120:	f800                	.insn	2, 0xf800
    1122:	3601                	.insn	2, 0x3601
    1124:	00e8                	.insn	2, 0x00e8
    1126:	0000                	.insn	2, 0x
    1128:	9102                	.insn	2, 0x9102
    112a:	038d0147          	.insn	4, 0x038d0147
    112e:	0000                	.insn	2, 0x
    1130:	01fa                	.insn	2, 0x01fa
    1132:	00051113          	slli	sp,a0,0x0
    1136:	0200                	.insn	2, 0x0200
    1138:	5c91                	.insn	2, 0x5c91
    113a:	a501                	.insn	2, 0xa501
    113c:	fb000007          	.insn	4, 0xfb000007
    1140:	1001                	.insn	2, 0x1001
    1142:	0026                	.insn	2, 0x0026
    1144:	0000                	.insn	2, 0x
    1146:	9102                	.insn	2, 0x9102
    1148:	0158                	.insn	2, 0x0158
    114a:	00000733          	add	a4,zero,zero
    114e:	01fc                	.insn	2, 0x01fc
    1150:	00013d13          	sltiu	s10,sp,0
    1154:	0200                	.insn	2, 0x0200
    1156:	5491                	.insn	2, 0x5491
    1158:	2300                	.insn	2, 0x2300
    115a:	06d2                	.insn	2, 0x06d2
    115c:	0000                	.insn	2, 0x
    115e:	2f01                	.insn	2, 0x2f01
    1160:	0c01                	.insn	2, 0x0c01
    1162:	00f9                	.insn	2, 0x00f9
    1164:	0000                	.insn	2, 0x
    1166:	0394                	.insn	2, 0x0394
    1168:	8000                	.insn	2, 0x8000
    116a:	02a0                	.insn	2, 0x02a0
    116c:	0000                	.insn	2, 0x
    116e:	9c01                	.insn	2, 0x9c01
    1170:	b802                	.insn	2, 0xb802
    1172:	2f000007          	.insn	4, 0x2f000007
    1176:	2e01                	.insn	2, 0x2e01
    1178:	027d                	.insn	2, 0x027d
    117a:	0000                	.insn	2, 0x
    117c:	9102                	.insn	2, 0x9102
    117e:	024c                	.insn	2, 0x024c
    1180:	038e                	.insn	2, 0x038e
    1182:	0000                	.insn	2, 0x
    1184:	0130                	.insn	2, 0x0130
    1186:	0000f92b          	.insn	4, 0xf92b
    118a:	0200                	.insn	2, 0x0200
    118c:	4891                	.insn	2, 0x4891
    118e:	ff01                	.insn	2, 0xff01
    1190:	0004                	.insn	2, 0x0004
    1192:	3200                	.insn	2, 0x3200
    1194:	1001                	.insn	2, 0x1001
    1196:	00f9                	.insn	2, 0x00f9
    1198:	0000                	.insn	2, 0x
    119a:	9102                	.insn	2, 0x9102
    119c:	015c                	.insn	2, 0x015c
    119e:	000007b7          	lui	a5,0x0
    11a2:	16150133          	.insn	4, 0x16150133
    11a6:	0005                	.insn	2, 0x0005
    11a8:	0200                	.insn	2, 0x0200
    11aa:	5891                	.insn	2, 0x5891
    11ac:	0000                	.insn	2, 0x
    11ae:	000014bb          	.insn	4, 0x14bb
    11b2:	0005                	.insn	2, 0x0005
    11b4:	0401                	.insn	2, 0x0401
    11b6:	03a1                	.insn	2, 0x03a1
    11b8:	0000                	.insn	2, 0x
    11ba:	0000631b          	.insn	4, 0x631b
    11be:	1d00                	.insn	2, 0x1d00
    11c0:	0198                	.insn	2, 0x0198
    11c2:	0000                	.insn	2, 0x
    11c4:	0000                	.insn	2, 0x
    11c6:	0000                	.insn	2, 0x
    11c8:	1c38                	.insn	2, 0x1c38
    11ca:	8000                	.insn	2, 0x8000
    11cc:	2ba8                	.insn	2, 0x2ba8
    11ce:	0000                	.insn	2, 0x
    11d0:	000013ef          	jal	t2,21d0 <__start-0x7fffde30>
    11d4:	ee04                	.insn	2, 0xee04
    11d6:	0002                	.insn	2, 0x0002
    11d8:	0200                	.insn	2, 0x0200
    11da:	17d6                	.insn	2, 0x17d6
    11dc:	0032                	.insn	2, 0x0032
    11de:	0000                	.insn	2, 0x
    11e0:	040a                	.insn	2, 0x040a
    11e2:	0000e207          	.insn	4, 0xe207
    11e6:	1c00                	.insn	2, 0x1c00
    11e8:	0504                	.insn	2, 0x0504
    11ea:	6e69                	.insn	2, 0x6e69
    11ec:	0074                	.insn	2, 0x0074
    11ee:	040a                	.insn	2, 0x040a
    11f0:	f405                	.insn	2, 0xf405
    11f2:	0000                	.insn	2, 0x
    11f4:	0a00                	.insn	2, 0x0a00
    11f6:	0508                	.insn	2, 0x0508
    11f8:	000000ef          	jal	ra,11f8 <__start-0x7fffee08>
    11fc:	010a                	.insn	2, 0x010a
    11fe:	0008                	.insn	2, 0x0008
    1200:	0000                	.insn	2, 0x
    1202:	0a00                	.insn	2, 0x0a00
    1204:	0702                	.insn	2, 0x0702
    1206:	000e                	.insn	2, 0x000e
    1208:	0000                	.insn	2, 0x
    120a:	040a                	.insn	2, 0x040a
    120c:	0000dd07          	.insn	4, 0xdd07
    1210:	0a00                	.insn	2, 0x0a00
    1212:	0601                	.insn	2, 0x0601
    1214:	0002                	.insn	2, 0x0002
    1216:	0000                	.insn	2, 0x
    1218:	020a                	.insn	2, 0x020a
    121a:	fd05                	.insn	2, 0xfd05
    121c:	0000                	.insn	2, 0x
    121e:	0400                	.insn	2, 0x0400
    1220:	0714                	.insn	2, 0x0714
    1222:	0000                	.insn	2, 0x
    1224:	39142903          	lw	s2,913(s0)
    1228:	0000                	.insn	2, 0x
    122a:	0a00                	.insn	2, 0x0a00
    122c:	0708                	.insn	2, 0x0708
    122e:	00d8                	.insn	2, 0x00d8
    1230:	0000                	.insn	2, 0x
    1232:	041d                	.insn	2, 0x041d
    1234:	8405                	.insn	2, 0x8405
    1236:	0000                	.insn	2, 0x
    1238:	0300                	.insn	2, 0x0300
    123a:	0090                	.insn	2, 0x0090
    123c:	0000                	.insn	2, 0x
    123e:	010a                	.insn	2, 0x010a
    1240:	0908                	.insn	2, 0x0908
    1242:	0000                	.insn	2, 0x
    1244:	0500                	.insn	2, 0x0500
    1246:	0090                	.insn	2, 0x0090
    1248:	0000                	.insn	2, 0x
    124a:	1604                	.insn	2, 0x1604
    124c:	04000007          	.insn	4, 0x04000007
    1250:	131a                	.insn	2, 0x131a
    1252:	0071                	.insn	2, 0x0071
    1254:	0000                	.insn	2, 0x
    1256:	00009703          	lh	a4,0(ra) # bc2 <__start-0x7ffff43e>
    125a:	0500                	.insn	2, 0x0500
    125c:	00a8                	.insn	2, 0x00a8
    125e:	0000                	.insn	2, 0x
    1260:	100a                	.insn	2, 0x100a
    1262:	1c04                	.insn	2, 0x1c04
    1264:	0001                	.insn	2, 0x0001
    1266:	0400                	.insn	2, 0x0400
    1268:	000007bf 4e182e05 	.insn	8, 0x4e182e05000007bf
    1270:	0000                	.insn	2, 0x
    1272:	0b00                	.insn	2, 0x0b00
    1274:	00b9                	.insn	2, 0x00b9
    1276:	0000                	.insn	2, 0x
    1278:	4b04                	.insn	2, 0x4b04
    127a:	0002                	.insn	2, 0x0002
    127c:	0500                	.insn	2, 0x0500
    127e:	1934                	.insn	2, 0x1934
    1280:	0032                	.insn	2, 0x0032
    1282:	0000                	.insn	2, 0x
    1284:	0000ca0b          	.insn	4, 0xca0b
    1288:	0400                	.insn	2, 0x0400
    128a:	00000c83          	lb	s9,0(zero) # 0 <__start-0x80000000>
    128e:	2406                	.insn	2, 0x2406
    1290:	e711                	.insn	2, 0xe711
    1292:	0000                	.insn	2, 0x
    1294:	0300                	.insn	2, 0x0300
    1296:	00ec                	.insn	2, 0x00ec
    1298:	0000                	.insn	2, 0x
    129a:	f71e                	.insn	2, 0xf71e
    129c:	0000                	.insn	2, 0x
    129e:	0900                	.insn	2, 0x0900
    12a0:	0084                	.insn	2, 0x0084
    12a2:	0000                	.insn	2, 0x
    12a4:	0400                	.insn	2, 0x0400
    12a6:	088e                	.insn	2, 0x088e
    12a8:	0000                	.insn	2, 0x
    12aa:	ca1a4107          	.insn	4, 0xca1a4107
    12ae:	0000                	.insn	2, 0x
    12b0:	0b00                	.insn	2, 0x0b00
    12b2:	000000f7          	.insn	4, 0x00f7
    12b6:	f705                	.insn	2, 0xf705
    12b8:	0000                	.insn	2, 0x
    12ba:	0400                	.insn	2, 0x0400
    12bc:	0222                	.insn	2, 0x0222
    12be:	0000                	.insn	2, 0x
    12c0:	9c1a4207          	.insn	4, 0x9c1a4207
    12c4:	0000                	.insn	2, 0x
    12c6:	0b00                	.insn	2, 0x0b00
    12c8:	010d                	.insn	2, 0x010d
    12ca:	0000                	.insn	2, 0x
    12cc:	0d05                	.insn	2, 0x0d05
    12ce:	0001                	.insn	2, 0x0001
    12d0:	0400                	.insn	2, 0x0400
    12d2:	0221                	.insn	2, 0x0221
    12d4:	0000                	.insn	2, 0x
    12d6:	ca1a4307          	.insn	4, 0xca1a4307
    12da:	0000                	.insn	2, 0x
    12dc:	0b00                	.insn	2, 0x0b00
    12de:	00000123          	sb	zero,2(zero) # 2 <__start-0x7ffffffe>
    12e2:	2f05                	.insn	2, 0x2f05
    12e4:	0001                	.insn	2, 0x0001
    12e6:	0400                	.insn	2, 0x0400
    12e8:	00000167          	jalr	sp,0(zero) # 0 <__start-0x80000000>
    12ec:	ca1a4407          	.insn	4, 0xca1a4407
    12f0:	0000                	.insn	2, 0x
    12f2:	0b00                	.insn	2, 0x0b00
    12f4:	0139                	.insn	2, 0x0139
    12f6:	0000                	.insn	2, 0x
    12f8:	3905                	.insn	2, 0x3905
    12fa:	0001                	.insn	2, 0x0001
    12fc:	1f00                	.insn	2, 0x1f00
    12fe:	108d                	.insn	2, 0x108d
    1300:	0000                	.insn	2, 0x
    1302:	260f7507          	.insn	4, 0x260f7507
    1306:	0000                	.insn	2, 0x
    1308:	1100                	.insn	2, 0x1100
    130a:	019d                	.insn	2, 0x019d
    130c:	0000                	.insn	2, 0x
    130e:	0814                	.insn	2, 0x0814
    1310:	0890                	.insn	2, 0x0890
    1312:	01aa                	.insn	2, 0x01aa
    1314:	0000                	.insn	2, 0x
    1316:	8106                	.insn	2, 0x8106
    1318:	0001                	.insn	2, 0x0001
    131a:	0800                	.insn	2, 0x0800
    131c:	01392493          	slti	s1,s2,19
    1320:	0000                	.insn	2, 0x
    1322:	0600                	.insn	2, 0x0600
    1324:	01f1                	.insn	2, 0x01f1
    1326:	0000                	.insn	2, 0x
    1328:	9408                	.insn	2, 0x9408
    132a:	aa2d                	.insn	2, 0xaa2d
    132c:	0001                	.insn	2, 0x0001
    132e:	0400                	.insn	2, 0x0400
    1330:	4006                	.insn	2, 0x4006
    1332:	0002                	.insn	2, 0x0002
    1334:	0800                	.insn	2, 0x0800
    1336:	2d95                	.insn	2, 0x2d95
    1338:	01aa                	.insn	2, 0x01aa
    133a:	0000                	.insn	2, 0x
    133c:	0608                	.insn	2, 0x0608
    133e:	0195                	.insn	2, 0x0195
    1340:	0000                	.insn	2, 0x
    1342:	9608                	.insn	2, 0x9608
    1344:	840c                	.insn	2, 0x840c
    1346:	0000                	.insn	2, 0x
    1348:	0c00                	.insn	2, 0x0c00
    134a:	5b06                	.insn	2, 0x5b06
    134c:	0001                	.insn	2, 0x0001
    134e:	0800                	.insn	2, 0x0800
    1350:	01e42897          	auipc	a7,0x1e42
    1354:	0000                	.insn	2, 0x
    1356:	0010                	.insn	2, 0x0010
    1358:	00015b03          	lhu	s6,0(sp)
    135c:	1100                	.insn	2, 0x1100
    135e:	0000026b          	.insn	4, 0x026b
    1362:	0814                	.insn	2, 0x0814
    1364:	10ac                	.insn	2, 0x10ac
    1366:	01e4                	.insn	2, 0x01e4
    1368:	0000                	.insn	2, 0x
    136a:	d206                	.insn	2, 0xd206
    136c:	0001                	.insn	2, 0x0001
    136e:	0800                	.insn	2, 0x0800
    1370:	012325af          	.insn	4, 0x012325af
    1374:	0000                	.insn	2, 0x
    1376:	0600                	.insn	2, 0x0600
    1378:	0238                	.insn	2, 0x0238
    137a:	0000                	.insn	2, 0x
    137c:	b008                	.insn	2, 0xb008
    137e:	3626                	.insn	2, 0x3626
    1380:	0002                	.insn	2, 0x0002
    1382:	0400                	.insn	2, 0x0400
    1384:	8c06                	.insn	2, 0x8c06
    1386:	0001                	.insn	2, 0x0001
    1388:	0800                	.insn	2, 0x0800
    138a:	14b1                	.insn	2, 0x14b1
    138c:	022a                	.insn	2, 0x022a
    138e:	0000                	.insn	2, 0x
    1390:	0008                	.insn	2, 0x0008
    1392:	0001af03          	lw	t5,0(gp)
    1396:	0400                	.insn	2, 0x0400
    1398:	0176                	.insn	2, 0x0176
    139a:	0000                	.insn	2, 0x
    139c:	9a08                	.insn	2, 0x9a08
    139e:	00015b1b          	.insn	4, 0x00015b1b
    13a2:	1100                	.insn	2, 0x1100
    13a4:	0254                	.insn	2, 0x0254
    13a6:	0000                	.insn	2, 0x
    13a8:	080c                	.insn	2, 0x080c
    13aa:	0c9d                	.insn	2, 0x0c9d
    13ac:	022a                	.insn	2, 0x022a
    13ae:	0000                	.insn	2, 0x
    13b0:	8106                	.insn	2, 0x8106
    13b2:	0001                	.insn	2, 0x0001
    13b4:	0800                	.insn	2, 0x0800
    13b6:	28a0                	.insn	2, 0x28a0
    13b8:	0139                	.insn	2, 0x0139
    13ba:	0000                	.insn	2, 0x
    13bc:	0600                	.insn	2, 0x0600
    13be:	01f1                	.insn	2, 0x01f1
    13c0:	0000                	.insn	2, 0x
    13c2:	a108                	.insn	2, 0xa108
    13c4:	aa31                	.insn	2, 0xaa31
    13c6:	0001                	.insn	2, 0x0001
    13c8:	0400                	.insn	2, 0x0400
    13ca:	4006                	.insn	2, 0x4006
    13cc:	0002                	.insn	2, 0x0002
    13ce:	0800                	.insn	2, 0x0800
    13d0:	31a2                	.insn	2, 0x31a2
    13d2:	01aa                	.insn	2, 0x01aa
    13d4:	0000                	.insn	2, 0x
    13d6:	0008                	.insn	2, 0x0008
    13d8:	7204                	.insn	2, 0x7204
    13da:	0001                	.insn	2, 0x0001
    13dc:	0800                	.insn	2, 0x0800
    13de:	24a4                	.insn	2, 0x24a4
    13e0:	01f5                	.insn	2, 0x01f5
    13e2:	0000                	.insn	2, 0x
    13e4:	0001e903          	.insn	4, 0x0001e903
    13e8:	0500                	.insn	2, 0x0500
    13ea:	0236                	.insn	2, 0x0236
    13ec:	0000                	.insn	2, 0x
    13ee:	cb04                	.insn	2, 0xcb04
    13f0:	0001                	.insn	2, 0x0001
    13f2:	0800                	.insn	2, 0x0800
    13f4:	01af03b3          	add	t2,t5,s10
    13f8:	0000                	.insn	2, 0x
    13fa:	4005                	.insn	2, 0x4005
    13fc:	0002                	.insn	2, 0x0002
    13fe:	0400                	.insn	2, 0x0400
    1400:	0408                	.insn	2, 0x0408
    1402:	0000                	.insn	2, 0x
    1404:	5c09                	.insn	2, 0x5c09
    1406:	5d2e                	.insn	2, 0x5d2e
    1408:	0002                	.insn	2, 0x0002
    140a:	0300                	.insn	2, 0x0300
    140c:	0262                	.insn	2, 0x0262
    140e:	0000                	.insn	2, 0x
    1410:	ec20                	.insn	2, 0xec20
    1412:	4c000003          	lb	zero,1216(zero) # 4c0 <__start-0x7ffffb40>
    1416:	6601                	.insn	2, 0x6601
    1418:	1001                	.insn	2, 0x1001
    141a:	02d9                	.insn	2, 0x02d9
    141c:	0000                	.insn	2, 0x
    141e:	b30d                	.insn	2, 0xb30d
    1420:	6800000f          	.insn	4, 0x6800000f
    1424:	1c01                	.insn	2, 0x1c01
    1426:	0391                	.insn	2, 0x0391
    1428:	0000                	.insn	2, 0x
    142a:	0d00                	.insn	2, 0x0d00
    142c:	0f6c                	.insn	2, 0x0f6c
    142e:	0000                	.insn	2, 0x
    1430:	0172                	.insn	2, 0x0172
    1432:	e910                	.insn	2, 0xe910
    1434:	0001                	.insn	2, 0x0001
    1436:	0400                	.insn	2, 0x0400
    1438:	d40d                	.insn	2, 0xd40d
    143a:	000e                	.insn	2, 0x000e
    143c:	7300                	.insn	2, 0x7300
    143e:	1001                	.insn	2, 0x1001
    1440:	01e9                	.insn	2, 0x01e9
    1442:	0000                	.insn	2, 0x
    1444:	0d18                	.insn	2, 0x0d18
    1446:	081a                	.insn	2, 0x081a
    1448:	0000                	.insn	2, 0x
    144a:	0174                	.insn	2, 0x0174
    144c:	2311                	.insn	2, 0x2311
    144e:	0001                	.insn	2, 0x0001
    1450:	2c00                	.insn	2, 0x2c00
    1452:	c50d                	.insn	2, 0xc50d
    1454:	000d                	.insn	2, 0x000d
    1456:	7500                	.insn	2, 0x7500
    1458:	1301                	.insn	2, 0x1301
    145a:	038c                	.insn	2, 0x038c
    145c:	0000                	.insn	2, 0x
    145e:	0d30                	.insn	2, 0x0d30
    1460:	000007fb          	.insn	4, 0x07fb
    1464:	017a                	.insn	2, 0x017a
    1466:	960a                	.insn	2, 0x960a
    1468:	34000003          	lb	zero,832(zero) # 340 <__start-0x7ffffcc0>
    146c:	140d                	.insn	2, 0x140d
    146e:	a300000b          	.insn	4, 0xa300000b
    1472:	1b01                	.insn	2, 0x1b01
    1474:	03b6                	.insn	2, 0x03b6
    1476:	0000                	.insn	2, 0x
    1478:	0d44                	.insn	2, 0x0d44
    147a:	0988                	.insn	2, 0x0988
    147c:	0000                	.insn	2, 0x
    147e:	01a4                	.insn	2, 0x01a4
    1480:	cb1a                	.insn	2, 0xcb1a
    1482:	48000003          	lb	zero,1152(zero) # 480 <__start-0x7ffffb80>
    1486:	2100                	.insn	2, 0x2100
    1488:	00320407          	.insn	4, 0x00320407
    148c:	0000                	.insn	2, 0x
    148e:	7209                	.insn	2, 0x7209
    1490:	0601                	.insn	2, 0x0601
    1492:	12000003          	lb	zero,288(zero) # 120 <__start-0x7ffffee0>
    1496:	0845                	.insn	2, 0x0845
    1498:	0000                	.insn	2, 0x
    149a:	1200                	.insn	2, 0x1200
    149c:	0d22                	.insn	2, 0x0d22
    149e:	0000                	.insn	2, 0x
    14a0:	1201                	.insn	2, 0x1201
    14a2:	0aaa                	.insn	2, 0x0aaa
    14a4:	0000                	.insn	2, 0x
    14a6:	1202                	.insn	2, 0x1202
    14a8:	09e5                	.insn	2, 0x09e5
    14aa:	0000                	.insn	2, 0x
    14ac:	0b461203          	lh	tp,180(a2)
    14b0:	0000                	.insn	2, 0x
    14b2:	0004                	.insn	2, 0x0004
    14b4:	9c04                	.insn	2, 0x9c04
    14b6:	000a                	.insn	2, 0x000a
    14b8:	0900                	.insn	2, 0x0900
    14ba:	0378                	.insn	2, 0x0378
    14bc:	02d9                	.insn	2, 0x02d9
    14be:	0000                	.insn	2, 0x
    14c0:	b911                	.insn	2, 0xb911
    14c2:	08000003          	lb	zero,128(zero) # 80 <__start-0x7fffff80>
    14c6:	7d09                	.insn	2, 0x7d09
    14c8:	3a10                	.insn	2, 0x3a10
    14ca:	06000003          	lb	zero,96(zero) # 60 <__start-0x7fffffa0>
    14ce:	044e                	.insn	2, 0x044e
    14d0:	0000                	.insn	2, 0x
    14d2:	7f09                	.insn	2, 0x7f09
    14d4:	0d10                	.insn	2, 0x0d10
    14d6:	0001                	.insn	2, 0x0001
    14d8:	0000                	.insn	2, 0x
    14da:	9d06                	.insn	2, 0x9d06
    14dc:	0004                	.insn	2, 0x0004
    14de:	0900                	.insn	2, 0x0900
    14e0:	1080                	.insn	2, 0x1080
    14e2:	0139                	.insn	2, 0x0139
    14e4:	0000                	.insn	2, 0x
    14e6:	0004                	.insn	2, 0x0004
    14e8:	f504                	.insn	2, 0xf504
    14ea:	0002                	.insn	2, 0x0002
    14ec:	0900                	.insn	2, 0x0900
    14ee:	0381                	.insn	2, 0x0381
    14f0:	0312                	.insn	2, 0x0312
    14f2:	0000                	.insn	2, 0x
    14f4:	2b11                	.insn	2, 0x2b11
    14f6:	000d                	.insn	2, 0x000d
    14f8:	0c00                	.insn	2, 0x0c00
    14fa:	8609                	.insn	2, 0x8609
    14fc:	7b10                	.insn	2, 0x7b10
    14fe:	06000003          	lb	zero,96(zero) # 60 <__start-0x7fffffa0>
    1502:	0e3c                	.insn	2, 0x0e3c
    1504:	0000                	.insn	2, 0x
    1506:	8809                	.insn	2, 0x8809
    1508:	840c                	.insn	2, 0x840c
    150a:	0000                	.insn	2, 0x
    150c:	0000                	.insn	2, 0x
    150e:	5706                	.insn	2, 0x5706
    1510:	000c                	.insn	2, 0x000c
    1512:	0900                	.insn	2, 0x0900
    1514:	0e89                	.insn	2, 0x0e89
    1516:	00ca                	.insn	2, 0x00ca
    1518:	0000                	.insn	2, 0x
    151a:	0604                	.insn	2, 0x0604
    151c:	0965                	.insn	2, 0x0965
    151e:	0000                	.insn	2, 0x
    1520:	8a09                	.insn	2, 0x8a09
    1522:	ca0e                	.insn	2, 0xca0e
    1524:	0000                	.insn	2, 0x
    1526:	0800                	.insn	2, 0x0800
    1528:	0400                	.insn	2, 0x0400
    152a:	0bf6                	.insn	2, 0x0bf6
    152c:	0000                	.insn	2, 0x
    152e:	8b09                	.insn	2, 0x8b09
    1530:	00034603          	lbu	a2,0(t1) # 637c <__start-0x7fff9c84>
    1534:	0500                	.insn	2, 0x0500
    1536:	0000037b          	.insn	4, 0x037b
    153a:	0000f703          	.insn	4, 0xf703
    153e:	0300                	.insn	2, 0x0300
    1540:	00000103          	lb	sp,0(zero) # 0 <__start-0x80000000>
    1544:	0000900f          	.insn	4, 0x900f
    1548:	a600                	.insn	2, 0xa600
    154a:	10000003          	lb	zero,256(zero) # 100 <__start-0x7fffff00>
    154e:	0032                	.insn	2, 0x0032
    1550:	0000                	.insn	2, 0x
    1552:	d60f000f          	.insn	4, 0xd60f000f
    1556:	0000                	.insn	2, 0x
    1558:	b600                	.insn	2, 0xb600
    155a:	10000003          	lb	zero,256(zero) # 100 <__start-0x7fffff00>
    155e:	0032                	.insn	2, 0x0032
    1560:	0000                	.insn	2, 0x
    1562:	0000                	.insn	2, 0x
    1564:	0003a60b          	.insn	4, 0x0003a60b
    1568:	0f00                	.insn	2, 0x0f00
    156a:	00c5                	.insn	2, 0x00c5
    156c:	0000                	.insn	2, 0x
    156e:	000003cb          	.insn	4, 0x03cb
    1572:	3210                	.insn	2, 0x3210
    1574:	0000                	.insn	2, 0x
    1576:	0000                	.insn	2, 0x
    1578:	0b00                	.insn	2, 0x0b00
    157a:	000003bb          	.insn	4, 0x03bb
    157e:	8118                	.insn	2, 0x8118
    1580:	0009                	.insn	2, 0x0009
    1582:	b400                	.insn	2, 0xb400
    1584:	0301                	.insn	2, 0x0301
    1586:	0262                	.insn	2, 0x0262
    1588:	0000                	.insn	2, 0x
    158a:	a318                	.insn	2, 0xa318
    158c:	000e                	.insn	2, 0x000e
    158e:	b800                	.insn	2, 0xb800
    1590:	1001                	.insn	2, 0x1001
    1592:	03d0                	.insn	2, 0x03d0
    1594:	0000                	.insn	2, 0x
    1596:	5d22                	.insn	2, 0x5d22
    1598:	000d                	.insn	2, 0x000d
    159a:	0100                	.insn	2, 0x0100
    159c:	01be                	.insn	2, 0x01be
    159e:	00040037          	lui	zero,0x40
    15a2:	0500                	.insn	2, 0x0500
    15a4:	00890403          	lb	s0,8(s2)
    15a8:	0380                	.insn	2, 0x0380
    15aa:	03dc                	.insn	2, 0x03dc
    15ac:	0000                	.insn	2, 0x
    15ae:	0003fb0b          	.insn	4, 0x0003fb0b
    15b2:	0f00                	.insn	2, 0x0f00
    15b4:	0240                	.insn	2, 0x0240
    15b6:	0000                	.insn	2, 0x
    15b8:	0415                	.insn	2, 0x0415
    15ba:	0000                	.insn	2, 0x
    15bc:	3210                	.insn	2, 0x3210
    15be:	0000                	.insn	2, 0x
    15c0:	0000                	.insn	2, 0x
    15c2:	0100                	.insn	2, 0x0100
    15c4:	08b6                	.insn	2, 0x08b6
    15c6:	0000                	.insn	2, 0x
    15c8:	051f01cb          	.insn	4, 0x051f01cb
    15cc:	0004                	.insn	2, 0x0004
    15ce:	0500                	.insn	2, 0x0500
    15d0:	007c8003          	lb	zero,7(s9)
    15d4:	0180                	.insn	2, 0x0180
    15d6:	0000092f          	.insn	4, 0x092f
    15da:	01cc                	.insn	2, 0x01cc
    15dc:	401f 0002 0500      	.insn	6, 0x05000002401f
    15e2:	007c9403          	lh	s0,7(s9)
    15e6:	0180                	.insn	2, 0x0180
    15e8:	0941                	.insn	2, 0x0941
    15ea:	0000                	.insn	2, 0x
    15ec:	01cd                	.insn	2, 0x01cd
    15ee:	401f 0002 0500      	.insn	6, 0x05000002401f
    15f4:	007ca803          	lw	a6,7(s9)
    15f8:	0180                	.insn	2, 0x0180
    15fa:	00000da3          	sb	zero,27(zero) # 1b <__start-0x7fffffe5>
    15fe:	01ce                	.insn	2, 0x01ce
    1600:	622a                	.insn	2, 0x622a
    1602:	0004                	.insn	2, 0x0004
    1604:	0500                	.insn	2, 0x0500
    1606:	007cbc03          	.insn	4, 0x007cbc03
    160a:	0380                	.insn	2, 0x0380
    160c:	0240                	.insn	2, 0x0240
    160e:	0000                	.insn	2, 0x
    1610:	00045d0b          	.insn	4, 0x00045d0b
    1614:	0500                	.insn	2, 0x0500
    1616:	045d                	.insn	2, 0x045d
    1618:	0000                	.insn	2, 0x
    161a:	e901                	.insn	2, 0xe901
    161c:	000a                	.insn	2, 0x000a
    161e:	cf00                	.insn	2, 0xcf00
    1620:	2a01                	.insn	2, 0x2a01
    1622:	0462                	.insn	2, 0x0462
    1624:	0000                	.insn	2, 0x
    1626:	0305                	.insn	2, 0x0305
    1628:	7cc0                	.insn	2, 0x7cc0
    162a:	8000                	.insn	2, 0x8000
    162c:	3d01                	.insn	2, 0x3d01
    162e:	000a                	.insn	2, 0x000a
    1630:	d000                	.insn	2, 0xd000
    1632:	1f01                	.insn	2, 0x1f01
    1634:	0240                	.insn	2, 0x0240
    1636:	0000                	.insn	2, 0x
    1638:	0305                	.insn	2, 0x0305
    163a:	7cc4                	.insn	2, 0x7cc4
    163c:	8000                	.insn	2, 0x8000
    163e:	4901                	.insn	2, 0x4901
    1640:	e600000f          	.insn	4, 0xe600000f
    1644:	2d01                	.insn	2, 0x2d01
    1646:	0000012f          	.insn	4, 0x012f
    164a:	0305                	.insn	2, 0x0305
    164c:	7cd8                	.insn	2, 0x7cd8
    164e:	8000                	.insn	2, 0x8000
    1650:	b501                	.insn	2, 0xb501
    1652:	000a                	.insn	2, 0x000a
    1654:	e700                	.insn	2, 0xe700
    1656:	2c01                	.insn	2, 0x2c01
    1658:	0145                	.insn	2, 0x0145
    165a:	0000                	.insn	2, 0x
    165c:	0305                	.insn	2, 0x0305
    165e:	7cdc                	.insn	2, 0x7cdc
    1660:	8000                	.insn	2, 0x8000
    1662:	4f01                	.insn	2, 0x4f01
    1664:	0008                	.insn	2, 0x0008
    1666:	e800                	.insn	2, 0xe800
    1668:	2d01                	.insn	2, 0x2d01
    166a:	0000012f          	.insn	4, 0x012f
    166e:	0305                	.insn	2, 0x0305
    1670:	7ce0                	.insn	2, 0x7ce0
    1672:	8000                	.insn	2, 0x8000
    1674:	7c01                	.insn	2, 0x7c01
    1676:	0008                	.insn	2, 0x0008
    1678:	e900                	.insn	2, 0xe900
    167a:	2c01                	.insn	2, 0x2c01
    167c:	0119                	.insn	2, 0x0119
    167e:	0000                	.insn	2, 0x
    1680:	0305                	.insn	2, 0x0305
    1682:	7ce4                	.insn	2, 0x7ce4
    1684:	8000                	.insn	2, 0x8000
    1686:	e301                	.insn	2, 0xe301
    1688:	000e                	.insn	2, 0x000e
    168a:	ea00                	.insn	2, 0xea00
    168c:	2c01                	.insn	2, 0x2c01
    168e:	0145                	.insn	2, 0x0145
    1690:	0000                	.insn	2, 0x
    1692:	0305                	.insn	2, 0x0305
    1694:	7ce8                	.insn	2, 0x7ce8
    1696:	8000                	.insn	2, 0x8000
    1698:	0001190f          	.insn	4, 0x0001190f
    169c:	fa00                	.insn	2, 0xfa00
    169e:	0004                	.insn	2, 0x0004
    16a0:	1000                	.insn	2, 0x1000
    16a2:	0032                	.insn	2, 0x0032
    16a4:	0000                	.insn	2, 0x
    16a6:	0000                	.insn	2, 0x
    16a8:	0004ea0b          	.insn	4, 0x0004ea0b
    16ac:	0100                	.insn	2, 0x0100
    16ae:	090d                	.insn	2, 0x090d
    16b0:	0000                	.insn	2, 0x
    16b2:	fa2c01eb          	.insn	4, 0xfa2c01eb
    16b6:	0004                	.insn	2, 0x0004
    16b8:	0500                	.insn	2, 0x0500
    16ba:	007cec03          	.insn	4, 0x007cec03
    16be:	0180                	.insn	2, 0x0180
    16c0:	0d4d                	.insn	2, 0x0d4d
    16c2:	0000                	.insn	2, 0x
    16c4:	01ec                	.insn	2, 0x01ec
    16c6:	192c                	.insn	2, 0x192c
    16c8:	0001                	.insn	2, 0x0001
    16ca:	0500                	.insn	2, 0x0500
    16cc:	007cf003          	.insn	4, 0x007cf003
    16d0:	0180                	.insn	2, 0x0180
    16d2:	0cd2                	.insn	2, 0x0cd2
    16d4:	0000                	.insn	2, 0x
    16d6:	01ed                	.insn	2, 0x01ed
    16d8:	2324                	.insn	2, 0x2324
    16da:	0001                	.insn	2, 0x0001
    16dc:	0500                	.insn	2, 0x0500
    16de:	007cf403          	.insn	4, 0x007cf403
    16e2:	0180                	.insn	2, 0x0180
    16e4:	0c05                	.insn	2, 0x0c05
    16e6:	0000                	.insn	2, 0x
    16e8:	01ee                	.insn	2, 0x01ee
    16ea:	452c                	.insn	2, 0x452c
    16ec:	0001                	.insn	2, 0x0001
    16ee:	0500                	.insn	2, 0x0500
    16f0:	007cf803          	.insn	4, 0x007cf803
    16f4:	0f80                	.insn	2, 0x0f80
    16f6:	0251                	.insn	2, 0x0251
    16f8:	0000                	.insn	2, 0x
    16fa:	00000557          	.insn	4, 0x0557
    16fe:	3210                	.insn	2, 0x3210
    1700:	0000                	.insn	2, 0x
    1702:	0000                	.insn	2, 0x
    1704:	0100                	.insn	2, 0x0100
    1706:	00000b03          	lb	s6,0(zero) # 0 <__start-0x80000000>
    170a:	472501ef          	jal	gp,51b7c <__start-0x7ffae484>
    170e:	0005                	.insn	2, 0x0005
    1710:	0500                	.insn	2, 0x0500
    1712:	007cfc03          	.insn	4, 0x007cfc03
    1716:	0180                	.insn	2, 0x0180
    1718:	0a7d                	.insn	2, 0x0a7d
    171a:	0000                	.insn	2, 0x
    171c:	01f4                	.insn	2, 0x01f4
    171e:	00013423          	.insn	4, 0x00013423
    1722:	0500                	.insn	2, 0x0500
    1724:	006c2403          	lw	s0,6(s8)
    1728:	0180                	.insn	2, 0x0180
    172a:	0f9e                	.insn	2, 0x0f9e
    172c:	0000                	.insn	2, 0x
    172e:	0202                	.insn	2, 0x0202
    1730:	2f2d                	.insn	2, 0x2f2d
    1732:	0001                	.insn	2, 0x0001
    1734:	0500                	.insn	2, 0x0500
    1736:	007d0003          	lb	zero,7(s10)
    173a:	2380                	.insn	2, 0x2380
    173c:	0271                	.insn	2, 0x0271
    173e:	0000                	.insn	2, 0x
    1740:	f708                	.insn	2, 0xf708
    1742:	0d01                	.insn	2, 0x0d01
    1744:	00000123          	sb	zero,2(zero) # 2 <__start-0x7ffffffe>
    1748:	05a4                	.insn	2, 0x05a4
    174a:	0000                	.insn	2, 0x
    174c:	3b09                	.insn	2, 0x3b09
    174e:	0002                	.insn	2, 0x0002
    1750:	0000                	.insn	2, 0x
    1752:	f816                	.insn	2, 0xf816
    1754:	0001                	.insn	2, 0x0001
    1756:	b900                	.insn	2, 0xb900
    1758:	b501                	.insn	2, 0xb501
    175a:	0005                	.insn	2, 0x0005
    175c:	0900                	.insn	2, 0x0900
    175e:	00000467          	jalr	s0,0(zero) # 0 <__start-0x80000000>
    1762:	1600                	.insn	2, 0x1600
    1764:	028c                	.insn	2, 0x028c
    1766:	0000                	.insn	2, 0x
    1768:	01d1                	.insn	2, 0x01d1
    176a:	000005cb          	.insn	4, 0x05cb
    176e:	6709                	.insn	2, 0x6709
    1770:	0004                	.insn	2, 0x0004
    1772:	0900                	.insn	2, 0x0900
    1774:	0000023b          	.insn	4, 0x023b
    1778:	2400                	.insn	2, 0x2400
    177a:	0fc0                	.insn	2, 0x0fc0
    177c:	0000                	.insn	2, 0x
    177e:	e30a                	.insn	2, 0xe30a
    1780:	2506                	.insn	2, 0x2506
    1782:	0806                	.insn	2, 0x0806
    1784:	0000                	.insn	2, 0x
    1786:	dc0a                	.insn	2, 0xdc0a
    1788:	0d0c                	.insn	2, 0x0d0c
    178a:	0001                	.insn	2, 0x0001
    178c:	1700                	.insn	2, 0x1700
    178e:	0c1a                	.insn	2, 0x0c1a
    1790:	0000                	.insn	2, 0x
    1792:	850a                	.insn	2, 0x850a
    1794:	00038c17          	auipc	s8,0x38
    1798:	ff00                	.insn	2, 0xff00
    179a:	0005                	.insn	2, 0x0005
    179c:	0900                	.insn	2, 0x0900
    179e:	038c                	.insn	2, 0x038c
    17a0:	0000                	.insn	2, 0x
    17a2:	db09                	.insn	2, 0xdb09
    17a4:	0000                	.insn	2, 0x
    17a6:	0900                	.insn	2, 0x0900
    17a8:	0084                	.insn	2, 0x0084
    17aa:	0000                	.insn	2, 0x
    17ac:	1600                	.insn	2, 0x1600
    17ae:	000001b7          	lui	gp,0x0
    17b2:	01c4                	.insn	2, 0x01c4
    17b4:	0610                	.insn	2, 0x0610
    17b6:	0000                	.insn	2, 0x
    17b8:	3b09                	.insn	2, 0x3b09
    17ba:	0002                	.insn	2, 0x0002
    17bc:	0000                	.insn	2, 0x
    17be:	1426                	.insn	2, 0x1426
    17c0:	0005                	.insn	2, 0x0005
    17c2:	0a00                	.insn	2, 0x0a00
    17c4:	06b8                	.insn	2, 0x06b8
    17c6:	0622                	.insn	2, 0x0622
    17c8:	0000                	.insn	2, 0x
    17ca:	8409                	.insn	2, 0x8409
    17cc:	0000                	.insn	2, 0x
    17ce:	0000                	.insn	2, 0x
    17d0:	000caf17          	auipc	t5,0xca
    17d4:	0b00                	.insn	2, 0x0b00
    17d6:	0e3d                	.insn	2, 0x0e3d
    17d8:	0084                	.insn	2, 0x0084
    17da:	0000                	.insn	2, 0x
    17dc:	0642                	.insn	2, 0x0642
    17de:	0000                	.insn	2, 0x
    17e0:	8409                	.insn	2, 0x8409
    17e2:	0000                	.insn	2, 0x
    17e4:	0900                	.insn	2, 0x0900
    17e6:	0039                	.insn	2, 0x0039
    17e8:	0000                	.insn	2, 0x
    17ea:	2609                	.insn	2, 0x2609
    17ec:	0000                	.insn	2, 0x
    17ee:	0000                	.insn	2, 0x
    17f0:	00045d17          	auipc	s10,0x45
    17f4:	0a00                	.insn	2, 0x0a00
    17f6:	08b5                	.insn	2, 0x08b5
    17f8:	0084                	.insn	2, 0x0084
    17fa:	0000                	.insn	2, 0x
    17fc:	0658                	.insn	2, 0x0658
    17fe:	0000                	.insn	2, 0x
    1800:	2609                	.insn	2, 0x2609
    1802:	0000                	.insn	2, 0x
    1804:	0000                	.insn	2, 0x
    1806:	000a6613          	ori	a2,s4,0
    180a:	c500                	.insn	2, 0xc500
    180c:	0621                	.insn	2, 0x0621
    180e:	4738                	.insn	2, 0x4738
    1810:	8000                	.insn	2, 0x8000
    1812:	00a8                	.insn	2, 0x00a8
    1814:	0000                	.insn	2, 0x
    1816:	9c01                	.insn	2, 0x9c01
    1818:	067e                	.insn	2, 0x067e
    181a:	0000                	.insn	2, 0x
    181c:	f301                	.insn	2, 0xf301
    181e:	c7000007          	.insn	4, 0xc7000007
    1822:	1021                	.insn	2, 0x1021
    1824:	010d                	.insn	2, 0x010d
    1826:	0000                	.insn	2, 0x
    1828:	9102                	.insn	2, 0x9102
    182a:	006c                	.insn	2, 0x006c
    182c:	0914                	.insn	2, 0x0914
    182e:	df00000f          	.insn	4, 0xdf00000f
    1832:	0d20                	.insn	2, 0x0d20
    1834:	4624                	.insn	2, 0x4624
    1836:	8000                	.insn	2, 0x8000
    1838:	0114                	.insn	2, 0x0114
    183a:	0000                	.insn	2, 0x
    183c:	9c01                	.insn	2, 0x9c01
    183e:	000006ef          	jal	a3,183e <__start-0x7fffe7c2>
    1842:	8802                	.insn	2, 0x8802
    1844:	000e                	.insn	2, 0x000e
    1846:	df00                	.insn	2, 0xdf00
    1848:	3820                	.insn	2, 0x3820
    184a:	0139                	.insn	2, 0x0139
    184c:	0000                	.insn	2, 0x
    184e:	9102                	.insn	2, 0x9102
    1850:	025c                	.insn	2, 0x025c
    1852:	0e26                	.insn	2, 0x0e26
    1854:	0000                	.insn	2, 0x
    1856:	20e0                	.insn	2, 0x20e0
    1858:	1e3e                	.insn	2, 0x1e3e
    185a:	0001                	.insn	2, 0x0001
    185c:	0200                	.insn	2, 0x0200
    185e:	5891                	.insn	2, 0x5891
    1860:	6001                	.insn	2, 0x6001
    1862:	e200000f          	.insn	4, 0xe200000f
    1866:	1020                	.insn	2, 0x1020
    1868:	0139                	.insn	2, 0x0139
    186a:	0000                	.insn	2, 0x
    186c:	9102                	.insn	2, 0x9102
    186e:	0160                	.insn	2, 0x0160
    1870:	0ad2                	.insn	2, 0x0ad2
    1872:	0000                	.insn	2, 0x
    1874:	4a1620e3          	.insn	4, 0x4a1620e3
    1878:	0001                	.insn	2, 0x0001
    187a:	0200                	.insn	2, 0x0200
    187c:	6c91                	.insn	2, 0x6c91
    187e:	6201                	.insn	2, 0x6201
    1880:	0008                	.insn	2, 0x0008
    1882:	e400                	.insn	2, 0xe400
    1884:	1420                	.insn	2, 0x1420
    1886:	00000467          	jalr	s0,0(zero) # 0 <__start-0x80000000>
    188a:	9102                	.insn	2, 0x9102
    188c:	0168                	.insn	2, 0x0168
    188e:	1010                	.insn	2, 0x1010
    1890:	0000                	.insn	2, 0x
    1892:	20e5                	.insn	2, 0x20e5
    1894:	6714                	.insn	2, 0x6714
    1896:	0004                	.insn	2, 0x0004
    1898:	0200                	.insn	2, 0x0200
    189a:	6491                	.insn	2, 0x6491
    189c:	0c00                	.insn	2, 0x0c00
    189e:	0c39                	.insn	2, 0x0c39
    18a0:	0000                	.insn	2, 0x
    18a2:	2050                	.insn	2, 0x2050
    18a4:	ca0e                	.insn	2, 0xca0e
    18a6:	0000                	.insn	2, 0x
    18a8:	4000                	.insn	2, 0x4000
    18aa:	0045                	.insn	2, 0x0045
    18ac:	e480                	.insn	2, 0xe480
    18ae:	0000                	.insn	2, 0x
    18b0:	0100                	.insn	2, 0x0100
    18b2:	559c                	.insn	2, 0x559c
    18b4:	02000007          	.insn	4, 0x02000007
    18b8:	0d1c                	.insn	2, 0x0d1c
    18ba:	0000                	.insn	2, 0x
    18bc:	2050                	.insn	2, 0x2050
    18be:	513a                	.insn	2, 0x513a
    18c0:	0002                	.insn	2, 0x0002
    18c2:	0200                	.insn	2, 0x0200
    18c4:	5c91                	.insn	2, 0x5c91
    18c6:	7202                	.insn	2, 0x7202
    18c8:	0009                	.insn	2, 0x0009
    18ca:	5100                	.insn	2, 0x5100
    18cc:	3920                	.insn	2, 0x3920
    18ce:	00000123          	sb	zero,2(zero) # 2 <__start-0x7ffffffe>
    18d2:	9102                	.insn	2, 0x9102
    18d4:	0258                	.insn	2, 0x0258
    18d6:	089a                	.insn	2, 0x089a
    18d8:	0000                	.insn	2, 0x
    18da:	2052                	.insn	2, 0x2052
    18dc:	ca36                	.insn	2, 0xca36
    18de:	0000                	.insn	2, 0x
    18e0:	0200                	.insn	2, 0x0200
    18e2:	5491                	.insn	2, 0x5491
    18e4:	7b01                	.insn	2, 0x7b01
    18e6:	5400000f          	.insn	4, 0x5400000f
    18ea:	1120                	.insn	2, 0x1120
    18ec:	000003fb          	.insn	4, 0x03fb
    18f0:	9102                	.insn	2, 0x9102
    18f2:	016c                	.insn	2, 0x016c
    18f4:	0c30                	.insn	2, 0x0c30
    18f6:	0000                	.insn	2, 0x
    18f8:	2055                	.insn	2, 0x2055
    18fa:	ca12                	.insn	2, 0xca12
    18fc:	0000                	.insn	2, 0x
    18fe:	0200                	.insn	2, 0x0200
    1900:	6891                	.insn	2, 0x6891
    1902:	0c00                	.insn	2, 0x0c00
    1904:	0f81                	.insn	2, 0x0f81
    1906:	0000                	.insn	2, 0x
    1908:	202a                	.insn	2, 0x202a
    190a:	0d10                	.insn	2, 0x0d10
    190c:	0001                	.insn	2, 0x0001
    190e:	7c00                	.insn	2, 0x7c00
    1910:	0044                	.insn	2, 0x0044
    1912:	c480                	.insn	2, 0xc480
    1914:	0000                	.insn	2, 0x
    1916:	0100                	.insn	2, 0x0100
    1918:	ac9c                	.insn	2, 0xac9c
    191a:	02000007          	.insn	4, 0x02000007
    191e:	0d1c                	.insn	2, 0x0d1c
    1920:	0000                	.insn	2, 0x
    1922:	202a                	.insn	2, 0x202a
    1924:	0002513b          	.insn	4, 0x0002513b
    1928:	0200                	.insn	2, 0x0200
    192a:	5c91                	.insn	2, 0x5c91
    192c:	7202                	.insn	2, 0x7202
    192e:	0009                	.insn	2, 0x0009
    1930:	2b00                	.insn	2, 0x2b00
    1932:	3a20                	.insn	2, 0x3a20
    1934:	00000123          	sb	zero,2(zero) # 2 <__start-0x7ffffffe>
    1938:	9102                	.insn	2, 0x9102
    193a:	0158                	.insn	2, 0x0158
    193c:	00000f7b          	.insn	4, 0x0f7b
    1940:	202d                	.insn	2, 0x202d
    1942:	fb11                	.insn	2, 0xfb11
    1944:	02000003          	lb	zero,32(zero) # 20 <__start-0x7fffffe0>
    1948:	6891                	.insn	2, 0x6891
    194a:	ff01                	.insn	2, 0xff01
    194c:	0004                	.insn	2, 0x0004
    194e:	2e00                	.insn	2, 0x2e00
    1950:	1420                	.insn	2, 0x1420
    1952:	010d                	.insn	2, 0x010d
    1954:	0000                	.insn	2, 0x
    1956:	9102                	.insn	2, 0x9102
    1958:	006c                	.insn	2, 0x006c
    195a:	000e4a13          	xori	s4,t3,0
    195e:	b600                	.insn	2, 0xb600
    1960:	0a1f 4190 8000      	.insn	6, 0x800041900a1f
    1966:	02ec                	.insn	2, 0x02ec
    1968:	0000                	.insn	2, 0x
    196a:	9c01                	.insn	2, 0x9c01
    196c:	0870                	.insn	2, 0x0870
    196e:	0000                	.insn	2, 0x
    1970:	0e02                	.insn	2, 0x0e02
    1972:	000d                	.insn	2, 0x000d
    1974:	b600                	.insn	2, 0xb600
    1976:	361f 0251 0000      	.insn	6, 0x0251361f
    197c:	9102                	.insn	2, 0x9102
    197e:	024c                	.insn	2, 0x024c
    1980:	0fd2                	.insn	2, 0x0fd2
    1982:	0000                	.insn	2, 0x
    1984:	23351fb7          	lui	t6,0x23351
    1988:	0001                	.insn	2, 0x0001
    198a:	0200                	.insn	2, 0x0200
    198c:	4891                	.insn	2, 0x4891
    198e:	ff02                	.insn	2, 0xff02
    1990:	0002                	.insn	2, 0x0002
    1992:	b800                	.insn	2, 0xb800
    1994:	361f 0870 0000      	.insn	6, 0x0870361f
    199a:	9102                	.insn	2, 0x9102
    199c:	0144                	.insn	2, 0x0144
    199e:	00000f7b          	.insn	4, 0x0f7b
    19a2:	1fba                	.insn	2, 0x1fba
    19a4:	fb11                	.insn	2, 0xfb11
    19a6:	02000003          	lb	zero,32(zero) # 20 <__start-0x7fffffe0>
    19aa:	6c91                	.insn	2, 0x6c91
    19ac:	c801                	.insn	2, 0xc801
    19ae:	0008                	.insn	2, 0x0008
    19b0:	bb00                	.insn	2, 0xbb00
    19b2:	111f 00b9 0000      	.insn	6, 0x00b9111f
    19b8:	9102                	.insn	2, 0x9102
    19ba:	06a00167          	jalr	sp,106(zero) # 6a <__start-0x7fffff96>
    19be:	0000                	.insn	2, 0x
    19c0:	1fbc                	.insn	2, 0x1fbc
    19c2:	2315                	.insn	2, 0x2315
    19c4:	0001                	.insn	2, 0x0001
    19c6:	0200                	.insn	2, 0x0200
    19c8:	6891                	.insn	2, 0x6891
    19ca:	00422c07          	.insn	4, 0x00422c07
    19ce:	7480                	.insn	2, 0x7480
    19d0:	0000                	.insn	2, 0x
    19d2:	3900                	.insn	2, 0x3900
    19d4:	0008                	.insn	2, 0x0008
    19d6:	0100                	.insn	2, 0x0100
    19d8:	0264                	.insn	2, 0x0264
    19da:	0000                	.insn	2, 0x
    19dc:	1fee                	.insn	2, 0x1fee
    19de:	6715                	.insn	2, 0x6715
    19e0:	0004                	.insn	2, 0x0004
    19e2:	0200                	.insn	2, 0x0200
    19e4:	5c91                	.insn	2, 0x5c91
    19e6:	0700                	.insn	2, 0x0700
    19e8:	42c4                	.insn	2, 0x42c4
    19ea:	8000                	.insn	2, 0x8000
    19ec:	00ec                	.insn	2, 0x00ec
    19ee:	0000                	.insn	2, 0x
    19f0:	0856                	.insn	2, 0x0856
    19f2:	0000                	.insn	2, 0x
    19f4:	3801                	.insn	2, 0x3801
    19f6:	0002                	.insn	2, 0x0002
    19f8:	ef00                	.insn	2, 0xef00
    19fa:	151f 023b 0000      	.insn	6, 0x023b151f
    1a00:	9102                	.insn	2, 0x9102
    1a02:	0058                	.insn	2, 0x0058
    1a04:	b408                	.insn	2, 0xb408
    1a06:	7c800043          	.insn	4, 0x7c800043
    1a0a:	0000                	.insn	2, 0x
    1a0c:	0100                	.insn	2, 0x0100
    1a0e:	0238                	.insn	2, 0x0238
    1a10:	0000                	.insn	2, 0x
    1a12:	1ff5                	.insn	2, 0x1ff5
    1a14:	3b15                	.insn	2, 0x3b15
    1a16:	0002                	.insn	2, 0x0002
    1a18:	0200                	.insn	2, 0x0200
    1a1a:	6091                	.insn	2, 0x6091
    1a1c:	0000                	.insn	2, 0x
    1a1e:	00010d03          	lb	s10,0(sp)
    1a22:	0c00                	.insn	2, 0x0c00
    1a24:	000008f3          	.insn	4, 0x08f3
    1a28:	1f10                	.insn	2, 0x1f10
    1a2a:	0d10                	.insn	2, 0x0d10
    1a2c:	0001                	.insn	2, 0x0001
    1a2e:	9c00                	.insn	2, 0x9c00
    1a30:	003d                	.insn	2, 0x003d
    1a32:	f480                	.insn	2, 0xf480
    1a34:	01000003          	lb	zero,16(zero) # 10 <__start-0x7ffffff0>
    1a38:	7b9c                	.insn	2, 0x7b9c
    1a3a:	0009                	.insn	2, 0x0009
    1a3c:	0200                	.insn	2, 0x0200
    1a3e:	0d0e                	.insn	2, 0x0d0e
    1a40:	0000                	.insn	2, 0x
    1a42:	1f10                	.insn	2, 0x1f10
    1a44:	5138                	.insn	2, 0x5138
    1a46:	0002                	.insn	2, 0x0002
    1a48:	0200                	.insn	2, 0x0200
    1a4a:	4c91                	.insn	2, 0x4c91
    1a4c:	d202                	.insn	2, 0xd202
    1a4e:	1100000f          	.insn	4, 0x1100000f
    1a52:	371f 0123 0000      	.insn	6, 0x0123371f
    1a58:	9102                	.insn	2, 0x9102
    1a5a:	0248                	.insn	2, 0x0248
    1a5c:	0dcd                	.insn	2, 0x0dcd
    1a5e:	0000                	.insn	2, 0x
    1a60:	1f12                	.insn	2, 0x1f12
    1a62:	ca34                	.insn	2, 0xca34
    1a64:	0000                	.insn	2, 0x
    1a66:	0200                	.insn	2, 0x0200
    1a68:	4491                	.insn	2, 0x4491
    1a6a:	df02                	.insn	2, 0xdf02
    1a6c:	000c                	.insn	2, 0x000c
    1a6e:	1300                	.insn	2, 0x1300
    1a70:	391f 0306 0000      	.insn	6, 0x0306391f
    1a76:	9102                	.insn	2, 0x9102
    1a78:	0240                	.insn	2, 0x0240
    1a7a:	0c92                	.insn	2, 0x0c92
    1a7c:	0000                	.insn	2, 0x
    1a7e:	1f14                	.insn	2, 0x1f14
    1a80:	7b36                	.insn	2, 0x7b36
    1a82:	0009                	.insn	2, 0x0009
    1a84:	0300                	.insn	2, 0x0300
    1a86:	bc91                	.insn	2, 0xbc91
    1a88:	027f 02ff 0000 1f15 	.insn	10, 0x70381f15000002ff027f
    1a90:	7038 
    1a92:	0008                	.insn	2, 0x0008
    1a94:	0300                	.insn	2, 0x0300
    1a96:	b891                	.insn	2, 0xb891
    1a98:	017f 0f7b 0000 1f17 	.insn	10, 0xfb111f1700000f7b017f
    1aa0:	fb11 
    1aa2:	02000003          	lb	zero,32(zero) # 20 <__start-0x7fffffe0>
    1aa6:	6891                	.insn	2, 0x6891
    1aa8:	c801                	.insn	2, 0xc801
    1aaa:	0008                	.insn	2, 0x0008
    1aac:	1800                	.insn	2, 0x1800
    1aae:	111f 00b9 0000      	.insn	6, 0x00b9111f
    1ab4:	9102                	.insn	2, 0x9102
    1ab6:	04ff0163          	beq	t5,a5,1af8 <__start-0x7fffe508>
    1aba:	0000                	.insn	2, 0x
    1abc:	1f19                	.insn	2, 0x1f19
    1abe:	0d14                	.insn	2, 0x0d14
    1ac0:	0001                	.insn	2, 0x0001
    1ac2:	0200                	.insn	2, 0x0200
    1ac4:	6c91                	.insn	2, 0x6c91
    1ac6:	a001                	.insn	2, 0xa001
    1ac8:	0006                	.insn	2, 0x0006
    1aca:	1a00                	.insn	2, 0x1a00
    1acc:	151f 0123 0000      	.insn	6, 0x0123151f
    1ad2:	9102                	.insn	2, 0x9102
    1ad4:	0764                	.insn	2, 0x0764
    1ad6:	3f3c                	.insn	2, 0x3f3c
    1ad8:	8000                	.insn	2, 0x8000
    1ada:	0074                	.insn	2, 0x0074
    1adc:	0000                	.insn	2, 0x
    1ade:	0944                	.insn	2, 0x0944
    1ae0:	0000                	.insn	2, 0x
    1ae2:	6401                	.insn	2, 0x6401
    1ae4:	0002                	.insn	2, 0x0002
    1ae6:	7800                	.insn	2, 0x7800
    1ae8:	151f 0467 0000      	.insn	6, 0x0467151f
    1aee:	9102                	.insn	2, 0x9102
    1af0:	0058                	.insn	2, 0x0058
    1af2:	003fd407          	.insn	4, 0x003fd407
    1af6:	ec80                	.insn	2, 0xec80
    1af8:	0000                	.insn	2, 0x
    1afa:	6100                	.insn	2, 0x6100
    1afc:	0009                	.insn	2, 0x0009
    1afe:	0100                	.insn	2, 0x0100
    1b00:	0238                	.insn	2, 0x0238
    1b02:	0000                	.insn	2, 0x
    1b04:	1f79                	.insn	2, 0x1f79
    1b06:	3b15                	.insn	2, 0x3b15
    1b08:	0002                	.insn	2, 0x0002
    1b0a:	0200                	.insn	2, 0x0200
    1b0c:	5491                	.insn	2, 0x5491
    1b0e:	0800                	.insn	2, 0x0800
    1b10:	40c4                	.insn	2, 0x40c4
    1b12:	8000                	.insn	2, 0x8000
    1b14:	007c                	.insn	2, 0x007c
    1b16:	0000                	.insn	2, 0x
    1b18:	3801                	.insn	2, 0x3801
    1b1a:	0002                	.insn	2, 0x0002
    1b1c:	7f00                	.insn	2, 0x7f00
    1b1e:	151f 023b 0000      	.insn	6, 0x023b151f
    1b24:	9102                	.insn	2, 0x9102
    1b26:	005c                	.insn	2, 0x005c
    1b28:	0300                	.insn	2, 0x0300
    1b2a:	00ca                	.insn	2, 0x00ca
    1b2c:	0000                	.insn	2, 0x
    1b2e:	960c                	.insn	2, 0x960c
    1b30:	0009                	.insn	2, 0x0009
    1b32:	9800                	.insn	2, 0x9800
    1b34:	101e                	.insn	2, 0x101e
    1b36:	010d                	.insn	2, 0x010d
    1b38:	0000                	.insn	2, 0x
    1b3a:	3a38                	.insn	2, 0x3a38
    1b3c:	8000                	.insn	2, 0x8000
    1b3e:	0364                	.insn	2, 0x0364
    1b40:	0000                	.insn	2, 0x
    1b42:	9c01                	.insn	2, 0x9c01
    1b44:	0a4a                	.insn	2, 0x0a4a
    1b46:	0000                	.insn	2, 0x
    1b48:	0e02                	.insn	2, 0x0e02
    1b4a:	000d                	.insn	2, 0x000d
    1b4c:	9800                	.insn	2, 0x9800
    1b4e:	311e                	.insn	2, 0x311e
    1b50:	0251                	.insn	2, 0x0251
    1b52:	0000                	.insn	2, 0x
    1b54:	9102                	.insn	2, 0x9102
    1b56:	024c                	.insn	2, 0x024c
    1b58:	0fd2                	.insn	2, 0x0fd2
    1b5a:	0000                	.insn	2, 0x
    1b5c:	1e99                	.insn	2, 0x1e99
    1b5e:	2330                	.insn	2, 0x2330
    1b60:	0001                	.insn	2, 0x0001
    1b62:	0200                	.insn	2, 0x0200
    1b64:	4891                	.insn	2, 0x4891
    1b66:	cd02                	.insn	2, 0xcd02
    1b68:	000d                	.insn	2, 0x000d
    1b6a:	9a00                	.insn	2, 0x9a00
    1b6c:	2d1e                	.insn	2, 0x2d1e
    1b6e:	00ca                	.insn	2, 0x00ca
    1b70:	0000                	.insn	2, 0x
    1b72:	9102                	.insn	2, 0x9102
    1b74:	0244                	.insn	2, 0x0244
    1b76:	0cdf 0000 1e9b      	.insn	6, 0x1e9b00000cdf
    1b7c:	0632                	.insn	2, 0x0632
    1b7e:	02000003          	lb	zero,32(zero) # 20 <__start-0x7fffffe0>
    1b82:	4091                	.insn	2, 0x4091
    1b84:	9202                	.insn	2, 0x9202
    1b86:	000c                	.insn	2, 0x000c
    1b88:	9c00                	.insn	2, 0x9c00
    1b8a:	2f1e                	.insn	2, 0x2f1e
    1b8c:	0000097b          	.insn	4, 0x097b
    1b90:	7fbc9103          	lh	sp,2043(s9)
    1b94:	7b01                	.insn	2, 0x7b01
    1b96:	9e00000f          	.insn	4, 0x9e00000f
    1b9a:	111e                	.insn	2, 0x111e
    1b9c:	000003fb          	.insn	4, 0x03fb
    1ba0:	9102                	.insn	2, 0x9102
    1ba2:	0168                	.insn	2, 0x0168
    1ba4:	04ff 0000 1e9f 0d14 	.insn	10, 0x00010d141e9f000004ff
    1bac:	0001 
    1bae:	0200                	.insn	2, 0x0200
    1bb0:	6c91                	.insn	2, 0x6c91
    1bb2:	c801                	.insn	2, 0xc801
    1bb4:	0008                	.insn	2, 0x0008
    1bb6:	a000                	.insn	2, 0xa000
    1bb8:	111e                	.insn	2, 0x111e
    1bba:	00b9                	.insn	2, 0x00b9
    1bbc:	0000                	.insn	2, 0x
    1bbe:	9102                	.insn	2, 0x9102
    1bc0:	3bdc0767          	jalr	a4,957(s8) # 39b51 <__start-0x7ffc64af>
    1bc4:	8000                	.insn	2, 0x8000
    1bc6:	0074                	.insn	2, 0x0074
    1bc8:	0000                	.insn	2, 0x
    1bca:	0a30                	.insn	2, 0x0a30
    1bcc:	0000                	.insn	2, 0x
    1bce:	6401                	.insn	2, 0x6401
    1bd0:	0002                	.insn	2, 0x0002
    1bd2:	e500                	.insn	2, 0xe500
    1bd4:	111e                	.insn	2, 0x111e
    1bd6:	00000467          	jalr	s0,0(zero) # 0 <__start-0x80000000>
    1bda:	9102                	.insn	2, 0x9102
    1bdc:	0060                	.insn	2, 0x0060
    1bde:	7408                	.insn	2, 0x7408
    1be0:	003c                	.insn	2, 0x003c
    1be2:	ec80                	.insn	2, 0xec80
    1be4:	0000                	.insn	2, 0x
    1be6:	0100                	.insn	2, 0x0100
    1be8:	0238                	.insn	2, 0x0238
    1bea:	0000                	.insn	2, 0x
    1bec:	1ee6                	.insn	2, 0x1ee6
    1bee:	3b11                	.insn	2, 0x3b11
    1bf0:	0002                	.insn	2, 0x0002
    1bf2:	0200                	.insn	2, 0x0200
    1bf4:	5c91                	.insn	2, 0x5c91
    1bf6:	0000                	.insn	2, 0x
    1bf8:	600e                	.insn	2, 0x600e
    1bfa:	2500000b          	.insn	4, 0x2500000b
    1bfe:	101e                	.insn	2, 0x101e
    1c00:	010d                	.insn	2, 0x010d
    1c02:	0000                	.insn	2, 0x
    1c04:	3814                	.insn	2, 0x3814
    1c06:	8000                	.insn	2, 0x8000
    1c08:	0224                	.insn	2, 0x0224
    1c0a:	0000                	.insn	2, 0x
    1c0c:	9c01                	.insn	2, 0x9c01
    1c0e:	0add                	.insn	2, 0x0add
    1c10:	0000                	.insn	2, 0x
    1c12:	2602                	.insn	2, 0x2602
    1c14:	0010                	.insn	2, 0x0010
    1c16:	2500                	.insn	2, 0x2500
    1c18:	341e                	.insn	2, 0x341e
    1c1a:	00000123          	sb	zero,2(zero) # 2 <__start-0x7ffffffe>
    1c1e:	9102                	.insn	2, 0x9102
    1c20:	025c                	.insn	2, 0x025c
    1c22:	0a15                	.insn	2, 0x0a15
    1c24:	0000                	.insn	2, 0x
    1c26:	1e26                	.insn	2, 0x1e26
    1c28:	ca31                	.insn	2, 0xca31
    1c2a:	0000                	.insn	2, 0x
    1c2c:	0200                	.insn	2, 0x0200
    1c2e:	5891                	.insn	2, 0x5891
    1c30:	3102                	.insn	2, 0x3102
    1c32:	0008                	.insn	2, 0x0008
    1c34:	2700                	.insn	2, 0x2700
    1c36:	311e                	.insn	2, 0x311e
    1c38:	00ca                	.insn	2, 0x00ca
    1c3a:	0000                	.insn	2, 0x
    1c3c:	9102                	.insn	2, 0x9102
    1c3e:	0254                	.insn	2, 0x0254
    1c40:	0de8                	.insn	2, 0x0de8
    1c42:	0000                	.insn	2, 0x
    1c44:	1e28                	.insn	2, 0x1e28
    1c46:	00097b33          	and	s6,s2,zero
    1c4a:	0200                	.insn	2, 0x0200
    1c4c:	5091                	.insn	2, 0x5091
    1c4e:	8802                	.insn	2, 0x8802
    1c50:	000e                	.insn	2, 0x000e
    1c52:	2900                	.insn	2, 0x2900
    1c54:	331e                	.insn	2, 0x331e
    1c56:	0139                	.insn	2, 0x0139
    1c58:	0000                	.insn	2, 0x
    1c5a:	9102                	.insn	2, 0x9102
    1c5c:	014c                	.insn	2, 0x014c
    1c5e:	04ff 0000 1e2b 0d14 	.insn	10, 0x00010d141e2b000004ff
    1c66:	0001 
    1c68:	0200                	.insn	2, 0x0200
    1c6a:	6c91                	.insn	2, 0x6c91
    1c6c:	a901                	.insn	2, 0xa901
    1c6e:	000e                	.insn	2, 0x000e
    1c70:	2b00                	.insn	2, 0x2b00
    1c72:	1d1e                	.insn	2, 0x1d1e
    1c74:	010d                	.insn	2, 0x010d
    1c76:	0000                	.insn	2, 0x
    1c78:	9102                	.insn	2, 0x9102
    1c7a:	0164                	.insn	2, 0x0164
    1c7c:	0d6a                	.insn	2, 0x0d6a
    1c7e:	0000                	.insn	2, 0x
    1c80:	0d2e1e2b          	.insn	4, 0x0d2e1e2b
    1c84:	0001                	.insn	2, 0x0001
    1c86:	0200                	.insn	2, 0x0200
    1c88:	6891                	.insn	2, 0x6891
    1c8a:	0e00                	.insn	2, 0x0e00
    1c8c:	00000b83          	lb	s7,0(zero) # 0 <__start-0x80000000>
    1c90:	1dbe                	.insn	2, 0x1dbe
    1c92:	ca0e                	.insn	2, 0xca0e
    1c94:	0000                	.insn	2, 0x
    1c96:	5800                	.insn	2, 0x5800
    1c98:	0036                	.insn	2, 0x0036
    1c9a:	bc80                	.insn	2, 0xbc80
    1c9c:	0001                	.insn	2, 0x0001
    1c9e:	0100                	.insn	2, 0x0100
    1ca0:	529c                	.insn	2, 0x529c
    1ca2:	0200000b          	.insn	4, 0x0200000b
    1ca6:	1026                	.insn	2, 0x1026
    1ca8:	0000                	.insn	2, 0x
    1caa:	1dbe                	.insn	2, 0x1dbe
    1cac:	00012333          	slt	t1,sp,zero
    1cb0:	0200                	.insn	2, 0x0200
    1cb2:	5c91                	.insn	2, 0x5c91
    1cb4:	b802                	.insn	2, 0xb802
    1cb6:	0009                	.insn	2, 0x0009
    1cb8:	bf00                	.insn	2, 0xbf00
    1cba:	321d                	.insn	2, 0x321d
    1cbc:	010d                	.insn	2, 0x010d
    1cbe:	0000                	.insn	2, 0x
    1cc0:	9102                	.insn	2, 0x9102
    1cc2:	0258                	.insn	2, 0x0258
    1cc4:	0e88                	.insn	2, 0x0e88
    1cc6:	0000                	.insn	2, 0x
    1cc8:	1dc0                	.insn	2, 0x1dc0
    1cca:	3932                	.insn	2, 0x3932
    1ccc:	0001                	.insn	2, 0x0001
    1cce:	0200                	.insn	2, 0x0200
    1cd0:	5491                	.insn	2, 0x5491
    1cd2:	3001                	.insn	2, 0x3001
    1cd4:	000c                	.insn	2, 0x000c
    1cd6:	c200                	.insn	2, 0xc200
    1cd8:	121d                	.insn	2, 0x121d
    1cda:	00ca                	.insn	2, 0x00ca
    1cdc:	0000                	.insn	2, 0x
    1cde:	9102                	.insn	2, 0x9102
    1ce0:	0164                	.insn	2, 0x0164
    1ce2:	0ea9                	.insn	2, 0x0ea9
    1ce4:	0000                	.insn	2, 0x
    1ce6:	0d141dc3          	.insn	4, 0x0d141dc3
    1cea:	0001                	.insn	2, 0x0001
    1cec:	0200                	.insn	2, 0x0200
    1cee:	6891                	.insn	2, 0x6891
    1cf0:	6a01                	.insn	2, 0x6a01
    1cf2:	000d                	.insn	2, 0x000d
    1cf4:	c300                	.insn	2, 0xc300
    1cf6:	251d                	.insn	2, 0x251d
    1cf8:	010d                	.insn	2, 0x010d
    1cfa:	0000                	.insn	2, 0x
    1cfc:	9102                	.insn	2, 0x9102
    1cfe:	006c                	.insn	2, 0x006c
    1d00:	e70c                	.insn	2, 0xe70c
    1d02:	000c                	.insn	2, 0x000c
    1d04:	9100                	.insn	2, 0x9100
    1d06:	0c1d                	.insn	2, 0x0c1d
    1d08:	0139                	.insn	2, 0x0139
    1d0a:	0000                	.insn	2, 0x
    1d0c:	3600                	.insn	2, 0x3600
    1d0e:	8000                	.insn	2, 0x8000
    1d10:	0058                	.insn	2, 0x0058
    1d12:	0000                	.insn	2, 0x
    1d14:	9c01                	.insn	2, 0x9c01
    1d16:	0b7c                	.insn	2, 0x0b7c
    1d18:	0000                	.insn	2, 0x
    1d1a:	fe01                	.insn	2, 0xfe01
    1d1c:	0004                	.insn	2, 0x0004
    1d1e:	9300                	.insn	2, 0x9300
    1d20:	101d                	.insn	2, 0x101d
    1d22:	0139                	.insn	2, 0x0139
    1d24:	0000                	.insn	2, 0x
    1d26:	9102                	.insn	2, 0x9102
    1d28:	006c                	.insn	2, 0x006c
    1d2a:	280c                	.insn	2, 0x280c
    1d2c:	7300000f          	.insn	4, 0x7300000f
    1d30:	1219                	.insn	2, 0x1219
    1d32:	0251                	.insn	2, 0x0251
    1d34:	0000                	.insn	2, 0x
    1d36:	35bc                	.insn	2, 0x35bc
    1d38:	8000                	.insn	2, 0x8000
    1d3a:	0044                	.insn	2, 0x0044
    1d3c:	0000                	.insn	2, 0x
    1d3e:	9c01                	.insn	2, 0x9c01
    1d40:	0bb5                	.insn	2, 0x0bb5
    1d42:	0000                	.insn	2, 0x
    1d44:	f302                	.insn	2, 0xf302
    1d46:	73000007          	.insn	4, 0x73000007
    1d4a:	3f19                	.insn	2, 0x3f19
    1d4c:	010d                	.insn	2, 0x010d
    1d4e:	0000                	.insn	2, 0x
    1d50:	9102                	.insn	2, 0x9102
    1d52:	015c                	.insn	2, 0x015c
    1d54:	04ff 0000 1975 5116 	.insn	10, 0x000251161975000004ff
    1d5c:	0002 
    1d5e:	0200                	.insn	2, 0x0200
    1d60:	6c91                	.insn	2, 0x6c91
    1d62:	0c00                	.insn	2, 0x0c00
    1d64:	0eb9                	.insn	2, 0x0eb9
    1d66:	0000                	.insn	2, 0x
    1d68:	1950                	.insn	2, 0x1950
    1d6a:	5116                	.insn	2, 0x5116
    1d6c:	0002                	.insn	2, 0x0002
    1d6e:	8800                	.insn	2, 0x8800
    1d70:	0035                	.insn	2, 0x0035
    1d72:	3480                	.insn	2, 0x3480
    1d74:	0000                	.insn	2, 0x
    1d76:	0100                	.insn	2, 0x0100
    1d78:	df9c                	.insn	2, 0xdf9c
    1d7a:	0100000b          	.insn	4, 0x0100000b
    1d7e:	04ff 0000 1952 511a 	.insn	10, 0x0002511a1952000004ff
    1d86:	0002 
    1d88:	0200                	.insn	2, 0x0200
    1d8a:	6c91                	.insn	2, 0x6c91
    1d8c:	1900                	.insn	2, 0x1900
    1d8e:	00000c67          	jalr	s8,0(zero) # 0 <__start-0x80000000>
    1d92:	1938                	.insn	2, 0x1938
    1d94:	352c                	.insn	2, 0x352c
    1d96:	8000                	.insn	2, 0x8000
    1d98:	005c                	.insn	2, 0x005c
    1d9a:	0000                	.insn	2, 0x
    1d9c:	9c01                	.insn	2, 0x9c01
    1d9e:	f019                	.insn	2, 0xf019
    1da0:	9b00000f          	.insn	4, 0x9b00000f
    1da4:	00350817          	auipc	a6,0x350
    1da8:	2480                	.insn	2, 0x2480
    1daa:	0000                	.insn	2, 0x
    1dac:	0100                	.insn	2, 0x0100
    1dae:	149c                	.insn	2, 0x149c
    1db0:	00000a4f          	.insn	4, 0x0a4f
    1db4:	5c0d177b          	.insn	4, 0x5c0d177b
    1db8:	0034                	.insn	2, 0x0034
    1dba:	ac80                	.insn	2, 0xac80
    1dbc:	0000                	.insn	2, 0x
    1dbe:	0100                	.insn	2, 0x0100
    1dc0:	279c                	.insn	2, 0x279c
    1dc2:	000c                	.insn	2, 0x000c
    1dc4:	0100                	.insn	2, 0x0100
    1dc6:	081a                	.insn	2, 0x081a
    1dc8:	0000                	.insn	2, 0x
    1dca:	177d                	.insn	2, 0x177d
    1dcc:	2311                	.insn	2, 0x2311
    1dce:	0001                	.insn	2, 0x0001
    1dd0:	0200                	.insn	2, 0x0200
    1dd2:	6c91                	.insn	2, 0x6c91
    1dd4:	1400                	.insn	2, 0x1400
    1dd6:	00000b77          	.insn	4, 0x0b77
    1dda:	1674                	.insn	2, 0x1674
    1ddc:	3808                	.insn	2, 0x3808
    1dde:	0034                	.insn	2, 0x0034
    1de0:	2480                	.insn	2, 0x2480
    1de2:	0000                	.insn	2, 0x
    1de4:	0100                	.insn	2, 0x0100
    1de6:	4d9c                	.insn	2, 0x4d9c
    1de8:	000c                	.insn	2, 0x000c
    1dea:	0200                	.insn	2, 0x0200
    1dec:	0d96                	.insn	2, 0x0d96
    1dee:	0000                	.insn	2, 0x
    1df0:	1674                	.insn	2, 0x1674
    1df2:	8408                	.insn	2, 0x8408
    1df4:	0000                	.insn	2, 0x
    1df6:	0200                	.insn	2, 0x0200
    1df8:	6c91                	.insn	2, 0x6c91
    1dfa:	1a00                	.insn	2, 0x1a00
    1dfc:	0000068f          	.insn	4, 0x068f
    1e00:	340815e3          	bne	a6,zero,294a <__start-0x7fffd6b6>
    1e04:	8000                	.insn	2, 0x8000
    1e06:	0030                	.insn	2, 0x0030
    1e08:	0000                	.insn	2, 0x
    1e0a:	9c01                	.insn	2, 0x9c01
    1e0c:	1e0e                	.insn	2, 0x1e0e
    1e0e:	9e000007          	.insn	4, 0x9e000007
    1e12:	0c15                	.insn	2, 0x0c15
    1e14:	010d                	.insn	2, 0x010d
    1e16:	0000                	.insn	2, 0x
    1e18:	32fc                	.insn	2, 0x32fc
    1e1a:	8000                	.insn	2, 0x8000
    1e1c:	010c                	.insn	2, 0x010c
    1e1e:	0000                	.insn	2, 0x
    1e20:	9c01                	.insn	2, 0x9c01
    1e22:	0cce                	.insn	2, 0x0cce
    1e24:	0000                	.insn	2, 0x
    1e26:	b602                	.insn	2, 0xb602
    1e28:	000c                	.insn	2, 0x000c
    1e2a:	9e00                	.insn	2, 0x9e00
    1e2c:	3415                	.insn	2, 0x3415
    1e2e:	00000cd3          	.insn	4, 0x0cd3
    1e32:	9102                	.insn	2, 0x9102
    1e34:	025c                	.insn	2, 0x025c
    1e36:	00000e87          	.insn	4, 0x0e87
    1e3a:	159f dd35 000c      	.insn	6, 0x000cdd35159f
    1e40:	0200                	.insn	2, 0x0200
    1e42:	5891                	.insn	2, 0x5891
    1e44:	ff01                	.insn	2, 0xff01
    1e46:	0004                	.insn	2, 0x0004
    1e48:	a100                	.insn	2, 0xa100
    1e4a:	1015                	.insn	2, 0x1015
    1e4c:	010d                	.insn	2, 0x010d
    1e4e:	0000                	.insn	2, 0x
    1e50:	9102                	.insn	2, 0x9102
    1e52:	086c                	.insn	2, 0x086c
    1e54:	332c                	.insn	2, 0x332c
    1e56:	8000                	.insn	2, 0x8000
    1e58:	00a0                	.insn	2, 0x00a0
    1e5a:	0000                	.insn	2, 0x
    1e5c:	d201                	.insn	2, 0xd201
    1e5e:	000a                	.insn	2, 0x000a
    1e60:	ab00                	.insn	2, 0xab00
    1e62:	1a15                	.insn	2, 0x1a15
    1e64:	014a                	.insn	2, 0x014a
    1e66:	0000                	.insn	2, 0x
    1e68:	9102                	.insn	2, 0x9102
    1e6a:	0168                	.insn	2, 0x0168
    1e6c:	09d8                	.insn	2, 0x09d8
    1e6e:	0000                	.insn	2, 0x
    1e70:	15ac                	.insn	2, 0x15ac
    1e72:	4a1a                	.insn	2, 0x4a1a
    1e74:	0001                	.insn	2, 0x0001
    1e76:	0200                	.insn	2, 0x0200
    1e78:	6491                	.insn	2, 0x6491
    1e7a:	0000                	.insn	2, 0x
    1e7c:	00033a03          	.insn	4, 0x00033a03
    1e80:	0500                	.insn	2, 0x0500
    1e82:	0cce                	.insn	2, 0x0cce
    1e84:	0000                	.insn	2, 0x
    1e86:	00013903          	.insn	4, 0x00013903
    1e8a:	0500                	.insn	2, 0x0500
    1e8c:	0cd8                	.insn	2, 0x0cd8
    1e8e:	0000                	.insn	2, 0x
    1e90:	00077413          	andi	s0,a4,0
    1e94:	9200                	.insn	2, 0x9200
    1e96:	0615                	.insn	2, 0x0615
    1e98:	32b4                	.insn	2, 0x32b4
    1e9a:	8000                	.insn	2, 0x8000
    1e9c:	0048                	.insn	2, 0x0048
    1e9e:	0000                	.insn	2, 0x
    1ea0:	9c01                	.insn	2, 0x9c01
    1ea2:	0d08                	.insn	2, 0x0d08
    1ea4:	0000                	.insn	2, 0x
    1ea6:	b602                	.insn	2, 0xb602
    1ea8:	000c                	.insn	2, 0x000c
    1eaa:	9200                	.insn	2, 0x9200
    1eac:	3615                	.insn	2, 0x3615
    1eae:	00000cd3          	.insn	4, 0x0cd3
    1eb2:	9102                	.insn	2, 0x9102
    1eb4:	006c                	.insn	2, 0x006c
    1eb6:	0008de13          	srli	t3,a7,0x0
    1eba:	8200                	.insn	2, 0x8200
    1ebc:	0615                	.insn	2, 0x0615
    1ebe:	3230                	.insn	2, 0x3230
    1ec0:	8000                	.insn	2, 0x8000
    1ec2:	0084                	.insn	2, 0x0084
    1ec4:	0000                	.insn	2, 0x
    1ec6:	9c01                	.insn	2, 0x9c01
    1ec8:	0d2e                	.insn	2, 0x0d2e
    1eca:	0000                	.insn	2, 0x
    1ecc:	b602                	.insn	2, 0xb602
    1ece:	000c                	.insn	2, 0x000c
    1ed0:	8200                	.insn	2, 0x8200
    1ed2:	2e15                	.insn	2, 0x2e15
    1ed4:	00000cd3          	.insn	4, 0x0cd3
    1ed8:	9102                	.insn	2, 0x9102
    1eda:	006c                	.insn	2, 0x006c
    1edc:	000b2413          	slti	s0,s6,0
    1ee0:	3a00                	.insn	2, 0x3a00
    1ee2:	0615                	.insn	2, 0x0615
    1ee4:	2fcc                	.insn	2, 0x2fcc
    1ee6:	8000                	.insn	2, 0x8000
    1ee8:	0264                	.insn	2, 0x0264
    1eea:	0000                	.insn	2, 0x
    1eec:	9c01                	.insn	2, 0x9c01
    1eee:	0dc5                	.insn	2, 0x0dc5
    1ef0:	0000                	.insn	2, 0x
    1ef2:	d302                	.insn	2, 0xd302
    1ef4:	000e                	.insn	2, 0x000e
    1ef6:	3a00                	.insn	2, 0x3a00
    1ef8:	3615                	.insn	2, 0x3615
    1efa:	0236                	.insn	2, 0x0236
    1efc:	0000                	.insn	2, 0x
    1efe:	9102                	.insn	2, 0x9102
    1f00:	025c                	.insn	2, 0x025c
    1f02:	0181                	.insn	2, 0x0181
    1f04:	0000                	.insn	2, 0x
    1f06:	4a3a153b          	.insn	4, 0x4a3a153b
    1f0a:	0001                	.insn	2, 0x0001
    1f0c:	0200                	.insn	2, 0x0200
    1f0e:	5891                	.insn	2, 0x5891
    1f10:	a901                	.insn	2, 0xa901
    1f12:	0009                	.insn	2, 0x0009
    1f14:	3d00                	.insn	2, 0x3d00
    1f16:	0d15                	.insn	2, 0x0d15
    1f18:	000003fb          	.insn	4, 0x03fb
    1f1c:	9102                	.insn	2, 0x9102
    1f1e:	076c                	.insn	2, 0x076c
    1f20:	3004                	.insn	2, 0x3004
    1f22:	8000                	.insn	2, 0x8000
    1f24:	0070                	.insn	2, 0x0070
    1f26:	0000                	.insn	2, 0x
    1f28:	0d8e                	.insn	2, 0x0d8e
    1f2a:	0000                	.insn	2, 0x
    1f2c:	6401                	.insn	2, 0x6401
    1f2e:	0002                	.insn	2, 0x0002
    1f30:	4f00                	.insn	2, 0x4f00
    1f32:	0515                	.insn	2, 0x0515
    1f34:	00000467          	jalr	s0,0(zero) # 0 <__start-0x80000000>
    1f38:	9102                	.insn	2, 0x9102
    1f3a:	0068                	.insn	2, 0x0068
    1f3c:	00307407          	.insn	4, 0x00307407
    1f40:	7480                	.insn	2, 0x7480
    1f42:	0000                	.insn	2, 0x
    1f44:	ab00                	.insn	2, 0xab00
    1f46:	000d                	.insn	2, 0x000d
    1f48:	0100                	.insn	2, 0x0100
    1f4a:	0264                	.insn	2, 0x0264
    1f4c:	0000                	.insn	2, 0x
    1f4e:	1562                	.insn	2, 0x1562
    1f50:	6705                	.insn	2, 0x6705
    1f52:	0004                	.insn	2, 0x0004
    1f54:	0200                	.insn	2, 0x0200
    1f56:	6491                	.insn	2, 0x6491
    1f58:	0800                	.insn	2, 0x0800
    1f5a:	310c                	.insn	2, 0x310c
    1f5c:	8000                	.insn	2, 0x8000
    1f5e:	00ec                	.insn	2, 0x00ec
    1f60:	0000                	.insn	2, 0x
    1f62:	3801                	.insn	2, 0x3801
    1f64:	0002                	.insn	2, 0x0002
    1f66:	6300                	.insn	2, 0x6300
    1f68:	0515                	.insn	2, 0x0515
    1f6a:	0000023b          	.insn	4, 0x023b
    1f6e:	9102                	.insn	2, 0x9102
    1f70:	0060                	.insn	2, 0x0060
    1f72:	0c00                	.insn	2, 0x0c00
    1f74:	06e5                	.insn	2, 0x06e5
    1f76:	0000                	.insn	2, 0x
    1f78:	14dd                	.insn	2, 0x14dd
    1f7a:	0d0c                	.insn	2, 0x0d0c
    1f7c:	0001                	.insn	2, 0x0001
    1f7e:	d800                	.insn	2, 0xd800
    1f80:	002c                	.insn	2, 0x002c
    1f82:	f480                	.insn	2, 0xf480
    1f84:	0002                	.insn	2, 0x0002
    1f86:	0100                	.insn	2, 0x0100
    1f88:	7d9c                	.insn	2, 0x7d9c
    1f8a:	000e                	.insn	2, 0x000e
    1f8c:	0200                	.insn	2, 0x0200
    1f8e:	0870                	.insn	2, 0x0870
    1f90:	0000                	.insn	2, 0x
    1f92:	14dd                	.insn	2, 0x14dd
    1f94:	000e823b          	.insn	4, 0x000e823b
    1f98:	0200                	.insn	2, 0x0200
    1f9a:	4c91                	.insn	2, 0x4c91
    1f9c:	a901                	.insn	2, 0xa901
    1f9e:	0009                	.insn	2, 0x0009
    1fa0:	df00                	.insn	2, 0xdf00
    1fa2:	0d14                	.insn	2, 0x0d14
    1fa4:	000003fb          	.insn	4, 0x03fb
    1fa8:	9102                	.insn	2, 0x9102
    1faa:	0168                	.insn	2, 0x0168
    1fac:	04ff 0000 14e0 0d10 	.insn	10, 0x00010d1014e0000004ff
    1fb4:	0001 
    1fb6:	0200                	.insn	2, 0x0200
    1fb8:	6c91                	.insn	2, 0x6c91
    1fba:	002cfc07          	.insn	4, 0x002cfc07
    1fbe:	7480                	.insn	2, 0x7480
    1fc0:	0000                	.insn	2, 0x
    1fc2:	2900                	.insn	2, 0x2900
    1fc4:	000e                	.insn	2, 0x000e
    1fc6:	0100                	.insn	2, 0x0100
    1fc8:	0264                	.insn	2, 0x0264
    1fca:	0000                	.insn	2, 0x
    1fcc:	14f6                	.insn	2, 0x14f6
    1fce:	6705                	.insn	2, 0x6705
    1fd0:	0004                	.insn	2, 0x0004
    1fd2:	0200                	.insn	2, 0x0200
    1fd4:	6491                	.insn	2, 0x6491
    1fd6:	0700                	.insn	2, 0x0700
    1fd8:	2d7c                	.insn	2, 0x2d7c
    1fda:	8000                	.insn	2, 0x8000
    1fdc:	0074                	.insn	2, 0x0074
    1fde:	0000                	.insn	2, 0x
    1fe0:	0e46                	.insn	2, 0x0e46
    1fe2:	0000                	.insn	2, 0x
    1fe4:	6401                	.insn	2, 0x6401
    1fe6:	0002                	.insn	2, 0x0002
    1fe8:	fa00                	.insn	2, 0xfa00
    1fea:	0914                	.insn	2, 0x0914
    1fec:	00000467          	jalr	s0,0(zero) # 0 <__start-0x80000000>
    1ff0:	9102                	.insn	2, 0x9102
    1ff2:	005c                	.insn	2, 0x005c
    1ff4:	002e1407          	.insn	4, 0x002e1407
    1ff8:	ec80                	.insn	2, 0xec80
    1ffa:	0000                	.insn	2, 0x
    1ffc:	6300                	.insn	2, 0x6300
    1ffe:	000e                	.insn	2, 0x000e
    2000:	0100                	.insn	2, 0x0100
    2002:	0238                	.insn	2, 0x0238
    2004:	0000                	.insn	2, 0x
    2006:	3b0914fb          	.insn	4, 0x3b0914fb
    200a:	0002                	.insn	2, 0x0002
    200c:	0200                	.insn	2, 0x0200
    200e:	5891                	.insn	2, 0x5891
    2010:	0800                	.insn	2, 0x0800
    2012:	2f04                	.insn	2, 0x2f04
    2014:	8000                	.insn	2, 0x8000
    2016:	007c                	.insn	2, 0x007c
    2018:	0000                	.insn	2, 0x
    201a:	3801                	.insn	2, 0x3801
    201c:	0002                	.insn	2, 0x0002
    201e:	0f00                	.insn	2, 0x0f00
    2020:	0915                	.insn	2, 0x0915
    2022:	0000023b          	.insn	4, 0x023b
    2026:	9102                	.insn	2, 0x9102
    2028:	0060                	.insn	2, 0x0060
    202a:	0300                	.insn	2, 0x0300
    202c:	024c                	.insn	2, 0x024c
    202e:	0000                	.insn	2, 0x
    2030:	7d05                	.insn	2, 0x7d05
    2032:	000e                	.insn	2, 0x000e
    2034:	1500                	.insn	2, 0x1500
    2036:	0e68                	.insn	2, 0x0e68
    2038:	0000                	.insn	2, 0x
    203a:	1498                	.insn	2, 0x1498
    203c:	0406                	.insn	2, 0x0406
    203e:	002c                	.insn	2, 0x002c
    2040:	d480                	.insn	2, 0xd480
    2042:	0000                	.insn	2, 0x
    2044:	0100                	.insn	2, 0x0100
    2046:	e49c                	.insn	2, 0xe49c
    2048:	000e                	.insn	2, 0x000e
    204a:	0200                	.insn	2, 0x0200
    204c:	0870                	.insn	2, 0x0870
    204e:	0000                	.insn	2, 0x
    2050:	1498                	.insn	2, 0x1498
    2052:	00045d2f          	.insn	4, 0x00045d2f
    2056:	0200                	.insn	2, 0x0200
    2058:	5c91                	.insn	2, 0x5c91
    205a:	8102                	.insn	2, 0x8102
    205c:	0001                	.insn	2, 0x0001
    205e:	9900                	.insn	2, 0x9900
    2060:	3714                	.insn	2, 0x3714
    2062:	014a                	.insn	2, 0x014a
    2064:	0000                	.insn	2, 0x
    2066:	9102                	.insn	2, 0x9102
    2068:	0258                	.insn	2, 0x0258
    206a:	0e88                	.insn	2, 0x0e88
    206c:	0000                	.insn	2, 0x
    206e:	149a                	.insn	2, 0x149a
    2070:	00014a37          	lui	s4,0x14
    2074:	0200                	.insn	2, 0x0200
    2076:	5491                	.insn	2, 0x5491
    2078:	3808                	.insn	2, 0x3808
    207a:	002c                	.insn	2, 0x002c
    207c:	8080                	.insn	2, 0x8080
    207e:	0000                	.insn	2, 0x
    2080:	0100                	.insn	2, 0x0100
    2082:	0238                	.insn	2, 0x0238
    2084:	0000                	.insn	2, 0x
    2086:	14ae                	.insn	2, 0x14ae
    2088:	3b05                	.insn	2, 0x3b05
    208a:	0002                	.insn	2, 0x0002
    208c:	0200                	.insn	2, 0x0200
    208e:	6c91                	.insn	2, 0x6c91
    2090:	0000                	.insn	2, 0x
    2092:	8015                	.insn	2, 0x8015
    2094:	0004                	.insn	2, 0x0004
    2096:	7b00                	.insn	2, 0x7b00
    2098:	0614                	.insn	2, 0x0614
    209a:	2bb4                	.insn	2, 0x2bb4
    209c:	8000                	.insn	2, 0x8000
    209e:	0050                	.insn	2, 0x0050
    20a0:	0000                	.insn	2, 0x
    20a2:	9c01                	.insn	2, 0x9c01
    20a4:	0f19                	.insn	2, 0x0f19
    20a6:	0000                	.insn	2, 0x
    20a8:	7002                	.insn	2, 0x7002
    20aa:	0008                	.insn	2, 0x0008
    20ac:	7b00                	.insn	2, 0x7b00
    20ae:	2c14                	.insn	2, 0x2c14
    20b0:	00000467          	jalr	s0,0(zero) # 0 <__start-0x80000000>
    20b4:	9102                	.insn	2, 0x9102
    20b6:	026c                	.insn	2, 0x026c
    20b8:	0e88                	.insn	2, 0x0e88
    20ba:	0000                	.insn	2, 0x
    20bc:	147c                	.insn	2, 0x147c
    20be:	4a2e                	.insn	2, 0x4a2e
    20c0:	0001                	.insn	2, 0x0001
    20c2:	0200                	.insn	2, 0x0200
    20c4:	6891                	.insn	2, 0x6891
    20c6:	1500                	.insn	2, 0x1500
    20c8:	0d3a                	.insn	2, 0x0d3a
    20ca:	0000                	.insn	2, 0x
    20cc:	13c0                	.insn	2, 0x13c0
    20ce:	d00a                	.insn	2, 0xd00a
    20d0:	002a                	.insn	2, 0x002a
    20d2:	e480                	.insn	2, 0xe480
    20d4:	0000                	.insn	2, 0x
    20d6:	0100                	.insn	2, 0x0100
    20d8:	629c                	.insn	2, 0x629c
    20da:	0800000f          	fence	i,unknown
    20de:	2b04                	.insn	2, 0x2b04
    20e0:	8000                	.insn	2, 0x8000
    20e2:	0094                	.insn	2, 0x0094
    20e4:	0000                	.insn	2, 0x
    20e6:	9501                	.insn	2, 0x9501
    20e8:	000e                	.insn	2, 0x000e
    20ea:	fa00                	.insn	2, 0xfa00
    20ec:	01230d13          	addi	s10,t1,18
    20f0:	0000                	.insn	2, 0x
    20f2:	9102                	.insn	2, 0x9102
    20f4:	086c                	.insn	2, 0x086c
    20f6:	2b28                	.insn	2, 0x2b28
    20f8:	8000                	.insn	2, 0x8000
    20fa:	0070                	.insn	2, 0x0070
    20fc:	0000                	.insn	2, 0x
    20fe:	2501                	.insn	2, 0x2501
    2100:	0008                	.insn	2, 0x0008
    2102:	fa00                	.insn	2, 0xfa00
    2104:	04670d13          	addi	s10,a4,70
    2108:	0000                	.insn	2, 0x
    210a:	9102                	.insn	2, 0x9102
    210c:	0068                	.insn	2, 0x0068
    210e:	0000                	.insn	2, 0x
    2110:	1c0e                	.insn	2, 0x1c0e
    2112:	0009                	.insn	2, 0x0009
    2114:	3e00                	.insn	2, 0x3e00
    2116:	0c12                	.insn	2, 0x0c12
    2118:	010d                	.insn	2, 0x010d
    211a:	0000                	.insn	2, 0x
    211c:	27ac                	.insn	2, 0x27ac
    211e:	8000                	.insn	2, 0x8000
    2120:	0324                	.insn	2, 0x0324
    2122:	0000                	.insn	2, 0x
    2124:	9c01                	.insn	2, 0x9c01
    2126:	00001033          	sll	zero,zero,zero
    212a:	7b01                	.insn	2, 0x7b01
    212c:	4000000f          	.insn	4, 0x4000000f
    2130:	0d12                	.insn	2, 0x0d12
    2132:	000003fb          	.insn	4, 0x03fb
    2136:	9102                	.insn	2, 0x9102
    2138:	0160                	.insn	2, 0x0160
    213a:	0181                	.insn	2, 0x0181
    213c:	0000                	.insn	2, 0x
    213e:	1241                	.insn	2, 0x1241
    2140:	3910                	.insn	2, 0x3910
    2142:	0001                	.insn	2, 0x0001
    2144:	0200                	.insn	2, 0x0200
    2146:	5c91                	.insn	2, 0x5c91
    2148:	b501                	.insn	2, 0xb501
    214a:	000d                	.insn	2, 0x000d
    214c:	4200                	.insn	2, 0x4200
    214e:	1012                	.insn	2, 0x1012
    2150:	010d                	.insn	2, 0x010d
    2152:	0000                	.insn	2, 0x
    2154:	9102                	.insn	2, 0x9102
    2156:	086c                	.insn	2, 0x086c
    2158:	27cc                	.insn	2, 0x27cc
    215a:	8000                	.insn	2, 0x8000
    215c:	02d8                	.insn	2, 0x02d8
    215e:	0000                	.insn	2, 0x
    2160:	d201                	.insn	2, 0xd201
    2162:	000a                	.insn	2, 0x000a
    2164:	5700                	.insn	2, 0x5700
    2166:	1a12                	.insn	2, 0x1a12
    2168:	014a                	.insn	2, 0x014a
    216a:	0000                	.insn	2, 0x
    216c:	9102                	.insn	2, 0x9102
    216e:	0768                	.insn	2, 0x0768
    2170:	27f0                	.insn	2, 0x27f0
    2172:	8000                	.insn	2, 0x8000
    2174:	0040                	.insn	2, 0x0040
    2176:	0000                	.insn	2, 0x
    2178:	0fde                	.insn	2, 0x0fde
    217a:	0000                	.insn	2, 0x
    217c:	7601                	.insn	2, 0x7601
    217e:	000a                	.insn	2, 0x000a
    2180:	5f00                	.insn	2, 0x5f00
    2182:	0d12                	.insn	2, 0x0d12
    2184:	045d                	.insn	2, 0x045d
    2186:	0000                	.insn	2, 0x
    2188:	9102                	.insn	2, 0x9102
    218a:	0064                	.insn	2, 0x0064
    218c:	00289c07          	.insn	4, 0x00289c07
    2190:	7480                	.insn	2, 0x7480
    2192:	0000                	.insn	2, 0x
    2194:	fb00                	.insn	2, 0xfb00
    2196:	0100000f          	fence	w,unknown
    219a:	0264                	.insn	2, 0x0264
    219c:	0000                	.insn	2, 0x
    219e:	1294                	.insn	2, 0x1294
    21a0:	6715                	.insn	2, 0x6715
    21a2:	0004                	.insn	2, 0x0004
    21a4:	0200                	.insn	2, 0x0200
    21a6:	5891                	.insn	2, 0x5891
    21a8:	0700                	.insn	2, 0x0700
    21aa:	291c                	.insn	2, 0x291c
    21ac:	8000                	.insn	2, 0x8000
    21ae:	0074                	.insn	2, 0x0074
    21b0:	0000                	.insn	2, 0x
    21b2:	1018                	.insn	2, 0x1018
    21b4:	0000                	.insn	2, 0x
    21b6:	6401                	.insn	2, 0x6401
    21b8:	0002                	.insn	2, 0x0002
    21ba:	9a00                	.insn	2, 0x9a00
    21bc:	1912                	.insn	2, 0x1912
    21be:	00000467          	jalr	s0,0(zero) # 0 <__start-0x80000000>
    21c2:	9102                	.insn	2, 0x9102
    21c4:	0054                	.insn	2, 0x0054
    21c6:	b408                	.insn	2, 0xb408
    21c8:	0029                	.insn	2, 0x0029
    21ca:	ec80                	.insn	2, 0xec80
    21cc:	0000                	.insn	2, 0x
    21ce:	0100                	.insn	2, 0x0100
    21d0:	0238                	.insn	2, 0x0238
    21d2:	0000                	.insn	2, 0x
    21d4:	3b1512a3          	sh	a7,933(a0)
    21d8:	0002                	.insn	2, 0x0002
    21da:	0200                	.insn	2, 0x0200
    21dc:	5091                	.insn	2, 0x5091
    21de:	0000                	.insn	2, 0x
    21e0:	0e00                	.insn	2, 0x0e00
    21e2:	00000953          	.insn	4, 0x0953
    21e6:	11c2                	.insn	2, 0x11c2
    21e8:	0d0c                	.insn	2, 0x0d0c
    21ea:	0001                	.insn	2, 0x0001
    21ec:	2000                	.insn	2, 0x2000
    21ee:	8c800027          	.insn	4, 0x8c800027
    21f2:	0000                	.insn	2, 0x
    21f4:	0100                	.insn	2, 0x0100
    21f6:	6c9c                	.insn	2, 0x6c9c
    21f8:	0010                	.insn	2, 0x0010
    21fa:	0200                	.insn	2, 0x0200
    21fc:	0ef0                	.insn	2, 0x0ef0
    21fe:	0000                	.insn	2, 0x
    2200:	11c2                	.insn	2, 0x11c2
    2202:	392a                	.insn	2, 0x392a
    2204:	0001                	.insn	2, 0x0001
    2206:	0200                	.insn	2, 0x0200
    2208:	5c91                	.insn	2, 0x5c91
    220a:	e701                	.insn	2, 0xe701
    220c:	c400000b          	.insn	4, 0xc400000b
    2210:	1011                	.insn	2, 0x1011
    2212:	010d                	.insn	2, 0x010d
    2214:	0000                	.insn	2, 0x
    2216:	9102                	.insn	2, 0x9102
    2218:	006c                	.insn	2, 0x006c
    221a:	fd0c                	.insn	2, 0xfd0c
    221c:	000d                	.insn	2, 0x000d
    221e:	4c00                	.insn	2, 0x4c00
    2220:	0810                	.insn	2, 0x0810
    2222:	0000008b          	.insn	4, 0x008b
    2226:	26d4                	.insn	2, 0x26d4
    2228:	8000                	.insn	2, 0x8000
    222a:	004c                	.insn	2, 0x004c
    222c:	0000                	.insn	2, 0x
    222e:	9c01                	.insn	2, 0x9c01
    2230:	10a5                	.insn	2, 0x10a5
    2232:	0000                	.insn	2, 0x
    2234:	0102                	.insn	2, 0x0102
    2236:	000d                	.insn	2, 0x000d
    2238:	4c00                	.insn	2, 0x4c00
    223a:	2410                	.insn	2, 0x2410
    223c:	0251                	.insn	2, 0x0251
    223e:	0000                	.insn	2, 0x
    2240:	9102                	.insn	2, 0x9102
    2242:	015c                	.insn	2, 0x015c
    2244:	00000f7b          	.insn	4, 0x0f7b
    2248:	104e                	.insn	2, 0x104e
    224a:	fb0d                	.insn	2, 0xfb0d
    224c:	02000003          	lb	zero,32(zero) # 20 <__start-0x7fffffe0>
    2250:	6c91                	.insn	2, 0x6c91
    2252:	2700                	.insn	2, 0x2700
    2254:	00000743          	.insn	4, 0x0743
    2258:	4001                	.insn	2, 0x4001
    225a:	0d10                	.insn	2, 0x0d10
    225c:	00000123          	sb	zero,2(zero) # 2 <__start-0x7ffffffe>
    2260:	26a8                	.insn	2, 0x26a8
    2262:	8000                	.insn	2, 0x8000
    2264:	002c                	.insn	2, 0x002c
    2266:	0000                	.insn	2, 0x
    2268:	9c01                	.insn	2, 0x9c01
    226a:	fc0c                	.insn	2, 0xfc0c
    226c:	0009                	.insn	2, 0x0009
    226e:	1d00                	.insn	2, 0x1d00
    2270:	0c10                	.insn	2, 0x0c10
    2272:	0139                	.insn	2, 0x0139
    2274:	0000                	.insn	2, 0x
    2276:	2670                	.insn	2, 0x2670
    2278:	8000                	.insn	2, 0x8000
    227a:	0038                	.insn	2, 0x0038
    227c:	0000                	.insn	2, 0x
    227e:	9c01                	.insn	2, 0x9c01
    2280:	10f5                	.insn	2, 0x10f5
    2282:	0000                	.insn	2, 0x
    2284:	ff01                	.insn	2, 0xff01
    2286:	0004                	.insn	2, 0x0004
    2288:	1f00                	.insn	2, 0x1f00
    228a:	1010                	.insn	2, 0x1010
    228c:	0139                	.insn	2, 0x0139
    228e:	0000                	.insn	2, 0x
    2290:	9102                	.insn	2, 0x9102
    2292:	0168                	.insn	2, 0x0168
    2294:	06a0                	.insn	2, 0x06a0
    2296:	0000                	.insn	2, 0x
    2298:	1020                	.insn	2, 0x1020
    229a:	2311                	.insn	2, 0x2311
    229c:	0001                	.insn	2, 0x0001
    229e:	0200                	.insn	2, 0x0200
    22a0:	6c91                	.insn	2, 0x6c91
    22a2:	0c00                	.insn	2, 0x0c00
    22a4:	0cc0                	.insn	2, 0x0cc0
    22a6:	0000                	.insn	2, 0x
    22a8:	100a                	.insn	2, 0x100a
    22aa:	390c                	.insn	2, 0x390c
    22ac:	0001                	.insn	2, 0x0001
    22ae:	3c00                	.insn	2, 0x3c00
    22b0:	0026                	.insn	2, 0x0026
    22b2:	3480                	.insn	2, 0x3480
    22b4:	0000                	.insn	2, 0x
    22b6:	0100                	.insn	2, 0x0100
    22b8:	1f9c                	.insn	2, 0x1f9c
    22ba:	0011                	.insn	2, 0x0011
    22bc:	0100                	.insn	2, 0x0100
    22be:	00000e0b          	.insn	4, 0x0e0b
    22c2:	100c                	.insn	2, 0x100c
    22c4:	3910                	.insn	2, 0x3910
    22c6:	0001                	.insn	2, 0x0001
    22c8:	0200                	.insn	2, 0x0200
    22ca:	6c91                	.insn	2, 0x6c91
    22cc:	0e00                	.insn	2, 0x0e00
    22ce:	00000653          	.insn	4, 0x0653
    22d2:	0f74                	.insn	2, 0x0f74
    22d4:	0d0c                	.insn	2, 0x0d0c
    22d6:	0001                	.insn	2, 0x0001
    22d8:	d000                	.insn	2, 0xd000
    22da:	0022                	.insn	2, 0x0022
    22dc:	6c80                	.insn	2, 0x6c80
    22de:	01000003          	lb	zero,16(zero) # 10 <__start-0x7ffffff0>
    22e2:	e19c                	.insn	2, 0xe19c
    22e4:	0011                	.insn	2, 0x0011
    22e6:	0100                	.insn	2, 0x0100
    22e8:	00000f7b          	.insn	4, 0x0f7b
    22ec:	0f76                	.insn	2, 0x0f76
    22ee:	fb0d                	.insn	2, 0xfb0d
    22f0:	02000003          	lb	zero,32(zero) # 20 <__start-0x7fffffe0>
    22f4:	6c91                	.insn	2, 0x6c91
    22f6:	a901                	.insn	2, 0xa901
    22f8:	000e                	.insn	2, 0x000e
    22fa:	7700                	.insn	2, 0x7700
    22fc:	010d100f          	.insn	4, 0x010d100f
    2300:	0000                	.insn	2, 0x
    2302:	9102                	.insn	2, 0x9102
    2304:	0864                	.insn	2, 0x0864
    2306:	2300                	.insn	2, 0x2300
    2308:	8000                	.insn	2, 0x8000
    230a:	0300                	.insn	2, 0x0300
    230c:	0000                	.insn	2, 0x
    230e:	f301                	.insn	2, 0xf301
    2310:	86000007          	.insn	4, 0x86000007
    2314:	010d180f          	.insn	4, 0x010d180f
    2318:	0000                	.insn	2, 0x
    231a:	9102                	.insn	2, 0x9102
    231c:	0760                	.insn	2, 0x0760
    231e:	2348                	.insn	2, 0x2348
    2320:	8000                	.insn	2, 0x8000
    2322:	0074                	.insn	2, 0x0074
    2324:	0000                	.insn	2, 0x
    2326:	118c                	.insn	2, 0x118c
    2328:	0000                	.insn	2, 0x
    232a:	6401                	.insn	2, 0x6401
    232c:	0002                	.insn	2, 0x0002
    232e:	9c00                	.insn	2, 0x9c00
    2330:	0467190f          	.insn	4, 0x0467190f
    2334:	0000                	.insn	2, 0x
    2336:	9102                	.insn	2, 0x9102
    2338:	005c                	.insn	2, 0x005c
    233a:	0023bc07          	.insn	4, 0x0023bc07
    233e:	7480                	.insn	2, 0x7480
    2340:	0000                	.insn	2, 0x
    2342:	a900                	.insn	2, 0xa900
    2344:	0011                	.insn	2, 0x0011
    2346:	0100                	.insn	2, 0x0100
    2348:	0264                	.insn	2, 0x0264
    234a:	0000                	.insn	2, 0x
    234c:	0f9e                	.insn	2, 0x0f9e
    234e:	6719                	.insn	2, 0x6719
    2350:	0004                	.insn	2, 0x0004
    2352:	0200                	.insn	2, 0x0200
    2354:	5891                	.insn	2, 0x5891
    2356:	0700                	.insn	2, 0x0700
    2358:	2454                	.insn	2, 0x2454
    235a:	8000                	.insn	2, 0x8000
    235c:	00ec                	.insn	2, 0x00ec
    235e:	0000                	.insn	2, 0x
    2360:	11c6                	.insn	2, 0x11c6
    2362:	0000                	.insn	2, 0x
    2364:	3801                	.insn	2, 0x3801
    2366:	0002                	.insn	2, 0x0002
    2368:	9f00                	.insn	2, 0x9f00
    236a:	023b190f          	.insn	4, 0x023b190f
    236e:	0000                	.insn	2, 0x
    2370:	9102                	.insn	2, 0x9102
    2372:	0054                	.insn	2, 0x0054
    2374:	9008                	.insn	2, 0x9008
    2376:	0025                	.insn	2, 0x0025
    2378:	5880                	.insn	2, 0x5880
    237a:	0000                	.insn	2, 0x
    237c:	0100                	.insn	2, 0x0100
    237e:	08a8                	.insn	2, 0x08a8
    2380:	0000                	.insn	2, 0x
    2382:	0fcc                	.insn	2, 0x0fcc
    2384:	3924                	.insn	2, 0x3924
    2386:	0001                	.insn	2, 0x0001
    2388:	0200                	.insn	2, 0x0200
    238a:	6891                	.insn	2, 0x6891
    238c:	0000                	.insn	2, 0x
    238e:	1a00                	.insn	2, 0x1a00
    2390:	0764                	.insn	2, 0x0764
    2392:	0000                	.insn	2, 0x
    2394:	22980ee3          	beq	a6,s1,2dd0 <__start-0x7fffd230>
    2398:	8000                	.insn	2, 0x8000
    239a:	0038                	.insn	2, 0x0038
    239c:	0000                	.insn	2, 0x
    239e:	9c01                	.insn	2, 0x9c01
    23a0:	c028                	.insn	2, 0xc028
    23a2:	000a                	.insn	2, 0x000a
    23a4:	0100                	.insn	2, 0x0100
    23a6:	0eb8                	.insn	2, 0x0eb8
    23a8:	6406                	.insn	2, 0x6406
    23aa:	0022                	.insn	2, 0x0022
    23ac:	3480                	.insn	2, 0x3480
    23ae:	0000                	.insn	2, 0x
    23b0:	0100                	.insn	2, 0x0100
    23b2:	159c                	.insn	2, 0x159c
    23b4:	0e12                	.insn	2, 0x0e12
    23b6:	0000                	.insn	2, 0x
    23b8:	0e51                	.insn	2, 0x0e51
    23ba:	fc06                	.insn	2, 0xfc06
    23bc:	0021                	.insn	2, 0x0021
    23be:	6880                	.insn	2, 0x6880
    23c0:	0000                	.insn	2, 0x
    23c2:	0100                	.insn	2, 0x0100
    23c4:	2b9c                	.insn	2, 0x2b9c
    23c6:	0012                	.insn	2, 0x0012
    23c8:	0100                	.insn	2, 0x0100
    23ca:	04ff 0000 0e53 0d10 	.insn	10, 0x00010d100e53000004ff
    23d2:	0001 
    23d4:	0200                	.insn	2, 0x0200
    23d6:	6c91                	.insn	2, 0x6c91
    23d8:	2900                	.insn	2, 0x2900
    23da:	0bc0                	.insn	2, 0x0bc0
    23dc:	0000                	.insn	2, 0x
    23de:	b701                	.insn	2, 0xb701
    23e0:	130d                	.insn	2, 0x130d
    23e2:	010d                	.insn	2, 0x010d
    23e4:	0000                	.insn	2, 0x
    23e6:	2100                	.insn	2, 0x2100
    23e8:	8000                	.insn	2, 0x8000
    23ea:	00fc                	.insn	2, 0x00fc
    23ec:	0000                	.insn	2, 0x
    23ee:	9c01                	.insn	2, 0x9c01
    23f0:	1292                	.insn	2, 0x1292
    23f2:	0000                	.insn	2, 0x
    23f4:	ff01                	.insn	2, 0xff01
    23f6:	0004                	.insn	2, 0x0004
    23f8:	b900                	.insn	2, 0xb900
    23fa:	100d                	.insn	2, 0x100d
    23fc:	010d                	.insn	2, 0x010d
    23fe:	0000                	.insn	2, 0x
    2400:	9102                	.insn	2, 0x9102
    2402:	016c                	.insn	2, 0x016c
    2404:	000007f3          	.insn	4, 0x07f3
    2408:	0dba                	.insn	2, 0x0dba
    240a:	0d10                	.insn	2, 0x0d10
    240c:	0001                	.insn	2, 0x0001
    240e:	0200                	.insn	2, 0x0200
    2410:	6891                	.insn	2, 0x6891
    2412:	7701                	.insn	2, 0x7701
    2414:	000d                	.insn	2, 0x000d
    2416:	bb00                	.insn	2, 0xbb00
    2418:	0a0d                	.insn	2, 0x0a0d
    241a:	0396                	.insn	2, 0x0396
    241c:	0000                	.insn	2, 0x
    241e:	9102                	.insn	2, 0x9102
    2420:	0150                	.insn	2, 0x0150
    2422:	0dd5                	.insn	2, 0x0dd5
    2424:	0000                	.insn	2, 0x
    2426:	0dbc                	.insn	2, 0x0dbc
    2428:	db14                	.insn	2, 0xdb14
    242a:	0000                	.insn	2, 0x
    242c:	0200                	.insn	2, 0x0200
    242e:	6091                	.insn	2, 0x6091
    2430:	2a01                	.insn	2, 0x2a01
    2432:	000a                	.insn	2, 0x000a
    2434:	bd00                	.insn	2, 0xbd00
    2436:	100d                	.insn	2, 0x100d
    2438:	010d                	.insn	2, 0x010d
    243a:	0000                	.insn	2, 0x
    243c:	9102                	.insn	2, 0x9102
    243e:	0064                	.insn	2, 0x0064
    2440:	a714                	.insn	2, 0xa714
    2442:	e300000b          	.insn	4, 0xe300000b
    2446:	1efc1107          	.insn	4, 0x1efc1107
    244a:	8000                	.insn	2, 0x8000
    244c:	0204                	.insn	2, 0x0204
    244e:	0000                	.insn	2, 0x
    2450:	9c01                	.insn	2, 0x9c01
    2452:	12d1                	.insn	2, 0x12d1
    2454:	0000                	.insn	2, 0x
    2456:	d302                	.insn	2, 0xd302
    2458:	e300000b          	.insn	4, 0xe300000b
    245c:	03fb3307          	.insn	4, 0x03fb3307
    2460:	0000                	.insn	2, 0x
    2462:	9102                	.insn	2, 0x9102
    2464:	085c                	.insn	2, 0x085c
    2466:	1fd4                	.insn	2, 0x1fd4
    2468:	8000                	.insn	2, 0x8000
    246a:	00ec                	.insn	2, 0x00ec
    246c:	0000                	.insn	2, 0x
    246e:	3801                	.insn	2, 0x3801
    2470:	0002                	.insn	2, 0x0002
    2472:	1d00                	.insn	2, 0x1d00
    2474:	0d08                	.insn	2, 0x0d08
    2476:	0000023b          	.insn	4, 0x023b
    247a:	9102                	.insn	2, 0x9102
    247c:	006c                	.insn	2, 0x006c
    247e:	1400                	.insn	2, 0x1400
    2480:	0d81                	.insn	2, 0x0d81
    2482:	0000                	.insn	2, 0x
    2484:	0701                	.insn	2, 0x0701
    2486:	880d                	.insn	2, 0x880d
    2488:	001d                	.insn	2, 0x001d
    248a:	7480                	.insn	2, 0x7480
    248c:	0001                	.insn	2, 0x0001
    248e:	0100                	.insn	2, 0x0100
    2490:	7d9c                	.insn	2, 0x7d9c
    2492:	02000013          	addi	zero,zero,32
    2496:	0bdc                	.insn	2, 0x0bdc
    2498:	0000                	.insn	2, 0x
    249a:	0701                	.insn	2, 0x0701
    249c:	db32                	.insn	2, 0xdb32
    249e:	0000                	.insn	2, 0x
    24a0:	0200                	.insn	2, 0x0200
    24a2:	5c91                	.insn	2, 0x5c91
    24a4:	e202                	.insn	2, 0xe202
    24a6:	000a                	.insn	2, 0x000a
    24a8:	0200                	.insn	2, 0x0200
    24aa:	00ad3607          	.insn	4, 0x00ad3607
    24ae:	0000                	.insn	2, 0x
    24b0:	9102                	.insn	2, 0x9102
    24b2:	0258                	.insn	2, 0x0258
    24b4:	00000a8f          	.insn	4, 0x0a8f
    24b8:	08400703          	lb	a4,132(zero) # 84 <__start-0x7fffff7c>
    24bc:	0001                	.insn	2, 0x0001
    24be:	0200                	.insn	2, 0x0200
    24c0:	5491                	.insn	2, 0x5491
    24c2:	9602                	.insn	2, 0x9602
    24c4:	000d                	.insn	2, 0x000d
    24c6:	0400                	.insn	2, 0x0400
    24c8:	00863007          	.insn	4, 0x00863007
    24cc:	0000                	.insn	2, 0x
    24ce:	9102                	.insn	2, 0x9102
    24d0:	0250                	.insn	2, 0x0250
    24d2:	081a                	.insn	2, 0x081a
    24d4:	0000                	.insn	2, 0x
    24d6:	0705                	.insn	2, 0x0705
    24d8:	0001232f          	.insn	4, 0x0001232f
    24dc:	0200                	.insn	2, 0x0200
    24de:	4c91                	.insn	2, 0x4c91
    24e0:	e202                	.insn	2, 0xe202
    24e2:	0600000f          	fence	or,unknown
    24e6:	13823807          	.insn	4, 0x13823807
    24ea:	0000                	.insn	2, 0x
    24ec:	9102                	.insn	2, 0x9102
    24ee:	0248                	.insn	2, 0x0248
    24f0:	00000bd3          	.insn	4, 0x0bd3
    24f4:	fb2b0707          	.insn	4, 0xfb2b0707
    24f8:	02000003          	lb	zero,32(zero) # 20 <__start-0x7fffffe0>
    24fc:	4491                	.insn	2, 0x4491
    24fe:	0002                	.insn	2, 0x0002
    2500:	0800000f          	fence	i,unknown
    2504:	138c4007          	.insn	4, 0x138c4007
    2508:	0000                	.insn	2, 0x
    250a:	9102                	.insn	2, 0x9102
    250c:	0140                	.insn	2, 0x0140
    250e:	00000fb3          	add	t6,zero,zero
    2512:	070a                	.insn	2, 0x070a
    2514:	00038c13          	addi	s8,t2,0
    2518:	0200                	.insn	2, 0x0200
    251a:	6891                	.insn	2, 0x6891
    251c:	782a                	.insn	2, 0x782a
    251e:	0100                	.insn	2, 0x0100
    2520:	2311070b          	.insn	4, 0x2311070b
    2524:	0001                	.insn	2, 0x0001
    2526:	0200                	.insn	2, 0x0200
    2528:	6c91                	.insn	2, 0x6c91
    252a:	0300                	.insn	2, 0x0300
    252c:	0251                	.insn	2, 0x0251
    252e:	0000                	.insn	2, 0x
    2530:	7d05                	.insn	2, 0x7d05
    2532:	03000013          	addi	zero,zero,48
    2536:	00000387          	.insn	4, 0x0387
    253a:	8705                	.insn	2, 0x8705
    253c:	0e000013          	addi	zero,zero,224
    2540:	00000b9b          	.insn	4, 0x0b9b
    2544:	06b6                	.insn	2, 0x06b6
    2546:	0d10                	.insn	2, 0x0d10
    2548:	0001                	.insn	2, 0x0001
    254a:	0400                	.insn	2, 0x0400
    254c:	001d                	.insn	2, 0x001d
    254e:	8480                	.insn	2, 0x8480
    2550:	0000                	.insn	2, 0x
    2552:	0100                	.insn	2, 0x0100
    2554:	249c                	.insn	2, 0x249c
    2556:	0014                	.insn	2, 0x0014
    2558:	0200                	.insn	2, 0x0200
    255a:	0bdc                	.insn	2, 0x0bdc
    255c:	0000                	.insn	2, 0x
    255e:	06b6                	.insn	2, 0x06b6
    2560:	db2c                	.insn	2, 0xdb2c
    2562:	0000                	.insn	2, 0x
    2564:	0200                	.insn	2, 0x0200
    2566:	5c91                	.insn	2, 0x5c91
    2568:	e202                	.insn	2, 0xe202
    256a:	000a                	.insn	2, 0x000a
    256c:	b700                	.insn	2, 0xb700
    256e:	3006                	.insn	2, 0x3006
    2570:	00ad                	.insn	2, 0x00ad
    2572:	0000                	.insn	2, 0x
    2574:	9102                	.insn	2, 0x9102
    2576:	0258                	.insn	2, 0x0258
    2578:	00000a8f          	.insn	4, 0x0a8f
    257c:	06b8                	.insn	2, 0x06b8
    257e:	083a                	.insn	2, 0x083a
    2580:	0001                	.insn	2, 0x0001
    2582:	0200                	.insn	2, 0x0200
    2584:	5491                	.insn	2, 0x5491
    2586:	9602                	.insn	2, 0x9602
    2588:	000d                	.insn	2, 0x000d
    258a:	b900                	.insn	2, 0xb900
    258c:	2a06                	.insn	2, 0x2a06
    258e:	0086                	.insn	2, 0x0086
    2590:	0000                	.insn	2, 0x
    2592:	9102                	.insn	2, 0x9102
    2594:	0250                	.insn	2, 0x0250
    2596:	081a                	.insn	2, 0x081a
    2598:	0000                	.insn	2, 0x
    259a:	06ba                	.insn	2, 0x06ba
    259c:	2329                	.insn	2, 0x2329
    259e:	0001                	.insn	2, 0x0001
    25a0:	0200                	.insn	2, 0x0200
    25a2:	4c91                	.insn	2, 0x4c91
    25a4:	e202                	.insn	2, 0xe202
    25a6:	bb00000f          	.insn	4, 0xbb00000f
    25aa:	3206                	.insn	2, 0x3206
    25ac:	1382                	.insn	2, 0x1382
    25ae:	0000                	.insn	2, 0x
    25b0:	9102                	.insn	2, 0x9102
    25b2:	0148                	.insn	2, 0x0148
    25b4:	00000bd3          	.insn	4, 0x0bd3
    25b8:	06bd                	.insn	2, 0x06bd
    25ba:	fb11                	.insn	2, 0xfb11
    25bc:	02000003          	lb	zero,32(zero) # 20 <__start-0x7fffffe0>
    25c0:	6891                	.insn	2, 0x6891
    25c2:	ff01                	.insn	2, 0xff01
    25c4:	0004                	.insn	2, 0x0004
    25c6:	be00                	.insn	2, 0xbe00
    25c8:	1406                	.insn	2, 0x1406
    25ca:	010d                	.insn	2, 0x010d
    25cc:	0000                	.insn	2, 0x
    25ce:	9102                	.insn	2, 0x9102
    25d0:	006c                	.insn	2, 0x006c
    25d2:	0009ca2b          	.insn	4, 0x0009ca2b
    25d6:	0100                	.insn	2, 0x0100
    25d8:	0654                	.insn	2, 0x0654
    25da:	fb14                	.insn	2, 0xfb14
    25dc:	38000003          	lb	zero,896(zero) # 380 <__start-0x7ffffc80>
    25e0:	001c                	.insn	2, 0x001c
    25e2:	cc80                	.insn	2, 0xcc80
    25e4:	0000                	.insn	2, 0x
    25e6:	0100                	.insn	2, 0x0100
    25e8:	029c                	.insn	2, 0x029c
    25ea:	0bdc                	.insn	2, 0x0bdc
    25ec:	0000                	.insn	2, 0x
    25ee:	0654                	.insn	2, 0x0654
    25f0:	db32                	.insn	2, 0xdb32
    25f2:	0000                	.insn	2, 0x
    25f4:	0200                	.insn	2, 0x0200
    25f6:	5c91                	.insn	2, 0x5c91
    25f8:	e202                	.insn	2, 0xe202
    25fa:	000a                	.insn	2, 0x000a
    25fc:	5500                	.insn	2, 0x5500
    25fe:	3606                	.insn	2, 0x3606
    2600:	00ad                	.insn	2, 0x00ad
    2602:	0000                	.insn	2, 0x
    2604:	9102                	.insn	2, 0x9102
    2606:	0258                	.insn	2, 0x0258
    2608:	00000a8f          	.insn	4, 0x0a8f
    260c:	0656                	.insn	2, 0x0656
    260e:	0840                	.insn	2, 0x0840
    2610:	0001                	.insn	2, 0x0001
    2612:	0200                	.insn	2, 0x0200
    2614:	5491                	.insn	2, 0x5491
    2616:	9602                	.insn	2, 0x9602
    2618:	000d                	.insn	2, 0x000d
    261a:	5700                	.insn	2, 0x5700
    261c:	3006                	.insn	2, 0x3006
    261e:	0086                	.insn	2, 0x0086
    2620:	0000                	.insn	2, 0x
    2622:	9102                	.insn	2, 0x9102
    2624:	0250                	.insn	2, 0x0250
    2626:	081a                	.insn	2, 0x081a
    2628:	0000                	.insn	2, 0x
    262a:	0658                	.insn	2, 0x0658
    262c:	0001232f          	.insn	4, 0x0001232f
    2630:	0200                	.insn	2, 0x0200
    2632:	4c91                	.insn	2, 0x4c91
    2634:	e202                	.insn	2, 0xe202
    2636:	5900000f          	.insn	4, 0x5900000f
    263a:	3806                	.insn	2, 0x3806
    263c:	1382                	.insn	2, 0x1382
    263e:	0000                	.insn	2, 0x
    2640:	9102                	.insn	2, 0x9102
    2642:	0148                	.insn	2, 0x0148
    2644:	00000bd3          	.insn	4, 0x0bd3
    2648:	fb11065b          	.insn	4, 0xfb11065b
    264c:	02000003          	lb	zero,32(zero) # 20 <__start-0x7fffffe0>
    2650:	6c91                	.insn	2, 0x6c91
    2652:	6008                	.insn	2, 0x6008
    2654:	001c                	.insn	2, 0x001c
    2656:	6080                	.insn	2, 0x6080
    2658:	0000                	.insn	2, 0x
    265a:	0100                	.insn	2, 0x0100
    265c:	0dc5                	.insn	2, 0x0dc5
    265e:	0000                	.insn	2, 0x
    2660:	0680                	.insn	2, 0x0680
    2662:	00038c1b          	.insn	4, 0x00038c1b
    2666:	0200                	.insn	2, 0x0200
    2668:	6891                	.insn	2, 0x6891
    266a:	0000                	.insn	2, 0x
    266c:	4400                	.insn	2, 0x4400
    266e:	0002                	.insn	2, 0x0002
    2670:	0500                	.insn	2, 0x0500
    2672:	0100                	.insn	2, 0x0100
    2674:	a704                	.insn	2, 0xa704
    2676:	0006                	.insn	2, 0x0006
    2678:	0900                	.insn	2, 0x0900
    267a:	00000063          	beq	zero,zero,267a <__start-0x7fffd986>
    267e:	bb1d                	.insn	2, 0xbb1d
    2680:	0001                	.insn	2, 0x0001
    2682:	0000                	.insn	2, 0x
    2684:	0000                	.insn	2, 0x
    2686:	e000                	.insn	2, 0xe000
    2688:	e0800047          	.insn	4, 0xe0800047
    268c:	0001                	.insn	2, 0x0001
    268e:	c100                	.insn	2, 0xc100
    2690:	0a000027          	.insn	4, 0x0a000027
    2694:	0504                	.insn	2, 0x0504
    2696:	6e69                	.insn	2, 0x6e69
    2698:	0074                	.insn	2, 0x0074
    269a:	0002ee03          	.insn	4, 0x0002ee03
    269e:	0200                	.insn	2, 0x0200
    26a0:	17d6                	.insn	2, 0x17d6
    26a2:	003e                	.insn	2, 0x003e
    26a4:	0000                	.insn	2, 0x
    26a6:	2d04                	.insn	2, 0x2d04
    26a8:	0000                	.insn	2, 0x
    26aa:	0100                	.insn	2, 0x0100
    26ac:	0704                	.insn	2, 0x0704
    26ae:	00e2                	.insn	2, 0x00e2
    26b0:	0000                	.insn	2, 0x
    26b2:	0801                	.insn	2, 0x0801
    26b4:	ef05                	.insn	2, 0xef05
    26b6:	0000                	.insn	2, 0x
    26b8:	0100                	.insn	2, 0x0100
    26ba:	0410                	.insn	2, 0x0410
    26bc:	011c                	.insn	2, 0x011c
    26be:	0000                	.insn	2, 0x
    26c0:	0101                	.insn	2, 0x0101
    26c2:	0206                	.insn	2, 0x0206
    26c4:	0000                	.insn	2, 0x
    26c6:	0100                	.insn	2, 0x0100
    26c8:	0502                	.insn	2, 0x0502
    26ca:	00fd                	.insn	2, 0x00fd
    26cc:	0000                	.insn	2, 0x
    26ce:	00071603          	lh	a2,0(a4)
    26d2:	0300                	.insn	2, 0x0300
    26d4:	1828                	.insn	2, 0x1828
    26d6:	0026                	.insn	2, 0x0026
    26d8:	0000                	.insn	2, 0x
    26da:	0101                	.insn	2, 0x0101
    26dc:	0008                	.insn	2, 0x0008
    26de:	0000                	.insn	2, 0x
    26e0:	0100                	.insn	2, 0x0100
    26e2:	0702                	.insn	2, 0x0702
    26e4:	000e                	.insn	2, 0x000e
    26e6:	0000                	.insn	2, 0x
    26e8:	00024b03          	lbu	s6,0(tp) # 1b360000 <__start-0x64ca0000>
    26ec:	0300                	.insn	2, 0x0300
    26ee:	1934                	.insn	2, 0x1934
    26f0:	003e                	.insn	2, 0x003e
    26f2:	0000                	.insn	2, 0x
    26f4:	7b04                	.insn	2, 0x7b04
    26f6:	0000                	.insn	2, 0x
    26f8:	0700                	.insn	2, 0x0700
    26fa:	0000007b          	.insn	4, 0x007b
    26fe:	00103f03          	.insn	4, 0x00103f03
    2702:	0300                	.insn	2, 0x0300
    2704:	00a71937          	lui	s2,0xa71
    2708:	0000                	.insn	2, 0x
    270a:	9104                	.insn	2, 0x9104
    270c:	0000                	.insn	2, 0x
    270e:	0700                	.insn	2, 0x0700
    2710:	0091                	.insn	2, 0x0091
    2712:	0000                	.insn	2, 0x
    2714:	0801                	.insn	2, 0x0801
    2716:	0000d807          	.insn	4, 0xd807
    271a:	0300                	.insn	2, 0x0300
    271c:	088e                	.insn	2, 0x088e
    271e:	0000                	.insn	2, 0x
    2720:	4104                	.insn	2, 0x4104
    2722:	7b1a                	.insn	2, 0x7b1a
    2724:	0000                	.insn	2, 0x
    2726:	0400                	.insn	2, 0x0400
    2728:	00ae                	.insn	2, 0x00ae
    272a:	0000                	.insn	2, 0x
    272c:	00022203          	lw	tp,0(tp) # 0 <__start-0x80000000>
    2730:	0400                	.insn	2, 0x0400
    2732:	1a42                	.insn	2, 0x1a42
    2734:	0061                	.insn	2, 0x0061
    2736:	0000                	.insn	2, 0x
    2738:	00108d0b          	.insn	4, 0x00108d0b
    273c:	0400                	.insn	2, 0x0400
    273e:	0f75                	.insn	2, 0x0f75
    2740:	002d                	.insn	2, 0x002d
    2742:	0000                	.insn	2, 0x
    2744:	0101                	.insn	2, 0x0101
    2746:	0908                	.insn	2, 0x0908
    2748:	0000                	.insn	2, 0x
    274a:	0c00                	.insn	2, 0x0c00
    274c:	00ae                	.insn	2, 0x00ae
    274e:	0000                	.insn	2, 0x
    2750:	000000ef          	jal	ra,2750 <__start-0x7fffd8b0>
    2754:	3e0d                	.insn	2, 0x3e0d
    2756:	0000                	.insn	2, 0x
    2758:	f300                	.insn	2, 0xf300
    275a:	0001                	.insn	2, 0x0001
    275c:	660e                	.insn	2, 0x660e
    275e:	0010                	.insn	2, 0x0010
    2760:	0100                	.insn	2, 0x0100
    2762:	3744                	.insn	2, 0x3744
    2764:	00de                	.insn	2, 0x00de
    2766:	0000                	.insn	2, 0x
    2768:	0510                	.insn	2, 0x0510
    276a:	007d1003          	lh	zero,7(s10) # 467f7 <__start-0x7ffb9809>
    276e:	0280                	.insn	2, 0x0280
    2770:	10f6                	.insn	2, 0x10f6
    2772:	0000                	.insn	2, 0x
    2774:	1345                	.insn	2, 0x1345
    2776:	00ba                	.insn	2, 0x00ba
    2778:	0000                	.insn	2, 0x
    277a:	0305                	.insn	2, 0x0305
    277c:	6c28                	.insn	2, 0x6c28
    277e:	8000                	.insn	2, 0x8000
    2780:	9f02                	.insn	2, 0x9f02
    2782:	0010                	.insn	2, 0x0010
    2784:	5a00                	.insn	2, 0x5a00
    2786:	910a                	.insn	2, 0x910a
    2788:	0000                	.insn	2, 0x
    278a:	0500                	.insn	2, 0x0500
    278c:	00890803          	lb	a6,8(s2) # a71008 <__start-0x7f58eff8>
    2790:	0280                	.insn	2, 0x0280
    2792:	109e                	.insn	2, 0x109e
    2794:	0000                	.insn	2, 0x
    2796:	0135125b          	.insn	4, 0x0135125b
    279a:	0000                	.insn	2, 0x
    279c:	0305                	.insn	2, 0x0305
    279e:	6c68                	.insn	2, 0x6c68
    27a0:	8000                	.insn	2, 0x8000
    27a2:	9d06                	.insn	2, 0x9d06
    27a4:	0000                	.insn	2, 0x
    27a6:	0200                	.insn	2, 0x0200
    27a8:	1070                	.insn	2, 0x1070
    27aa:	0000                	.insn	2, 0x
    27ac:	0e5c                	.insn	2, 0x0e5c
    27ae:	0039                	.insn	2, 0x0039
    27b0:	0000                	.insn	2, 0x
    27b2:	0305                	.insn	2, 0x0305
    27b4:	6c2c                	.insn	2, 0x6c2c
    27b6:	8000                	.insn	2, 0x8000
    27b8:	0302                	.insn	2, 0x0302
    27ba:	0011                	.insn	2, 0x0011
    27bc:	5d00                	.insn	2, 0x5d00
    27be:	8710                	.insn	2, 0x8710
    27c0:	0000                	.insn	2, 0x
    27c2:	0500                	.insn	2, 0x0500
    27c4:	006c3003          	.insn	4, 0x006c3003
    27c8:	0280                	.insn	2, 0x0280
    27ca:	00001137          	lui	sp,0x1
    27ce:	155e                	.insn	2, 0x155e
    27d0:	016d                	.insn	2, 0x016d
    27d2:	0000                	.insn	2, 0x
    27d4:	0305                	.insn	2, 0x0305
    27d6:	8910                	.insn	2, 0x8910
    27d8:	8000                	.insn	2, 0x8000
    27da:	a206                	.insn	2, 0xa206
    27dc:	0000                	.insn	2, 0x
    27de:	0f00                	.insn	2, 0x0f00
    27e0:	000000cb          	.insn	4, 0x00cb
    27e4:	6201                	.insn	2, 0x6201
    27e6:	0508                	.insn	2, 0x0508
    27e8:	006c6c03          	.insn	4, 0x006c6c03
    27ec:	0280                	.insn	2, 0x0280
    27ee:	108c                	.insn	2, 0x108c
    27f0:	0000                	.insn	2, 0x
    27f2:	01910a63          	beq	sp,s9,2806 <__start-0x7fffd7fa>
    27f6:	0000                	.insn	2, 0x
    27f8:	0305                	.insn	2, 0x0305
    27fa:	6c70                	.insn	2, 0x6c70
    27fc:	8000                	.insn	2, 0x8000
    27fe:	2d06                	.insn	2, 0x2d06
    2800:	0000                	.insn	2, 0x
    2802:	0200                	.insn	2, 0x0200
    2804:	00001053          	.insn	4, 0x1053
    2808:	0866                	.insn	2, 0x0866
    280a:	002d                	.insn	2, 0x002d
    280c:	0000                	.insn	2, 0x
    280e:	0305                	.insn	2, 0x0305
    2810:	8914                	.insn	2, 0x8914
    2812:	8000                	.insn	2, 0x8000
    2814:	d608                	.insn	2, 0xd608
    2816:	0010                	.insn	2, 0x0010
    2818:	a200                	.insn	2, 0xa200
    281a:	c010                	.insn	2, 0xc010
    281c:	0100000f          	fence	w,unknown
    2820:	06c9                	.insn	2, 0x06c9
    2822:	49a8                	.insn	2, 0x49a8
    2824:	8000                	.insn	2, 0x8000
    2826:	0018                	.insn	2, 0x0018
    2828:	0000                	.insn	2, 0x
    282a:	9c01                	.insn	2, 0x9c01
    282c:	0611                	.insn	2, 0x0611
    282e:	0008                	.insn	2, 0x0008
    2830:	0100                	.insn	2, 0x0100
    2832:	0ca0                	.insn	2, 0x0ca0
    2834:	000000bf 8000496c 	.insn	8, 0x8000496c000000bf
    283c:	003c                	.insn	2, 0x003c
    283e:	0000                	.insn	2, 0x
    2840:	9c01                	.insn	2, 0x9c01
    2842:	01e0                	.insn	2, 0x01e0
    2844:	0000                	.insn	2, 0x
    2846:	d608                	.insn	2, 0xd608
    2848:	0010                	.insn	2, 0x0010
    284a:	a200                	.insn	2, 0xa200
    284c:	1200                	.insn	2, 0x1200
    284e:	10bd                	.insn	2, 0x10bd
    2850:	0000                	.insn	2, 0x
    2852:	8201                	.insn	2, 0x8201
    2854:	e00a                	.insn	2, 0xe00a
    2856:	8c800047          	.insn	4, 0x8c800047
    285a:	0001                	.insn	2, 0x0001
    285c:	0100                	.insn	2, 0x0100
    285e:	3d9c                	.insn	2, 0x3d9c
    2860:	0002                	.insn	2, 0x0002
    2862:	0500                	.insn	2, 0x0500
    2864:	000010ab          	.insn	4, 0x10ab
    2868:	1284                	.insn	2, 0x1284
    286a:	0000007b          	.insn	4, 0x007b
    286e:	9102                	.insn	2, 0x9102
    2870:	0564                	.insn	2, 0x0564
    2872:	1126                	.insn	2, 0x1126
    2874:	0000                	.insn	2, 0x
    2876:	2584                	.insn	2, 0x2584
    2878:	0000007b          	.insn	4, 0x007b
    287c:	9102                	.insn	2, 0x9102
    287e:	0560                	.insn	2, 0x0560
    2880:	10ea                	.insn	2, 0x10ea
    2882:	0000                	.insn	2, 0x
    2884:	2385                	.insn	2, 0x2385
    2886:	0242                	.insn	2, 0x0242
    2888:	0000                	.insn	2, 0x
    288a:	9102                	.insn	2, 0x9102
    288c:	056c                	.insn	2, 0x056c
    288e:	1048                	.insn	2, 0x1048
    2890:	0000                	.insn	2, 0x
    2892:	2386                	.insn	2, 0x2386
    2894:	0242                	.insn	2, 0x0242
    2896:	0000                	.insn	2, 0x
    2898:	9102                	.insn	2, 0x9102
    289a:	0568                	.insn	2, 0x0568
    289c:	1036                	.insn	2, 0x1036
    289e:	0000                	.insn	2, 0x
    28a0:	008c1b87          	.insn	4, 0x008c1b87
    28a4:	0000                	.insn	2, 0x
    28a6:	9102                	.insn	2, 0x9102
    28a8:	005c                	.insn	2, 0x005c
    28aa:	8c06                	.insn	2, 0x8c06
    28ac:	0000                	.insn	2, 0x
    28ae:	0400                	.insn	2, 0x0400
    28b0:	023d                	.insn	2, 0x023d
    28b2:	0000                	.insn	2, 0x
    28b4:	1e00                	.insn	2, 0x1e00
    28b6:	0000                	.insn	2, 0x
    28b8:	0200                	.insn	2, 0x0200
    28ba:	cc00                	.insn	2, 0xcc00
    28bc:	04000007          	.insn	4, 0x04000007
    28c0:	1b01                	.insn	2, 0x1b01
    28c2:	0029                	.insn	2, 0x0029
    28c4:	0000                	.insn	2, 0x
    28c6:	0000                	.insn	2, 0x
    28c8:	5700                	.insn	2, 0x5700
    28ca:	0011                	.insn	2, 0x0011
    28cc:	8500                	.insn	2, 0x8500
    28ce:	0011                	.insn	2, 0x0011
    28d0:	b200                	.insn	2, 0xb200
    28d2:	0011                	.insn	2, 0x0011
    28d4:	0100                	.insn	2, 0x0100
    28d6:	a180                	.insn	2, 0xa180
    28d8:	0004                	.insn	2, 0x0004
    28da:	0500                	.insn	2, 0x0500
    28dc:	0100                	.insn	2, 0x0100
    28de:	de04                	.insn	2, 0xde04
    28e0:	0f000007          	.insn	4, 0x0f000007
    28e4:	00000063          	beq	zero,zero,28e4 <__start-0x7fffd71c>
    28e8:	e61d                	.insn	2, 0xe61d
    28ea:	0001                	.insn	2, 0x0001
    28ec:	0000                	.insn	2, 0x
    28ee:	0000                	.insn	2, 0x
    28f0:	f000                	.insn	2, 0xf000
    28f2:	0051                	.insn	2, 0x0051
    28f4:	5080                	.insn	2, 0x5080
    28f6:	0008                	.insn	2, 0x0008
    28f8:	4900                	.insn	2, 0x4900
    28fa:	002c                	.insn	2, 0x002c
    28fc:	0400                	.insn	2, 0x0400
    28fe:	02ee                	.insn	2, 0x02ee
    2900:	0000                	.insn	2, 0x
    2902:	d602                	.insn	2, 0xd602
    2904:	00003717          	auipc	a4,0x3
    2908:	1000                	.insn	2, 0x1000
    290a:	0026                	.insn	2, 0x0026
    290c:	0000                	.insn	2, 0x
    290e:	0402                	.insn	2, 0x0402
    2910:	0000e207          	.insn	4, 0xe207
    2914:	1100                	.insn	2, 0x1100
    2916:	0504                	.insn	2, 0x0504
    2918:	6e69                	.insn	2, 0x6e69
    291a:	0074                	.insn	2, 0x0074
    291c:	0402                	.insn	2, 0x0402
    291e:	f405                	.insn	2, 0xf405
    2920:	0000                	.insn	2, 0x
    2922:	0200                	.insn	2, 0x0200
    2924:	0508                	.insn	2, 0x0508
    2926:	000000ef          	jal	ra,2926 <__start-0x7fffd6da>
    292a:	0102                	.insn	2, 0x0102
    292c:	0008                	.insn	2, 0x0008
    292e:	0000                	.insn	2, 0x
    2930:	0200                	.insn	2, 0x0200
    2932:	0702                	.insn	2, 0x0702
    2934:	000e                	.insn	2, 0x000e
    2936:	0000                	.insn	2, 0x
    2938:	0402                	.insn	2, 0x0402
    293a:	0000dd07          	.insn	4, 0xdd07
    293e:	0200                	.insn	2, 0x0200
    2940:	0601                	.insn	2, 0x0601
    2942:	0002                	.insn	2, 0x0002
    2944:	0000                	.insn	2, 0x
    2946:	0202                	.insn	2, 0x0202
    2948:	fd05                	.insn	2, 0xfd05
    294a:	0000                	.insn	2, 0x
    294c:	0400                	.insn	2, 0x0400
    294e:	0714                	.insn	2, 0x0714
    2950:	0000                	.insn	2, 0x
    2952:	3e142903          	lw	s2,993(s0)
    2956:	0000                	.insn	2, 0x
    2958:	0200                	.insn	2, 0x0200
    295a:	0708                	.insn	2, 0x0708
    295c:	00d8                	.insn	2, 0x00d8
    295e:	0000                	.insn	2, 0x
    2960:	0412                	.insn	2, 0x0412
    2962:	0102                	.insn	2, 0x0102
    2964:	0908                	.insn	2, 0x0908
    2966:	0000                	.insn	2, 0x
    2968:	0400                	.insn	2, 0x0400
    296a:	0716                	.insn	2, 0x0716
    296c:	0000                	.insn	2, 0x
    296e:	1a04                	.insn	2, 0x1a04
    2970:	00007613          	andi	a2,zero,0
    2974:	0200                	.insn	2, 0x0200
    2976:	0410                	.insn	2, 0x0410
    2978:	011c                	.insn	2, 0x011c
    297a:	0000                	.insn	2, 0x
    297c:	bf04                	.insn	2, 0xbf04
    297e:	05000007          	.insn	4, 0x05000007
    2982:	182e                	.insn	2, 0x182e
    2984:	00000053          	.insn	4, 0x0053
    2988:	4b04                	.insn	2, 0x4b04
    298a:	0002                	.insn	2, 0x0002
    298c:	0500                	.insn	2, 0x0500
    298e:	1934                	.insn	2, 0x1934
    2990:	00000037          	lui	zero,0x0
    2994:	2204                	.insn	2, 0x2204
    2996:	0002                	.insn	2, 0x0002
    2998:	0600                	.insn	2, 0x0600
    299a:	1a42                	.insn	2, 0x1a42
    299c:	0092                	.insn	2, 0x0092
    299e:	0000                	.insn	2, 0x
    29a0:	6704                	.insn	2, 0x6704
    29a2:	0001                	.insn	2, 0x0001
    29a4:	0600                	.insn	2, 0x0600
    29a6:	1a44                	.insn	2, 0x1a44
    29a8:	00b1                	.insn	2, 0x00b1
    29aa:	0000                	.insn	2, 0x
    29ac:	00108d13          	addi	s10,ra,1
    29b0:	0600                	.insn	2, 0x0600
    29b2:	0f75                	.insn	2, 0x0f75
    29b4:	0026                	.insn	2, 0x0026
    29b6:	0000                	.insn	2, 0x
    29b8:	a506                	.insn	2, 0xa506
    29ba:	0000                	.insn	2, 0x
    29bc:	0a00                	.insn	2, 0x0a00
    29be:	11d1                	.insn	2, 0x11d1
    29c0:	0000                	.insn	2, 0x
    29c2:	071c                	.insn	2, 0x071c
    29c4:	4e94                	.insn	2, 0x4e94
    29c6:	0001                	.insn	2, 0x0001
    29c8:	0500                	.insn	2, 0x0500
    29ca:	00001353          	.insn	4, 0x1353
    29ce:	260c9607          	.insn	4, 0x260c9607
    29d2:	0000                	.insn	2, 0x
    29d4:	0000                	.insn	2, 0x
    29d6:	9f05                	.insn	2, 0x9f05
    29d8:	07000013          	addi	zero,zero,112
    29dc:	00260c97          	auipc	s9,0x260
    29e0:	0000                	.insn	2, 0x
    29e2:	0504                	.insn	2, 0x0504
    29e4:	1279                	.insn	2, 0x1279
    29e6:	0000                	.insn	2, 0x
    29e8:	260c9807          	.insn	4, 0x260c9807
    29ec:	0000                	.insn	2, 0x
    29ee:	0800                	.insn	2, 0x0800
    29f0:	2805                	.insn	2, 0x2805
    29f2:	0012                	.insn	2, 0x0012
    29f4:	0700                	.insn	2, 0x0700
    29f6:	0c99                	.insn	2, 0x0c99
    29f8:	0026                	.insn	2, 0x0026
    29fa:	0000                	.insn	2, 0x
    29fc:	050c                	.insn	2, 0x050c
    29fe:	11dc                	.insn	2, 0x11dc
    2a00:	0000                	.insn	2, 0x
    2a02:	260c9a07          	.insn	4, 0x260c9a07
    2a06:	0000                	.insn	2, 0x
    2a08:	1000                	.insn	2, 0x1000
    2a0a:	3405                	.insn	2, 0x3405
    2a0c:	07000013          	addi	zero,zero,112
    2a10:	00260c9b          	.insn	4, 0x00260c9b
    2a14:	0000                	.insn	2, 0x
    2a16:	0514                	.insn	2, 0x0514
    2a18:	13e9                	.insn	2, 0x13e9
    2a1a:	0000                	.insn	2, 0x
    2a1c:	260c9c07          	.insn	4, 0x260c9c07
    2a20:	0000                	.insn	2, 0x
    2a22:	1800                	.insn	2, 0x1800
    2a24:	0400                	.insn	2, 0x0400
    2a26:	000011fb          	.insn	4, 0x11fb
    2a2a:	e6039d07          	.insn	4, 0xe6039d07
    2a2e:	0000                	.insn	2, 0x
    2a30:	1400                	.insn	2, 0x1400
    2a32:	00a5                	.insn	2, 0x00a5
    2a34:	0000                	.insn	2, 0x
    2a36:	0000016b          	.insn	4, 0x016b
    2a3a:	3715                	.insn	2, 0x3715
    2a3c:	0000                	.insn	2, 0x
    2a3e:	ff00                	.insn	2, 0xff00
    2a40:	6d010003          	lb	zero,1744(sp) # 16d0 <__start-0x7fffe930>
    2a44:	0014                	.insn	2, 0x0014
    2a46:	5f00                	.insn	2, 0x5f00
    2a48:	5a24                	.insn	2, 0x5a24
    2a4a:	0001                	.insn	2, 0x0001
    2a4c:	0500                	.insn	2, 0x0500
    2a4e:	0084e003          	.insn	4, 0x0084e003
    2a52:	0a80                	.insn	2, 0x0a80
    2a54:	125d                	.insn	2, 0x125d
    2a56:	0000                	.insn	2, 0x
    2a58:	0108                	.insn	2, 0x0108
    2a5a:	a364                	.insn	2, 0xa364
    2a5c:	0001                	.insn	2, 0x0001
    2a5e:	0500                	.insn	2, 0x0500
    2a60:	00001207          	.insn	4, 0x1207
    2a64:	6601                	.insn	2, 0x6601
    2a66:	0001a31b          	.insn	4, 0x0001a31b
    2a6a:	0000                	.insn	2, 0x
    2a6c:	0205                	.insn	2, 0x0205
    2a6e:	0014                	.insn	2, 0x0014
    2a70:	0100                	.insn	2, 0x0100
    2a72:	00260c67          	jalr	s8,2(a2)
    2a76:	0000                	.insn	2, 0x
    2a78:	0004                	.insn	2, 0x0004
    2a7a:	7c06                	.insn	2, 0x7c06
    2a7c:	0001                	.insn	2, 0x0001
    2a7e:	0400                	.insn	2, 0x0400
    2a80:	1328                	.insn	2, 0x1328
    2a82:	0000                	.insn	2, 0x
    2a84:	6801                	.insn	2, 0x6801
    2a86:	00017c03          	.insn	4, 0x00017c03
    2a8a:	0100                	.insn	2, 0x0100
    2a8c:	136e                	.insn	2, 0x136e
    2a8e:	0000                	.insn	2, 0x
    2a90:	159e                	.insn	2, 0x159e
    2a92:	0032                	.insn	2, 0x0032
    2a94:	0000                	.insn	2, 0x
    2a96:	0305                	.insn	2, 0x0305
    2a98:	6c34                	.insn	2, 0x6c34
    2a9a:	8000                	.insn	2, 0x8000
    2a9c:	0d01                	.insn	2, 0x0d01
    2a9e:	0014                	.insn	2, 0x0014
    2aa0:	a100                	.insn	2, 0xa100
    2aa2:	a824                	.insn	2, 0xa824
    2aa4:	0001                	.insn	2, 0x0001
    2aa6:	0500                	.insn	2, 0x0500
    2aa8:	0088e003          	.insn	4, 0x0088e003
    2aac:	0180                	.insn	2, 0x0180
    2aae:	123c                	.insn	2, 0x123c
    2ab0:	0000                	.insn	2, 0x
    2ab2:	26a2                	.insn	2, 0x26a2
    2ab4:	000001e7          	jalr	gp,0(zero) # 0 <__start-0x80000000>
    2ab8:	0305                	.insn	2, 0x0305
    2aba:	88e8                	.insn	2, 0x88e8
    2abc:	8000                	.insn	2, 0x8000
    2abe:	a806                	.insn	2, 0xa806
    2ac0:	0001                	.insn	2, 0x0001
    2ac2:	0100                	.insn	2, 0x0100
    2ac4:	0000138b          	.insn	4, 0x138b
    2ac8:	1fa6                	.insn	2, 0x1fa6
    2aca:	0026                	.insn	2, 0x0026
    2acc:	0000                	.insn	2, 0x
    2ace:	0305                	.insn	2, 0x0305
    2ad0:	88ec                	.insn	2, 0x88ec
    2ad2:	8000                	.insn	2, 0x8000
    2ad4:	dc01                	.insn	2, 0xdc01
    2ad6:	0011                	.insn	2, 0x0011
    2ad8:	a700                	.insn	2, 0xa700
    2ada:	261f 0000 0500      	.insn	6, 0x05000000261f
    2ae0:	0088f003          	.insn	4, 0x0088f003
    2ae4:	0180                	.insn	2, 0x0180
    2ae6:	1334                	.insn	2, 0x1334
    2ae8:	0000                	.insn	2, 0x
    2aea:	1fa8                	.insn	2, 0x1fa8
    2aec:	0026                	.insn	2, 0x0026
    2aee:	0000                	.insn	2, 0x
    2af0:	0305                	.insn	2, 0x0305
    2af2:	88f4                	.insn	2, 0x88f4
    2af4:	8000                	.insn	2, 0x8000
    2af6:	e901                	.insn	2, 0xe901
    2af8:	a9000013          	addi	zero,zero,-1392
    2afc:	261f 0000 0500      	.insn	6, 0x05000000261f
    2b02:	0088f803          	.insn	4, 0x0088f803
    2b06:	1680                	.insn	2, 0x1680
    2b08:	00000caf          	.insn	4, 0x0caf
    2b0c:	3d08                	.insn	2, 0x3d08
    2b0e:	890e                	.insn	2, 0x890e
    2b10:	0000                	.insn	2, 0x
    2b12:	5000                	.insn	2, 0x5000
    2b14:	0002                	.insn	2, 0x0002
    2b16:	0800                	.insn	2, 0x0800
    2b18:	0089                	.insn	2, 0x0089
    2b1a:	0000                	.insn	2, 0x
    2b1c:	3e08                	.insn	2, 0x3e08
    2b1e:	0000                	.insn	2, 0x
    2b20:	0800                	.insn	2, 0x0800
    2b22:	0026                	.insn	2, 0x0026
    2b24:	0000                	.insn	2, 0x
    2b26:	1700                	.insn	2, 0x1700
    2b28:	00000653          	.insn	4, 0x0653
    2b2c:	9309                	.insn	2, 0x9309
    2b2e:	0c06                	.insn	2, 0x0c06
    2b30:	00bd                	.insn	2, 0x00bd
    2b32:	0000                	.insn	2, 0x
    2b34:	6418                	.insn	2, 0x6418
    2b36:	09000007          	.insn	4, 0x09000007
    2b3a:	0b06065b          	.insn	4, 0x0b06065b
    2b3e:	000012eb          	.insn	4, 0x12eb
    2b42:	0269                	.insn	2, 0x0269
    2b44:	59f4                	.insn	2, 0x59f4
    2b46:	8000                	.insn	2, 0x8000
    2b48:	004c                	.insn	2, 0x004c
    2b4a:	0000                	.insn	2, 0x
    2b4c:	9c01                	.insn	2, 0x9c01
    2b4e:	540c                	.insn	2, 0x540c
    2b50:	0014                	.insn	2, 0x0014
    2b52:	3000                	.insn	2, 0x3000
    2b54:	9802                	.insn	2, 0x9802
    2b56:	0058                	.insn	2, 0x0058
    2b58:	5c80                	.insn	2, 0x5c80
    2b5a:	0001                	.insn	2, 0x0001
    2b5c:	0100                	.insn	2, 0x0100
    2b5e:	d89c                	.insn	2, 0xd89c
    2b60:	0002                	.insn	2, 0x0002
    2b62:	0700                	.insn	2, 0x0700
    2b64:	11d0                	.insn	2, 0x11d0
    2b66:	0000                	.insn	2, 0x
    2b68:	0230                	.insn	2, 0x0230
    2b6a:	0002d827          	.insn	4, 0x0002d827
    2b6e:	0200                	.insn	2, 0x0200
    2b70:	5c91                	.insn	2, 0x5c91
    2b72:	00121703          	lh	a4,1(tp) # 1 <__start-0x7fffffff>
    2b76:	3200                	.insn	2, 0x3200
    2b78:	1302                	.insn	2, 0x1302
    2b7a:	000001e7          	jalr	gp,0(zero) # 0 <__start-0x80000000>
    2b7e:	9102                	.insn	2, 0x9102
    2b80:	036c                	.insn	2, 0x036c
    2b82:	1414                	.insn	2, 0x1414
    2b84:	0000                	.insn	2, 0x
    2b86:	260c0233          	.insn	4, 0x260c0233
    2b8a:	0000                	.insn	2, 0x
    2b8c:	0200                	.insn	2, 0x0200
    2b8e:	6891                	.insn	2, 0x6891
    2b90:	0012ff03          	.insn	4, 0x0012ff03
    2b94:	3300                	.insn	2, 0x3300
    2b96:	1902                	.insn	2, 0x1902
    2b98:	0026                	.insn	2, 0x0026
    2b9a:	0000                	.insn	2, 0x
    2b9c:	9102                	.insn	2, 0x9102
    2b9e:	0364                	.insn	2, 0x0364
    2ba0:	121f 0000 0233      	.insn	6, 0x02330000121f
    2ba6:	00002627          	.insn	4, 0x2627
    2baa:	0200                	.insn	2, 0x0200
    2bac:	6091                	.insn	2, 0x6091
    2bae:	0600                	.insn	2, 0x0600
    2bb0:	014e                	.insn	2, 0x014e
    2bb2:	0000                	.insn	2, 0x
    2bb4:	420d                	.insn	2, 0x420d
    2bb6:	0012                	.insn	2, 0x0012
    2bb8:	ec00                	.insn	2, 0xec00
    2bba:	5401                	.insn	2, 0x5401
    2bbc:	44800057          	.insn	4, 0x44800057
    2bc0:	0001                	.insn	2, 0x0001
    2bc2:	0100                	.insn	2, 0x0100
    2bc4:	209c                	.insn	2, 0x209c
    2bc6:	07000003          	lb	zero,112(zero) # 70 <__start-0x7fffff90>
    2bca:	13ca                	.insn	2, 0x13ca
    2bcc:	0000                	.insn	2, 0x
    2bce:	01ec                	.insn	2, 0x01ec
    2bd0:	0001e737          	lui	a4,0x1e
    2bd4:	0200                	.insn	2, 0x0200
    2bd6:	5c91                	.insn	2, 0x5c91
    2bd8:	00022d03          	lw	s10,0(tp) # 0 <__start-0x80000000>
    2bdc:	ee00                	.insn	2, 0xee00
    2bde:	1301                	.insn	2, 0x1301
    2be0:	000001e7          	jalr	gp,0(zero) # 0 <__start-0x80000000>
    2be4:	9102                	.insn	2, 0x9102
    2be6:	096c                	.insn	2, 0x096c
    2be8:	7570                	.insn	2, 0x7570
    2bea:	01ef0063          	beq	t5,t5,2bea <__start-0x7fffd416>
    2bee:	0000e10f          	.insn	4, 0xe10f
    2bf2:	0200                	.insn	2, 0x0200
    2bf4:	6891                	.insn	2, 0x6891
    2bf6:	0d00                	.insn	2, 0x0d00
    2bf8:	13be                	.insn	2, 0x13be
    2bfa:	0000                	.insn	2, 0x
    2bfc:	01bc                	.insn	2, 0x01bc
    2bfe:	5624                	.insn	2, 0x5624
    2c00:	8000                	.insn	2, 0x8000
    2c02:	0130                	.insn	2, 0x0130
    2c04:	0000                	.insn	2, 0x
    2c06:	9c01                	.insn	2, 0x9c01
    2c08:	0372                	.insn	2, 0x0372
    2c0a:	0000                	.insn	2, 0x
    2c0c:	00142103          	lw	sp,1(s0)
    2c10:	be00                	.insn	2, 0xbe00
    2c12:	1301                	.insn	2, 0x1301
    2c14:	000001e7          	jalr	gp,0(zero) # 0 <__start-0x80000000>
    2c18:	9102                	.insn	2, 0x9102
    2c1a:	0360                	.insn	2, 0x0360
    2c1c:	126a                	.insn	2, 0x126a
    2c1e:	0000                	.insn	2, 0x
    2c20:	b11b01bf 02000000 	.insn	8, 0x02000000b11b01bf
    2c28:	6c91                	.insn	2, 0x6c91
    2c2a:	00129903          	lh	s2,1(t0)
    2c2e:	bf00                	.insn	2, 0xbf00
    2c30:	2b01                	.insn	2, 0x2b01
    2c32:	00b1                	.insn	2, 0x00b1
    2c34:	0000                	.insn	2, 0x
    2c36:	9102                	.insn	2, 0x9102
    2c38:	0364                	.insn	2, 0x0364
    2c3a:	13da                	.insn	2, 0x13da
    2c3c:	0000                	.insn	2, 0x
    2c3e:	01c0                	.insn	2, 0x01c0
    2c40:	260c                	.insn	2, 0x260c
    2c42:	0000                	.insn	2, 0x
    2c44:	0200                	.insn	2, 0x0200
    2c46:	6891                	.insn	2, 0x6891
    2c48:	1900                	.insn	2, 0x1900
    2c4a:	137e                	.insn	2, 0x137e
    2c4c:	0000                	.insn	2, 0x
    2c4e:	a901                	.insn	2, 0xa901
    2c50:	0801                	.insn	2, 0x0801
    2c52:	0089                	.insn	2, 0x0089
    2c54:	0000                	.insn	2, 0x
    2c56:	5578                	.insn	2, 0x5578
    2c58:	8000                	.insn	2, 0x8000
    2c5a:	00ac                	.insn	2, 0x00ac
    2c5c:	0000                	.insn	2, 0x
    2c5e:	9c01                	.insn	2, 0x9c01
    2c60:	03ba                	.insn	2, 0x03ba
    2c62:	0000                	.insn	2, 0x
    2c64:	00141c07          	.insn	4, 0x00141c07
    2c68:	a900                	.insn	2, 0xa900
    2c6a:	1d01                	.insn	2, 0x1d01
    2c6c:	0026                	.insn	2, 0x0026
    2c6e:	0000                	.insn	2, 0x
    2c70:	9102                	.insn	2, 0x9102
    2c72:	075c                	.insn	2, 0x075c
    2c74:	1302                	.insn	2, 0x1302
    2c76:	0000                	.insn	2, 0x
    2c78:	01aa                	.insn	2, 0x01aa
    2c7a:	261d                	.insn	2, 0x261d
    2c7c:	0000                	.insn	2, 0x
    2c7e:	0200                	.insn	2, 0x0200
    2c80:	5891                	.insn	2, 0x5891
    2c82:	7009                	.insn	2, 0x7009
    2c84:	0076                	.insn	2, 0x0076
    2c86:	01ac                	.insn	2, 0x01ac
    2c88:	890c                	.insn	2, 0x890c
    2c8a:	0000                	.insn	2, 0x
    2c8c:	0200                	.insn	2, 0x0200
    2c8e:	6c91                	.insn	2, 0x6c91
    2c90:	0b00                	.insn	2, 0x0b00
    2c92:	143e                	.insn	2, 0x143e
    2c94:	0000                	.insn	2, 0x
    2c96:	555401a3          	sb	s5,1347(s0)
    2c9a:	8000                	.insn	2, 0x8000
    2c9c:	0024                	.insn	2, 0x0024
    2c9e:	0000                	.insn	2, 0x
    2ca0:	9c01                	.insn	2, 0x9c01
    2ca2:	080e                	.insn	2, 0x080e
    2ca4:	9d000013          	addi	zero,zero,-1584
    2ca8:	2601                	.insn	2, 0x2601
    2caa:	0000                	.insn	2, 0x
    2cac:	2800                	.insn	2, 0x2800
    2cae:	0055                	.insn	2, 0x0055
    2cb0:	2c80                	.insn	2, 0x2c80
    2cb2:	0000                	.insn	2, 0x
    2cb4:	0100                	.insn	2, 0x0100
    2cb6:	0e9c                	.insn	2, 0x0e9c
    2cb8:	12b5                	.insn	2, 0x12b5
    2cba:	0000                	.insn	2, 0x
    2cbc:	00260197          	auipc	gp,0x260
    2cc0:	0000                	.insn	2, 0x
    2cc2:	54fc                	.insn	2, 0x54fc
    2cc4:	8000                	.insn	2, 0x8000
    2cc6:	002c                	.insn	2, 0x002c
    2cc8:	0000                	.insn	2, 0x
    2cca:	9c01                	.insn	2, 0x9c01
    2ccc:	140c                	.insn	2, 0x140c
    2cce:	0005                	.insn	2, 0x0005
    2cd0:	5c00                	.insn	2, 0x5c00
    2cd2:	3401                	.insn	2, 0x3401
    2cd4:	0054                	.insn	2, 0x0054
    2cd6:	c880                	.insn	2, 0xc880
    2cd8:	0000                	.insn	2, 0x
    2cda:	0100                	.insn	2, 0x0100
    2cdc:	389c                	.insn	2, 0x389c
    2cde:	0004                	.insn	2, 0x0004
    2ce0:	1a00                	.insn	2, 0x1a00
    2ce2:	7670                	.insn	2, 0x7670
    2ce4:	0100                	.insn	2, 0x0100
    2ce6:	015c                	.insn	2, 0x015c
    2ce8:	8918                	.insn	2, 0x8918
    2cea:	0000                	.insn	2, 0x
    2cec:	0200                	.insn	2, 0x0200
    2cee:	5c91                	.insn	2, 0x5c91
    2cf0:	7009                	.insn	2, 0x7009
    2cf2:	6375                	.insn	2, 0x6375
    2cf4:	5e00                	.insn	2, 0x5e00
    2cf6:	0f01                	.insn	2, 0x0f01
    2cf8:	00e1                	.insn	2, 0x00e1
    2cfa:	0000                	.insn	2, 0x
    2cfc:	9102                	.insn	2, 0x9102
    2cfe:	036c                	.insn	2, 0x036c
    2d00:	1466                	.insn	2, 0x1466
    2d02:	0000                	.insn	2, 0x
    2d04:	015f e713 0001      	.insn	6, 0x0001e713015f
    2d0a:	0200                	.insn	2, 0x0200
    2d0c:	6891                	.insn	2, 0x6891
    2d0e:	1b00                	.insn	2, 0x1b00
    2d10:	045d                	.insn	2, 0x045d
    2d12:	0000                	.insn	2, 0x
    2d14:	ad01                	.insn	2, 0xad01
    2d16:	8908                	.insn	2, 0x8908
    2d18:	0000                	.insn	2, 0x
    2d1a:	f000                	.insn	2, 0xf000
    2d1c:	0051                	.insn	2, 0x0051
    2d1e:	4480                	.insn	2, 0x4480
    2d20:	0002                	.insn	2, 0x0002
    2d22:	0100                	.insn	2, 0x0100
    2d24:	1c9c                	.insn	2, 0x1c9c
    2d26:	1432                	.insn	2, 0x1432
    2d28:	0000                	.insn	2, 0x
    2d2a:	ad01                	.insn	2, 0xad01
    2d2c:	261d                	.insn	2, 0x261d
    2d2e:	0000                	.insn	2, 0x
    2d30:	0200                	.insn	2, 0x0200
    2d32:	4c91                	.insn	2, 0x4c91
    2d34:	1701                	.insn	2, 0x1701
    2d36:	0012                	.insn	2, 0x0012
    2d38:	af00                	.insn	2, 0xaf00
    2d3a:	0001e713          	ori	a4,gp,0
    2d3e:	0200                	.insn	2, 0x0200
    2d40:	6c91                	.insn	2, 0x6c91
    2d42:	c001                	.insn	2, 0xc001
    2d44:	0011                	.insn	2, 0x0011
    2d46:	b000                	.insn	2, 0xb000
    2d48:	0001e713          	ori	a4,gp,0
    2d4c:	0200                	.insn	2, 0x0200
    2d4e:	6891                	.insn	2, 0x6891
    2d50:	a601                	.insn	2, 0xa601
    2d52:	0012                	.insn	2, 0x0012
    2d54:	b100                	.insn	2, 0xb100
    2d56:	0001e713          	ori	a4,gp,0
    2d5a:	0200                	.insn	2, 0x0200
    2d5c:	5c91                	.insn	2, 0x5c91
    2d5e:	e201                	.insn	2, 0xe201
    2d60:	0012                	.insn	2, 0x0012
    2d62:	b200                	.insn	2, 0xb200
    2d64:	890c                	.insn	2, 0x890c
    2d66:	0000                	.insn	2, 0x
    2d68:	0200                	.insn	2, 0x0200
    2d6a:	6491                	.insn	2, 0x6491
    2d6c:	ca01                	.insn	2, 0xca01
    2d6e:	0012                	.insn	2, 0x0012
    2d70:	b300                	.insn	2, 0xb300
    2d72:	260c                	.insn	2, 0x260c
    2d74:	0000                	.insn	2, 0x
    2d76:	0200                	.insn	2, 0x0200
    2d78:	6091                	.insn	2, 0x6091
    2d7a:	0000                	.insn	2, 0x
    2d7c:	0022                	.insn	2, 0x0022
    2d7e:	0000                	.insn	2, 0x
    2d80:	0002                	.insn	2, 0x0002
    2d82:	000009cf          	.insn	4, 0x09cf
    2d86:	0104                	.insn	2, 0x0104
    2d88:	3330                	.insn	2, 0x3330
    2d8a:	0000                	.insn	2, 0x
    2d8c:	0000                	.insn	2, 0x
    2d8e:	8000                	.insn	2, 0x8000
    2d90:	0010                	.insn	2, 0x0010
    2d92:	8000                	.insn	2, 0x8000
    2d94:	1474                	.insn	2, 0x1474
    2d96:	0000                	.insn	2, 0x
    2d98:	1185                	.insn	2, 0x1185
    2d9a:	0000                	.insn	2, 0x
    2d9c:	11b2                	.insn	2, 0x11b2
    2d9e:	0000                	.insn	2, 0x
    2da0:	8001                	.insn	2, 0x8001
    2da2:	0258                	.insn	2, 0x0258
    2da4:	0000                	.insn	2, 0x
    2da6:	0005                	.insn	2, 0x0005
    2da8:	0401                	.insn	2, 0x0401
    2daa:	000009e3          	beq	zero,zero,35bc <__start-0x7fffca44>
    2dae:	6309                	.insn	2, 0x6309
    2db0:	0000                	.insn	2, 0x
    2db2:	1d00                	.insn	2, 0x1d00
    2db4:	0231                	.insn	2, 0x0231
    2db6:	0000                	.insn	2, 0x
    2db8:	0000                	.insn	2, 0x
    2dba:	0000                	.insn	2, 0x
    2dbc:	5a40                	.insn	2, 0x5a40
    2dbe:	8000                	.insn	2, 0x8000
    2dc0:	02d0                	.insn	2, 0x02d0
    2dc2:	0000                	.insn	2, 0x
    2dc4:	3379                	.insn	2, 0x3379
    2dc6:	0000                	.insn	2, 0x
    2dc8:	0102                	.insn	2, 0x0102
    2dca:	0206                	.insn	2, 0x0206
    2dcc:	0000                	.insn	2, 0x
    2dce:	0200                	.insn	2, 0x0200
    2dd0:	0502                	.insn	2, 0x0502
    2dd2:	00fd                	.insn	2, 0x00fd
    2dd4:	0000                	.insn	2, 0x
    2dd6:	1606                	.insn	2, 0x1606
    2dd8:	02000007          	.insn	4, 0x02000007
    2ddc:	1828                	.insn	2, 0x1828
    2dde:	0040                	.insn	2, 0x0040
    2de0:	0000                	.insn	2, 0x
    2de2:	040a                	.insn	2, 0x040a
    2de4:	6905                	.insn	2, 0x6905
    2de6:	746e                	.insn	2, 0x746e
    2de8:	0200                	.insn	2, 0x0200
    2dea:	0508                	.insn	2, 0x0508
    2dec:	000000ef          	jal	ra,2dec <__start-0x7fffd214>
    2df0:	0102                	.insn	2, 0x0102
    2df2:	0008                	.insn	2, 0x0008
    2df4:	0000                	.insn	2, 0x
    2df6:	0200                	.insn	2, 0x0200
    2df8:	0702                	.insn	2, 0x0702
    2dfa:	000e                	.insn	2, 0x000e
    2dfc:	0000                	.insn	2, 0x
    2dfe:	4b06                	.insn	2, 0x4b06
    2e00:	0002                	.insn	2, 0x0002
    2e02:	0200                	.insn	2, 0x0200
    2e04:	1934                	.insn	2, 0x1934
    2e06:	0068                	.insn	2, 0x0068
    2e08:	0000                	.insn	2, 0x
    2e0a:	0402                	.insn	2, 0x0402
    2e0c:	0000e207          	.insn	4, 0xe207
    2e10:	0200                	.insn	2, 0x0200
    2e12:	0708                	.insn	2, 0x0708
    2e14:	00d8                	.insn	2, 0x00d8
    2e16:	0000                	.insn	2, 0x
    2e18:	ee06                	.insn	2, 0xee06
    2e1a:	0002                	.insn	2, 0x0002
    2e1c:	0300                	.insn	2, 0x0300
    2e1e:	17d6                	.insn	2, 0x17d6
    2e20:	0068                	.insn	2, 0x0068
    2e22:	0000                	.insn	2, 0x
    2e24:	1002                	.insn	2, 0x1002
    2e26:	1c04                	.insn	2, 0x1c04
    2e28:	0001                	.insn	2, 0x0001
    2e2a:	0400                	.insn	2, 0x0400
    2e2c:	00000caf          	.insn	4, 0x0caf
    2e30:	00d3073f 5ca80000 	.insn	8, 0x5ca8000000d3073f
    2e38:	8000                	.insn	2, 0x8000
    2e3a:	0068                	.insn	2, 0x0068
    2e3c:	0000                	.insn	2, 0x
    2e3e:	9c01                	.insn	2, 0x9c01
    2e40:	000000d3          	.insn	4, 0x00d3
    2e44:	7301                	.insn	2, 0x7301
    2e46:	3f00                	.insn	2, 0x3f00
    2e48:	d314                	.insn	2, 0xd314
    2e4a:	0000                	.insn	2, 0x
    2e4c:	0200                	.insn	2, 0x0200
    2e4e:	5c91                	.insn	2, 0x5c91
    2e50:	6301                	.insn	2, 0x6301
    2e52:	3f00                	.insn	2, 0x3f00
    2e54:	0000401b          	.insn	4, 0x401b
    2e58:	0200                	.insn	2, 0x0200
    2e5a:	5891                	.insn	2, 0x5891
    2e5c:	6e01                	.insn	2, 0x6e01
    2e5e:	3f00                	.insn	2, 0x3f00
    2e60:	7625                	.insn	2, 0x7625
    2e62:	0000                	.insn	2, 0x
    2e64:	0200                	.insn	2, 0x0200
    2e66:	5491                	.insn	2, 0x5491
    2e68:	40007003          	.insn	4, 0x40007003
    2e6c:	0000d50b          	.insn	4, 0xd50b
    2e70:	0200                	.insn	2, 0x0200
    2e72:	6c91                	.insn	2, 0x6c91
    2e74:	0b00                	.insn	2, 0x0b00
    2e76:	0704                	.insn	2, 0x0704
    2e78:	00da                	.insn	2, 0x00da
    2e7a:	0000                	.insn	2, 0x
    2e7c:	0102                	.insn	2, 0x0102
    2e7e:	0908                	.insn	2, 0x0908
    2e80:	0000                	.insn	2, 0x
    2e82:	0c00                	.insn	2, 0x0c00
    2e84:	00da                	.insn	2, 0x00da
    2e86:	0000                	.insn	2, 0x
    2e88:	1504                	.insn	2, 0x1504
    2e8a:	0004                	.insn	2, 0x0004
    2e8c:	3800                	.insn	2, 0x3800
    2e8e:	0000d307          	.insn	4, 0xd307
    2e92:	3000                	.insn	2, 0x3000
    2e94:	005c                	.insn	2, 0x005c
    2e96:	7880                	.insn	2, 0x7880
    2e98:	0000                	.insn	2, 0x
    2e9a:	0100                	.insn	2, 0x0100
    2e9c:	419c                	.insn	2, 0x419c
    2e9e:	0001                	.insn	2, 0x0001
    2ea0:	0d00                	.insn	2, 0x0d00
    2ea2:	1494                	.insn	2, 0x1494
    2ea4:	0000                	.insn	2, 0x
    2ea6:	3801                	.insn	2, 0x3801
    2ea8:	d314                	.insn	2, 0xd314
    2eaa:	0000                	.insn	2, 0x
    2eac:	0200                	.insn	2, 0x0200
    2eae:	5c91                	.insn	2, 0x5c91
    2eb0:	7301                	.insn	2, 0x7301
    2eb2:	6372                	.insn	2, 0x6372
    2eb4:	3800                	.insn	2, 0x3800
    2eb6:	4126                	.insn	2, 0x4126
    2eb8:	0001                	.insn	2, 0x0001
    2eba:	0200                	.insn	2, 0x0200
    2ebc:	5891                	.insn	2, 0x5891
    2ebe:	6e01                	.insn	2, 0x6e01
    2ec0:	3800                	.insn	2, 0x3800
    2ec2:	7632                	.insn	2, 0x7632
    2ec4:	0000                	.insn	2, 0x
    2ec6:	0200                	.insn	2, 0x0200
    2ec8:	5491                	.insn	2, 0x5491
    2eca:	39006403          	.insn	4, 0x39006403
    2ece:	0000d50b          	.insn	4, 0xd50b
    2ed2:	0200                	.insn	2, 0x0200
    2ed4:	6c91                	.insn	2, 0x6c91
    2ed6:	3a007303          	.insn	4, 0x3a007303
    2eda:	4711                	.insn	2, 0x4711
    2edc:	0001                	.insn	2, 0x0001
    2ede:	0200                	.insn	2, 0x0200
    2ee0:	6891                	.insn	2, 0x6891
    2ee2:	0700                	.insn	2, 0x0700
    2ee4:	0146                	.insn	2, 0x0146
    2ee6:	0000                	.insn	2, 0x
    2ee8:	070e                	.insn	2, 0x070e
    2eea:	00e1                	.insn	2, 0x00e1
    2eec:	0000                	.insn	2, 0x
    2eee:	af04                	.insn	2, 0xaf04
    2ef0:	0014                	.insn	2, 0x0014
    2ef2:	2400                	.insn	2, 0x2400
    2ef4:	680e                	.insn	2, 0x680e
    2ef6:	0000                	.insn	2, 0x
    2ef8:	8400                	.insn	2, 0x8400
    2efa:	ac80005b          	.insn	4, 0xac80005b
    2efe:	0000                	.insn	2, 0x
    2f00:	0100                	.insn	2, 0x0100
    2f02:	ac9c                	.insn	2, 0xac9c
    2f04:	0001                	.insn	2, 0x0001
    2f06:	0100                	.insn	2, 0x0100
    2f08:	0061                	.insn	2, 0x0061
    2f0a:	2524                	.insn	2, 0x2524
    2f0c:	0068                	.insn	2, 0x0068
    2f0e:	0000                	.insn	2, 0x
    2f10:	9102                	.insn	2, 0x9102
    2f12:	015c                	.insn	2, 0x015c
    2f14:	0062                	.insn	2, 0x0062
    2f16:	3524                	.insn	2, 0x3524
    2f18:	0068                	.insn	2, 0x0068
    2f1a:	0000                	.insn	2, 0x
    2f1c:	9102                	.insn	2, 0x9102
    2f1e:	0358                	.insn	2, 0x0358
    2f20:	0071                	.insn	2, 0x0071
    2f22:	1225                	.insn	2, 0x1225
    2f24:	0068                	.insn	2, 0x0068
    2f26:	0000                	.insn	2, 0x
    2f28:	9102                	.insn	2, 0x9102
    2f2a:	036c                	.insn	2, 0x036c
    2f2c:	0072                	.insn	2, 0x0072
    2f2e:	1226                	.insn	2, 0x1226
    2f30:	0068                	.insn	2, 0x0068
    2f32:	0000                	.insn	2, 0x
    2f34:	9102                	.insn	2, 0x9102
    2f36:	0868                	.insn	2, 0x0868
    2f38:	5ba4                	.insn	2, 0x5ba4
    2f3a:	8000                	.insn	2, 0x8000
    2f3c:	0074                	.insn	2, 0x0074
    2f3e:	0000                	.insn	2, 0x
    2f40:	29006903          	.insn	4, 0x29006903
    2f44:	400e                	.insn	2, 0x400e
    2f46:	0000                	.insn	2, 0x
    2f48:	0200                	.insn	2, 0x0200
    2f4a:	6491                	.insn	2, 0x6491
    2f4c:	0000                	.insn	2, 0x
    2f4e:	8b04                	.insn	2, 0x8b04
    2f50:	0014                	.insn	2, 0x0014
    2f52:	1b00                	.insn	2, 0x1b00
    2f54:	3409                	.insn	2, 0x3409
    2f56:	0000                	.insn	2, 0x
    2f58:	1000                	.insn	2, 0x1000
    2f5a:	7480005b          	.insn	4, 0x7480005b
    2f5e:	0000                	.insn	2, 0x
    2f60:	0100                	.insn	2, 0x0100
    2f62:	f89c                	.insn	2, 0xf89c
    2f64:	0001                	.insn	2, 0x0001
    2f66:	0100                	.insn	2, 0x0100
    2f68:	0078                	.insn	2, 0x0078
    2f6a:	005c1b1b          	.insn	4, 0x005c1b1b
    2f6e:	0000                	.insn	2, 0x
    2f70:	9102                	.insn	2, 0x9102
    2f72:	055c                	.insn	2, 0x055c
    2f74:	14a9                	.insn	2, 0x14a9
    2f76:	0000                	.insn	2, 0x
    2f78:	091d                	.insn	2, 0x091d
    2f7a:	0040                	.insn	2, 0x0040
    2f7c:	0000                	.insn	2, 0x
    2f7e:	9102                	.insn	2, 0x9102
    2f80:	086c                	.insn	2, 0x086c
    2f82:	5b38                	.insn	2, 0x5b38
    2f84:	8000                	.insn	2, 0x8000
    2f86:	0034                	.insn	2, 0x0034
    2f88:	0000                	.insn	2, 0x
    2f8a:	8605                	.insn	2, 0x8605
    2f8c:	0014                	.insn	2, 0x0014
    2f8e:	1e00                	.insn	2, 0x1e00
    2f90:	3412                	.insn	2, 0x3412
    2f92:	0000                	.insn	2, 0x
    2f94:	0200                	.insn	2, 0x0200
    2f96:	6891                	.insn	2, 0x6891
    2f98:	0000                	.insn	2, 0x
    2f9a:	0014990f          	.insn	4, 0x0014990f
    2f9e:	0100                	.insn	2, 0x0100
    2fa0:	00340907          	.insn	4, 0x00340907
    2fa4:	0000                	.insn	2, 0x
    2fa6:	5a40                	.insn	2, 0x5a40
    2fa8:	8000                	.insn	2, 0x8000
    2faa:	00d0                	.insn	2, 0x00d0
    2fac:	0000                	.insn	2, 0x
    2fae:	9c01                	.insn	2, 0x9c01
    2fb0:	6101                	.insn	2, 0x6101
    2fb2:	0700                	.insn	2, 0x0700
    2fb4:	341a                	.insn	2, 0x341a
    2fb6:	0000                	.insn	2, 0x
    2fb8:	0200                	.insn	2, 0x0200
    2fba:	5c91                	.insn	2, 0x5c91
    2fbc:	6201                	.insn	2, 0x6201
    2fbe:	0700                	.insn	2, 0x0700
    2fc0:	3425                	.insn	2, 0x3425
    2fc2:	0000                	.insn	2, 0x
    2fc4:	0200                	.insn	2, 0x0200
    2fc6:	5891                	.insn	2, 0x5891
    2fc8:	a205                	.insn	2, 0xa205
    2fca:	0014                	.insn	2, 0x0014
    2fcc:	0800                	.insn	2, 0x0800
    2fce:	340d                	.insn	2, 0x340d
    2fd0:	0000                	.insn	2, 0x
    2fd2:	0200                	.insn	2, 0x0200
    2fd4:	6c91                	.insn	2, 0x6c91
    2fd6:	b905                	.insn	2, 0xb905
    2fd8:	0014                	.insn	2, 0x0014
    2fda:	0900                	.insn	2, 0x0900
    2fdc:	4009                	.insn	2, 0x4009
    2fde:	0000                	.insn	2, 0x
    2fe0:	0200                	.insn	2, 0x0200
    2fe2:	6091                	.insn	2, 0x6091
    2fe4:	0c007803          	.insn	4, 0x0c007803
    2fe8:	5c0e                	.insn	2, 0x5c0e
    2fea:	0000                	.insn	2, 0x
    2fec:	0200                	.insn	2, 0x0200
    2fee:	6891                	.insn	2, 0x6891
    2ff0:	0d007903          	.insn	4, 0x0d007903
    2ff4:	5c0e                	.insn	2, 0x5c0e
    2ff6:	0000                	.insn	2, 0x
    2ff8:	0200                	.insn	2, 0x0200
    2ffa:	6491                	.insn	2, 0x6491
	...

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	2401                	.insn	2, 0x2401
   2:	0b00                	.insn	2, 0x0b00
   4:	030b3e0b          	.insn	4, 0x030b3e0b
   8:	000e                	.insn	2, 0x000e
   a:	0200                	.insn	2, 0x0200
   c:	002e                	.insn	2, 0x002e
   e:	0e03193f 3b01213a 	.insn	8, 0x3b01213a0e03193f
  16:	0621390b          	.insn	4, 0x0621390b
  1a:	01111927          	.insn	4, 0x01111927
  1e:	0612                	.insn	2, 0x0612
  20:	1840                	.insn	2, 0x1840
  22:	197a                	.insn	2, 0x197a
  24:	0000                	.insn	2, 0x
  26:	25011103          	lh	sp,592(sp)
  2a:	130e                	.insn	2, 0x130e
  2c:	1b1f030b          	.insn	4, 0x1b1f030b
  30:	111f 1201 1006      	.insn	6, 0x10061201111f
  36:	04000017          	auipc	zero,0x4000
  3a:	0024                	.insn	2, 0x0024
  3c:	0b3e0b0b          	.insn	4, 0x0b3e0b0b
  40:	00000803          	lb	a6,0(zero) # 0 <__start-0x80000000>
  44:	3405                	.insn	2, 0x3405
  46:	0300                	.insn	2, 0x0300
  48:	3a08                	.insn	2, 0x3a08
  4a:	390b3b0b          	.insn	4, 0x390b3b0b
  4e:	3f13490b          	.insn	4, 0x3f13490b
  52:	0219                	.insn	2, 0x0219
  54:	0018                	.insn	2, 0x0018
  56:	0000                	.insn	2, 0x
  58:	2401                	.insn	2, 0x2401
  5a:	0b00                	.insn	2, 0x0b00
  5c:	030b3e0b          	.insn	4, 0x030b3e0b
  60:	000e                	.insn	2, 0x000e
  62:	0200                	.insn	2, 0x0200
  64:	000d                	.insn	2, 0x000d
  66:	213a0e03          	lb	t3,531(s4) # 14213 <__start-0x7ffebded>
  6a:	3b04                	.insn	2, 0x3b04
  6c:	490b390b          	.insn	4, 0x490b390b
  70:	000b3813          	sltiu	a6,s6,0
  74:	0300                	.insn	2, 0x0300
  76:	0005                	.insn	2, 0x0005
  78:	213a0e03          	lb	t3,531(s4)
  7c:	3b01                	.insn	2, 0x3b01
  7e:	490b390b          	.insn	4, 0x490b390b
  82:	00180213          	addi	tp,a6,1 # 351da5 <__start-0x7fcae25b>
  86:	0400                	.insn	2, 0x0400
  88:	0016                	.insn	2, 0x0016
  8a:	0b3a0e03          	lb	t3,179(s4)
  8e:	0b390b3b          	.insn	4, 0x0b390b3b
  92:	1349                	.insn	2, 0x1349
  94:	0000                	.insn	2, 0x
  96:	0f05                	.insn	2, 0x0f05
  98:	0b00                	.insn	2, 0x0b00
  9a:	0421                	.insn	2, 0x0421
  9c:	1349                	.insn	2, 0x1349
  9e:	0000                	.insn	2, 0x
  a0:	3406                	.insn	2, 0x3406
  a2:	0300                	.insn	2, 0x0300
  a4:	3a0e                	.insn	2, 0x3a0e
  a6:	0121                	.insn	2, 0x0121
  a8:	0b390b3b          	.insn	4, 0x0b390b3b
  ac:	1349                	.insn	2, 0x1349
  ae:	1802                	.insn	2, 0x1802
  b0:	0000                	.insn	2, 0x
  b2:	49002607          	.insn	4, 0x49002607
  b6:	08000013          	addi	zero,zero,128
  ba:	0e030113          	addi	sp,t1,224
  be:	213a0b0b          	.insn	4, 0x213a0b0b
  c2:	3b04                	.insn	2, 0x3b04
  c4:	010b390b          	.insn	4, 0x010b390b
  c8:	09000013          	addi	zero,zero,144
  cc:	012e                	.insn	2, 0x012e
  ce:	0e03193f 3b01213a 	.insn	8, 0x3b01213a0e03193f
  d6:	0621390b          	.insn	4, 0x0621390b
  da:	01111927          	.insn	4, 0x01111927
  de:	0612                	.insn	2, 0x0612
  e0:	1840                	.insn	2, 0x1840
  e2:	197a                	.insn	2, 0x197a
  e4:	1301                	.insn	2, 0x1301
  e6:	0000                	.insn	2, 0x
  e8:	110a                	.insn	2, 0x110a
  ea:	2501                	.insn	2, 0x2501
  ec:	130e                	.insn	2, 0x130e
  ee:	1b1f030b          	.insn	4, 0x1b1f030b
  f2:	111f 1201 1006      	.insn	6, 0x10061201111f
  f8:	0b000017          	auipc	zero,0xb000
  fc:	0024                	.insn	2, 0x0024
  fe:	0b3e0b0b          	.insn	4, 0x0b3e0b0b
 102:	00000803          	lb	a6,0(zero) # 0 <__start-0x80000000>
 106:	0f0c                	.insn	2, 0x0f0c
 108:	0b00                	.insn	2, 0x0b00
 10a:	0d00000b          	.insn	4, 0x0d00000b
 10e:	012e                	.insn	2, 0x012e
 110:	0e03193f 0b3b0b3a 	.insn	8, 0x0b3b0b3a0e03193f
 118:	0b39                	.insn	2, 0x0b39
 11a:	13491927          	.insn	4, 0x13491927
 11e:	0111                	.insn	2, 0x0111
 120:	0612                	.insn	2, 0x0612
 122:	1840                	.insn	2, 0x1840
 124:	197a                	.insn	2, 0x197a
 126:	1301                	.insn	2, 0x1301
 128:	0000                	.insn	2, 0x
 12a:	2e0e                	.insn	2, 0x2e0e
 12c:	3f01                	.insn	2, 0x3f01
 12e:	0319                	.insn	2, 0x0319
 130:	3a0e                	.insn	2, 0x3a0e
 132:	390b3b0b          	.insn	4, 0x390b3b0b
 136:	1119270b          	.insn	4, 0x1119270b
 13a:	1201                	.insn	2, 0x1201
 13c:	4006                	.insn	2, 0x4006
 13e:	7a18                	.insn	2, 0x7a18
 140:	0019                	.insn	2, 0x0019
 142:	0000                	.insn	2, 0x
 144:	3401                	.insn	2, 0x3401
 146:	0300                	.insn	2, 0x0300
 148:	3a0e                	.insn	2, 0x3a0e
 14a:	0121                	.insn	2, 0x0121
 14c:	0b39053b          	.insn	4, 0x0b39053b
 150:	1349                	.insn	2, 0x1349
 152:	1802                	.insn	2, 0x1802
 154:	0000                	.insn	2, 0x
 156:	0502                	.insn	2, 0x0502
 158:	0300                	.insn	2, 0x0300
 15a:	3a0e                	.insn	2, 0x3a0e
 15c:	0121                	.insn	2, 0x0121
 15e:	0b39053b          	.insn	4, 0x0b39053b
 162:	1349                	.insn	2, 0x1349
 164:	1802                	.insn	2, 0x1802
 166:	0000                	.insn	2, 0x
 168:	03000d03          	lb	s10,48(zero) # 30 <__start-0x7fffffd0>
 16c:	3a0e                	.insn	2, 0x3a0e
 16e:	390b3b0b          	.insn	4, 0x390b3b0b
 172:	3813490b          	.insn	4, 0x3813490b
 176:	0400000b          	.insn	4, 0x0400000b
 17a:	0016                	.insn	2, 0x0016
 17c:	0b3a0e03          	lb	t3,179(s4)
 180:	0b390b3b          	.insn	4, 0x0b390b3b
 184:	1349                	.insn	2, 0x1349
 186:	0000                	.insn	2, 0x
 188:	2605                	.insn	2, 0x2605
 18a:	4900                	.insn	2, 0x4900
 18c:	06000013          	addi	zero,zero,96
 190:	210b000f          	.insn	4, 0x210b000f
 194:	4904                	.insn	2, 0x4904
 196:	07000013          	addi	zero,zero,112
 19a:	0005                	.insn	2, 0x0005
 19c:	1349                	.insn	2, 0x1349
 19e:	0000                	.insn	2, 0x
 1a0:	0b08                	.insn	2, 0x0b08
 1a2:	1101                	.insn	2, 0x1101
 1a4:	1201                	.insn	2, 0x1201
 1a6:	0006                	.insn	2, 0x0006
 1a8:	0900                	.insn	2, 0x0900
 1aa:	0024                	.insn	2, 0x0024
 1ac:	0b3e0b0b          	.insn	4, 0x0b3e0b0b
 1b0:	00000e03          	lb	t3,0(zero) # 0 <__start-0x80000000>
 1b4:	2e0a                	.insn	2, 0x2e0a
 1b6:	3f01                	.insn	2, 0x3f01
 1b8:	0319                	.insn	2, 0x0319
 1ba:	3a0e                	.insn	2, 0x3a0e
 1bc:	0121                	.insn	2, 0x0121
 1be:	0b39053b          	.insn	4, 0x0b39053b
 1c2:	13491927          	.insn	4, 0x13491927
 1c6:	0111                	.insn	2, 0x0111
 1c8:	0612                	.insn	2, 0x0612
 1ca:	1840                	.insn	2, 0x1840
 1cc:	197c                	.insn	2, 0x197c
 1ce:	1301                	.insn	2, 0x1301
 1d0:	0000                	.insn	2, 0x
 1d2:	0301130b          	.insn	4, 0x0301130b
 1d6:	0b0e                	.insn	2, 0x0b0e
 1d8:	3b0b3a0b          	.insn	4, 0x3b0b3a0b
 1dc:	010b390b          	.insn	4, 0x010b390b
 1e0:	0c000013          	addi	zero,zero,192
 1e4:	012e                	.insn	2, 0x012e
 1e6:	0e03193f 3b01213a 	.insn	8, 0x3b01213a0e03193f
 1ee:	3905                	.insn	2, 0x3905
 1f0:	4919270b          	.insn	4, 0x4919270b
 1f4:	12011113          	.insn	4, 0x12011113
 1f8:	4006                	.insn	2, 0x4006
 1fa:	7a18                	.insn	2, 0x7a18
 1fc:	0119                	.insn	2, 0x0119
 1fe:	0d000013          	addi	zero,zero,208
 202:	012e                	.insn	2, 0x012e
 204:	0e03193f 053b0b3a 	.insn	8, 0x053b0b3a0e03193f
 20c:	2139                	.insn	2, 0x2139
 20e:	2706                	.insn	2, 0x2706
 210:	3c19                	.insn	2, 0x3c19
 212:	0119                	.insn	2, 0x0119
 214:	0e000013          	addi	zero,zero,224
 218:	012e                	.insn	2, 0x012e
 21a:	213a0e03          	lb	t3,531(s4)
 21e:	3b01                	.insn	2, 0x3b01
 220:	3905                	.insn	2, 0x3905
 222:	0d21                	.insn	2, 0x0d21
 224:	01111927          	.insn	4, 0x01111927
 228:	0612                	.insn	2, 0x0612
 22a:	1840                	.insn	2, 0x1840
 22c:	197c                	.insn	2, 0x197c
 22e:	1301                	.insn	2, 0x1301
 230:	0000                	.insn	2, 0x
 232:	4900370f          	.insn	4, 0x4900370f
 236:	10000013          	addi	zero,zero,256
 23a:	0035                	.insn	2, 0x0035
 23c:	1349                	.insn	2, 0x1349
 23e:	0000                	.insn	2, 0x
 240:	0d11                	.insn	2, 0x0d11
 242:	0300                	.insn	2, 0x0300
 244:	3a0e                	.insn	2, 0x3a0e
 246:	0121                	.insn	2, 0x0121
 248:	21390b3b          	.insn	4, 0x21390b3b
 24c:	4919                	.insn	2, 0x4919
 24e:	12000013          	addi	zero,zero,288
 252:	002e                	.insn	2, 0x002e
 254:	0e03193f 3b08213a 	.insn	8, 0x3b08213a0e03193f
 25c:	3905                	.insn	2, 0x3905
 25e:	0621                	.insn	2, 0x0621
 260:	193c1927          	.insn	4, 0x193c1927
 264:	0000                	.insn	2, 0x
 266:	3f012e13          	slti	t3,sp,1008
 26a:	0319                	.insn	2, 0x0319
 26c:	3a0e                	.insn	2, 0x3a0e
 26e:	390b3b0b          	.insn	4, 0x390b3b0b
 272:	4919270b          	.insn	4, 0x4919270b
 276:	01193c13          	sltiu	s8,s2,17
 27a:	14000013          	addi	zero,zero,320
 27e:	002e                	.insn	2, 0x002e
 280:	0e03193f 3b08213a 	.insn	8, 0x3b08213a0e03193f
 288:	3905                	.insn	2, 0x3905
 28a:	4919270b          	.insn	4, 0x4919270b
 28e:	00193c13          	sltiu	s8,s2,1
 292:	1500                	.insn	2, 0x1500
 294:	012e                	.insn	2, 0x012e
 296:	0e03193f 3b08213a 	.insn	8, 0x3b08213a0e03193f
 29e:	3905                	.insn	2, 0x3905
 2a0:	0c21                	.insn	2, 0x0c21
 2a2:	13491927          	.insn	4, 0x13491927
 2a6:	193c                	.insn	2, 0x193c
 2a8:	1301                	.insn	2, 0x1301
 2aa:	0000                	.insn	2, 0x
 2ac:	2e16                	.insn	2, 0x2e16
 2ae:	0301                	.insn	2, 0x0301
 2b0:	3a0e                	.insn	2, 0x3a0e
 2b2:	0121                	.insn	2, 0x0121
 2b4:	2139053b          	.insn	4, 0x2139053b
 2b8:	49192713          	slti	a4,s2,1169
 2bc:	12011113          	.insn	4, 0x12011113
 2c0:	4006                	.insn	2, 0x4006
 2c2:	7a18                	.insn	2, 0x7a18
 2c4:	0119                	.insn	2, 0x0119
 2c6:	17000013          	addi	zero,zero,368
 2ca:	0111                	.insn	2, 0x0111
 2cc:	0e25                	.insn	2, 0x0e25
 2ce:	1f030b13          	addi	s6,t1,496
 2d2:	01111f1b          	.insn	4, 0x01111f1b
 2d6:	0612                	.insn	2, 0x0612
 2d8:	1710                	.insn	2, 0x1710
 2da:	0000                	.insn	2, 0x
 2dc:	2418                	.insn	2, 0x2418
 2de:	0b00                	.insn	2, 0x0b00
 2e0:	030b3e0b          	.insn	4, 0x030b3e0b
 2e4:	0008                	.insn	2, 0x0008
 2e6:	1900                	.insn	2, 0x1900
 2e8:	0b0b000f          	.insn	4, 0x0b0b000f
 2ec:	0000                	.insn	2, 0x
 2ee:	261a                	.insn	2, 0x261a
 2f0:	0000                	.insn	2, 0x
 2f2:	1b00                	.insn	2, 0x1b00
 2f4:	0034                	.insn	2, 0x0034
 2f6:	0b3a0e03          	lb	t3,179(s4)
 2fa:	0b390b3b          	.insn	4, 0x0b390b3b
 2fe:	1349                	.insn	2, 0x1349
 300:	193c193f 131c0000 	.insn	8, 0x131c0000193c193f
 308:	0300                	.insn	2, 0x0300
 30a:	3c0e                	.insn	2, 0x3c0e
 30c:	0019                	.insn	2, 0x0019
 30e:	1d00                	.insn	2, 0x1d00
 310:	000d                	.insn	2, 0x000d
 312:	0b3a0803          	lb	a6,179(s4)
 316:	0b390b3b          	.insn	4, 0x0b390b3b
 31a:	1349                	.insn	2, 0x1349
 31c:	0b38                	.insn	2, 0x0b38
 31e:	0000                	.insn	2, 0x
 320:	171e                	.insn	2, 0x171e
 322:	0b01                	.insn	2, 0x0b01
 324:	3b0b3a0b          	.insn	4, 0x3b0b3a0b
 328:	010b390b          	.insn	4, 0x010b390b
 32c:	1f000013          	addi	zero,zero,496
 330:	012e                	.insn	2, 0x012e
 332:	0e03193f 0b3b0b3a 	.insn	8, 0x0b3b0b3a0e03193f
 33a:	0b39                	.insn	2, 0x0b39
 33c:	193c1927          	.insn	4, 0x193c1927
 340:	1301                	.insn	2, 0x1301
 342:	0000                	.insn	2, 0x
 344:	0b20                	.insn	2, 0x0b20
 346:	1101                	.insn	2, 0x1101
 348:	1201                	.insn	2, 0x1201
 34a:	0106                	.insn	2, 0x0106
 34c:	21000013          	addi	zero,zero,528
 350:	012e                	.insn	2, 0x012e
 352:	0b3a0e03          	lb	t3,179(s4)
 356:	0b39053b          	.insn	4, 0x0b39053b
 35a:	13491927          	.insn	4, 0x13491927
 35e:	0111                	.insn	2, 0x0111
 360:	0612                	.insn	2, 0x0612
 362:	1840                	.insn	2, 0x1840
 364:	197c                	.insn	2, 0x197c
 366:	1301                	.insn	2, 0x1301
 368:	0000                	.insn	2, 0x
 36a:	2e22                	.insn	2, 0x2e22
 36c:	3f01                	.insn	2, 0x3f01
 36e:	0319                	.insn	2, 0x0319
 370:	3a0e                	.insn	2, 0x3a0e
 372:	39053b0b          	.insn	4, 0x39053b0b
 376:	1119270b          	.insn	4, 0x1119270b
 37a:	1201                	.insn	2, 0x1201
 37c:	4006                	.insn	2, 0x4006
 37e:	7c18                	.insn	2, 0x7c18
 380:	0119                	.insn	2, 0x0119
 382:	23000013          	addi	zero,zero,560
 386:	012e                	.insn	2, 0x012e
 388:	0e03193f 053b0b3a 	.insn	8, 0x053b0b3a0e03193f
 390:	0b39                	.insn	2, 0x0b39
 392:	13491927          	.insn	4, 0x13491927
 396:	0111                	.insn	2, 0x0111
 398:	0612                	.insn	2, 0x0612
 39a:	1840                	.insn	2, 0x1840
 39c:	197c                	.insn	2, 0x197c
 39e:	0000                	.insn	2, 0x
 3a0:	0100                	.insn	2, 0x0100
 3a2:	0034                	.insn	2, 0x0034
 3a4:	213a0e03          	lb	t3,531(s4)
 3a8:	3b01                	.insn	2, 0x3b01
 3aa:	3905                	.insn	2, 0x3905
 3ac:	0213490b          	.insn	4, 0x0213490b
 3b0:	0018                	.insn	2, 0x0018
 3b2:	0200                	.insn	2, 0x0200
 3b4:	0005                	.insn	2, 0x0005
 3b6:	213a0e03          	lb	t3,531(s4)
 3ba:	3b01                	.insn	2, 0x3b01
 3bc:	3905                	.insn	2, 0x3905
 3be:	0213490b          	.insn	4, 0x0213490b
 3c2:	0018                	.insn	2, 0x0018
 3c4:	0300                	.insn	2, 0x0300
 3c6:	210b000f          	.insn	4, 0x210b000f
 3ca:	4904                	.insn	2, 0x4904
 3cc:	04000013          	addi	zero,zero,64
 3d0:	0016                	.insn	2, 0x0016
 3d2:	0b3a0e03          	lb	t3,179(s4)
 3d6:	0b390b3b          	.insn	4, 0x0b390b3b
 3da:	1349                	.insn	2, 0x1349
 3dc:	0000                	.insn	2, 0x
 3de:	2605                	.insn	2, 0x2605
 3e0:	4900                	.insn	2, 0x4900
 3e2:	06000013          	addi	zero,zero,96
 3e6:	000d                	.insn	2, 0x000d
 3e8:	0b3a0e03          	lb	t3,179(s4)
 3ec:	0b390b3b          	.insn	4, 0x0b390b3b
 3f0:	1349                	.insn	2, 0x1349
 3f2:	0b38                	.insn	2, 0x0b38
 3f4:	0000                	.insn	2, 0x
 3f6:	11010b07          	.insn	4, 0x11010b07
 3fa:	1201                	.insn	2, 0x1201
 3fc:	0106                	.insn	2, 0x0106
 3fe:	08000013          	addi	zero,zero,128
 402:	0111010b          	.insn	4, 0x0111010b
 406:	0612                	.insn	2, 0x0612
 408:	0000                	.insn	2, 0x
 40a:	0509                	.insn	2, 0x0509
 40c:	4900                	.insn	2, 0x4900
 40e:	0a000013          	addi	zero,zero,160
 412:	0024                	.insn	2, 0x0024
 414:	0b3e0b0b          	.insn	4, 0x0b3e0b0b
 418:	00000e03          	lb	t3,0(zero) # 0 <__start-0x80000000>
 41c:	4900350b          	.insn	4, 0x4900350b
 420:	0c000013          	addi	zero,zero,192
 424:	012e                	.insn	2, 0x012e
 426:	0e03193f 3b01213a 	.insn	8, 0x3b01213a0e03193f
 42e:	3905                	.insn	2, 0x3905
 430:	4919270b          	.insn	4, 0x4919270b
 434:	12011113          	.insn	4, 0x12011113
 438:	4006                	.insn	2, 0x4006
 43a:	7a18                	.insn	2, 0x7a18
 43c:	0119                	.insn	2, 0x0119
 43e:	0d000013          	addi	zero,zero,208
 442:	000d                	.insn	2, 0x000d
 444:	213a0e03          	lb	t3,531(s4)
 448:	3b01                	.insn	2, 0x3b01
 44a:	3905                	.insn	2, 0x3905
 44c:	3813490b          	.insn	4, 0x3813490b
 450:	0e00000b          	.insn	4, 0x0e00000b
 454:	012e                	.insn	2, 0x012e
 456:	0e03193f 3b01213a 	.insn	8, 0x3b01213a0e03193f
 45e:	3905                	.insn	2, 0x3905
 460:	4919270b          	.insn	4, 0x4919270b
 464:	12011113          	.insn	4, 0x12011113
 468:	4006                	.insn	2, 0x4006
 46a:	7c18                	.insn	2, 0x7c18
 46c:	0119                	.insn	2, 0x0119
 46e:	0f000013          	addi	zero,zero,240
 472:	0101                	.insn	2, 0x0101
 474:	1349                	.insn	2, 0x1349
 476:	1301                	.insn	2, 0x1301
 478:	0000                	.insn	2, 0x
 47a:	2110                	.insn	2, 0x2110
 47c:	4900                	.insn	2, 0x4900
 47e:	000b2f13          	slti	t5,s6,0
 482:	1100                	.insn	2, 0x1100
 484:	0e030113          	addi	sp,t1,224
 488:	0b3a0b0b          	.insn	4, 0x0b3a0b0b
 48c:	0b390b3b          	.insn	4, 0x0b390b3b
 490:	1301                	.insn	2, 0x1301
 492:	0000                	.insn	2, 0x
 494:	2812                	.insn	2, 0x2812
 496:	0300                	.insn	2, 0x0300
 498:	1c0e                	.insn	2, 0x1c0e
 49a:	1300000b          	.insn	4, 0x1300000b
 49e:	012e                	.insn	2, 0x012e
 4a0:	0e03193f 3b01213a 	.insn	8, 0x3b01213a0e03193f
 4a8:	3905                	.insn	2, 0x3905
 4aa:	1119270b          	.insn	4, 0x1119270b
 4ae:	1201                	.insn	2, 0x1201
 4b0:	4006                	.insn	2, 0x4006
 4b2:	7a18                	.insn	2, 0x7a18
 4b4:	0119                	.insn	2, 0x0119
 4b6:	14000013          	addi	zero,zero,320
 4ba:	012e                	.insn	2, 0x012e
 4bc:	213a0e03          	lb	t3,531(s4)
 4c0:	3b01                	.insn	2, 0x3b01
 4c2:	3905                	.insn	2, 0x3905
 4c4:	1119270b          	.insn	4, 0x1119270b
 4c8:	1201                	.insn	2, 0x1201
 4ca:	4006                	.insn	2, 0x4006
 4cc:	7c18                	.insn	2, 0x7c18
 4ce:	0119                	.insn	2, 0x0119
 4d0:	15000013          	addi	zero,zero,336
 4d4:	012e                	.insn	2, 0x012e
 4d6:	0e03193f 3b01213a 	.insn	8, 0x3b01213a0e03193f
 4de:	3905                	.insn	2, 0x3905
 4e0:	1119270b          	.insn	4, 0x1119270b
 4e4:	1201                	.insn	2, 0x1201
 4e6:	4006                	.insn	2, 0x4006
 4e8:	7c18                	.insn	2, 0x7c18
 4ea:	0119                	.insn	2, 0x0119
 4ec:	16000013          	addi	zero,zero,352
 4f0:	012e                	.insn	2, 0x012e
 4f2:	0e03193f 3b08213a 	.insn	8, 0x3b08213a0e03193f
 4fa:	3905                	.insn	2, 0x3905
 4fc:	0621                	.insn	2, 0x0621
 4fe:	193c1927          	.insn	4, 0x193c1927
 502:	1301                	.insn	2, 0x1301
 504:	0000                	.insn	2, 0x
 506:	3f012e17          	auipc	t3,0x3f012
 50a:	0319                	.insn	2, 0x0319
 50c:	3a0e                	.insn	2, 0x3a0e
 50e:	390b3b0b          	.insn	4, 0x390b3b0b
 512:	4919270b          	.insn	4, 0x4919270b
 516:	01193c13          	sltiu	s8,s2,17
 51a:	18000013          	addi	zero,zero,384
 51e:	0016                	.insn	2, 0x0016
 520:	213a0e03          	lb	t3,531(s4)
 524:	3b01                	.insn	2, 0x3b01
 526:	3905                	.insn	2, 0x3905
 528:	0013490b          	.insn	4, 0x0013490b
 52c:	1900                	.insn	2, 0x1900
 52e:	002e                	.insn	2, 0x002e
 530:	213a0e03          	lb	t3,531(s4)
 534:	3b01                	.insn	2, 0x3b01
 536:	3905                	.insn	2, 0x3905
 538:	0d21                	.insn	2, 0x0d21
 53a:	01111927          	.insn	4, 0x01111927
 53e:	0612                	.insn	2, 0x0612
 540:	1840                	.insn	2, 0x1840
 542:	197a                	.insn	2, 0x197a
 544:	0000                	.insn	2, 0x
 546:	2e1a                	.insn	2, 0x2e1a
 548:	3f00                	.insn	2, 0x3f00
 54a:	0319                	.insn	2, 0x0319
 54c:	3a0e                	.insn	2, 0x3a0e
 54e:	0121                	.insn	2, 0x0121
 550:	2139053b          	.insn	4, 0x2139053b
 554:	2706                	.insn	2, 0x2706
 556:	1119                	.insn	2, 0x1119
 558:	1201                	.insn	2, 0x1201
 55a:	4006                	.insn	2, 0x4006
 55c:	7a18                	.insn	2, 0x7a18
 55e:	0019                	.insn	2, 0x0019
 560:	1b00                	.insn	2, 0x1b00
 562:	0111                	.insn	2, 0x0111
 564:	0e25                	.insn	2, 0x0e25
 566:	1f030b13          	addi	s6,t1,496
 56a:	01111f1b          	.insn	4, 0x01111f1b
 56e:	0612                	.insn	2, 0x0612
 570:	1710                	.insn	2, 0x1710
 572:	0000                	.insn	2, 0x
 574:	241c                	.insn	2, 0x241c
 576:	0b00                	.insn	2, 0x0b00
 578:	030b3e0b          	.insn	4, 0x030b3e0b
 57c:	0008                	.insn	2, 0x0008
 57e:	1d00                	.insn	2, 0x1d00
 580:	0b0b000f          	.insn	4, 0x0b0b000f
 584:	0000                	.insn	2, 0x
 586:	151e                	.insn	2, 0x151e
 588:	2701                	.insn	2, 0x2701
 58a:	0119                	.insn	2, 0x0119
 58c:	1f000013          	addi	zero,zero,496
 590:	0034                	.insn	2, 0x0034
 592:	0b3a0e03          	lb	t3,179(s4)
 596:	0b390b3b          	.insn	4, 0x0b390b3b
 59a:	1349                	.insn	2, 0x1349
 59c:	193c193f 13200000 	.insn	8, 0x13200000193c193f
 5a4:	0301                	.insn	2, 0x0301
 5a6:	0b0e                	.insn	2, 0x0b0e
 5a8:	3b0b3a0b          	.insn	4, 0x3b0b3a0b
 5ac:	3905                	.insn	2, 0x3905
 5ae:	0013010b          	.insn	4, 0x0013010b
 5b2:	2100                	.insn	2, 0x2100
 5b4:	0104                	.insn	2, 0x0104
 5b6:	0b3e                	.insn	2, 0x0b3e
 5b8:	13490b0b          	.insn	4, 0x13490b0b
 5bc:	0b3a                	.insn	2, 0x0b3a
 5be:	0b390b3b          	.insn	4, 0x0b390b3b
 5c2:	1301                	.insn	2, 0x1301
 5c4:	0000                	.insn	2, 0x
 5c6:	3422                	.insn	2, 0x3422
 5c8:	0300                	.insn	2, 0x0300
 5ca:	3a0e                	.insn	2, 0x3a0e
 5cc:	39053b0b          	.insn	4, 0x39053b0b
 5d0:	3f13490b          	.insn	4, 0x3f13490b
 5d4:	0219                	.insn	2, 0x0219
 5d6:	0018                	.insn	2, 0x0018
 5d8:	2300                	.insn	2, 0x2300
 5da:	012e                	.insn	2, 0x012e
 5dc:	0e03193f 053b0b3a 	.insn	8, 0x053b0b3a0e03193f
 5e4:	0b39                	.insn	2, 0x0b39
 5e6:	13491927          	.insn	4, 0x13491927
 5ea:	193c                	.insn	2, 0x193c
 5ec:	1301                	.insn	2, 0x1301
 5ee:	0000                	.insn	2, 0x
 5f0:	2e24                	.insn	2, 0x2e24
 5f2:	3f00                	.insn	2, 0x3f00
 5f4:	0319                	.insn	2, 0x0319
 5f6:	3a0e                	.insn	2, 0x3a0e
 5f8:	390b3b0b          	.insn	4, 0x390b3b0b
 5fc:	3c19270b          	.insn	4, 0x3c19270b
 600:	0019                	.insn	2, 0x0019
 602:	2500                	.insn	2, 0x2500
 604:	002e                	.insn	2, 0x002e
 606:	0e03193f 0b3b0b3a 	.insn	8, 0x0b3b0b3a0e03193f
 60e:	0b39                	.insn	2, 0x0b39
 610:	13491927          	.insn	4, 0x13491927
 614:	193c                	.insn	2, 0x193c
 616:	0000                	.insn	2, 0x
 618:	2e26                	.insn	2, 0x2e26
 61a:	3f01                	.insn	2, 0x3f01
 61c:	0319                	.insn	2, 0x0319
 61e:	3a0e                	.insn	2, 0x3a0e
 620:	390b3b0b          	.insn	4, 0x390b3b0b
 624:	3c19270b          	.insn	4, 0x3c19270b
 628:	0119                	.insn	2, 0x0119
 62a:	27000013          	addi	zero,zero,624
 62e:	002e                	.insn	2, 0x002e
 630:	0e03193f 053b0b3a 	.insn	8, 0x053b0b3a0e03193f
 638:	0b39                	.insn	2, 0x0b39
 63a:	13491927          	.insn	4, 0x13491927
 63e:	0111                	.insn	2, 0x0111
 640:	0612                	.insn	2, 0x0612
 642:	1840                	.insn	2, 0x1840
 644:	197a                	.insn	2, 0x197a
 646:	0000                	.insn	2, 0x
 648:	2e28                	.insn	2, 0x2e28
 64a:	3f00                	.insn	2, 0x3f00
 64c:	0319                	.insn	2, 0x0319
 64e:	3a0e                	.insn	2, 0x3a0e
 650:	39053b0b          	.insn	4, 0x39053b0b
 654:	1119270b          	.insn	4, 0x1119270b
 658:	1201                	.insn	2, 0x1201
 65a:	4006                	.insn	2, 0x4006
 65c:	7c18                	.insn	2, 0x7c18
 65e:	0019                	.insn	2, 0x0019
 660:	2900                	.insn	2, 0x2900
 662:	012e                	.insn	2, 0x012e
 664:	0b3a0e03          	lb	t3,179(s4)
 668:	0b39053b          	.insn	4, 0x0b39053b
 66c:	13491927          	.insn	4, 0x13491927
 670:	0111                	.insn	2, 0x0111
 672:	0612                	.insn	2, 0x0612
 674:	1840                	.insn	2, 0x1840
 676:	197c                	.insn	2, 0x197c
 678:	1301                	.insn	2, 0x1301
 67a:	0000                	.insn	2, 0x
 67c:	342a                	.insn	2, 0x342a
 67e:	0300                	.insn	2, 0x0300
 680:	3a08                	.insn	2, 0x3a08
 682:	39053b0b          	.insn	4, 0x39053b0b
 686:	0213490b          	.insn	4, 0x0213490b
 68a:	0018                	.insn	2, 0x0018
 68c:	2b00                	.insn	2, 0x2b00
 68e:	012e                	.insn	2, 0x012e
 690:	0b3a0e03          	lb	t3,179(s4)
 694:	0b39053b          	.insn	4, 0x0b39053b
 698:	13491927          	.insn	4, 0x13491927
 69c:	0111                	.insn	2, 0x0111
 69e:	0612                	.insn	2, 0x0612
 6a0:	1840                	.insn	2, 0x1840
 6a2:	197c                	.insn	2, 0x197c
 6a4:	0000                	.insn	2, 0x
 6a6:	0100                	.insn	2, 0x0100
 6a8:	0024                	.insn	2, 0x0024
 6aa:	0b3e0b0b          	.insn	4, 0x0b3e0b0b
 6ae:	00000e03          	lb	t3,0(zero) # 0 <__start-0x80000000>
 6b2:	3402                	.insn	2, 0x3402
 6b4:	0300                	.insn	2, 0x0300
 6b6:	3a0e                	.insn	2, 0x3a0e
 6b8:	0121                	.insn	2, 0x0121
 6ba:	0b390b3b          	.insn	4, 0x0b390b3b
 6be:	1349                	.insn	2, 0x1349
 6c0:	1802193f 16030000 	.insn	8, 0x160300001802193f
 6c8:	0300                	.insn	2, 0x0300
 6ca:	3a0e                	.insn	2, 0x3a0e
 6cc:	390b3b0b          	.insn	4, 0x390b3b0b
 6d0:	0013490b          	.insn	4, 0x0013490b
 6d4:	0400                	.insn	2, 0x0400
 6d6:	0026                	.insn	2, 0x0026
 6d8:	1349                	.insn	2, 0x1349
 6da:	0000                	.insn	2, 0x
 6dc:	3405                	.insn	2, 0x3405
 6de:	0300                	.insn	2, 0x0300
 6e0:	3a0e                	.insn	2, 0x3a0e
 6e2:	0121                	.insn	2, 0x0121
 6e4:	0b390b3b          	.insn	4, 0x0b390b3b
 6e8:	1349                	.insn	2, 0x1349
 6ea:	1802                	.insn	2, 0x1802
 6ec:	0000                	.insn	2, 0x
 6ee:	0f06                	.insn	2, 0x0f06
 6f0:	0b00                	.insn	2, 0x0b00
 6f2:	0421                	.insn	2, 0x0421
 6f4:	1349                	.insn	2, 0x1349
 6f6:	0000                	.insn	2, 0x
 6f8:	49003507          	.insn	4, 0x49003507
 6fc:	08000013          	addi	zero,zero,128
 700:	002e                	.insn	2, 0x002e
 702:	0e03193f 3b01213a 	.insn	8, 0x3b01213a0e03193f
 70a:	1121390b          	.insn	4, 0x1121390b
 70e:	193c1927          	.insn	4, 0x193c1927
 712:	0000                	.insn	2, 0x
 714:	1109                	.insn	2, 0x1109
 716:	2501                	.insn	2, 0x2501
 718:	130e                	.insn	2, 0x130e
 71a:	1b1f030b          	.insn	4, 0x1b1f030b
 71e:	111f 1201 1006      	.insn	6, 0x10061201111f
 724:	0a000017          	auipc	zero,0xa000
 728:	0024                	.insn	2, 0x0024
 72a:	0b3e0b0b          	.insn	4, 0x0b3e0b0b
 72e:	00000803          	lb	a6,0(zero) # 0 <__start-0x80000000>
 732:	0300340b          	.insn	4, 0x0300340b
 736:	3a0e                	.insn	2, 0x3a0e
 738:	390b3b0b          	.insn	4, 0x390b3b0b
 73c:	3f13490b          	.insn	4, 0x3f13490b
 740:	3c19                	.insn	2, 0x3c19
 742:	0019                	.insn	2, 0x0019
 744:	0c00                	.insn	2, 0x0c00
 746:	0101                	.insn	2, 0x0101
 748:	1349                	.insn	2, 0x1349
 74a:	1301                	.insn	2, 0x1301
 74c:	0000                	.insn	2, 0x
 74e:	210d                	.insn	2, 0x210d
 750:	4900                	.insn	2, 0x4900
 752:	00052f13          	slti	t5,a0,0
 756:	0e00                	.insn	2, 0x0e00
 758:	0034                	.insn	2, 0x0034
 75a:	0b3a0e03          	lb	t3,179(s4)
 75e:	0b390b3b          	.insn	4, 0x0b390b3b
 762:	1349                	.insn	2, 0x1349
 764:	0188                	.insn	2, 0x0188
 766:	0018020b          	.insn	4, 0x0018020b
 76a:	0f00                	.insn	2, 0x0f00
 76c:	0034                	.insn	2, 0x0034
 76e:	0b3a1347          	.insn	4, 0x0b3a1347
 772:	0b390b3b          	.insn	4, 0x0b390b3b
 776:	1802                	.insn	2, 0x1802
 778:	0000                	.insn	2, 0x
 77a:	2e10                	.insn	2, 0x2e10
 77c:	3f00                	.insn	2, 0x3f00
 77e:	0319                	.insn	2, 0x0319
 780:	3a0e                	.insn	2, 0x3a0e
 782:	390b3b0b          	.insn	4, 0x390b3b0b
 786:	1119270b          	.insn	4, 0x1119270b
 78a:	1201                	.insn	2, 0x1201
 78c:	4006                	.insn	2, 0x4006
 78e:	7a18                	.insn	2, 0x7a18
 790:	0019                	.insn	2, 0x0019
 792:	1100                	.insn	2, 0x1100
 794:	012e                	.insn	2, 0x012e
 796:	0e03193f 0b3b0b3a 	.insn	8, 0x0b3b0b3a0e03193f
 79e:	0b39                	.insn	2, 0x0b39
 7a0:	13491927          	.insn	4, 0x13491927
 7a4:	0111                	.insn	2, 0x0111
 7a6:	0612                	.insn	2, 0x0612
 7a8:	1840                	.insn	2, 0x1840
 7aa:	197c                	.insn	2, 0x197c
 7ac:	1301                	.insn	2, 0x1301
 7ae:	0000                	.insn	2, 0x
 7b0:	2e12                	.insn	2, 0x2e12
 7b2:	3f01                	.insn	2, 0x3f01
 7b4:	0319                	.insn	2, 0x0319
 7b6:	3a0e                	.insn	2, 0x3a0e
 7b8:	390b3b0b          	.insn	4, 0x390b3b0b
 7bc:	1119270b          	.insn	4, 0x1119270b
 7c0:	1201                	.insn	2, 0x1201
 7c2:	4006                	.insn	2, 0x4006
 7c4:	7a18                	.insn	2, 0x7a18
 7c6:	0119                	.insn	2, 0x0119
 7c8:	00000013          	addi	zero,zero,0
 7cc:	1101                	.insn	2, 0x1101
 7ce:	1000                	.insn	2, 0x1000
 7d0:	5506                	.insn	2, 0x5506
 7d2:	0306                	.insn	2, 0x0306
 7d4:	1b0e                	.insn	2, 0x1b0e
 7d6:	250e                	.insn	2, 0x250e
 7d8:	130e                	.insn	2, 0x130e
 7da:	0005                	.insn	2, 0x0005
 7dc:	0000                	.insn	2, 0x
 7de:	3401                	.insn	2, 0x3401
 7e0:	0300                	.insn	2, 0x0300
 7e2:	3a0e                	.insn	2, 0x3a0e
 7e4:	0121                	.insn	2, 0x0121
 7e6:	0b390b3b          	.insn	4, 0x0b390b3b
 7ea:	1349                	.insn	2, 0x1349
 7ec:	1802                	.insn	2, 0x1802
 7ee:	0000                	.insn	2, 0x
 7f0:	2402                	.insn	2, 0x2402
 7f2:	0b00                	.insn	2, 0x0b00
 7f4:	030b3e0b          	.insn	4, 0x030b3e0b
 7f8:	000e                	.insn	2, 0x000e
 7fa:	0300                	.insn	2, 0x0300
 7fc:	0034                	.insn	2, 0x0034
 7fe:	213a0e03          	lb	t3,531(s4)
 802:	3b01                	.insn	2, 0x3b01
 804:	3905                	.insn	2, 0x3905
 806:	0213490b          	.insn	4, 0x0213490b
 80a:	0018                	.insn	2, 0x0018
 80c:	0400                	.insn	2, 0x0400
 80e:	0016                	.insn	2, 0x0016
 810:	0b3a0e03          	lb	t3,179(s4)
 814:	0b390b3b          	.insn	4, 0x0b390b3b
 818:	1349                	.insn	2, 0x1349
 81a:	0000                	.insn	2, 0x
 81c:	0d05                	.insn	2, 0x0d05
 81e:	0300                	.insn	2, 0x0300
 820:	3a0e                	.insn	2, 0x3a0e
 822:	390b3b0b          	.insn	4, 0x390b3b0b
 826:	3813490b          	.insn	4, 0x3813490b
 82a:	0600000b          	.insn	4, 0x0600000b
 82e:	210b000f          	.insn	4, 0x210b000f
 832:	4904                	.insn	2, 0x4904
 834:	07000013          	addi	zero,zero,112
 838:	0005                	.insn	2, 0x0005
 83a:	213a0e03          	lb	t3,531(s4)
 83e:	3b01                	.insn	2, 0x3b01
 840:	3905                	.insn	2, 0x3905
 842:	0213490b          	.insn	4, 0x0213490b
 846:	0018                	.insn	2, 0x0018
 848:	0800                	.insn	2, 0x0800
 84a:	0005                	.insn	2, 0x0005
 84c:	1349                	.insn	2, 0x1349
 84e:	0000                	.insn	2, 0x
 850:	3409                	.insn	2, 0x3409
 852:	0300                	.insn	2, 0x0300
 854:	3a08                	.insn	2, 0x3a08
 856:	0121                	.insn	2, 0x0121
 858:	0b39053b          	.insn	4, 0x0b39053b
 85c:	1349                	.insn	2, 0x1349
 85e:	1802                	.insn	2, 0x1802
 860:	0000                	.insn	2, 0x
 862:	130a                	.insn	2, 0x130a
 864:	0301                	.insn	2, 0x0301
 866:	0b0e                	.insn	2, 0x0b0e
 868:	3b0b3a0b          	.insn	4, 0x3b0b3a0b
 86c:	1021390b          	.insn	4, 0x1021390b
 870:	1301                	.insn	2, 0x1301
 872:	0000                	.insn	2, 0x
 874:	3f002e0b          	.insn	4, 0x3f002e0b
 878:	0319                	.insn	2, 0x0319
 87a:	3a0e                	.insn	2, 0x3a0e
 87c:	0121                	.insn	2, 0x0121
 87e:	2139053b          	.insn	4, 0x2139053b
 882:	2706                	.insn	2, 0x2706
 884:	1119                	.insn	2, 0x1119
 886:	1201                	.insn	2, 0x1201
 888:	4006                	.insn	2, 0x4006
 88a:	7a18                	.insn	2, 0x7a18
 88c:	0019                	.insn	2, 0x0019
 88e:	0c00                	.insn	2, 0x0c00
 890:	012e                	.insn	2, 0x012e
 892:	0e03193f 3b01213a 	.insn	8, 0x3b01213a0e03193f
 89a:	3905                	.insn	2, 0x3905
 89c:	0621                	.insn	2, 0x0621
 89e:	01111927          	.insn	4, 0x01111927
 8a2:	0612                	.insn	2, 0x0612
 8a4:	1840                	.insn	2, 0x1840
 8a6:	197c                	.insn	2, 0x197c
 8a8:	1301                	.insn	2, 0x1301
 8aa:	0000                	.insn	2, 0x
 8ac:	2e0d                	.insn	2, 0x2e0d
 8ae:	0301                	.insn	2, 0x0301
 8b0:	3a0e                	.insn	2, 0x3a0e
 8b2:	0121                	.insn	2, 0x0121
 8b4:	2139053b          	.insn	4, 0x2139053b
 8b8:	270d                	.insn	2, 0x270d
 8ba:	1119                	.insn	2, 0x1119
 8bc:	1201                	.insn	2, 0x1201
 8be:	4006                	.insn	2, 0x4006
 8c0:	7a18                	.insn	2, 0x7a18
 8c2:	0119                	.insn	2, 0x0119
 8c4:	0e000013          	addi	zero,zero,224
 8c8:	002e                	.insn	2, 0x002e
 8ca:	0e03193f 3b01213a 	.insn	8, 0x3b01213a0e03193f
 8d2:	3905                	.insn	2, 0x3905
 8d4:	0821                	.insn	2, 0x0821
 8d6:	13491927          	.insn	4, 0x13491927
 8da:	0111                	.insn	2, 0x0111
 8dc:	0612                	.insn	2, 0x0612
 8de:	1840                	.insn	2, 0x1840
 8e0:	197a                	.insn	2, 0x197a
 8e2:	0000                	.insn	2, 0x
 8e4:	2501110f          	.insn	4, 0x2501110f
 8e8:	130e                	.insn	2, 0x130e
 8ea:	1b1f030b          	.insn	4, 0x1b1f030b
 8ee:	111f 1201 1006      	.insn	6, 0x10061201111f
 8f4:	10000017          	auipc	zero,0x10000
 8f8:	0026                	.insn	2, 0x0026
 8fa:	1349                	.insn	2, 0x1349
 8fc:	0000                	.insn	2, 0x
 8fe:	2411                	.insn	2, 0x2411
 900:	0b00                	.insn	2, 0x0b00
 902:	030b3e0b          	.insn	4, 0x030b3e0b
 906:	0008                	.insn	2, 0x0008
 908:	1200                	.insn	2, 0x1200
 90a:	0b0b000f          	.insn	4, 0x0b0b000f
 90e:	0000                	.insn	2, 0x
 910:	03003413          	sltiu	s0,zero,48
 914:	3a0e                	.insn	2, 0x3a0e
 916:	390b3b0b          	.insn	4, 0x390b3b0b
 91a:	3f13490b          	.insn	4, 0x3f13490b
 91e:	3c19                	.insn	2, 0x3c19
 920:	0019                	.insn	2, 0x0019
 922:	1400                	.insn	2, 0x1400
 924:	0101                	.insn	2, 0x0101
 926:	1349                	.insn	2, 0x1349
 928:	1301                	.insn	2, 0x1301
 92a:	0000                	.insn	2, 0x
 92c:	2115                	.insn	2, 0x2115
 92e:	4900                	.insn	2, 0x4900
 930:	00052f13          	slti	t5,a0,0
 934:	1600                	.insn	2, 0x1600
 936:	012e                	.insn	2, 0x012e
 938:	0e03193f 0b3b0b3a 	.insn	8, 0x0b3b0b3a0e03193f
 940:	0b39                	.insn	2, 0x0b39
 942:	13491927          	.insn	4, 0x13491927
 946:	193c                	.insn	2, 0x193c
 948:	1301                	.insn	2, 0x1301
 94a:	0000                	.insn	2, 0x
 94c:	3f002e17          	auipc	t3,0x3f002
 950:	0319                	.insn	2, 0x0319
 952:	3a0e                	.insn	2, 0x3a0e
 954:	39053b0b          	.insn	4, 0x39053b0b
 958:	4919270b          	.insn	4, 0x4919270b
 95c:	00193c13          	sltiu	s8,s2,1
 960:	1800                	.insn	2, 0x1800
 962:	002e                	.insn	2, 0x002e
 964:	0e03193f 053b0b3a 	.insn	8, 0x053b0b3a0e03193f
 96c:	0b39                	.insn	2, 0x0b39
 96e:	193c1927          	.insn	4, 0x193c1927
 972:	0000                	.insn	2, 0x
 974:	2e19                	.insn	2, 0x2e19
 976:	3f01                	.insn	2, 0x3f01
 978:	0319                	.insn	2, 0x0319
 97a:	3a0e                	.insn	2, 0x3a0e
 97c:	39053b0b          	.insn	4, 0x39053b0b
 980:	4919270b          	.insn	4, 0x4919270b
 984:	12011113          	.insn	4, 0x12011113
 988:	4006                	.insn	2, 0x4006
 98a:	7c18                	.insn	2, 0x7c18
 98c:	0119                	.insn	2, 0x0119
 98e:	1a000013          	addi	zero,zero,416
 992:	0005                	.insn	2, 0x0005
 994:	0b3a0803          	lb	a6,179(s4)
 998:	0b39053b          	.insn	4, 0x0b39053b
 99c:	1349                	.insn	2, 0x1349
 99e:	1802                	.insn	2, 0x1802
 9a0:	0000                	.insn	2, 0x
 9a2:	3f012e1b          	.insn	4, 0x3f012e1b
 9a6:	0319                	.insn	2, 0x0319
 9a8:	3a0e                	.insn	2, 0x3a0e
 9aa:	390b3b0b          	.insn	4, 0x390b3b0b
 9ae:	4919270b          	.insn	4, 0x4919270b
 9b2:	12011113          	.insn	4, 0x12011113
 9b6:	4006                	.insn	2, 0x4006
 9b8:	7c18                	.insn	2, 0x7c18
 9ba:	0019                	.insn	2, 0x0019
 9bc:	1c00                	.insn	2, 0x1c00
 9be:	0005                	.insn	2, 0x0005
 9c0:	0b3a0e03          	lb	t3,179(s4)
 9c4:	0b390b3b          	.insn	4, 0x0b390b3b
 9c8:	1349                	.insn	2, 0x1349
 9ca:	1802                	.insn	2, 0x1802
 9cc:	0000                	.insn	2, 0x
 9ce:	0100                	.insn	2, 0x0100
 9d0:	0011                	.insn	2, 0x0011
 9d2:	0610                	.insn	2, 0x0610
 9d4:	0111                	.insn	2, 0x0111
 9d6:	0112                	.insn	2, 0x0112
 9d8:	0e1b0e03          	lb	t3,225(s6)
 9dc:	0e25                	.insn	2, 0x0e25
 9de:	00000513          	addi	a0,zero,0
 9e2:	0100                	.insn	2, 0x0100
 9e4:	0005                	.insn	2, 0x0005
 9e6:	213a0803          	lb	a6,531(s4)
 9ea:	3b01                	.insn	2, 0x3b01
 9ec:	490b390b          	.insn	4, 0x490b390b
 9f0:	00180213          	addi	tp,a6,1
 9f4:	0200                	.insn	2, 0x0200
 9f6:	0024                	.insn	2, 0x0024
 9f8:	0b3e0b0b          	.insn	4, 0x0b3e0b0b
 9fc:	00000e03          	lb	t3,0(zero) # 0 <__start-0x80000000>
 a00:	03003403          	.insn	4, 0x03003403
 a04:	3a08                	.insn	2, 0x3a08
 a06:	0121                	.insn	2, 0x0121
 a08:	0b390b3b          	.insn	4, 0x0b390b3b
 a0c:	1349                	.insn	2, 0x1349
 a0e:	1802                	.insn	2, 0x1802
 a10:	0000                	.insn	2, 0x
 a12:	2e04                	.insn	2, 0x2e04
 a14:	3f01                	.insn	2, 0x3f01
 a16:	0319                	.insn	2, 0x0319
 a18:	3a0e                	.insn	2, 0x3a0e
 a1a:	0121                	.insn	2, 0x0121
 a1c:	0b390b3b          	.insn	4, 0x0b390b3b
 a20:	13491927          	.insn	4, 0x13491927
 a24:	0111                	.insn	2, 0x0111
 a26:	0612                	.insn	2, 0x0612
 a28:	1840                	.insn	2, 0x1840
 a2a:	197a                	.insn	2, 0x197a
 a2c:	1301                	.insn	2, 0x1301
 a2e:	0000                	.insn	2, 0x
 a30:	3405                	.insn	2, 0x3405
 a32:	0300                	.insn	2, 0x0300
 a34:	3a0e                	.insn	2, 0x3a0e
 a36:	0121                	.insn	2, 0x0121
 a38:	0b390b3b          	.insn	4, 0x0b390b3b
 a3c:	1349                	.insn	2, 0x1349
 a3e:	1802                	.insn	2, 0x1802
 a40:	0000                	.insn	2, 0x
 a42:	1606                	.insn	2, 0x1606
 a44:	0300                	.insn	2, 0x0300
 a46:	3a0e                	.insn	2, 0x3a0e
 a48:	390b3b0b          	.insn	4, 0x390b3b0b
 a4c:	0013490b          	.insn	4, 0x0013490b
 a50:	0700                	.insn	2, 0x0700
 a52:	210b000f          	.insn	4, 0x210b000f
 a56:	4904                	.insn	2, 0x4904
 a58:	08000013          	addi	zero,zero,128
 a5c:	0111010b          	.insn	4, 0x0111010b
 a60:	0612                	.insn	2, 0x0612
 a62:	0000                	.insn	2, 0x
 a64:	1109                	.insn	2, 0x1109
 a66:	2501                	.insn	2, 0x2501
 a68:	130e                	.insn	2, 0x130e
 a6a:	1b1f030b          	.insn	4, 0x1b1f030b
 a6e:	111f 1201 1006      	.insn	6, 0x10061201111f
 a74:	0a000017          	auipc	zero,0xa000
 a78:	0024                	.insn	2, 0x0024
 a7a:	0b3e0b0b          	.insn	4, 0x0b3e0b0b
 a7e:	00000803          	lb	a6,0(zero) # 0 <__start-0x80000000>
 a82:	0b000f0b          	.insn	4, 0x0b000f0b
 a86:	0c00000b          	.insn	4, 0x0c00000b
 a8a:	0026                	.insn	2, 0x0026
 a8c:	1349                	.insn	2, 0x1349
 a8e:	0000                	.insn	2, 0x
 a90:	050d                	.insn	2, 0x050d
 a92:	0300                	.insn	2, 0x0300
 a94:	3a0e                	.insn	2, 0x3a0e
 a96:	390b3b0b          	.insn	4, 0x390b3b0b
 a9a:	0213490b          	.insn	4, 0x0213490b
 a9e:	0018                	.insn	2, 0x0018
 aa0:	0e00                	.insn	2, 0x0e00
 aa2:	0026                	.insn	2, 0x0026
 aa4:	0000                	.insn	2, 0x
 aa6:	3f012e0f          	.insn	4, 0x3f012e0f
 aaa:	0319                	.insn	2, 0x0319
 aac:	3a0e                	.insn	2, 0x3a0e
 aae:	390b3b0b          	.insn	4, 0x390b3b0b
 ab2:	4919270b          	.insn	4, 0x4919270b
 ab6:	12011113          	.insn	4, 0x12011113
 aba:	4006                	.insn	2, 0x4006
 abc:	7a18                	.insn	2, 0x7a18
 abe:	0019                	.insn	2, 0x0019
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	001c                	.insn	2, 0x001c
   2:	0000                	.insn	2, 0x
   4:	0002                	.insn	2, 0x0002
   6:	0000                	.insn	2, 0x
   8:	0000                	.insn	2, 0x
   a:	0004                	.insn	2, 0x0004
   c:	0000                	.insn	2, 0x
   e:	0000                	.insn	2, 0x
  10:	0010                	.insn	2, 0x0010
  12:	8000                	.insn	2, 0x8000
  14:	00dc                	.insn	2, 0x00dc
	...
  1e:	0000                	.insn	2, 0x
  20:	001c                	.insn	2, 0x001c
  22:	0000                	.insn	2, 0x
  24:	0002                	.insn	2, 0x0002
  26:	00d6                	.insn	2, 0x00d6
  28:	0000                	.insn	2, 0x
  2a:	0004                	.insn	2, 0x0004
  2c:	0000                	.insn	2, 0x
  2e:	0000                	.insn	2, 0x
  30:	00ec                	.insn	2, 0x00ec
  32:	8000                	.insn	2, 0x8000
  34:	02a8                	.insn	2, 0x02a8
	...
  3e:	0000                	.insn	2, 0x
  40:	001c                	.insn	2, 0x001c
  42:	0000                	.insn	2, 0x
  44:	0002                	.insn	2, 0x0002
  46:	0370                	.insn	2, 0x0370
  48:	0000                	.insn	2, 0x
  4a:	0004                	.insn	2, 0x0004
  4c:	0000                	.insn	2, 0x
  4e:	0000                	.insn	2, 0x
  50:	0394                	.insn	2, 0x0394
  52:	8000                	.insn	2, 0x8000
  54:	18a4                	.insn	2, 0x18a4
	...
  5e:	0000                	.insn	2, 0x
  60:	001c                	.insn	2, 0x001c
  62:	0000                	.insn	2, 0x
  64:	0002                	.insn	2, 0x0002
  66:	11ae                	.insn	2, 0x11ae
  68:	0000                	.insn	2, 0x
  6a:	0004                	.insn	2, 0x0004
  6c:	0000                	.insn	2, 0x
  6e:	0000                	.insn	2, 0x
  70:	1c38                	.insn	2, 0x1c38
  72:	8000                	.insn	2, 0x8000
  74:	2ba8                	.insn	2, 0x2ba8
	...
  7e:	0000                	.insn	2, 0x
  80:	001c                	.insn	2, 0x001c
  82:	0000                	.insn	2, 0x
  84:	0002                	.insn	2, 0x0002
  86:	266d                	.insn	2, 0x266d
  88:	0000                	.insn	2, 0x
  8a:	0004                	.insn	2, 0x0004
  8c:	0000                	.insn	2, 0x
  8e:	0000                	.insn	2, 0x
  90:	47e0                	.insn	2, 0x47e0
  92:	8000                	.insn	2, 0x8000
  94:	01e0                	.insn	2, 0x01e0
	...
  9e:	0000                	.insn	2, 0x
  a0:	003c                	.insn	2, 0x003c
  a2:	0000                	.insn	2, 0x
  a4:	0002                	.insn	2, 0x0002
  a6:	28b5                	.insn	2, 0x28b5
  a8:	0000                	.insn	2, 0x
  aa:	0004                	.insn	2, 0x0004
  ac:	0000                	.insn	2, 0x
  ae:	0000                	.insn	2, 0x
  b0:	49c0                	.insn	2, 0x49c0
  b2:	8000                	.insn	2, 0x8000
  b4:	0120                	.insn	2, 0x0120
  b6:	0000                	.insn	2, 0x
  b8:	4ae0                	.insn	2, 0x4ae0
  ba:	8000                	.insn	2, 0x8000
  bc:	0204                	.insn	2, 0x0204
  be:	0000                	.insn	2, 0x
  c0:	4ce4                	.insn	2, 0x4ce4
  c2:	8000                	.insn	2, 0x8000
  c4:	0150                	.insn	2, 0x0150
  c6:	0000                	.insn	2, 0x
  c8:	4e34                	.insn	2, 0x4e34
  ca:	8000                	.insn	2, 0x8000
  cc:	019c                	.insn	2, 0x019c
  ce:	0000                	.insn	2, 0x
  d0:	5000                	.insn	2, 0x5000
  d2:	8000                	.insn	2, 0x8000
  d4:	01ec                	.insn	2, 0x01ec
	...
  de:	0000                	.insn	2, 0x
  e0:	001c                	.insn	2, 0x001c
  e2:	0000                	.insn	2, 0x
  e4:	0002                	.insn	2, 0x0002
  e6:	000028d7          	.insn	4, 0x28d7
  ea:	0004                	.insn	2, 0x0004
  ec:	0000                	.insn	2, 0x
  ee:	0000                	.insn	2, 0x
  f0:	51f0                	.insn	2, 0x51f0
  f2:	8000                	.insn	2, 0x8000
  f4:	0850                	.insn	2, 0x0850
	...
  fe:	0000                	.insn	2, 0x
 100:	001c                	.insn	2, 0x001c
 102:	0000                	.insn	2, 0x
 104:	0002                	.insn	2, 0x0002
 106:	2d7c                	.insn	2, 0x2d7c
 108:	0000                	.insn	2, 0x
 10a:	0004                	.insn	2, 0x0004
 10c:	0000                	.insn	2, 0x
 10e:	0000                	.insn	2, 0x
 110:	0000                	.insn	2, 0x
 112:	8000                	.insn	2, 0x8000
 114:	0010                	.insn	2, 0x0010
	...
 11e:	0000                	.insn	2, 0x
 120:	001c                	.insn	2, 0x001c
 122:	0000                	.insn	2, 0x
 124:	0002                	.insn	2, 0x0002
 126:	2da2                	.insn	2, 0x2da2
 128:	0000                	.insn	2, 0x
 12a:	0004                	.insn	2, 0x0004
 12c:	0000                	.insn	2, 0x
 12e:	0000                	.insn	2, 0x
 130:	5a40                	.insn	2, 0x5a40
 132:	8000                	.insn	2, 0x8000
 134:	02d0                	.insn	2, 0x02d0
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
       0:	00ae                	.insn	2, 0x00ae
       2:	0000                	.insn	2, 0x
       4:	0005                	.insn	2, 0x0005
       6:	0004                	.insn	2, 0x0004
       8:	002e                	.insn	2, 0x002e
       a:	0000                	.insn	2, 0x
       c:	0101                	.insn	2, 0x0101
       e:	fb01                	.insn	2, 0xfb01
      10:	0d0e                	.insn	2, 0x0d0e
      12:	0100                	.insn	2, 0x0100
      14:	0101                	.insn	2, 0x0101
      16:	0001                	.insn	2, 0x0001
      18:	0000                	.insn	2, 0x
      1a:	0001                	.insn	2, 0x0001
      1c:	0100                	.insn	2, 0x0100
      1e:	0101                	.insn	2, 0x0101
      20:	021f 0000 0000      	.insn	6, 0x021f
      26:	0038                	.insn	2, 0x0038
      28:	0000                	.insn	2, 0x
      2a:	0102                	.insn	2, 0x0102
      2c:	021f 020f 0031      	.insn	6, 0x0031020f021f
      32:	0000                	.insn	2, 0x
      34:	3101                	.insn	2, 0x3101
      36:	0000                	.insn	2, 0x
      38:	0100                	.insn	2, 0x0100
      3a:	1005                	.insn	2, 0x1005
      3c:	0500                	.insn	2, 0x0500
      3e:	1002                	.insn	2, 0x1002
      40:	0000                	.insn	2, 0x
      42:	1780                	.insn	2, 0x1780
      44:	0e05                	.insn	2, 0x0e05
      46:	0200                	.insn	2, 0x0200
      48:	0104                	.insn	2, 0x0104
      4a:	10090203          	lb	tp,256(s2)
      4e:	0100                	.insn	2, 0x0100
      50:	0b05                	.insn	2, 0x0b05
      52:	0200                	.insn	2, 0x0200
      54:	0104                	.insn	2, 0x0104
      56:	0c090003          	lb	zero,192(s2)
      5a:	0100                	.insn	2, 0x0100
      5c:	2105                	.insn	2, 0x2105
      5e:	0c090603          	lb	a2,192(s2)
      62:	0100                	.insn	2, 0x0100
      64:	0105                	.insn	2, 0x0105
      66:	10090203          	lb	tp,256(s2)
      6a:	0100                	.insn	2, 0x0100
      6c:	2105                	.insn	2, 0x2105
      6e:	14090203          	lb	tp,320(s2)
      72:	0100                	.insn	2, 0x0100
      74:	0105                	.insn	2, 0x0105
      76:	10090203          	lb	tp,256(s2)
      7a:	0100                	.insn	2, 0x0100
      7c:	2a05                	.insn	2, 0x2a05
      7e:	14090203          	lb	tp,320(s2)
      82:	0100                	.insn	2, 0x0100
      84:	0105                	.insn	2, 0x0105
      86:	10090203          	lb	tp,256(s2)
      8a:	0100                	.insn	2, 0x0100
      8c:	2a05                	.insn	2, 0x2a05
      8e:	14090203          	lb	tp,320(s2)
      92:	0100                	.insn	2, 0x0100
      94:	0105                	.insn	2, 0x0105
      96:	10090203          	lb	tp,256(s2)
      9a:	0100                	.insn	2, 0x0100
      9c:	2b05                	.insn	2, 0x2b05
      9e:	14090203          	lb	tp,320(s2)
      a2:	0100                	.insn	2, 0x0100
      a4:	0105                	.insn	2, 0x0105
      a6:	10090203          	lb	tp,256(s2)
      aa:	0100                	.insn	2, 0x0100
      ac:	1409                	.insn	2, 0x1409
      ae:	0000                	.insn	2, 0x
      b0:	0101                	.insn	2, 0x0101
      b2:	026c                	.insn	2, 0x026c
      b4:	0000                	.insn	2, 0x
      b6:	0005                	.insn	2, 0x0005
      b8:	0004                	.insn	2, 0x0004
      ba:	0049                	.insn	2, 0x0049
      bc:	0000                	.insn	2, 0x
      be:	0101                	.insn	2, 0x0101
      c0:	fb01                	.insn	2, 0xfb01
      c2:	0d0e                	.insn	2, 0x0d0e
      c4:	0100                	.insn	2, 0x0100
      c6:	0101                	.insn	2, 0x0101
      c8:	0001                	.insn	2, 0x0001
      ca:	0000                	.insn	2, 0x
      cc:	0001                	.insn	2, 0x0001
      ce:	0100                	.insn	2, 0x0100
      d0:	0101                	.insn	2, 0x0101
      d2:	051f 0000 0000      	.insn	6, 0x051f
      d8:	00000053          	.insn	4, 0x0053
      dc:	00000063          	beq	zero,zero,dc <__start-0x7fffff24>
      e0:	009f 0000 00c3      	.insn	6, 0x00c30000009f
      e6:	0000                	.insn	2, 0x
      e8:	0102                	.insn	2, 0x0102
      ea:	021f 050f 004c      	.insn	6, 0x004c050f021f
      f0:	0000                	.insn	2, 0x
      f2:	4c01                	.insn	2, 0x4c01
      f4:	0000                	.insn	2, 0x
      f6:	0100                	.insn	2, 0x0100
      f8:	000000db          	.insn	4, 0x00db
      fc:	e802                	.insn	2, 0xe802
      fe:	0000                	.insn	2, 0x
     100:	0300                	.insn	2, 0x0300
     102:	00f4                	.insn	2, 0x00f4
     104:	0000                	.insn	2, 0x
     106:	0504                	.insn	2, 0x0504
     108:	0001                	.insn	2, 0x0001
     10a:	0205                	.insn	2, 0x0205
     10c:	00ec                	.insn	2, 0x00ec
     10e:	8000                	.insn	2, 0x8000
     110:	05013103          	.insn	4, 0x05013103
     114:	0328                	.insn	2, 0x0328
     116:	0906                	.insn	2, 0x0906
     118:	0014                	.insn	2, 0x0014
     11a:	0501                	.insn	2, 0x0501
     11c:	0315                	.insn	2, 0x0315
     11e:	0900                	.insn	2, 0x0900
     120:	0008                	.insn	2, 0x0008
     122:	0501                	.insn	2, 0x0501
     124:	0321                	.insn	2, 0x0321
     126:	0906                	.insn	2, 0x0906
     128:	0008                	.insn	2, 0x0008
     12a:	0501                	.insn	2, 0x0501
     12c:	0330                	.insn	2, 0x0330
     12e:	0904                	.insn	2, 0x0904
     130:	000c                	.insn	2, 0x000c
     132:	0501                	.insn	2, 0x0501
     134:	031d                	.insn	2, 0x031d
     136:	0900                	.insn	2, 0x0900
     138:	0008                	.insn	2, 0x0008
     13a:	0501                	.insn	2, 0x0501
     13c:	0334                	.insn	2, 0x0334
     13e:	0901                	.insn	2, 0x0901
     140:	0008                	.insn	2, 0x0008
     142:	0501                	.insn	2, 0x0501
     144:	0321                	.insn	2, 0x0321
     146:	0900                	.insn	2, 0x0900
     148:	0008                	.insn	2, 0x0008
     14a:	0501                	.insn	2, 0x0501
     14c:	031d                	.insn	2, 0x031d
     14e:	0008090b          	.insn	4, 0x0008090b
     152:	0501                	.insn	2, 0x0501
     154:	0301                	.insn	2, 0x0301
     156:	0908                	.insn	2, 0x0908
     158:	0008                	.insn	2, 0x0008
     15a:	0301                	.insn	2, 0x0301
     15c:	0904                	.insn	2, 0x0904
     15e:	0014                	.insn	2, 0x0014
     160:	0501                	.insn	2, 0x0501
     162:	0319                	.insn	2, 0x0319
     164:	0904                	.insn	2, 0x0904
     166:	0014                	.insn	2, 0x0014
     168:	0501                	.insn	2, 0x0501
     16a:	0301                	.insn	2, 0x0301
     16c:	0908                	.insn	2, 0x0908
     16e:	0008                	.insn	2, 0x0008
     170:	0301                	.insn	2, 0x0301
     172:	0905                	.insn	2, 0x0905
     174:	0014                	.insn	2, 0x0014
     176:	0501                	.insn	2, 0x0501
     178:	0318                	.insn	2, 0x0318
     17a:	0901                	.insn	2, 0x0901
     17c:	0018                	.insn	2, 0x0018
     17e:	0501                	.insn	2, 0x0501
     180:	090d031b          	.insn	4, 0x090d031b
     184:	000c                	.insn	2, 0x000c
     186:	0501                	.insn	2, 0x0501
     188:	0328                	.insn	2, 0x0328
     18a:	0901                	.insn	2, 0x0901
     18c:	000c                	.insn	2, 0x000c
     18e:	0501                	.insn	2, 0x0501
     190:	031f 0900 0008      	.insn	6, 0x00080900031f
     196:	0501                	.insn	2, 0x0501
     198:	030c                	.insn	2, 0x030c
     19a:	0905                	.insn	2, 0x0905
     19c:	0008                	.insn	2, 0x0008
     19e:	0501                	.insn	2, 0x0501
     1a0:	0321                	.insn	2, 0x0321
     1a2:	0900                	.insn	2, 0x0900
     1a4:	0008                	.insn	2, 0x0008
     1a6:	0501                	.insn	2, 0x0501
     1a8:	0319                	.insn	2, 0x0319
     1aa:	0901                	.insn	2, 0x0901
     1ac:	0008                	.insn	2, 0x0008
     1ae:	0501                	.insn	2, 0x0501
     1b0:	0320                	.insn	2, 0x0320
     1b2:	000c0903          	lb	s2,0(s8)
     1b6:	0501                	.insn	2, 0x0501
     1b8:	0902033b          	.insn	4, 0x0902033b
     1bc:	000c                	.insn	2, 0x000c
     1be:	0501                	.insn	2, 0x0501
     1c0:	034d                	.insn	2, 0x034d
     1c2:	0900                	.insn	2, 0x0900
     1c4:	0008                	.insn	2, 0x0008
     1c6:	0501                	.insn	2, 0x0501
     1c8:	0321                	.insn	2, 0x0321
     1ca:	0900                	.insn	2, 0x0900
     1cc:	0004                	.insn	2, 0x0004
     1ce:	0501                	.insn	2, 0x0501
     1d0:	0301                	.insn	2, 0x0301
     1d2:	00080903          	lb	s2,0(a6)
     1d6:	0301                	.insn	2, 0x0301
     1d8:	0905                	.insn	2, 0x0905
     1da:	0014                	.insn	2, 0x0014
     1dc:	0501                	.insn	2, 0x0501
     1de:	0316                	.insn	2, 0x0316
     1e0:	0902                	.insn	2, 0x0902
     1e2:	0018                	.insn	2, 0x0018
     1e4:	0501                	.insn	2, 0x0501
     1e6:	09120307          	.insn	4, 0x09120307
     1ea:	000c                	.insn	2, 0x000c
     1ec:	0501                	.insn	2, 0x0501
     1ee:	0314                	.insn	2, 0x0314
     1f0:	0902                	.insn	2, 0x0902
     1f2:	000c                	.insn	2, 0x000c
     1f4:	0501                	.insn	2, 0x0501
     1f6:	0319                	.insn	2, 0x0319
     1f8:	091d                	.insn	2, 0x091d
     1fa:	0010                	.insn	2, 0x0010
     1fc:	0501                	.insn	2, 0x0501
     1fe:	0309                	.insn	2, 0x0309
     200:	0900                	.insn	2, 0x0900
     202:	000c                	.insn	2, 0x000c
     204:	0501                	.insn	2, 0x0501
     206:	02000183          	lb	gp,32(zero) # 20 <__start-0x7fffffe0>
     20a:	0304                	.insn	2, 0x0304
     20c:	04090003          	lb	zero,64(s2)
     210:	0100                	.insn	2, 0x0100
     212:	4d05                	.insn	2, 0x4d05
     214:	0200                	.insn	2, 0x0200
     216:	0104                	.insn	2, 0x0104
     218:	0c090003          	lb	zero,192(s2)
     21c:	0100                	.insn	2, 0x0100
     21e:	5505                	.insn	2, 0x5505
     220:	0200                	.insn	2, 0x0200
     222:	0104                	.insn	2, 0x0104
     224:	08090003          	lb	zero,128(s2)
     228:	0100                	.insn	2, 0x0100
     22a:	6205                	.insn	2, 0x6205
     22c:	0200                	.insn	2, 0x0200
     22e:	0104                	.insn	2, 0x0104
     230:	04090003          	lb	zero,64(s2)
     234:	0100                	.insn	2, 0x0100
     236:	2705                	.insn	2, 0x2705
     238:	08090703          	lb	a4,128(s2)
     23c:	0100                	.insn	2, 0x0100
     23e:	1b05                	.insn	2, 0x1b05
     240:	08090003          	lb	zero,128(s2)
     244:	0100                	.insn	2, 0x0100
     246:	1205                	.insn	2, 0x1205
     248:	08090103          	lb	sp,128(s2)
     24c:	0100                	.insn	2, 0x0100
     24e:	2705                	.insn	2, 0x2705
     250:	08090003          	lb	zero,128(s2)
     254:	0100                	.insn	2, 0x0100
     256:	1f05                	.insn	2, 0x1f05
     258:	08090103          	lb	sp,128(s2)
     25c:	0100                	.insn	2, 0x0100
     25e:	1805                	.insn	2, 0x1805
     260:	0c090103          	lb	sp,192(s2)
     264:	0100                	.insn	2, 0x0100
     266:	2005                	.insn	2, 0x2005
     268:	0c090403          	lb	s0,192(s2)
     26c:	0100                	.insn	2, 0x0100
     26e:	3b05                	.insn	2, 0x3b05
     270:	0c090203          	lb	tp,192(s2)
     274:	0100                	.insn	2, 0x0100
     276:	4d05                	.insn	2, 0x4d05
     278:	08090003          	lb	zero,128(s2)
     27c:	0100                	.insn	2, 0x0100
     27e:	2105                	.insn	2, 0x2105
     280:	04090003          	lb	zero,64(s2)
     284:	0100                	.insn	2, 0x0100
     286:	0105                	.insn	2, 0x0105
     288:	08090303          	lb	t1,128(s2)
     28c:	0100                	.insn	2, 0x0100
     28e:	14090503          	lb	a0,320(s2)
     292:	0100                	.insn	2, 0x0100
     294:	1405                	.insn	2, 0x1405
     296:	14090303          	lb	t1,320(s2)
     29a:	0100                	.insn	2, 0x0100
     29c:	1305                	.insn	2, 0x1305
     29e:	0c090403          	lb	s0,192(s2)
     2a2:	0100                	.insn	2, 0x0100
     2a4:	3805                	.insn	2, 0x3805
     2a6:	08090003          	lb	zero,128(s2)
     2aa:	0100                	.insn	2, 0x0100
     2ac:	2805                	.insn	2, 0x2805
     2ae:	08090003          	lb	zero,128(s2)
     2b2:	0100                	.insn	2, 0x0100
     2b4:	1305                	.insn	2, 0x1305
     2b6:	04090103          	lb	sp,64(s2)
     2ba:	0100                	.insn	2, 0x0100
     2bc:	3805                	.insn	2, 0x3805
     2be:	08090003          	lb	zero,128(s2)
     2c2:	0100                	.insn	2, 0x0100
     2c4:	2805                	.insn	2, 0x2805
     2c6:	08090003          	lb	zero,128(s2)
     2ca:	0100                	.insn	2, 0x0100
     2cc:	0f05                	.insn	2, 0x0f05
     2ce:	04090603          	lb	a2,64(s2)
     2d2:	0100                	.insn	2, 0x0100
     2d4:	0705                	.insn	2, 0x0705
     2d6:	08090003          	lb	zero,128(s2)
     2da:	0100                	.insn	2, 0x0100
     2dc:	2905                	.insn	2, 0x2905
     2de:	08090203          	lb	tp,128(s2)
     2e2:	0100                	.insn	2, 0x0100
     2e4:	1905                	.insn	2, 0x1905
     2e6:	08090003          	lb	zero,128(s2)
     2ea:	0100                	.insn	2, 0x0100
     2ec:	2105                	.insn	2, 0x2105
     2ee:	08090703          	lb	a4,128(s2)
     2f2:	0100                	.insn	2, 0x0100
     2f4:	3b05                	.insn	2, 0x3b05
     2f6:	08090103          	lb	sp,128(s2)
     2fa:	0100                	.insn	2, 0x0100
     2fc:	4d05                	.insn	2, 0x4d05
     2fe:	08090003          	lb	zero,128(s2)
     302:	0100                	.insn	2, 0x0100
     304:	2105                	.insn	2, 0x2105
     306:	04090003          	lb	zero,64(s2)
     30a:	0100                	.insn	2, 0x0100
     30c:	1205                	.insn	2, 0x1205
     30e:	08090403          	lb	s0,128(s2)
     312:	0100                	.insn	2, 0x0100
     314:	0105                	.insn	2, 0x0105
     316:	08090103          	lb	sp,128(s2)
     31a:	0100                	.insn	2, 0x0100
     31c:	1409                	.insn	2, 0x1409
     31e:	0000                	.insn	2, 0x
     320:	0101                	.insn	2, 0x0101
     322:	10c9                	.insn	2, 0x10c9
     324:	0000                	.insn	2, 0x
     326:	0005                	.insn	2, 0x0005
     328:	0004                	.insn	2, 0x0004
     32a:	0074                	.insn	2, 0x0074
     32c:	0000                	.insn	2, 0x
     32e:	0101                	.insn	2, 0x0101
     330:	fb01                	.insn	2, 0xfb01
     332:	0d0e                	.insn	2, 0x0d0e
     334:	0100                	.insn	2, 0x0100
     336:	0101                	.insn	2, 0x0101
     338:	0001                	.insn	2, 0x0001
     33a:	0000                	.insn	2, 0x
     33c:	0001                	.insn	2, 0x0001
     33e:	0100                	.insn	2, 0x0100
     340:	0101                	.insn	2, 0x0101
     342:	071f 0000 0000      	.insn	6, 0x071f
     348:	00000053          	.insn	4, 0x0053
     34c:	00000063          	beq	zero,zero,34c <__start-0x7ffffcb4>
     350:	00000113          	addi	sp,zero,0
     354:	009f 0000 00c3      	.insn	6, 0x00c30000009f
     35a:	0000                	.insn	2, 0x
     35c:	00000137          	lui	sp,0x0
     360:	0102                	.insn	2, 0x0102
     362:	021f 0c0f 010b      	.insn	6, 0x010b0c0f021f
     368:	0000                	.insn	2, 0x
     36a:	0b01                	.insn	2, 0x0b01
     36c:	0001                	.insn	2, 0x0001
     36e:	0100                	.insn	2, 0x0100
     370:	0156                	.insn	2, 0x0156
     372:	0000                	.insn	2, 0x
     374:	5f02                	.insn	2, 0x5f02
     376:	0001                	.insn	2, 0x0001
     378:	0300                	.insn	2, 0x0300
     37a:	00000167          	jalr	sp,0(zero) # 0 <__start-0x80000000>
     37e:	0000db03          	lhu	s6,0(ra)
     382:	0200                	.insn	2, 0x0200
     384:	00e8                	.insn	2, 0x00e8
     386:	0000                	.insn	2, 0x
     388:	f404                	.insn	2, 0xf404
     38a:	0000                	.insn	2, 0x
     38c:	0500                	.insn	2, 0x0500
     38e:	0175                	.insn	2, 0x0175
     390:	0000                	.insn	2, 0x
     392:	7c05                	.insn	2, 0x7c05
     394:	0001                	.insn	2, 0x0001
     396:	0500                	.insn	2, 0x0500
     398:	0184                	.insn	2, 0x0184
     39a:	0000                	.insn	2, 0x
     39c:	8f05                	.insn	2, 0x8f05
     39e:	0001                	.insn	2, 0x0001
     3a0:	0600                	.insn	2, 0x0600
     3a2:	0105                	.insn	2, 0x0105
     3a4:	0500                	.insn	2, 0x0500
     3a6:	9402                	.insn	2, 0x9402
     3a8:	03800003          	lb	zero,56(zero) # 38 <__start-0x7fffffc8>
     3ac:	02b0                	.insn	2, 0x02b0
     3ae:	0501                	.insn	2, 0x0501
     3b0:	0310                	.insn	2, 0x0310
     3b2:	0901                	.insn	2, 0x0901
     3b4:	0030                	.insn	2, 0x0030
     3b6:	0501                	.insn	2, 0x0501
     3b8:	0315                	.insn	2, 0x0315
     3ba:	0901                	.insn	2, 0x0901
     3bc:	0008                	.insn	2, 0x0008
     3be:	0501                	.insn	2, 0x0501
     3c0:	09060307          	.insn	4, 0x09060307
     3c4:	0008                	.insn	2, 0x0008
     3c6:	0501                	.insn	2, 0x0501
     3c8:	0312                	.insn	2, 0x0312
     3ca:	0901                	.insn	2, 0x0901
     3cc:	0008                	.insn	2, 0x0008
     3ce:	0501                	.insn	2, 0x0501
     3d0:	001d                	.insn	2, 0x001d
     3d2:	0402                	.insn	2, 0x0402
     3d4:	0301                	.insn	2, 0x0301
     3d6:	097f 0008 0501 0336 	.insn	10, 0x0903033605010008097f
     3de:	0903 
     3e0:	0004                	.insn	2, 0x0004
     3e2:	0501                	.insn	2, 0x0501
     3e4:	031f 0900 0008      	.insn	6, 0x00080900031f
     3ea:	0501                	.insn	2, 0x0501
     3ec:	032c                	.insn	2, 0x032c
     3ee:	0900                	.insn	2, 0x0900
     3f0:	0008                	.insn	2, 0x0008
     3f2:	0001                	.insn	2, 0x0001
     3f4:	0402                	.insn	2, 0x0402
     3f6:	0601                	.insn	2, 0x0601
     3f8:	dc090003          	lb	zero,-576(s2)
     3fc:	0100                	.insn	2, 0x0100
     3fe:	2505                	.insn	2, 0x2505
     400:	0306                	.insn	2, 0x0306
     402:	097e                	.insn	2, 0x097e
     404:	0004                	.insn	2, 0x0004
     406:	0501                	.insn	2, 0x0501
     408:	0309                	.insn	2, 0x0309
     40a:	0904                	.insn	2, 0x0904
     40c:	0004                	.insn	2, 0x0004
     40e:	0501                	.insn	2, 0x0501
     410:	0902032f          	.insn	4, 0x0902032f
     414:	0018                	.insn	2, 0x0018
     416:	0501                	.insn	2, 0x0501
     418:	09000343          	.insn	4, 0x09000343
     41c:	0008                	.insn	2, 0x0008
     41e:	0501                	.insn	2, 0x0501
     420:	09000357          	.insn	4, 0x09000357
     424:	0008                	.insn	2, 0x0008
     426:	0501                	.insn	2, 0x0501
     428:	034e                	.insn	2, 0x034e
     42a:	0900                	.insn	2, 0x0900
     42c:	0008                	.insn	2, 0x0008
     42e:	0501                	.insn	2, 0x0501
     430:	0338                	.insn	2, 0x0338
     432:	0900                	.insn	2, 0x0900
     434:	0010                	.insn	2, 0x0010
     436:	0501                	.insn	2, 0x0501
     438:	0326                	.insn	2, 0x0326
     43a:	0900                	.insn	2, 0x0900
     43c:	0004                	.insn	2, 0x0004
     43e:	0501                	.insn	2, 0x0501
     440:	0328                	.insn	2, 0x0328
     442:	0901                	.insn	2, 0x0901
     444:	0008                	.insn	2, 0x0008
     446:	0501                	.insn	2, 0x0501
     448:	0329                	.insn	2, 0x0329
     44a:	0901                	.insn	2, 0x0901
     44c:	0008                	.insn	2, 0x0008
     44e:	0501                	.insn	2, 0x0501
     450:	0320                	.insn	2, 0x0320
     452:	0900                	.insn	2, 0x0900
     454:	0008                	.insn	2, 0x0008
     456:	0501                	.insn	2, 0x0501
     458:	09010333          	.insn	4, 0x09010333
     45c:	0008                	.insn	2, 0x0008
     45e:	0501                	.insn	2, 0x0501
     460:	0349                	.insn	2, 0x0349
     462:	0900                	.insn	2, 0x0900
     464:	0008                	.insn	2, 0x0008
     466:	0501                	.insn	2, 0x0501
     468:	0354                	.insn	2, 0x0354
     46a:	0900                	.insn	2, 0x0900
     46c:	0008                	.insn	2, 0x0008
     46e:	0501                	.insn	2, 0x0501
     470:	0364                	.insn	2, 0x0364
     472:	0900                	.insn	2, 0x0900
     474:	0004                	.insn	2, 0x0004
     476:	0501                	.insn	2, 0x0501
     478:	0900035b          	.insn	4, 0x0900035b
     47c:	0008                	.insn	2, 0x0008
     47e:	0501                	.insn	2, 0x0501
     480:	033c                	.insn	2, 0x033c
     482:	0900                	.insn	2, 0x0900
     484:	0010                	.insn	2, 0x0010
     486:	0501                	.insn	2, 0x0501
     488:	032a                	.insn	2, 0x032a
     48a:	0900                	.insn	2, 0x0900
     48c:	0004                	.insn	2, 0x0004
     48e:	0501                	.insn	2, 0x0501
     490:	031e                	.insn	2, 0x031e
     492:	0901                	.insn	2, 0x0901
     494:	0008                	.insn	2, 0x0008
     496:	0301                	.insn	2, 0x0301
     498:	0901                	.insn	2, 0x0901
     49a:	000c                	.insn	2, 0x000c
     49c:	0501                	.insn	2, 0x0501
     49e:	0902030f          	.insn	4, 0x0902030f
     4a2:	000c                	.insn	2, 0x000c
     4a4:	0501                	.insn	2, 0x0501
     4a6:	0315                	.insn	2, 0x0315
     4a8:	00080907          	.insn	4, 0x00080907
     4ac:	0501                	.insn	2, 0x0501
     4ae:	09000313          	addi	t1,zero,144
     4b2:	0008                	.insn	2, 0x0008
     4b4:	0501                	.insn	2, 0x0501
     4b6:	09020333          	.insn	4, 0x09020333
     4ba:	0004                	.insn	2, 0x0004
     4bc:	0501                	.insn	2, 0x0501
     4be:	0319                	.insn	2, 0x0319
     4c0:	0900                	.insn	2, 0x0900
     4c2:	0008                	.insn	2, 0x0008
     4c4:	0501                	.insn	2, 0x0501
     4c6:	0311                	.insn	2, 0x0311
     4c8:	0911                	.insn	2, 0x0911
     4ca:	000c                	.insn	2, 0x000c
     4cc:	0301                	.insn	2, 0x0301
     4ce:	0901                	.insn	2, 0x0901
     4d0:	0010                	.insn	2, 0x0010
     4d2:	0501                	.insn	2, 0x0501
     4d4:	0309                	.insn	2, 0x0309
     4d6:	00100903          	lb	s2,1(zero) # 1 <__start-0x7fffffff>
     4da:	0001                	.insn	2, 0x0001
     4dc:	0402                	.insn	2, 0x0402
     4de:	0601                	.insn	2, 0x0601
     4e0:	20090003          	lb	zero,512(s2)
     4e4:	0100                	.insn	2, 0x0100
     4e6:	04090003          	lb	zero,64(s2)
     4ea:	0100                	.insn	2, 0x0100
     4ec:	1105                	.insn	2, 0x1105
     4ee:	0306                	.insn	2, 0x0306
     4f0:	0904                	.insn	2, 0x0904
     4f2:	0004                	.insn	2, 0x0004
     4f4:	0501                	.insn	2, 0x0501
     4f6:	030c                	.insn	2, 0x030c
     4f8:	0909                	.insn	2, 0x0909
     4fa:	0004                	.insn	2, 0x0004
     4fc:	0501                	.insn	2, 0x0501
     4fe:	0301                	.insn	2, 0x0301
     500:	0901                	.insn	2, 0x0901
     502:	0004                	.insn	2, 0x0004
     504:	0501                	.insn	2, 0x0501
     506:	0305                	.insn	2, 0x0305
     508:	0186                	.insn	2, 0x0186
     50a:	2c09                	.insn	2, 0x2c09
     50c:	0100                	.insn	2, 0x0100
     50e:	1305                	.insn	2, 0x1305
     510:	30090103          	lb	sp,768(s2)
     514:	0100                	.insn	2, 0x0100
     516:	0b05                	.insn	2, 0x0b05
     518:	04090603          	lb	a2,64(s2)
     51c:	0100                	.insn	2, 0x0100
     51e:	2c05                	.insn	2, 0x2c05
     520:	08090203          	lb	tp,128(s2)
     524:	0100                	.insn	2, 0x0100
     526:	0200                	.insn	2, 0x0200
     528:	0104                	.insn	2, 0x0104
     52a:	0306                	.insn	2, 0x0306
     52c:	0900                	.insn	2, 0x0900
     52e:	00ec                	.insn	2, 0x00ec
     530:	0501                	.insn	2, 0x0501
     532:	04020033          	.insn	4, 0x04020033
     536:	0601                	.insn	2, 0x0601
     538:	04097e03          	.insn	4, 0x04097e03
     53c:	0100                	.insn	2, 0x0100
     53e:	5305                	.insn	2, 0x5305
     540:	04090403          	lb	s0,64(s2)
     544:	0100                	.insn	2, 0x0100
     546:	3c05                	.insn	2, 0x3c05
     548:	14097e03          	.insn	4, 0x14097e03
     54c:	0100                	.insn	2, 0x0100
     54e:	1f05                	.insn	2, 0x1f05
     550:	08090703          	lb	a4,128(s2)
     554:	0100                	.insn	2, 0x0100
     556:	2805                	.insn	2, 0x2805
     558:	14090503          	lb	a0,320(s2)
     55c:	0100                	.insn	2, 0x0100
     55e:	0f05                	.insn	2, 0x0f05
     560:	14090203          	lb	tp,320(s2)
     564:	0100                	.insn	2, 0x0100
     566:	2105                	.insn	2, 0x2105
     568:	08090403          	lb	s0,128(s2)
     56c:	0100                	.insn	2, 0x0100
     56e:	08090103          	lb	sp,128(s2)
     572:	0100                	.insn	2, 0x0100
     574:	1105                	.insn	2, 0x1105
     576:	0c090b03          	lb	s6,192(s2)
     57a:	0100                	.insn	2, 0x0100
     57c:	1005                	.insn	2, 0x1005
     57e:	1c091003          	lh	zero,448(s2)
     582:	0100                	.insn	2, 0x0100
     584:	0505                	.insn	2, 0x0505
     586:	04090103          	lb	sp,64(s2)
     58a:	0100                	.insn	2, 0x0100
     58c:	0105                	.insn	2, 0x0105
     58e:	24090a03          	lb	s4,576(s2)
     592:	0100                	.insn	2, 0x0100
     594:	0705                	.insn	2, 0x0705
     596:	28090503          	lb	a0,640(s2)
     59a:	0100                	.insn	2, 0x0100
     59c:	1c05                	.insn	2, 0x1c05
     59e:	08090603          	lb	a2,128(s2)
     5a2:	0100                	.insn	2, 0x0100
     5a4:	10090503          	lb	a0,256(s2)
     5a8:	0100                	.insn	2, 0x0100
     5aa:	1a05                	.insn	2, 0x1a05
     5ac:	0c090503          	lb	a0,192(s2)
     5b0:	0100                	.insn	2, 0x0100
     5b2:	1c05                	.insn	2, 0x1c05
     5b4:	0c090103          	lb	sp,192(s2)
     5b8:	0100                	.insn	2, 0x0100
     5ba:	0e05                	.insn	2, 0x0e05
     5bc:	0c090103          	lb	sp,192(s2)
     5c0:	0100                	.insn	2, 0x0100
     5c2:	0105                	.insn	2, 0x0105
     5c4:	0c090f03          	lb	t5,192(s2)
     5c8:	0100                	.insn	2, 0x0100
     5ca:	0902ce03          	lbu	t3,144(t0)
     5ce:	0014                	.insn	2, 0x0014
     5d0:	0501                	.insn	2, 0x0501
     5d2:	0310                	.insn	2, 0x0310
     5d4:	0901                	.insn	2, 0x0901
     5d6:	0020                	.insn	2, 0x0020
     5d8:	0501                	.insn	2, 0x0501
     5da:	0315                	.insn	2, 0x0315
     5dc:	0902                	.insn	2, 0x0902
     5de:	0004                	.insn	2, 0x0004
     5e0:	0501                	.insn	2, 0x0501
     5e2:	0309                	.insn	2, 0x0309
     5e4:	0008090f          	.insn	4, 0x0008090f
     5e8:	0501                	.insn	2, 0x0501
     5ea:	031a                	.insn	2, 0x031a
     5ec:	0906                	.insn	2, 0x0906
     5ee:	0018                	.insn	2, 0x0018
     5f0:	0501                	.insn	2, 0x0501
     5f2:	09000337          	lui	t1,0x9000
     5f6:	0008                	.insn	2, 0x0008
     5f8:	0501                	.insn	2, 0x0501
     5fa:	0900030f          	.insn	4, 0x0900030f
     5fe:	0008                	.insn	2, 0x0008
     600:	0501                	.insn	2, 0x0501
     602:	0044                	.insn	2, 0x0044
     604:	0402                	.insn	2, 0x0402
     606:	0301                	.insn	2, 0x0301
     608:	0900                	.insn	2, 0x0900
     60a:	0004                	.insn	2, 0x0004
     60c:	0501                	.insn	2, 0x0501
     60e:	0326                	.insn	2, 0x0326
     610:	00c2                	.insn	2, 0x00c2
     612:	0c09                	.insn	2, 0x0c09
     614:	0100                	.insn	2, 0x0100
     616:	1905                	.insn	2, 0x1905
     618:	14090403          	lb	s0,320(s2)
     61c:	0100                	.insn	2, 0x0100
     61e:	1705                	.insn	2, 0x1705
     620:	08090003          	lb	zero,128(s2)
     624:	0100                	.insn	2, 0x0100
     626:	3705                	.insn	2, 0x3705
     628:	04090203          	lb	tp,64(s2)
     62c:	0100                	.insn	2, 0x0100
     62e:	1d05                	.insn	2, 0x1d05
     630:	08090003          	lb	zero,128(s2)
     634:	0100                	.insn	2, 0x0100
     636:	1105                	.insn	2, 0x1105
     638:	08091c03          	lh	s8,128(s2)
     63c:	0100                	.insn	2, 0x0100
     63e:	0200                	.insn	2, 0x0200
     640:	0104                	.insn	2, 0x0104
     642:	0306                	.insn	2, 0x0306
     644:	0900                	.insn	2, 0x0900
     646:	0020                	.insn	2, 0x0020
     648:	0501                	.insn	2, 0x0501
     64a:	0618                	.insn	2, 0x0618
     64c:	04090403          	lb	s0,64(s2)
     650:	0100                	.insn	2, 0x0100
     652:	2205                	.insn	2, 0x2205
     654:	08090403          	lb	s0,128(s2)
     658:	0100                	.insn	2, 0x0100
     65a:	1305                	.insn	2, 0x1305
     65c:	04090003          	lb	zero,64(s2)
     660:	0100                	.insn	2, 0x0100
     662:	1505                	.insn	2, 0x1505
     664:	04090403          	lb	s0,64(s2)
     668:	0100                	.insn	2, 0x0100
     66a:	0200                	.insn	2, 0x0200
     66c:	0104                	.insn	2, 0x0104
     66e:	0306                	.insn	2, 0x0306
     670:	0900                	.insn	2, 0x0900
     672:	0020                	.insn	2, 0x0020
     674:	0501                	.insn	2, 0x0501
     676:	061c                	.insn	2, 0x061c
     678:	04090703          	lb	a4,64(s2)
     67c:	0100                	.insn	2, 0x0100
     67e:	1805                	.insn	2, 0x1805
     680:	08090203          	lb	tp,128(s2)
     684:	0100                	.insn	2, 0x0100
     686:	1505                	.insn	2, 0x1505
     688:	08090403          	lb	s0,128(s2)
     68c:	0100                	.insn	2, 0x0100
     68e:	2305                	.insn	2, 0x2305
     690:	0c090103          	lb	sp,192(s2)
     694:	0100                	.insn	2, 0x0100
     696:	0905                	.insn	2, 0x0905
     698:	08090903          	lb	s2,128(s2)
     69c:	0100                	.insn	2, 0x0100
     69e:	0200                	.insn	2, 0x0200
     6a0:	0104                	.insn	2, 0x0104
     6a2:	0306                	.insn	2, 0x0306
     6a4:	0900                	.insn	2, 0x0900
     6a6:	0020                	.insn	2, 0x0020
     6a8:	0601                	.insn	2, 0x0601
     6aa:	04090503          	lb	a0,64(s2)
     6ae:	0100                	.insn	2, 0x0100
     6b0:	04090103          	lb	sp,64(s2)
     6b4:	0100                	.insn	2, 0x0100
     6b6:	0200                	.insn	2, 0x0200
     6b8:	0104                	.insn	2, 0x0104
     6ba:	0306                	.insn	2, 0x0306
     6bc:	0900                	.insn	2, 0x0900
     6be:	0030                	.insn	2, 0x0030
     6c0:	0001                	.insn	2, 0x0001
     6c2:	0402                	.insn	2, 0x0402
     6c4:	09000303          	lb	t1,144(zero) # 90 <__start-0x7fffff70>
     6c8:	0008                	.insn	2, 0x0008
     6ca:	0001                	.insn	2, 0x0001
     6cc:	0402                	.insn	2, 0x0402
     6ce:	0304                	.insn	2, 0x0304
     6d0:	0900                	.insn	2, 0x0900
     6d2:	0018                	.insn	2, 0x0018
     6d4:	0001                	.insn	2, 0x0001
     6d6:	0402                	.insn	2, 0x0402
     6d8:	0306                	.insn	2, 0x0306
     6da:	0900                	.insn	2, 0x0900
     6dc:	0008                	.insn	2, 0x0008
     6de:	0001                	.insn	2, 0x0001
     6e0:	0402                	.insn	2, 0x0402
     6e2:	09000307          	.insn	4, 0x09000307
     6e6:	0020                	.insn	2, 0x0020
     6e8:	0501                	.insn	2, 0x0501
     6ea:	060d                	.insn	2, 0x060d
     6ec:	04090303          	lb	t1,64(s2)
     6f0:	0100                	.insn	2, 0x0100
     6f2:	0b05                	.insn	2, 0x0b05
     6f4:	0200                	.insn	2, 0x0200
     6f6:	0104                	.insn	2, 0x0104
     6f8:	18090003          	lb	zero,384(s2)
     6fc:	0100                	.insn	2, 0x0100
     6fe:	1105                	.insn	2, 0x1105
     700:	04090203          	lb	tp,64(s2)
     704:	0100                	.insn	2, 0x0100
     706:	0f05                	.insn	2, 0x0f05
     708:	0200                	.insn	2, 0x0200
     70a:	0104                	.insn	2, 0x0104
     70c:	0c090003          	lb	zero,192(s2)
     710:	0100                	.insn	2, 0x0100
     712:	1105                	.insn	2, 0x1105
     714:	04090303          	lb	t1,64(s2)
     718:	0100                	.insn	2, 0x0100
     71a:	18090703          	lb	a4,384(s2)
     71e:	0100                	.insn	2, 0x0100
     720:	1505                	.insn	2, 0x1505
     722:	08090703          	lb	a4,128(s2)
     726:	0100                	.insn	2, 0x0100
     728:	1305                	.insn	2, 0x1305
     72a:	0200                	.insn	2, 0x0200
     72c:	0104                	.insn	2, 0x0104
     72e:	08090003          	lb	zero,128(s2)
     732:	0100                	.insn	2, 0x0100
     734:	1505                	.insn	2, 0x1505
     736:	04090203          	lb	tp,64(s2)
     73a:	0100                	.insn	2, 0x0100
     73c:	1105                	.insn	2, 0x1105
     73e:	08090603          	lb	a2,128(s2)
     742:	0100                	.insn	2, 0x0100
     744:	1a05                	.insn	2, 0x1a05
     746:	08090103          	lb	sp,128(s2)
     74a:	0100                	.insn	2, 0x0100
     74c:	0d05                	.insn	2, 0x0d05
     74e:	08090603          	lb	a2,128(s2)
     752:	0100                	.insn	2, 0x0100
     754:	1605                	.insn	2, 0x1605
     756:	08090103          	lb	sp,128(s2)
     75a:	0100                	.insn	2, 0x0100
     75c:	1405                	.insn	2, 0x1405
     75e:	04090503          	lb	a0,64(s2)
     762:	0100                	.insn	2, 0x0100
     764:	0105                	.insn	2, 0x0105
     766:	04090303          	lb	t1,64(s2)
     76a:	0100                	.insn	2, 0x0100
     76c:	14090703          	lb	a4,320(s2)
     770:	0100                	.insn	2, 0x0100
     772:	1505                	.insn	2, 0x1505
     774:	20090303          	lb	t1,512(s2)
     778:	0100                	.insn	2, 0x0100
     77a:	1c05                	.insn	2, 0x1c05
     77c:	08092003          	lw	zero,128(s2)
     780:	0100                	.insn	2, 0x0100
     782:	1605                	.insn	2, 0x1605
     784:	04090203          	lb	tp,64(s2)
     788:	0100                	.insn	2, 0x0100
     78a:	3305                	.insn	2, 0x3305
     78c:	08090003          	lb	zero,128(s2)
     790:	0100                	.insn	2, 0x0100
     792:	0b05                	.insn	2, 0x0b05
     794:	08090003          	lb	zero,128(s2)
     798:	0100                	.insn	2, 0x0100
     79a:	4005                	.insn	2, 0x4005
     79c:	0200                	.insn	2, 0x0200
     79e:	0104                	.insn	2, 0x0104
     7a0:	04090003          	lb	zero,64(s2)
     7a4:	0100                	.insn	2, 0x0100
     7a6:	1a05                	.insn	2, 0x1a05
     7a8:	0c090203          	lb	tp,192(s2)
     7ac:	0100                	.insn	2, 0x0100
     7ae:	1f05                	.insn	2, 0x1f05
     7b0:	0c090103          	lb	sp,192(s2)
     7b4:	0100                	.insn	2, 0x0100
     7b6:	1605                	.insn	2, 0x1605
     7b8:	0c090903          	lb	s2,192(s2)
     7bc:	0100                	.insn	2, 0x0100
     7be:	0f05                	.insn	2, 0x0f05
     7c0:	10090403          	lb	s0,256(s2)
     7c4:	0100                	.insn	2, 0x0100
     7c6:	1905                	.insn	2, 0x1905
     7c8:	0c093e03          	.insn	4, 0x0c093e03
     7cc:	0100                	.insn	2, 0x0100
     7ce:	1705                	.insn	2, 0x1705
     7d0:	08090003          	lb	zero,128(s2)
     7d4:	0100                	.insn	2, 0x0100
     7d6:	3705                	.insn	2, 0x3705
     7d8:	04090203          	lb	tp,64(s2)
     7dc:	0100                	.insn	2, 0x0100
     7de:	1d05                	.insn	2, 0x1d05
     7e0:	08090003          	lb	zero,128(s2)
     7e4:	0100                	.insn	2, 0x0100
     7e6:	1b05                	.insn	2, 0x1b05
     7e8:	0200                	.insn	2, 0x0200
     7ea:	0104                	.insn	2, 0x0104
     7ec:	0c090003          	lb	zero,192(s2)
     7f0:	0100                	.insn	2, 0x0100
     7f2:	1f05                	.insn	2, 0x1f05
     7f4:	04090403          	lb	s0,64(s2)
     7f8:	0100                	.insn	2, 0x0100
     7fa:	3c05                	.insn	2, 0x3c05
     7fc:	08090203          	lb	tp,128(s2)
     800:	0100                	.insn	2, 0x0100
     802:	1105                	.insn	2, 0x1105
     804:	10091a03          	lh	s4,256(s2)
     808:	0100                	.insn	2, 0x0100
     80a:	0200                	.insn	2, 0x0200
     80c:	0104                	.insn	2, 0x0104
     80e:	0306                	.insn	2, 0x0306
     810:	0900                	.insn	2, 0x0900
     812:	0008                	.insn	2, 0x0008
     814:	0501                	.insn	2, 0x0501
     816:	0615                	.insn	2, 0x0615
     818:	28090303          	lb	t1,640(s2)
     81c:	0100                	.insn	2, 0x0100
     81e:	0905                	.insn	2, 0x0905
     820:	097f8e03          	lb	t3,151(t6) # 23351097 <__start-0x5ccaef69>
     824:	0008                	.insn	2, 0x0008
     826:	0501                	.insn	2, 0x0501
     828:	0315                	.insn	2, 0x0315
     82a:	040900f7          	.insn	4, 0x040900f7
     82e:	0100                	.insn	2, 0x0100
     830:	0c05                	.insn	2, 0x0c05
     832:	04090703          	lb	a4,64(s2)
     836:	0100                	.insn	2, 0x0100
     838:	0105                	.insn	2, 0x0105
     83a:	04090103          	lb	sp,64(s2)
     83e:	0100                	.insn	2, 0x0100
     840:	14090503          	lb	a0,320(s2)
     844:	0100                	.insn	2, 0x0100
     846:	1505                	.insn	2, 0x1505
     848:	18090303          	lb	t1,384(s2)
     84c:	0100                	.insn	2, 0x0100
     84e:	1c05                	.insn	2, 0x1c05
     850:	08092803          	lw	a6,128(s2)
     854:	0100                	.insn	2, 0x0100
     856:	1b05                	.insn	2, 0x1b05
     858:	04090203          	lb	tp,64(s2)
     85c:	0100                	.insn	2, 0x0100
     85e:	2805                	.insn	2, 0x2805
     860:	0c090503          	lb	a0,192(s2)
     864:	0100                	.insn	2, 0x0100
     866:	0b05                	.insn	2, 0x0b05
     868:	08090003          	lb	zero,128(s2)
     86c:	0100                	.insn	2, 0x0100
     86e:	1a05                	.insn	2, 0x1a05
     870:	08090203          	lb	tp,128(s2)
     874:	0100                	.insn	2, 0x0100
     876:	4e05                	.insn	2, 0x4e05
     878:	0c090a03          	lb	s4,192(s2)
     87c:	0100                	.insn	2, 0x0100
     87e:	2805                	.insn	2, 0x2805
     880:	08090003          	lb	zero,128(s2)
     884:	0100                	.insn	2, 0x0100
     886:	0f05                	.insn	2, 0x0f05
     888:	08090403          	lb	s0,128(s2)
     88c:	0100                	.insn	2, 0x0100
     88e:	1905                	.insn	2, 0x1905
     890:	0c093703          	.insn	4, 0x0c093703
     894:	0100                	.insn	2, 0x0100
     896:	1705                	.insn	2, 0x1705
     898:	08090003          	lb	zero,128(s2)
     89c:	0100                	.insn	2, 0x0100
     89e:	3705                	.insn	2, 0x3705
     8a0:	04090203          	lb	tp,64(s2)
     8a4:	0100                	.insn	2, 0x0100
     8a6:	1d05                	.insn	2, 0x1d05
     8a8:	08090003          	lb	zero,128(s2)
     8ac:	0100                	.insn	2, 0x0100
     8ae:	1b05                	.insn	2, 0x1b05
     8b0:	0200                	.insn	2, 0x0200
     8b2:	0104                	.insn	2, 0x0104
     8b4:	0c090003          	lb	zero,192(s2)
     8b8:	0100                	.insn	2, 0x0100
     8ba:	1f05                	.insn	2, 0x1f05
     8bc:	04090403          	lb	s0,64(s2)
     8c0:	0100                	.insn	2, 0x0100
     8c2:	3c05                	.insn	2, 0x3c05
     8c4:	08090203          	lb	tp,128(s2)
     8c8:	0100                	.insn	2, 0x0100
     8ca:	1105                	.insn	2, 0x1105
     8cc:	10091703          	lh	a4,256(s2)
     8d0:	0100                	.insn	2, 0x0100
     8d2:	0200                	.insn	2, 0x0200
     8d4:	0104                	.insn	2, 0x0104
     8d6:	0306                	.insn	2, 0x0306
     8d8:	0900                	.insn	2, 0x0900
     8da:	0008                	.insn	2, 0x0008
     8dc:	0501                	.insn	2, 0x0501
     8de:	0615                	.insn	2, 0x0615
     8e0:	28090303          	lb	t1,640(s2)
     8e4:	0100                	.insn	2, 0x0100
     8e6:	0c090503          	lb	a0,192(s2)
     8ea:	0100                	.insn	2, 0x0100
     8ec:	0c05                	.insn	2, 0x0c05
     8ee:	04090703          	lb	a4,64(s2)
     8f2:	0100                	.insn	2, 0x0100
     8f4:	0105                	.insn	2, 0x0105
     8f6:	04090103          	lb	sp,64(s2)
     8fa:	0100                	.insn	2, 0x0100
     8fc:	14090603          	lb	a2,320(s2)
     900:	0100                	.insn	2, 0x0100
     902:	1005                	.insn	2, 0x1005
     904:	1c090103          	lb	sp,448(s2)
     908:	0100                	.insn	2, 0x0100
     90a:	1505                	.insn	2, 0x1505
     90c:	04090203          	lb	tp,64(s2)
     910:	0100                	.insn	2, 0x0100
     912:	0905                	.insn	2, 0x0905
     914:	08091403          	lh	s0,128(s2)
     918:	0100                	.insn	2, 0x0100
     91a:	1f05                	.insn	2, 0x1f05
     91c:	18090203          	lb	tp,384(s2)
     920:	0100                	.insn	2, 0x0100
     922:	0f05                	.insn	2, 0x0f05
     924:	0c090403          	lb	s0,192(s2)
     928:	0100                	.insn	2, 0x0100
     92a:	1105                	.insn	2, 0x1105
     92c:	08090303          	lb	t1,128(s2)
     930:	0100                	.insn	2, 0x0100
     932:	5205                	.insn	2, 0x5205
     934:	0c090203          	lb	tp,192(s2)
     938:	0100                	.insn	2, 0x0100
     93a:	2c05                	.insn	2, 0x2c05
     93c:	08090003          	lb	zero,128(s2)
     940:	0100                	.insn	2, 0x0100
     942:	1505                	.insn	2, 0x1505
     944:	08090503          	lb	a0,128(s2)
     948:	0100                	.insn	2, 0x0100
     94a:	1305                	.insn	2, 0x1305
     94c:	08090003          	lb	zero,128(s2)
     950:	0100                	.insn	2, 0x0100
     952:	3305                	.insn	2, 0x3305
     954:	04090203          	lb	tp,64(s2)
     958:	0100                	.insn	2, 0x0100
     95a:	1905                	.insn	2, 0x1905
     95c:	08090003          	lb	zero,128(s2)
     960:	0100                	.insn	2, 0x0100
     962:	1105                	.insn	2, 0x1105
     964:	08090e03          	lb	t3,128(s2)
     968:	0100                	.insn	2, 0x0100
     96a:	0200                	.insn	2, 0x0200
     96c:	0104                	.insn	2, 0x0104
     96e:	0306                	.insn	2, 0x0306
     970:	0900                	.insn	2, 0x0900
     972:	0020                	.insn	2, 0x0020
     974:	0501                	.insn	2, 0x0501
     976:	0618                	.insn	2, 0x0618
     978:	04090403          	lb	s0,64(s2)
     97c:	0100                	.insn	2, 0x0100
     97e:	2205                	.insn	2, 0x2205
     980:	08090403          	lb	s0,128(s2)
     984:	0100                	.insn	2, 0x0100
     986:	1305                	.insn	2, 0x1305
     988:	04090003          	lb	zero,64(s2)
     98c:	0100                	.insn	2, 0x0100
     98e:	1505                	.insn	2, 0x1505
     990:	04090403          	lb	s0,64(s2)
     994:	0100                	.insn	2, 0x0100
     996:	0200                	.insn	2, 0x0200
     998:	0104                	.insn	2, 0x0104
     99a:	0306                	.insn	2, 0x0306
     99c:	0900                	.insn	2, 0x0900
     99e:	0020                	.insn	2, 0x0020
     9a0:	0501                	.insn	2, 0x0501
     9a2:	061c                	.insn	2, 0x061c
     9a4:	04090503          	lb	a0,64(s2)
     9a8:	0100                	.insn	2, 0x0100
     9aa:	1805                	.insn	2, 0x1805
     9ac:	08090203          	lb	tp,128(s2)
     9b0:	0100                	.insn	2, 0x0100
     9b2:	1505                	.insn	2, 0x1505
     9b4:	08090403          	lb	s0,128(s2)
     9b8:	0100                	.insn	2, 0x0100
     9ba:	2305                	.insn	2, 0x2305
     9bc:	0c090103          	lb	sp,192(s2)
     9c0:	0100                	.insn	2, 0x0100
     9c2:	0905                	.insn	2, 0x0905
     9c4:	08090903          	lb	s2,128(s2)
     9c8:	0100                	.insn	2, 0x0100
     9ca:	0200                	.insn	2, 0x0200
     9cc:	0104                	.insn	2, 0x0104
     9ce:	0306                	.insn	2, 0x0306
     9d0:	0900                	.insn	2, 0x0900
     9d2:	0020                	.insn	2, 0x0020
     9d4:	0601                	.insn	2, 0x0601
     9d6:	04090503          	lb	a0,64(s2)
     9da:	0100                	.insn	2, 0x0100
     9dc:	04090103          	lb	sp,64(s2)
     9e0:	0100                	.insn	2, 0x0100
     9e2:	0200                	.insn	2, 0x0200
     9e4:	0104                	.insn	2, 0x0104
     9e6:	0306                	.insn	2, 0x0306
     9e8:	0900                	.insn	2, 0x0900
     9ea:	0030                	.insn	2, 0x0030
     9ec:	0001                	.insn	2, 0x0001
     9ee:	0402                	.insn	2, 0x0402
     9f0:	09000303          	lb	t1,144(zero) # 90 <__start-0x7fffff70>
     9f4:	0008                	.insn	2, 0x0008
     9f6:	0001                	.insn	2, 0x0001
     9f8:	0402                	.insn	2, 0x0402
     9fa:	0304                	.insn	2, 0x0304
     9fc:	0900                	.insn	2, 0x0900
     9fe:	0018                	.insn	2, 0x0018
     a00:	0001                	.insn	2, 0x0001
     a02:	0402                	.insn	2, 0x0402
     a04:	0306                	.insn	2, 0x0306
     a06:	0900                	.insn	2, 0x0900
     a08:	0008                	.insn	2, 0x0008
     a0a:	0001                	.insn	2, 0x0001
     a0c:	0402                	.insn	2, 0x0402
     a0e:	09000307          	.insn	4, 0x09000307
     a12:	0020                	.insn	2, 0x0020
     a14:	0501                	.insn	2, 0x0501
     a16:	060d                	.insn	2, 0x060d
     a18:	04090303          	lb	t1,64(s2)
     a1c:	0100                	.insn	2, 0x0100
     a1e:	0b05                	.insn	2, 0x0b05
     a20:	0200                	.insn	2, 0x0200
     a22:	0104                	.insn	2, 0x0104
     a24:	18090003          	lb	zero,384(s2)
     a28:	0100                	.insn	2, 0x0100
     a2a:	1105                	.insn	2, 0x1105
     a2c:	04090403          	lb	s0,64(s2)
     a30:	0100                	.insn	2, 0x0100
     a32:	0f05                	.insn	2, 0x0f05
     a34:	0200                	.insn	2, 0x0200
     a36:	0104                	.insn	2, 0x0104
     a38:	0c090003          	lb	zero,192(s2)
     a3c:	0100                	.insn	2, 0x0100
     a3e:	1105                	.insn	2, 0x1105
     a40:	04090303          	lb	t1,64(s2)
     a44:	0100                	.insn	2, 0x0100
     a46:	18090103          	lb	sp,384(s2)
     a4a:	0100                	.insn	2, 0x0100
     a4c:	1505                	.insn	2, 0x1505
     a4e:	08090203          	lb	tp,128(s2)
     a52:	0100                	.insn	2, 0x0100
     a54:	1305                	.insn	2, 0x1305
     a56:	0200                	.insn	2, 0x0200
     a58:	0104                	.insn	2, 0x0104
     a5a:	08090003          	lb	zero,128(s2)
     a5e:	0100                	.insn	2, 0x0100
     a60:	1505                	.insn	2, 0x1505
     a62:	04090203          	lb	tp,64(s2)
     a66:	0100                	.insn	2, 0x0100
     a68:	1105                	.insn	2, 0x1105
     a6a:	08090b03          	lb	s6,128(s2)
     a6e:	0100                	.insn	2, 0x0100
     a70:	1a05                	.insn	2, 0x1a05
     a72:	08090103          	lb	sp,128(s2)
     a76:	0100                	.insn	2, 0x0100
     a78:	0d05                	.insn	2, 0x0d05
     a7a:	08090703          	lb	a4,128(s2)
     a7e:	0100                	.insn	2, 0x0100
     a80:	1605                	.insn	2, 0x1605
     a82:	08090103          	lb	sp,128(s2)
     a86:	0100                	.insn	2, 0x0100
     a88:	1105                	.insn	2, 0x1105
     a8a:	04090203          	lb	tp,64(s2)
     a8e:	0100                	.insn	2, 0x0100
     a90:	0f05                	.insn	2, 0x0f05
     a92:	0200                	.insn	2, 0x0200
     a94:	0104                	.insn	2, 0x0104
     a96:	0c090003          	lb	zero,192(s2)
     a9a:	0100                	.insn	2, 0x0100
     a9c:	1805                	.insn	2, 0x1805
     a9e:	04090503          	lb	a0,64(s2)
     aa2:	0100                	.insn	2, 0x0100
     aa4:	0105                	.insn	2, 0x0105
     aa6:	04090803          	lb	a6,64(s2)
     aaa:	0100                	.insn	2, 0x0100
     aac:	14090503          	lb	a0,320(s2)
     ab0:	0100                	.insn	2, 0x0100
     ab2:	1005                	.insn	2, 0x1005
     ab4:	18090103          	lb	sp,384(s2)
     ab8:	0100                	.insn	2, 0x0100
     aba:	1505                	.insn	2, 0x1505
     abc:	04090203          	lb	tp,64(s2)
     ac0:	0100                	.insn	2, 0x0100
     ac2:	0905                	.insn	2, 0x0905
     ac4:	08091803          	lh	a6,128(s2)
     ac8:	0100                	.insn	2, 0x0100
     aca:	1f05                	.insn	2, 0x1f05
     acc:	18090403          	lb	s0,384(s2)
     ad0:	0100                	.insn	2, 0x0100
     ad2:	0f05                	.insn	2, 0x0f05
     ad4:	0c090403          	lb	s0,192(s2)
     ad8:	0100                	.insn	2, 0x0100
     ada:	5105                	.insn	2, 0x5105
     adc:	08090603          	lb	a2,128(s2)
     ae0:	0100                	.insn	2, 0x0100
     ae2:	2c05                	.insn	2, 0x2c05
     ae4:	08090003          	lb	zero,128(s2)
     ae8:	0100                	.insn	2, 0x0100
     aea:	1505                	.insn	2, 0x1505
     aec:	08091303          	lh	t1,128(s2)
     af0:	0100                	.insn	2, 0x0100
     af2:	1305                	.insn	2, 0x1305
     af4:	08090003          	lb	zero,128(s2)
     af8:	0100                	.insn	2, 0x0100
     afa:	3305                	.insn	2, 0x3305
     afc:	04090203          	lb	tp,64(s2)
     b00:	0100                	.insn	2, 0x0100
     b02:	1905                	.insn	2, 0x1905
     b04:	08090003          	lb	zero,128(s2)
     b08:	0100                	.insn	2, 0x0100
     b0a:	1105                	.insn	2, 0x1105
     b0c:	08090e03          	lb	t3,128(s2)
     b10:	0100                	.insn	2, 0x0100
     b12:	0200                	.insn	2, 0x0200
     b14:	0104                	.insn	2, 0x0104
     b16:	0306                	.insn	2, 0x0306
     b18:	0900                	.insn	2, 0x0900
     b1a:	0020                	.insn	2, 0x0020
     b1c:	0501                	.insn	2, 0x0501
     b1e:	0618                	.insn	2, 0x0618
     b20:	04090403          	lb	s0,64(s2)
     b24:	0100                	.insn	2, 0x0100
     b26:	2205                	.insn	2, 0x2205
     b28:	08090403          	lb	s0,128(s2)
     b2c:	0100                	.insn	2, 0x0100
     b2e:	1305                	.insn	2, 0x1305
     b30:	04090003          	lb	zero,64(s2)
     b34:	0100                	.insn	2, 0x0100
     b36:	1505                	.insn	2, 0x1505
     b38:	04090403          	lb	s0,64(s2)
     b3c:	0100                	.insn	2, 0x0100
     b3e:	0200                	.insn	2, 0x0200
     b40:	0104                	.insn	2, 0x0104
     b42:	0306                	.insn	2, 0x0306
     b44:	0900                	.insn	2, 0x0900
     b46:	0020                	.insn	2, 0x0020
     b48:	0501                	.insn	2, 0x0501
     b4a:	061c                	.insn	2, 0x061c
     b4c:	04090503          	lb	a0,64(s2)
     b50:	0100                	.insn	2, 0x0100
     b52:	1805                	.insn	2, 0x1805
     b54:	08090203          	lb	tp,128(s2)
     b58:	0100                	.insn	2, 0x0100
     b5a:	1505                	.insn	2, 0x1505
     b5c:	08090403          	lb	s0,128(s2)
     b60:	0100                	.insn	2, 0x0100
     b62:	2305                	.insn	2, 0x2305
     b64:	0c090103          	lb	sp,192(s2)
     b68:	0100                	.insn	2, 0x0100
     b6a:	0905                	.insn	2, 0x0905
     b6c:	08090903          	lb	s2,128(s2)
     b70:	0100                	.insn	2, 0x0100
     b72:	0200                	.insn	2, 0x0200
     b74:	0104                	.insn	2, 0x0104
     b76:	0306                	.insn	2, 0x0306
     b78:	0900                	.insn	2, 0x0900
     b7a:	0020                	.insn	2, 0x0020
     b7c:	0601                	.insn	2, 0x0601
     b7e:	04090503          	lb	a0,64(s2)
     b82:	0100                	.insn	2, 0x0100
     b84:	04090103          	lb	sp,64(s2)
     b88:	0100                	.insn	2, 0x0100
     b8a:	0200                	.insn	2, 0x0200
     b8c:	0104                	.insn	2, 0x0104
     b8e:	0306                	.insn	2, 0x0306
     b90:	0900                	.insn	2, 0x0900
     b92:	0030                	.insn	2, 0x0030
     b94:	0001                	.insn	2, 0x0001
     b96:	0402                	.insn	2, 0x0402
     b98:	09000303          	lb	t1,144(zero) # 90 <__start-0x7fffff70>
     b9c:	0008                	.insn	2, 0x0008
     b9e:	0001                	.insn	2, 0x0001
     ba0:	0402                	.insn	2, 0x0402
     ba2:	0304                	.insn	2, 0x0304
     ba4:	0900                	.insn	2, 0x0900
     ba6:	0018                	.insn	2, 0x0018
     ba8:	0001                	.insn	2, 0x0001
     baa:	0402                	.insn	2, 0x0402
     bac:	0306                	.insn	2, 0x0306
     bae:	0900                	.insn	2, 0x0900
     bb0:	0008                	.insn	2, 0x0008
     bb2:	0001                	.insn	2, 0x0001
     bb4:	0402                	.insn	2, 0x0402
     bb6:	09000307          	.insn	4, 0x09000307
     bba:	0020                	.insn	2, 0x0020
     bbc:	0501                	.insn	2, 0x0501
     bbe:	060d                	.insn	2, 0x060d
     bc0:	04090303          	lb	t1,64(s2)
     bc4:	0100                	.insn	2, 0x0100
     bc6:	0b05                	.insn	2, 0x0b05
     bc8:	0200                	.insn	2, 0x0200
     bca:	0104                	.insn	2, 0x0104
     bcc:	18090003          	lb	zero,384(s2)
     bd0:	0100                	.insn	2, 0x0100
     bd2:	1105                	.insn	2, 0x1105
     bd4:	04090603          	lb	a2,64(s2)
     bd8:	0100                	.insn	2, 0x0100
     bda:	0f05                	.insn	2, 0x0f05
     bdc:	0200                	.insn	2, 0x0200
     bde:	0104                	.insn	2, 0x0104
     be0:	0c090003          	lb	zero,192(s2)
     be4:	0100                	.insn	2, 0x0100
     be6:	1105                	.insn	2, 0x1105
     be8:	04091503          	lh	a0,64(s2)
     bec:	0100                	.insn	2, 0x0100
     bee:	18090103          	lb	sp,384(s2)
     bf2:	0100                	.insn	2, 0x0100
     bf4:	1505                	.insn	2, 0x1505
     bf6:	08090203          	lb	tp,128(s2)
     bfa:	0100                	.insn	2, 0x0100
     bfc:	1305                	.insn	2, 0x1305
     bfe:	0200                	.insn	2, 0x0200
     c00:	0104                	.insn	2, 0x0104
     c02:	08090003          	lb	zero,128(s2)
     c06:	0100                	.insn	2, 0x0100
     c08:	1505                	.insn	2, 0x1505
     c0a:	04090203          	lb	tp,64(s2)
     c0e:	0100                	.insn	2, 0x0100
     c10:	1105                	.insn	2, 0x1105
     c12:	08090b03          	lb	s6,128(s2)
     c16:	0100                	.insn	2, 0x0100
     c18:	1a05                	.insn	2, 0x1a05
     c1a:	08090103          	lb	sp,128(s2)
     c1e:	0100                	.insn	2, 0x0100
     c20:	0d05                	.insn	2, 0x0d05
     c22:	08090603          	lb	a2,128(s2)
     c26:	0100                	.insn	2, 0x0100
     c28:	1605                	.insn	2, 0x1605
     c2a:	08090103          	lb	sp,128(s2)
     c2e:	0100                	.insn	2, 0x0100
     c30:	1105                	.insn	2, 0x1105
     c32:	04090603          	lb	a2,64(s2)
     c36:	0100                	.insn	2, 0x0100
     c38:	0f05                	.insn	2, 0x0f05
     c3a:	0200                	.insn	2, 0x0200
     c3c:	0104                	.insn	2, 0x0104
     c3e:	0c090003          	lb	zero,192(s2)
     c42:	0100                	.insn	2, 0x0100
     c44:	1805                	.insn	2, 0x1805
     c46:	04092503          	lw	a0,64(s2)
     c4a:	0100                	.insn	2, 0x0100
     c4c:	0105                	.insn	2, 0x0105
     c4e:	04090803          	lb	a6,64(s2)
     c52:	0100                	.insn	2, 0x0100
     c54:	14090603          	lb	a2,320(s2)
     c58:	0100                	.insn	2, 0x0100
     c5a:	1005                	.insn	2, 0x1005
     c5c:	1c090103          	lb	sp,448(s2)
     c60:	0100                	.insn	2, 0x0100
     c62:	1505                	.insn	2, 0x1505
     c64:	04090303          	lb	t1,64(s2)
     c68:	0100                	.insn	2, 0x0100
     c6a:	0905                	.insn	2, 0x0905
     c6c:	08091403          	lh	s0,128(s2)
     c70:	0100                	.insn	2, 0x0100
     c72:	1f05                	.insn	2, 0x1f05
     c74:	18090203          	lb	tp,384(s2)
     c78:	0100                	.insn	2, 0x0100
     c7a:	0f05                	.insn	2, 0x0f05
     c7c:	0c090403          	lb	s0,192(s2)
     c80:	0100                	.insn	2, 0x0100
     c82:	2805                	.insn	2, 0x2805
     c84:	08090503          	lb	a0,128(s2)
     c88:	0100                	.insn	2, 0x0100
     c8a:	1105                	.insn	2, 0x1105
     c8c:	0c090203          	lb	tp,192(s2)
     c90:	0100                	.insn	2, 0x0100
     c92:	2e05                	.insn	2, 0x2e05
     c94:	0c090403          	lb	s0,192(s2)
     c98:	0100                	.insn	2, 0x0100
     c9a:	1505                	.insn	2, 0x1505
     c9c:	0c090403          	lb	s0,192(s2)
     ca0:	0100                	.insn	2, 0x0100
     ca2:	1305                	.insn	2, 0x1305
     ca4:	08090003          	lb	zero,128(s2)
     ca8:	0100                	.insn	2, 0x0100
     caa:	3305                	.insn	2, 0x3305
     cac:	04090203          	lb	tp,64(s2)
     cb0:	0100                	.insn	2, 0x0100
     cb2:	1905                	.insn	2, 0x1905
     cb4:	08090003          	lb	zero,128(s2)
     cb8:	0100                	.insn	2, 0x0100
     cba:	1105                	.insn	2, 0x1105
     cbc:	08090f03          	lb	t5,128(s2)
     cc0:	0100                	.insn	2, 0x0100
     cc2:	0200                	.insn	2, 0x0200
     cc4:	0104                	.insn	2, 0x0104
     cc6:	0306                	.insn	2, 0x0306
     cc8:	0900                	.insn	2, 0x0900
     cca:	0020                	.insn	2, 0x0020
     ccc:	0501                	.insn	2, 0x0501
     cce:	0618                	.insn	2, 0x0618
     cd0:	04090403          	lb	s0,64(s2)
     cd4:	0100                	.insn	2, 0x0100
     cd6:	2205                	.insn	2, 0x2205
     cd8:	08090403          	lb	s0,128(s2)
     cdc:	0100                	.insn	2, 0x0100
     cde:	1305                	.insn	2, 0x1305
     ce0:	04090003          	lb	zero,64(s2)
     ce4:	0100                	.insn	2, 0x0100
     ce6:	1505                	.insn	2, 0x1505
     ce8:	04090403          	lb	s0,64(s2)
     cec:	0100                	.insn	2, 0x0100
     cee:	0200                	.insn	2, 0x0200
     cf0:	0104                	.insn	2, 0x0104
     cf2:	0306                	.insn	2, 0x0306
     cf4:	0900                	.insn	2, 0x0900
     cf6:	0020                	.insn	2, 0x0020
     cf8:	0501                	.insn	2, 0x0501
     cfa:	061c                	.insn	2, 0x061c
     cfc:	04090503          	lb	a0,64(s2)
     d00:	0100                	.insn	2, 0x0100
     d02:	1805                	.insn	2, 0x1805
     d04:	08090203          	lb	tp,128(s2)
     d08:	0100                	.insn	2, 0x0100
     d0a:	1505                	.insn	2, 0x1505
     d0c:	08090503          	lb	a0,128(s2)
     d10:	0100                	.insn	2, 0x0100
     d12:	2305                	.insn	2, 0x2305
     d14:	0c090103          	lb	sp,192(s2)
     d18:	0100                	.insn	2, 0x0100
     d1a:	0905                	.insn	2, 0x0905
     d1c:	08090903          	lb	s2,128(s2)
     d20:	0100                	.insn	2, 0x0100
     d22:	0200                	.insn	2, 0x0200
     d24:	0104                	.insn	2, 0x0104
     d26:	0306                	.insn	2, 0x0306
     d28:	0900                	.insn	2, 0x0900
     d2a:	0020                	.insn	2, 0x0020
     d2c:	0601                	.insn	2, 0x0601
     d2e:	04090503          	lb	a0,64(s2)
     d32:	0100                	.insn	2, 0x0100
     d34:	04090103          	lb	sp,64(s2)
     d38:	0100                	.insn	2, 0x0100
     d3a:	0200                	.insn	2, 0x0200
     d3c:	0104                	.insn	2, 0x0104
     d3e:	0306                	.insn	2, 0x0306
     d40:	0900                	.insn	2, 0x0900
     d42:	0030                	.insn	2, 0x0030
     d44:	0001                	.insn	2, 0x0001
     d46:	0402                	.insn	2, 0x0402
     d48:	09000303          	lb	t1,144(zero) # 90 <__start-0x7fffff70>
     d4c:	0008                	.insn	2, 0x0008
     d4e:	0001                	.insn	2, 0x0001
     d50:	0402                	.insn	2, 0x0402
     d52:	0304                	.insn	2, 0x0304
     d54:	0900                	.insn	2, 0x0900
     d56:	0018                	.insn	2, 0x0018
     d58:	0001                	.insn	2, 0x0001
     d5a:	0402                	.insn	2, 0x0402
     d5c:	0306                	.insn	2, 0x0306
     d5e:	0900                	.insn	2, 0x0900
     d60:	0008                	.insn	2, 0x0008
     d62:	0001                	.insn	2, 0x0001
     d64:	0402                	.insn	2, 0x0402
     d66:	09000307          	.insn	4, 0x09000307
     d6a:	0020                	.insn	2, 0x0020
     d6c:	0501                	.insn	2, 0x0501
     d6e:	060d                	.insn	2, 0x060d
     d70:	04090303          	lb	t1,64(s2)
     d74:	0100                	.insn	2, 0x0100
     d76:	0b05                	.insn	2, 0x0b05
     d78:	0200                	.insn	2, 0x0200
     d7a:	0104                	.insn	2, 0x0104
     d7c:	18090003          	lb	zero,384(s2)
     d80:	0100                	.insn	2, 0x0100
     d82:	1105                	.insn	2, 0x1105
     d84:	04090403          	lb	s0,64(s2)
     d88:	0100                	.insn	2, 0x0100
     d8a:	0f05                	.insn	2, 0x0f05
     d8c:	0200                	.insn	2, 0x0200
     d8e:	0104                	.insn	2, 0x0104
     d90:	0c090003          	lb	zero,192(s2)
     d94:	0100                	.insn	2, 0x0100
     d96:	1105                	.insn	2, 0x1105
     d98:	04090303          	lb	t1,64(s2)
     d9c:	0100                	.insn	2, 0x0100
     d9e:	18090103          	lb	sp,384(s2)
     da2:	0100                	.insn	2, 0x0100
     da4:	1505                	.insn	2, 0x1505
     da6:	08090203          	lb	tp,128(s2)
     daa:	0100                	.insn	2, 0x0100
     dac:	1305                	.insn	2, 0x1305
     dae:	0200                	.insn	2, 0x0200
     db0:	0104                	.insn	2, 0x0104
     db2:	08090003          	lb	zero,128(s2)
     db6:	0100                	.insn	2, 0x0100
     db8:	1505                	.insn	2, 0x1505
     dba:	04090203          	lb	tp,64(s2)
     dbe:	0100                	.insn	2, 0x0100
     dc0:	1105                	.insn	2, 0x1105
     dc2:	08090b03          	lb	s6,128(s2)
     dc6:	0100                	.insn	2, 0x0100
     dc8:	1a05                	.insn	2, 0x1a05
     dca:	08090103          	lb	sp,128(s2)
     dce:	0100                	.insn	2, 0x0100
     dd0:	0d05                	.insn	2, 0x0d05
     dd2:	08090703          	lb	a4,128(s2)
     dd6:	0100                	.insn	2, 0x0100
     dd8:	1605                	.insn	2, 0x1605
     dda:	08090103          	lb	sp,128(s2)
     dde:	0100                	.insn	2, 0x0100
     de0:	1105                	.insn	2, 0x1105
     de2:	04090203          	lb	tp,64(s2)
     de6:	0100                	.insn	2, 0x0100
     de8:	0f05                	.insn	2, 0x0f05
     dea:	0200                	.insn	2, 0x0200
     dec:	0104                	.insn	2, 0x0104
     dee:	0c090003          	lb	zero,192(s2)
     df2:	0100                	.insn	2, 0x0100
     df4:	1805                	.insn	2, 0x1805
     df6:	04090503          	lb	a0,64(s2)
     dfa:	0100                	.insn	2, 0x0100
     dfc:	0105                	.insn	2, 0x0105
     dfe:	04090803          	lb	a6,64(s2)
     e02:	0100                	.insn	2, 0x0100
     e04:	14090603          	lb	a2,320(s2)
     e08:	0100                	.insn	2, 0x0100
     e0a:	1505                	.insn	2, 0x1505
     e0c:	1c090303          	lb	t1,448(s2)
     e10:	0100                	.insn	2, 0x0100
     e12:	1c05                	.insn	2, 0x1c05
     e14:	08091a03          	lh	s4,128(s2)
     e18:	0100                	.insn	2, 0x0100
     e1a:	1b05                	.insn	2, 0x1b05
     e1c:	04090203          	lb	tp,64(s2)
     e20:	0100                	.insn	2, 0x0100
     e22:	0b05                	.insn	2, 0x0b05
     e24:	0c090303          	lb	t1,192(s2)
     e28:	0100                	.insn	2, 0x0100
     e2a:	1a05                	.insn	2, 0x1a05
     e2c:	08090203          	lb	tp,128(s2)
     e30:	0100                	.insn	2, 0x0100
     e32:	0d05                	.insn	2, 0x0d05
     e34:	0c090403          	lb	s0,192(s2)
     e38:	0100                	.insn	2, 0x0100
     e3a:	4e05                	.insn	2, 0x4e05
     e3c:	0c090103          	lb	sp,192(s2)
     e40:	0100                	.insn	2, 0x0100
     e42:	2805                	.insn	2, 0x2805
     e44:	08090003          	lb	zero,128(s2)
     e48:	0100                	.insn	2, 0x0100
     e4a:	0f05                	.insn	2, 0x0f05
     e4c:	08090603          	lb	a2,128(s2)
     e50:	0100                	.insn	2, 0x0100
     e52:	1505                	.insn	2, 0x1505
     e54:	0c090203          	lb	tp,192(s2)
     e58:	0100                	.insn	2, 0x0100
     e5a:	1305                	.insn	2, 0x1305
     e5c:	08090003          	lb	zero,128(s2)
     e60:	0100                	.insn	2, 0x0100
     e62:	3305                	.insn	2, 0x3305
     e64:	04090203          	lb	tp,64(s2)
     e68:	0100                	.insn	2, 0x0100
     e6a:	1905                	.insn	2, 0x1905
     e6c:	08090003          	lb	zero,128(s2)
     e70:	0100                	.insn	2, 0x0100
     e72:	1705                	.insn	2, 0x1705
     e74:	0200                	.insn	2, 0x0200
     e76:	0104                	.insn	2, 0x0104
     e78:	0c090003          	lb	zero,192(s2)
     e7c:	0100                	.insn	2, 0x0100
     e7e:	1b05                	.insn	2, 0x1b05
     e80:	04090403          	lb	s0,64(s2)
     e84:	0100                	.insn	2, 0x0100
     e86:	3805                	.insn	2, 0x3805
     e88:	08090203          	lb	tp,128(s2)
     e8c:	0100                	.insn	2, 0x0100
     e8e:	1105                	.insn	2, 0x1105
     e90:	10091503          	lh	a0,256(s2)
     e94:	0100                	.insn	2, 0x0100
     e96:	0200                	.insn	2, 0x0200
     e98:	0104                	.insn	2, 0x0104
     e9a:	0306                	.insn	2, 0x0306
     e9c:	0900                	.insn	2, 0x0900
     e9e:	0008                	.insn	2, 0x0008
     ea0:	0501                	.insn	2, 0x0501
     ea2:	0615                	.insn	2, 0x0615
     ea4:	28090303          	lb	t1,640(s2)
     ea8:	0100                	.insn	2, 0x0100
     eaa:	0c090403          	lb	s0,192(s2)
     eae:	0100                	.insn	2, 0x0100
     eb0:	0c05                	.insn	2, 0x0c05
     eb2:	04090803          	lb	a6,64(s2)
     eb6:	0100                	.insn	2, 0x0100
     eb8:	0105                	.insn	2, 0x0105
     eba:	04090103          	lb	sp,64(s2)
     ebe:	0100                	.insn	2, 0x0100
     ec0:	14090503          	lb	a0,320(s2)
     ec4:	0100                	.insn	2, 0x0100
     ec6:	1505                	.insn	2, 0x1505
     ec8:	18090403          	lb	s0,384(s2)
     ecc:	0100                	.insn	2, 0x0100
     ece:	1c05                	.insn	2, 0x1c05
     ed0:	08091b03          	lh	s6,128(s2)
     ed4:	0100                	.insn	2, 0x0100
     ed6:	1405                	.insn	2, 0x1405
     ed8:	04090303          	lb	t1,64(s2)
     edc:	0100                	.insn	2, 0x0100
     ede:	0b05                	.insn	2, 0x0b05
     ee0:	08090003          	lb	zero,128(s2)
     ee4:	0100                	.insn	2, 0x0100
     ee6:	2405                	.insn	2, 0x2405
     ee8:	04090603          	lb	a2,64(s2)
     eec:	0100                	.insn	2, 0x0100
     eee:	0d05                	.insn	2, 0x0d05
     ef0:	0c090103          	lb	sp,192(s2)
     ef4:	0100                	.insn	2, 0x0100
     ef6:	2a05                	.insn	2, 0x2a05
     ef8:	0c090103          	lb	sp,192(s2)
     efc:	0100                	.insn	2, 0x0100
     efe:	1505                	.insn	2, 0x1505
     f00:	0c090203          	lb	tp,192(s2)
     f04:	0100                	.insn	2, 0x0100
     f06:	0c090403          	lb	s0,192(s2)
     f0a:	0100                	.insn	2, 0x0100
     f0c:	0c05                	.insn	2, 0x0c05
     f0e:	04090803          	lb	a6,64(s2)
     f12:	0100                	.insn	2, 0x0100
     f14:	0105                	.insn	2, 0x0105
     f16:	04090103          	lb	sp,64(s2)
     f1a:	0100                	.insn	2, 0x0100
     f1c:	14090403          	lb	s0,320(s2)
     f20:	0100                	.insn	2, 0x0100
     f22:	0505                	.insn	2, 0x0505
     f24:	14090703          	lb	a4,320(s2)
     f28:	0100                	.insn	2, 0x0100
     f2a:	1205                	.insn	2, 0x1205
     f2c:	18090203          	lb	tp,384(s2)
     f30:	0100                	.insn	2, 0x0100
     f32:	0505                	.insn	2, 0x0505
     f34:	0c090203          	lb	tp,192(s2)
     f38:	0100                	.insn	2, 0x0100
     f3a:	0200                	.insn	2, 0x0200
     f3c:	0104                	.insn	2, 0x0104
     f3e:	0306                	.insn	2, 0x0306
     f40:	0900                	.insn	2, 0x0900
     f42:	0020                	.insn	2, 0x0020
     f44:	0501                	.insn	2, 0x0501
     f46:	060c                	.insn	2, 0x060c
     f48:	04090403          	lb	s0,64(s2)
     f4c:	0100                	.insn	2, 0x0100
     f4e:	0105                	.insn	2, 0x0105
     f50:	04090103          	lb	sp,64(s2)
     f54:	0100                	.insn	2, 0x0100
     f56:	14090403          	lb	s0,320(s2)
     f5a:	0100                	.insn	2, 0x0100
     f5c:	1505                	.insn	2, 0x1505
     f5e:	14090203          	lb	tp,320(s2)
     f62:	0100                	.insn	2, 0x0100
     f64:	0505                	.insn	2, 0x0505
     f66:	08090603          	lb	a2,128(s2)
     f6a:	0100                	.insn	2, 0x0100
     f6c:	2d05                	.insn	2, 0x2d05
     f6e:	18090203          	lb	tp,384(s2)
     f72:	0100                	.insn	2, 0x0100
     f74:	4105                	.insn	2, 0x4105
     f76:	08090003          	lb	zero,128(s2)
     f7a:	0100                	.insn	2, 0x0100
     f7c:	1205                	.insn	2, 0x1205
     f7e:	08090003          	lb	zero,128(s2)
     f82:	0100                	.insn	2, 0x0100
     f84:	0505                	.insn	2, 0x0505
     f86:	08090203          	lb	tp,128(s2)
     f8a:	0100                	.insn	2, 0x0100
     f8c:	0200                	.insn	2, 0x0200
     f8e:	0104                	.insn	2, 0x0104
     f90:	0306                	.insn	2, 0x0306
     f92:	0900                	.insn	2, 0x0900
     f94:	0020                	.insn	2, 0x0020
     f96:	0501                	.insn	2, 0x0501
     f98:	060c                	.insn	2, 0x060c
     f9a:	04090403          	lb	s0,64(s2)
     f9e:	0100                	.insn	2, 0x0100
     fa0:	0105                	.insn	2, 0x0105
     fa2:	04090103          	lb	sp,64(s2)
     fa6:	0100                	.insn	2, 0x0100
     fa8:	14090403          	lb	s0,320(s2)
     fac:	0100                	.insn	2, 0x0100
     fae:	1505                	.insn	2, 0x1505
     fb0:	14090203          	lb	tp,320(s2)
     fb4:	0100                	.insn	2, 0x0100
     fb6:	0e05                	.insn	2, 0x0e05
     fb8:	08090503          	lb	a0,128(s2)
     fbc:	0100                	.insn	2, 0x0100
     fbe:	0c05                	.insn	2, 0x0c05
     fc0:	0c090403          	lb	s0,192(s2)
     fc4:	0100                	.insn	2, 0x0100
     fc6:	0105                	.insn	2, 0x0105
     fc8:	04090103          	lb	sp,64(s2)
     fcc:	0100                	.insn	2, 0x0100
     fce:	14090403          	lb	s0,320(s2)
     fd2:	0100                	.insn	2, 0x0100
     fd4:	1505                	.insn	2, 0x1505
     fd6:	14090103          	lb	sp,320(s2)
     fda:	0100                	.insn	2, 0x0100
     fdc:	0905                	.insn	2, 0x0905
     fde:	08091103          	lh	sp,128(s2)
     fe2:	0100                	.insn	2, 0x0100
     fe4:	0105                	.insn	2, 0x0105
     fe6:	08091803          	lh	a6,128(s2)
     fea:	0100                	.insn	2, 0x0100
     fec:	14092f03          	lw	t5,320(s2)
     ff0:	0100                	.insn	2, 0x0100
     ff2:	2405                	.insn	2, 0x2405
     ff4:	14090503          	lb	a0,320(s2)
     ff8:	0100                	.insn	2, 0x0100
     ffa:	0105                	.insn	2, 0x0105
     ffc:	08090103          	lb	sp,128(s2)
    1000:	0100                	.insn	2, 0x0100
    1002:	14090403          	lb	s0,320(s2)
    1006:	0100                	.insn	2, 0x0100
    1008:	2405                	.insn	2, 0x2405
    100a:	14090503          	lb	a0,320(s2)
    100e:	0100                	.insn	2, 0x0100
    1010:	0105                	.insn	2, 0x0105
    1012:	08090103          	lb	sp,128(s2)
    1016:	0100                	.insn	2, 0x0100
    1018:	14092103          	lw	sp,320(s2)
    101c:	0100                	.insn	2, 0x0100
    101e:	1005                	.insn	2, 0x1005
    1020:	1c090103          	lb	sp,448(s2)
    1024:	0100                	.insn	2, 0x0100
    1026:	1705                	.insn	2, 0x1705
    1028:	04090503          	lb	a0,64(s2)
    102c:	0100                	.insn	2, 0x0100
    102e:	1005                	.insn	2, 0x1005
    1030:	0c090203          	lb	tp,192(s2)
    1034:	0100                	.insn	2, 0x0100
    1036:	0705                	.insn	2, 0x0705
    1038:	08090003          	lb	zero,128(s2)
    103c:	0100                	.insn	2, 0x0100
    103e:	0c05                	.insn	2, 0x0c05
    1040:	04091103          	lh	sp,64(s2)
    1044:	0100                	.insn	2, 0x0100
    1046:	2c05                	.insn	2, 0x2c05
    1048:	08090203          	lb	tp,128(s2)
    104c:	0100                	.insn	2, 0x0100
    104e:	5a05                	.insn	2, 0x5a05
    1050:	08090003          	lb	zero,128(s2)
    1054:	0100                	.insn	2, 0x0100
    1056:	1205                	.insn	2, 0x1205
    1058:	08090003          	lb	zero,128(s2)
    105c:	0100                	.insn	2, 0x0100
    105e:	1005                	.insn	2, 0x1005
    1060:	10090103          	lb	sp,256(s2)
    1064:	0100                	.insn	2, 0x0100
    1066:	2605                	.insn	2, 0x2605
    1068:	08090003          	lb	zero,128(s2)
    106c:	0100                	.insn	2, 0x0100
    106e:	1c05                	.insn	2, 0x1c05
    1070:	08090003          	lb	zero,128(s2)
    1074:	0100                	.insn	2, 0x0100
    1076:	1405                	.insn	2, 0x1405
    1078:	0c090203          	lb	tp,192(s2)
    107c:	0100                	.insn	2, 0x0100
    107e:	3405                	.insn	2, 0x3405
    1080:	08090003          	lb	zero,128(s2)
    1084:	0100                	.insn	2, 0x0100
    1086:	0b05                	.insn	2, 0x0b05
    1088:	08090003          	lb	zero,128(s2)
    108c:	0100                	.insn	2, 0x0100
    108e:	2905                	.insn	2, 0x2905
    1090:	04090203          	lb	tp,64(s2)
    1094:	0100                	.insn	2, 0x0100
    1096:	2005                	.insn	2, 0x2005
    1098:	08090003          	lb	zero,128(s2)
    109c:	0100                	.insn	2, 0x0100
    109e:	3605                	.insn	2, 0x3605
    10a0:	0c090903          	lb	s2,192(s2)
    10a4:	0100                	.insn	2, 0x0100
    10a6:	6405                	.insn	2, 0x6405
    10a8:	08090003          	lb	zero,128(s2)
    10ac:	0100                	.insn	2, 0x0100
    10ae:	1205                	.insn	2, 0x1205
    10b0:	08090003          	lb	zero,128(s2)
    10b4:	0100                	.insn	2, 0x0100
    10b6:	1a05                	.insn	2, 0x1a05
    10b8:	10090103          	lb	sp,256(s2)
    10bc:	0100                	.insn	2, 0x0100
    10be:	3005                	.insn	2, 0x3005
    10c0:	08090003          	lb	zero,128(s2)
    10c4:	0100                	.insn	2, 0x0100
    10c6:	2605                	.insn	2, 0x2605
    10c8:	08090003          	lb	zero,128(s2)
    10cc:	0100                	.insn	2, 0x0100
    10ce:	1e05                	.insn	2, 0x1e05
    10d0:	10090203          	lb	tp,256(s2)
    10d4:	0100                	.insn	2, 0x0100
    10d6:	3305                	.insn	2, 0x3305
    10d8:	08090003          	lb	zero,128(s2)
    10dc:	0100                	.insn	2, 0x0100
    10de:	0b05                	.insn	2, 0x0b05
    10e0:	08090003          	lb	zero,128(s2)
    10e4:	0100                	.insn	2, 0x0100
    10e6:	3f05                	.insn	2, 0x3f05
    10e8:	04090203          	lb	tp,64(s2)
    10ec:	0100                	.insn	2, 0x0100
    10ee:	5005                	.insn	2, 0x5005
    10f0:	08090003          	lb	zero,128(s2)
    10f4:	0100                	.insn	2, 0x0100
    10f6:	4705                	.insn	2, 0x4705
    10f8:	08090003          	lb	zero,128(s2)
    10fc:	0100                	.insn	2, 0x0100
    10fe:	2a05                	.insn	2, 0x2a05
    1100:	08090003          	lb	zero,128(s2)
    1104:	0100                	.insn	2, 0x0100
    1106:	0b05                	.insn	2, 0x0b05
    1108:	08090703          	lb	a4,128(s2)
    110c:	0100                	.insn	2, 0x0100
    110e:	0f05                	.insn	2, 0x0f05
    1110:	0c090203          	lb	tp,192(s2)
    1114:	0100                	.insn	2, 0x0100
    1116:	1105                	.insn	2, 0x1105
    1118:	08090603          	lb	a2,128(s2)
    111c:	0100                	.insn	2, 0x0100
    111e:	4605                	.insn	2, 0x4605
    1120:	0c090d03          	lb	s10,192(s2)
    1124:	0100                	.insn	2, 0x0100
    1126:	2005                	.insn	2, 0x2005
    1128:	08090003          	lb	zero,128(s2)
    112c:	0100                	.insn	2, 0x0100
    112e:	0c05                	.insn	2, 0x0c05
    1130:	08090203          	lb	tp,128(s2)
    1134:	0100                	.insn	2, 0x0100
    1136:	0105                	.insn	2, 0x0105
    1138:	04090103          	lb	sp,64(s2)
    113c:	0100                	.insn	2, 0x0100
    113e:	14090503          	lb	a0,320(s2)
    1142:	0100                	.insn	2, 0x0100
    1144:	1005                	.insn	2, 0x1005
    1146:	18090103          	lb	sp,384(s2)
    114a:	0100                	.insn	2, 0x0100
    114c:	0705                	.insn	2, 0x0705
    114e:	08090003          	lb	zero,128(s2)
    1152:	0100                	.insn	2, 0x0100
    1154:	1a05                	.insn	2, 0x1a05
    1156:	04090203          	lb	tp,64(s2)
    115a:	0100                	.insn	2, 0x0100
    115c:	3005                	.insn	2, 0x3005
    115e:	08090003          	lb	zero,128(s2)
    1162:	0100                	.insn	2, 0x0100
    1164:	2605                	.insn	2, 0x2605
    1166:	08090003          	lb	zero,128(s2)
    116a:	0100                	.insn	2, 0x0100
    116c:	1e05                	.insn	2, 0x1e05
    116e:	0c090203          	lb	tp,192(s2)
    1172:	0100                	.insn	2, 0x0100
    1174:	3e05                	.insn	2, 0x3e05
    1176:	08090003          	lb	zero,128(s2)
    117a:	0100                	.insn	2, 0x0100
    117c:	0b05                	.insn	2, 0x0b05
    117e:	08090003          	lb	zero,128(s2)
    1182:	0100                	.insn	2, 0x0100
    1184:	3305                	.insn	2, 0x3305
    1186:	04090203          	lb	tp,64(s2)
    118a:	0100                	.insn	2, 0x0100
    118c:	2a05                	.insn	2, 0x2a05
    118e:	08090003          	lb	zero,128(s2)
    1192:	0100                	.insn	2, 0x0100
    1194:	4b05                	.insn	2, 0x4b05
    1196:	08090703          	lb	a4,128(s2)
    119a:	0100                	.insn	2, 0x0100
    119c:	6a05                	.insn	2, 0x6a05
    119e:	08090003          	lb	zero,128(s2)
    11a2:	0100                	.insn	2, 0x0100
    11a4:	1205                	.insn	2, 0x1205
    11a6:	08090003          	lb	zero,128(s2)
    11aa:	0100                	.insn	2, 0x0100
    11ac:	0105                	.insn	2, 0x0105
    11ae:	10090203          	lb	tp,256(s2)
    11b2:	0100                	.insn	2, 0x0100
    11b4:	14090403          	lb	s0,320(s2)
    11b8:	0100                	.insn	2, 0x0100
    11ba:	0505                	.insn	2, 0x0505
    11bc:	14090703          	lb	a4,320(s2)
    11c0:	0100                	.insn	2, 0x0100
    11c2:	1005                	.insn	2, 0x1005
    11c4:	18090203          	lb	tp,384(s2)
    11c8:	0100                	.insn	2, 0x0100
    11ca:	0e05                	.insn	2, 0x0e05
    11cc:	0c090303          	lb	t1,192(s2)
    11d0:	0100                	.insn	2, 0x0100
    11d2:	1505                	.insn	2, 0x1505
    11d4:	04093003          	.insn	4, 0x04093003
    11d8:	0100                	.insn	2, 0x0100
    11da:	1305                	.insn	2, 0x1305
    11dc:	08090003          	lb	zero,128(s2)
    11e0:	0100                	.insn	2, 0x0100
    11e2:	3305                	.insn	2, 0x3305
    11e4:	04090203          	lb	tp,64(s2)
    11e8:	0100                	.insn	2, 0x0100
    11ea:	1905                	.insn	2, 0x1905
    11ec:	08090003          	lb	zero,128(s2)
    11f0:	0100                	.insn	2, 0x0100
    11f2:	1705                	.insn	2, 0x1705
    11f4:	0200                	.insn	2, 0x0200
    11f6:	0104                	.insn	2, 0x0104
    11f8:	0c090003          	lb	zero,192(s2)
    11fc:	0100                	.insn	2, 0x0100
    11fe:	1905                	.insn	2, 0x1905
    1200:	04090403          	lb	s0,64(s2)
    1204:	0100                	.insn	2, 0x0100
    1206:	0d05                	.insn	2, 0x0d05
    1208:	04090e03          	lb	t3,64(s2)
    120c:	0100                	.insn	2, 0x0100
    120e:	1805                	.insn	2, 0x1805
    1210:	097fbc03          	.insn	4, 0x097fbc03
    1214:	0010                	.insn	2, 0x0010
    1216:	0501                	.insn	2, 0x0501
    1218:	0315                	.insn	2, 0x0315
    121a:	000c093f 031a0501 	.insn	8, 0x031a0501000c093f
    1222:	0908                	.insn	2, 0x0908
    1224:	0004                	.insn	2, 0x0004
    1226:	0501                	.insn	2, 0x0501
    1228:	0305                	.insn	2, 0x0305
    122a:	0902                	.insn	2, 0x0902
    122c:	000c                	.insn	2, 0x000c
    122e:	0001                	.insn	2, 0x0001
    1230:	0402                	.insn	2, 0x0402
    1232:	0601                	.insn	2, 0x0601
    1234:	20090003          	lb	zero,512(s2)
    1238:	0100                	.insn	2, 0x0100
    123a:	0306                	.insn	2, 0x0306
    123c:	00040903          	lb	s2,0(s0)
    1240:	0501                	.insn	2, 0x0501
    1242:	0310                	.insn	2, 0x0310
    1244:	0902                	.insn	2, 0x0902
    1246:	0018                	.insn	2, 0x0018
    1248:	0501                	.insn	2, 0x0501
    124a:	030e                	.insn	2, 0x030e
    124c:	0902                	.insn	2, 0x0902
    124e:	000c                	.insn	2, 0x000c
    1250:	0501                	.insn	2, 0x0501
    1252:	0311                	.insn	2, 0x0311
    1254:	0902                	.insn	2, 0x0902
    1256:	0004                	.insn	2, 0x0004
    1258:	0501                	.insn	2, 0x0501
    125a:	0900030f          	.insn	4, 0x0900030f
    125e:	0008                	.insn	2, 0x0008
    1260:	0501                	.insn	2, 0x0501
    1262:	0902032f          	.insn	4, 0x0902032f
    1266:	0004                	.insn	2, 0x0004
    1268:	0501                	.insn	2, 0x0501
    126a:	0315                	.insn	2, 0x0315
    126c:	0900                	.insn	2, 0x0900
    126e:	0008                	.insn	2, 0x0008
    1270:	0501                	.insn	2, 0x0501
    1272:	04020013          	addi	zero,tp,64 # 40 <__start-0x7fffffc0>
    1276:	0301                	.insn	2, 0x0301
    1278:	0900                	.insn	2, 0x0900
    127a:	000c                	.insn	2, 0x000c
    127c:	0501                	.insn	2, 0x0501
    127e:	0315                	.insn	2, 0x0315
    1280:	0902                	.insn	2, 0x0902
    1282:	0004                	.insn	2, 0x0004
    1284:	0501                	.insn	2, 0x0501
    1286:	0311                	.insn	2, 0x0311
    1288:	00040907          	.insn	4, 0x00040907
    128c:	0501                	.insn	2, 0x0501
    128e:	0318                	.insn	2, 0x0318
    1290:	00100973          	.insn	4, 0x00100973
    1294:	0501                	.insn	2, 0x0501
    1296:	0311                	.insn	2, 0x0311
    1298:	0911                	.insn	2, 0x0911
    129a:	000c                	.insn	2, 0x000c
    129c:	0501                	.insn	2, 0x0501
    129e:	031a                	.insn	2, 0x031a
    12a0:	0904                	.insn	2, 0x0904
    12a2:	0004                	.insn	2, 0x0004
    12a4:	0501                	.insn	2, 0x0501
    12a6:	0305                	.insn	2, 0x0305
    12a8:	0902                	.insn	2, 0x0902
    12aa:	000c                	.insn	2, 0x000c
    12ac:	0001                	.insn	2, 0x0001
    12ae:	0402                	.insn	2, 0x0402
    12b0:	0601                	.insn	2, 0x0601
    12b2:	20090003          	lb	zero,512(s2)
    12b6:	0100                	.insn	2, 0x0100
    12b8:	0105                	.insn	2, 0x0105
    12ba:	0306                	.insn	2, 0x0306
    12bc:	0901                	.insn	2, 0x0901
    12be:	0004                	.insn	2, 0x0004
    12c0:	0301                	.insn	2, 0x0301
    12c2:	0904                	.insn	2, 0x0904
    12c4:	0014                	.insn	2, 0x0014
    12c6:	0501                	.insn	2, 0x0501
    12c8:	0305                	.insn	2, 0x0305
    12ca:	00140903          	lb	s2,1(s0)
    12ce:	0501                	.insn	2, 0x0501
    12d0:	0314                	.insn	2, 0x0314
    12d2:	0902                	.insn	2, 0x0902
    12d4:	0018                	.insn	2, 0x0018
    12d6:	0501                	.insn	2, 0x0501
    12d8:	0900030b          	.insn	4, 0x0900030b
    12dc:	0008                	.insn	2, 0x0008
    12de:	0501                	.insn	2, 0x0501
    12e0:	0315                	.insn	2, 0x0315
    12e2:	0902                	.insn	2, 0x0902
    12e4:	0004                	.insn	2, 0x0004
    12e6:	0301                	.insn	2, 0x0301
    12e8:	0904                	.insn	2, 0x0904
    12ea:	000c                	.insn	2, 0x000c
    12ec:	0501                	.insn	2, 0x0501
    12ee:	0305                	.insn	2, 0x0305
    12f0:	00040903          	lb	s2,0(s0)
    12f4:	0001                	.insn	2, 0x0001
    12f6:	0402                	.insn	2, 0x0402
    12f8:	0601                	.insn	2, 0x0601
    12fa:	20090003          	lb	zero,512(s2)
    12fe:	0100                	.insn	2, 0x0100
    1300:	0c05                	.insn	2, 0x0c05
    1302:	0306                	.insn	2, 0x0306
    1304:	0902                	.insn	2, 0x0902
    1306:	0004                	.insn	2, 0x0004
    1308:	0501                	.insn	2, 0x0501
    130a:	0301                	.insn	2, 0x0301
    130c:	0901                	.insn	2, 0x0901
    130e:	0004                	.insn	2, 0x0004
    1310:	0301                	.insn	2, 0x0301
    1312:	0904                	.insn	2, 0x0904
    1314:	0014                	.insn	2, 0x0014
    1316:	0501                	.insn	2, 0x0501
    1318:	0315                	.insn	2, 0x0315
    131a:	0902                	.insn	2, 0x0902
    131c:	0014                	.insn	2, 0x0014
    131e:	0501                	.insn	2, 0x0501
    1320:	0310                	.insn	2, 0x0310
    1322:	0906                	.insn	2, 0x0906
    1324:	0008                	.insn	2, 0x0008
    1326:	0501                	.insn	2, 0x0501
    1328:	09000307          	.insn	4, 0x09000307
    132c:	0008                	.insn	2, 0x0008
    132e:	0501                	.insn	2, 0x0501
    1330:	0311                	.insn	2, 0x0311
    1332:	0902                	.insn	2, 0x0902
    1334:	0004                	.insn	2, 0x0004
    1336:	0301                	.insn	2, 0x0301
    1338:	0904                	.insn	2, 0x0904
    133a:	000c                	.insn	2, 0x000c
    133c:	0501                	.insn	2, 0x0501
    133e:	030c                	.insn	2, 0x030c
    1340:	0905                	.insn	2, 0x0905
    1342:	0004                	.insn	2, 0x0004
    1344:	0501                	.insn	2, 0x0501
    1346:	0301                	.insn	2, 0x0301
    1348:	0901                	.insn	2, 0x0901
    134a:	0004                	.insn	2, 0x0004
    134c:	0301                	.insn	2, 0x0301
    134e:	0904                	.insn	2, 0x0904
    1350:	0014                	.insn	2, 0x0014
    1352:	0501                	.insn	2, 0x0501
    1354:	0305                	.insn	2, 0x0305
    1356:	00140903          	lb	s2,1(s0)
    135a:	0501                	.insn	2, 0x0501
    135c:	0314                	.insn	2, 0x0314
    135e:	0902                	.insn	2, 0x0902
    1360:	0018                	.insn	2, 0x0018
    1362:	0501                	.insn	2, 0x0501
    1364:	0332                	.insn	2, 0x0332
    1366:	0900                	.insn	2, 0x0900
    1368:	0008                	.insn	2, 0x0008
    136a:	0501                	.insn	2, 0x0501
    136c:	0900030b          	.insn	4, 0x0900030b
    1370:	0008                	.insn	2, 0x0008
    1372:	0501                	.insn	2, 0x0501
    1374:	0315                	.insn	2, 0x0315
    1376:	0902                	.insn	2, 0x0902
    1378:	0004                	.insn	2, 0x0004
    137a:	0301                	.insn	2, 0x0301
    137c:	0904                	.insn	2, 0x0904
    137e:	000c                	.insn	2, 0x000c
    1380:	0501                	.insn	2, 0x0501
    1382:	0305                	.insn	2, 0x0305
    1384:	00040903          	lb	s2,0(s0)
    1388:	0001                	.insn	2, 0x0001
    138a:	0402                	.insn	2, 0x0402
    138c:	0601                	.insn	2, 0x0601
    138e:	20090003          	lb	zero,512(s2)
    1392:	0100                	.insn	2, 0x0100
    1394:	0c05                	.insn	2, 0x0c05
    1396:	0306                	.insn	2, 0x0306
    1398:	0902                	.insn	2, 0x0902
    139a:	0004                	.insn	2, 0x0004
    139c:	0501                	.insn	2, 0x0501
    139e:	0301                	.insn	2, 0x0301
    13a0:	0901                	.insn	2, 0x0901
    13a2:	0004                	.insn	2, 0x0004
    13a4:	0301                	.insn	2, 0x0301
    13a6:	0904                	.insn	2, 0x0904
    13a8:	0014                	.insn	2, 0x0014
    13aa:	0501                	.insn	2, 0x0501
    13ac:	0315                	.insn	2, 0x0315
    13ae:	0902                	.insn	2, 0x0902
    13b0:	0014                	.insn	2, 0x0014
    13b2:	0501                	.insn	2, 0x0501
    13b4:	0310                	.insn	2, 0x0310
    13b6:	0906                	.insn	2, 0x0906
    13b8:	0008                	.insn	2, 0x0008
    13ba:	0501                	.insn	2, 0x0501
    13bc:	032e                	.insn	2, 0x032e
    13be:	0900                	.insn	2, 0x0900
    13c0:	0008                	.insn	2, 0x0008
    13c2:	0501                	.insn	2, 0x0501
    13c4:	09000307          	.insn	4, 0x09000307
    13c8:	0008                	.insn	2, 0x0008
    13ca:	0501                	.insn	2, 0x0501
    13cc:	0311                	.insn	2, 0x0311
    13ce:	0902                	.insn	2, 0x0902
    13d0:	0004                	.insn	2, 0x0004
    13d2:	0301                	.insn	2, 0x0301
    13d4:	0904                	.insn	2, 0x0904
    13d6:	000c                	.insn	2, 0x000c
    13d8:	0501                	.insn	2, 0x0501
    13da:	030c                	.insn	2, 0x030c
    13dc:	0905                	.insn	2, 0x0905
    13de:	0004                	.insn	2, 0x0004
    13e0:	0501                	.insn	2, 0x0501
    13e2:	0301                	.insn	2, 0x0301
    13e4:	0901                	.insn	2, 0x0901
    13e6:	0004                	.insn	2, 0x0004
    13e8:	0901                	.insn	2, 0x0901
    13ea:	0014                	.insn	2, 0x0014
    13ec:	0100                	.insn	2, 0x0100
    13ee:	ce01                	.insn	2, 0xce01
    13f0:	05000013          	addi	zero,zero,80
    13f4:	0400                	.insn	2, 0x0400
    13f6:	7400                	.insn	2, 0x7400
    13f8:	0000                	.insn	2, 0x
    13fa:	0100                	.insn	2, 0x0100
    13fc:	0101                	.insn	2, 0x0101
    13fe:	000d0efb          	.insn	4, 0x000d0efb
    1402:	0101                	.insn	2, 0x0101
    1404:	0101                	.insn	2, 0x0101
    1406:	0000                	.insn	2, 0x
    1408:	0100                	.insn	2, 0x0100
    140a:	0000                	.insn	2, 0x
    140c:	0101                	.insn	2, 0x0101
    140e:	1f01                	.insn	2, 0x1f01
    1410:	00000007          	.insn	4, 0x0007
    1414:	5300                	.insn	2, 0x5300
    1416:	0000                	.insn	2, 0x
    1418:	6300                	.insn	2, 0x6300
    141a:	0000                	.insn	2, 0x
    141c:	1300                	.insn	2, 0x1300
    141e:	0001                	.insn	2, 0x0001
    1420:	c300                	.insn	2, 0xc300
    1422:	0000                	.insn	2, 0x
    1424:	9f00                	.insn	2, 0x9f00
    1426:	0000                	.insn	2, 0x
    1428:	3700                	.insn	2, 0x3700
    142a:	0001                	.insn	2, 0x0001
    142c:	0200                	.insn	2, 0x0200
    142e:	1f01                	.insn	2, 0x1f01
    1430:	0f02                	.insn	2, 0x0f02
    1432:	a80c                	.insn	2, 0xa80c
    1434:	0001                	.insn	2, 0x0001
    1436:	0100                	.insn	2, 0x0100
    1438:	01a8                	.insn	2, 0x01a8
    143a:	0000                	.insn	2, 0x
    143c:	5601                	.insn	2, 0x5601
    143e:	0001                	.insn	2, 0x0001
    1440:	0200                	.insn	2, 0x0200
    1442:	015f 0000 6703      	.insn	6, 0x67030000015f
    1448:	0001                	.insn	2, 0x0001
    144a:	0300                	.insn	2, 0x0300
    144c:	000000db          	.insn	4, 0x00db
    1450:	b002                	.insn	2, 0xb002
    1452:	0001                	.insn	2, 0x0001
    1454:	0400                	.insn	2, 0x0400
    1456:	00e8                	.insn	2, 0x00e8
    1458:	0000                	.insn	2, 0x
    145a:	f405                	.insn	2, 0xf405
    145c:	0000                	.insn	2, 0x
    145e:	0400                	.insn	2, 0x0400
    1460:	0175                	.insn	2, 0x0175
    1462:	0000                	.insn	2, 0x
    1464:	8404                	.insn	2, 0x8404
    1466:	0001                	.insn	2, 0x0001
    1468:	0400                	.insn	2, 0x0400
    146a:	0000018f          	.insn	4, 0x018f
    146e:	0506                	.insn	2, 0x0506
    1470:	0005                	.insn	2, 0x0005
    1472:	0205                	.insn	2, 0x0205
    1474:	1c38                	.insn	2, 0x1c38
    1476:	8000                	.insn	2, 0x8000
    1478:	010cd903          	lhu	s2,16(s9) # 2629ec <__start-0x7fd9d614>
    147c:	1705                	.insn	2, 0x1705
    147e:	28092c03          	lw	s8,640(s2)
    1482:	0100                	.insn	2, 0x0100
    1484:	0f05                	.insn	2, 0x0f05
    1486:	14090203          	lb	tp,320(s2)
    148a:	0100                	.insn	2, 0x0100
    148c:	2805                	.insn	2, 0x2805
    148e:	08090603          	lb	a2,128(s2)
    1492:	0100                	.insn	2, 0x0100
    1494:	1305                	.insn	2, 0x1305
    1496:	0c090203          	lb	tp,192(s2)
    149a:	0100                	.insn	2, 0x0100
    149c:	1e05                	.insn	2, 0x1e05
    149e:	08090203          	lb	tp,128(s2)
    14a2:	0100                	.insn	2, 0x0100
    14a4:	2705                	.insn	2, 0x2705
    14a6:	10090303          	lb	t1,256(s2)
    14aa:	0100                	.insn	2, 0x0100
    14ac:	1505                	.insn	2, 0x1505
    14ae:	10090603          	lb	a2,256(s2)
    14b2:	0100                	.insn	2, 0x0100
    14b4:	1a05                	.insn	2, 0x1a05
    14b6:	0c090503          	lb	a0,192(s2)
    14ba:	0100                	.insn	2, 0x0100
    14bc:	0b05                	.insn	2, 0x0b05
    14be:	04090503          	lb	a0,64(s2)
    14c2:	0100                	.insn	2, 0x0100
    14c4:	0d05                	.insn	2, 0x0d05
    14c6:	08090a03          	lb	s4,128(s2)
    14ca:	0100                	.insn	2, 0x0100
    14cc:	1005                	.insn	2, 0x1005
    14ce:	24090303          	lb	t1,576(s2)
    14d2:	0100                	.insn	2, 0x0100
    14d4:	0505                	.insn	2, 0x0505
    14d6:	04090103          	lb	sp,64(s2)
    14da:	0100                	.insn	2, 0x0100
    14dc:	14090903          	lb	s2,320(s2)
    14e0:	0100                	.insn	2, 0x0100
    14e2:	1405                	.insn	2, 0x1405
    14e4:	28090603          	lb	a2,640(s2)
    14e8:	0100                	.insn	2, 0x0100
    14ea:	0b05                	.insn	2, 0x0b05
    14ec:	20090203          	lb	tp,512(s2)
    14f0:	0100                	.insn	2, 0x0100
    14f2:	0d05                	.insn	2, 0x0d05
    14f4:	08090903          	lb	s2,128(s2)
    14f8:	0100                	.insn	2, 0x0100
    14fa:	1505                	.insn	2, 0x1505
    14fc:	08090103          	lb	sp,128(s2)
    1500:	0100                	.insn	2, 0x0100
    1502:	0c090403          	lb	s0,192(s2)
    1506:	0100                	.insn	2, 0x0100
    1508:	1005                	.insn	2, 0x1005
    150a:	08090503          	lb	a0,128(s2)
    150e:	0100                	.insn	2, 0x0100
    1510:	0505                	.insn	2, 0x0505
    1512:	04090103          	lb	sp,64(s2)
    1516:	0100                	.insn	2, 0x0100
    1518:	0105                	.insn	2, 0x0105
    151a:	14093103          	.insn	4, 0x14093103
    151e:	0100                	.insn	2, 0x0100
    1520:	2305                	.insn	2, 0x2305
    1522:	30092103          	lw	sp,768(s2)
    1526:	0100                	.insn	2, 0x0100
    1528:	2c05                	.insn	2, 0x2c05
    152a:	08090003          	lb	zero,128(s2)
    152e:	0100                	.insn	2, 0x0100
    1530:	1605                	.insn	2, 0x1605
    1532:	14090003          	lb	zero,320(s2)
    1536:	0100                	.insn	2, 0x0100
    1538:	2e05                	.insn	2, 0x2e05
    153a:	08090103          	lb	sp,128(s2)
    153e:	0100                	.insn	2, 0x0100
    1540:	5705                	.insn	2, 0x5705
    1542:	04090003          	lb	zero,64(s2)
    1546:	0100                	.insn	2, 0x0100
    1548:	1605                	.insn	2, 0x1605
    154a:	04090003          	lb	zero,64(s2)
    154e:	0100                	.insn	2, 0x0100
    1550:	0705                	.insn	2, 0x0705
    1552:	04091c03          	lh	s8,64(s2)
    1556:	0100                	.insn	2, 0x0100
    1558:	1005                	.insn	2, 0x1005
    155a:	08090203          	lb	tp,128(s2)
    155e:	0100                	.insn	2, 0x0100
    1560:	0905                	.insn	2, 0x0905
    1562:	04090003          	lb	zero,64(s2)
    1566:	0100                	.insn	2, 0x0100
    1568:	2f05                	.insn	2, 0x2f05
    156a:	04090203          	lb	tp,64(s2)
    156e:	0100                	.insn	2, 0x0100
    1570:	2705                	.insn	2, 0x2705
    1572:	10090003          	lb	zero,256(s2)
    1576:	0100                	.insn	2, 0x0100
    1578:	1705                	.insn	2, 0x1705
    157a:	10090503          	lb	a0,256(s2)
    157e:	0100                	.insn	2, 0x0100
    1580:	0f05                	.insn	2, 0x0f05
    1582:	10090003          	lb	zero,256(s2)
    1586:	0100                	.insn	2, 0x0100
    1588:	5305                	.insn	2, 0x5305
    158a:	0200                	.insn	2, 0x0200
    158c:	0204                	.insn	2, 0x0204
    158e:	04097903          	.insn	4, 0x04097903
    1592:	0100                	.insn	2, 0x0100
    1594:	2705                	.insn	2, 0x2705
    1596:	0200                	.insn	2, 0x0200
    1598:	0104                	.insn	2, 0x0104
    159a:	0c090003          	lb	zero,192(s2)
    159e:	0100                	.insn	2, 0x0100
    15a0:	1105                	.insn	2, 0x1105
    15a2:	10090903          	lb	s2,256(s2)
    15a6:	0100                	.insn	2, 0x0100
    15a8:	3e05                	.insn	2, 0x3e05
    15aa:	04090a03          	lb	s4,64(s2)
    15ae:	0100                	.insn	2, 0x0100
    15b0:	0705                	.insn	2, 0x0705
    15b2:	08090a03          	lb	s4,128(s2)
    15b6:	0100                	.insn	2, 0x0100
    15b8:	1405                	.insn	2, 0x1405
    15ba:	08090203          	lb	tp,128(s2)
    15be:	0100                	.insn	2, 0x0100
    15c0:	1a05                	.insn	2, 0x1a05
    15c2:	04090703          	lb	a4,64(s2)
    15c6:	0100                	.insn	2, 0x0100
    15c8:	0505                	.insn	2, 0x0505
    15ca:	0c090703          	lb	a4,192(s2)
    15ce:	0100                	.insn	2, 0x0100
    15d0:	10090103          	lb	sp,256(s2)
    15d4:	0100                	.insn	2, 0x0100
    15d6:	10090403          	lb	s0,256(s2)
    15da:	0100                	.insn	2, 0x0100
    15dc:	0c090303          	lb	t1,192(s2)
    15e0:	0100                	.insn	2, 0x0100
    15e2:	14090103          	lb	sp,320(s2)
    15e6:	0100                	.insn	2, 0x0100
    15e8:	2605                	.insn	2, 0x2605
    15ea:	0900c203          	lbu	tp,144(ra)
    15ee:	000c                	.insn	2, 0x000c
    15f0:	0501                	.insn	2, 0x0501
    15f2:	0024                	.insn	2, 0x0024
    15f4:	0402                	.insn	2, 0x0402
    15f6:	0301                	.insn	2, 0x0301
    15f8:	0900                	.insn	2, 0x0900
    15fa:	0014                	.insn	2, 0x0014
    15fc:	0501                	.insn	2, 0x0501
    15fe:	09130307          	.insn	4, 0x09130307
    1602:	0008                	.insn	2, 0x0008
    1604:	0501                	.insn	2, 0x0501
    1606:	0318                	.insn	2, 0x0318
    1608:	0904                	.insn	2, 0x0904
    160a:	0008                	.insn	2, 0x0008
    160c:	0501                	.insn	2, 0x0501
    160e:	0301                	.insn	2, 0x0301
    1610:	0906                	.insn	2, 0x0906
    1612:	000c                	.insn	2, 0x000c
    1614:	0501                	.insn	2, 0x0501
    1616:	0305                	.insn	2, 0x0305
    1618:	0906                	.insn	2, 0x0906
    161a:	0014                	.insn	2, 0x0014
    161c:	0501                	.insn	2, 0x0501
    161e:	0309                	.insn	2, 0x0309
    1620:	00140903          	lb	s2,1(s0)
    1624:	0501                	.insn	2, 0x0501
    1626:	0326                	.insn	2, 0x0326
    1628:	0902                	.insn	2, 0x0902
    162a:	0018                	.insn	2, 0x0018
    162c:	0501                	.insn	2, 0x0501
    162e:	0900034f          	.insn	4, 0x0900034f
    1632:	0008                	.insn	2, 0x0008
    1634:	0501                	.insn	2, 0x0501
    1636:	0324                	.insn	2, 0x0324
    1638:	0900                	.insn	2, 0x0900
    163a:	0004                	.insn	2, 0x0004
    163c:	0501                	.insn	2, 0x0501
    163e:	031e                	.insn	2, 0x031e
    1640:	0902                	.insn	2, 0x0902
    1642:	0008                	.insn	2, 0x0008
    1644:	0501                	.insn	2, 0x0501
    1646:	0900030f          	.insn	4, 0x0900030f
    164a:	0008                	.insn	2, 0x0008
    164c:	0501                	.insn	2, 0x0501
    164e:	031e                	.insn	2, 0x031e
    1650:	0904                	.insn	2, 0x0904
    1652:	0004                	.insn	2, 0x0004
    1654:	0501                	.insn	2, 0x0501
    1656:	032c                	.insn	2, 0x032c
    1658:	0902                	.insn	2, 0x0902
    165a:	000c                	.insn	2, 0x000c
    165c:	0501                	.insn	2, 0x0501
    165e:	09000313          	addi	t1,zero,144
    1662:	0008                	.insn	2, 0x0008
    1664:	0501                	.insn	2, 0x0501
    1666:	0315                	.insn	2, 0x0315
    1668:	0905                	.insn	2, 0x0905
    166a:	0008                	.insn	2, 0x0008
    166c:	0501                	.insn	2, 0x0501
    166e:	090c0327          	.insn	4, 0x090c0327
    1672:	0008                	.insn	2, 0x0008
    1674:	0501                	.insn	2, 0x0501
    1676:	09000313          	addi	t1,zero,144
    167a:	0008                	.insn	2, 0x0008
    167c:	0501                	.insn	2, 0x0501
    167e:	0325                	.insn	2, 0x0325
    1680:	0902                	.insn	2, 0x0902
    1682:	0004                	.insn	2, 0x0004
    1684:	0501                	.insn	2, 0x0501
    1686:	033d                	.insn	2, 0x033d
    1688:	0900                	.insn	2, 0x0900
    168a:	000c                	.insn	2, 0x000c
    168c:	0501                	.insn	2, 0x0501
    168e:	09000317          	auipc	t1,0x9000
    1692:	0008                	.insn	2, 0x0008
    1694:	0501                	.insn	2, 0x0501
    1696:	0326                	.insn	2, 0x0326
    1698:	0902                	.insn	2, 0x0902
    169a:	0004                	.insn	2, 0x0004
    169c:	0501                	.insn	2, 0x0501
    169e:	0319                	.insn	2, 0x0319
    16a0:	090d                	.insn	2, 0x090d
    16a2:	000c                	.insn	2, 0x000c
    16a4:	0501                	.insn	2, 0x0501
    16a6:	030d                	.insn	2, 0x030d
    16a8:	090a                	.insn	2, 0x090a
    16aa:	0014                	.insn	2, 0x0014
    16ac:	0501                	.insn	2, 0x0501
    16ae:	0309                	.insn	2, 0x0309
    16b0:	0904                	.insn	2, 0x0904
    16b2:	0110                	.insn	2, 0x0110
    16b4:	0001                	.insn	2, 0x0001
    16b6:	0402                	.insn	2, 0x0402
    16b8:	0601                	.insn	2, 0x0601
    16ba:	20090003          	lb	zero,512(s2)
    16be:	0100                	.insn	2, 0x0100
    16c0:	1f05                	.insn	2, 0x1f05
    16c2:	0306                	.insn	2, 0x0306
    16c4:	0902                	.insn	2, 0x0902
    16c6:	0004                	.insn	2, 0x0004
    16c8:	0501                	.insn	2, 0x0501
    16ca:	0305                	.insn	2, 0x0305
    16cc:	090a                	.insn	2, 0x090a
    16ce:	0008                	.insn	2, 0x0008
    16d0:	0501                	.insn	2, 0x0501
    16d2:	0301                	.insn	2, 0x0301
    16d4:	14090b8b          	.insn	4, 0x14090b8b
    16d8:	0100                	.insn	2, 0x0100
    16da:	1005                	.insn	2, 0x1005
    16dc:	10090103          	lb	sp,256(s2)
    16e0:	0100                	.insn	2, 0x0100
    16e2:	1405                	.insn	2, 0x1405
    16e4:	08090303          	lb	t1,128(s2)
    16e8:	0100                	.insn	2, 0x0100
    16ea:	1d05                	.insn	2, 0x1d05
    16ec:	04090303          	lb	t1,64(s2)
    16f0:	0100                	.insn	2, 0x0100
    16f2:	0505                	.insn	2, 0x0505
    16f4:	04090003          	lb	zero,64(s2)
    16f8:	0100                	.insn	2, 0x0100
    16fa:	3f05                	.insn	2, 0x3f05
    16fc:	04090203          	lb	tp,64(s2)
    1700:	0100                	.insn	2, 0x0100
    1702:	2905                	.insn	2, 0x2905
    1704:	14090003          	lb	zero,320(s2)
    1708:	0100                	.insn	2, 0x0100
    170a:	1605                	.insn	2, 0x1605
    170c:	10090503          	lb	a0,256(s2)
    1710:	0100                	.insn	2, 0x0100
    1712:	0b05                	.insn	2, 0x0b05
    1714:	10090003          	lb	zero,256(s2)
    1718:	0100                	.insn	2, 0x0100
    171a:	8005                	.insn	2, 0x8005
    171c:	0001                	.insn	2, 0x0001
    171e:	0402                	.insn	2, 0x0402
    1720:	0302                	.insn	2, 0x0302
    1722:	0979                	.insn	2, 0x0979
    1724:	0004                	.insn	2, 0x0004
    1726:	0501                	.insn	2, 0x0501
    1728:	0044                	.insn	2, 0x0044
    172a:	0402                	.insn	2, 0x0402
    172c:	0301                	.insn	2, 0x0301
    172e:	0900                	.insn	2, 0x0900
    1730:	000c                	.insn	2, 0x000c
    1732:	0501                	.insn	2, 0x0501
    1734:	030d                	.insn	2, 0x030d
    1736:	0909                	.insn	2, 0x0909
    1738:	0010                	.insn	2, 0x0010
    173a:	0501                	.insn	2, 0x0501
    173c:	0312                	.insn	2, 0x0312
    173e:	0909                	.insn	2, 0x0909
    1740:	0004                	.insn	2, 0x0004
    1742:	0501                	.insn	2, 0x0501
    1744:	0305                	.insn	2, 0x0305
    1746:	0900                	.insn	2, 0x0900
    1748:	0004                	.insn	2, 0x0004
    174a:	0501                	.insn	2, 0x0501
    174c:	0320                	.insn	2, 0x0320
    174e:	0904                	.insn	2, 0x0904
    1750:	0004                	.insn	2, 0x0004
    1752:	0501                	.insn	2, 0x0501
    1754:	00d90317          	auipc	t1,0xd90
    1758:	0c09                	.insn	2, 0x0c09
    175a:	0100                	.insn	2, 0x0100
    175c:	0b05                	.insn	2, 0x0b05
    175e:	30090a03          	lb	s4,768(s2)
    1762:	0100                	.insn	2, 0x0100
    1764:	5d05                	.insn	2, 0x5d05
    1766:	0200                	.insn	2, 0x0200
    1768:	0204                	.insn	2, 0x0204
    176a:	097f9903          	lh	s2,151(t6)
    176e:	0008                	.insn	2, 0x0008
    1770:	0501                	.insn	2, 0x0501
    1772:	002e                	.insn	2, 0x002e
    1774:	0402                	.insn	2, 0x0402
    1776:	0301                	.insn	2, 0x0301
    1778:	0900                	.insn	2, 0x0900
    177a:	000c                	.insn	2, 0x000c
    177c:	0501                	.insn	2, 0x0501
    177e:	030d                	.insn	2, 0x030d
    1780:	00e9                	.insn	2, 0x00e9
    1782:	0c09                	.insn	2, 0x0c09
    1784:	0100                	.insn	2, 0x0100
    1786:	0c05                	.insn	2, 0x0c05
    1788:	04091203          	lh	tp,64(s2)
    178c:	0100                	.insn	2, 0x0100
    178e:	0105                	.insn	2, 0x0105
    1790:	04090103          	lb	sp,64(s2)
    1794:	0100                	.insn	2, 0x0100
    1796:	14090503          	lb	a0,320(s2)
    179a:	0100                	.insn	2, 0x0100
    179c:	0f05                	.insn	2, 0x0f05
    179e:	10090d03          	lb	s10,256(s2)
    17a2:	0100                	.insn	2, 0x0100
    17a4:	0705                	.insn	2, 0x0705
    17a6:	08090f03          	lb	t5,128(s2)
    17aa:	0100                	.insn	2, 0x0100
    17ac:	0905                	.insn	2, 0x0905
    17ae:	0c091003          	lh	zero,192(s2)
    17b2:	0100                	.insn	2, 0x0100
    17b4:	1e05                	.insn	2, 0x1e05
    17b6:	04090a03          	lb	s4,64(s2)
    17ba:	0100                	.insn	2, 0x0100
    17bc:	1b05                	.insn	2, 0x1b05
    17be:	0c090103          	lb	sp,192(s2)
    17c2:	0100                	.insn	2, 0x0100
    17c4:	1405                	.insn	2, 0x1405
    17c6:	0c090103          	lb	sp,192(s2)
    17ca:	0100                	.insn	2, 0x0100
    17cc:	1205                	.insn	2, 0x1205
    17ce:	08091103          	lh	sp,128(s2)
    17d2:	0100                	.insn	2, 0x0100
    17d4:	0505                	.insn	2, 0x0505
    17d6:	04091703          	lh	a4,64(s2)
    17da:	0100                	.insn	2, 0x0100
    17dc:	0105                	.insn	2, 0x0105
    17de:	08090303          	lb	t1,128(s2)
    17e2:	0100                	.insn	2, 0x0100
    17e4:	14090403          	lb	s0,320(s2)
    17e8:	0100                	.insn	2, 0x0100
    17ea:	0505                	.insn	2, 0x0505
    17ec:	10091f03          	lh	t5,256(s2)
    17f0:	0100                	.insn	2, 0x0100
    17f2:	1705                	.insn	2, 0x1705
    17f4:	04090103          	lb	sp,64(s2)
    17f8:	0100                	.insn	2, 0x0100
    17fa:	0505                	.insn	2, 0x0505
    17fc:	08090403          	lb	s0,128(s2)
    1800:	0100                	.insn	2, 0x0100
    1802:	0105                	.insn	2, 0x0105
    1804:	04090303          	lb	t1,64(s2)
    1808:	0100                	.insn	2, 0x0100
    180a:	14090403          	lb	s0,320(s2)
    180e:	0100                	.insn	2, 0x0100
    1810:	2005                	.insn	2, 0x2005
    1812:	10091003          	lh	zero,256(s2)
    1816:	0100                	.insn	2, 0x0100
    1818:	4705                	.insn	2, 0x4705
    181a:	08090003          	lb	zero,128(s2)
    181e:	0100                	.insn	2, 0x0100
    1820:	1e05                	.insn	2, 0x1e05
    1822:	04090003          	lb	zero,64(s2)
    1826:	0100                	.insn	2, 0x0100
    1828:	0905                	.insn	2, 0x0905
    182a:	08090403          	lb	s0,128(s2)
    182e:	0100                	.insn	2, 0x0100
    1830:	0105                	.insn	2, 0x0105
    1832:	00093803          	.insn	4, 0x00093803
    1836:	0100                	.insn	2, 0x0100
    1838:	0900c503          	lbu	a0,144(ra)
    183c:	0014                	.insn	2, 0x0014
    183e:	0501                	.insn	2, 0x0501
    1840:	030d                	.insn	2, 0x030d
    1842:	0901                	.insn	2, 0x0901
    1844:	0010                	.insn	2, 0x0010
    1846:	0501                	.insn	2, 0x0501
    1848:	0310                	.insn	2, 0x0310
    184a:	0901                	.insn	2, 0x0901
    184c:	0004                	.insn	2, 0x0004
    184e:	0501                	.insn	2, 0x0501
    1850:	0309                	.insn	2, 0x0309
    1852:	090d                	.insn	2, 0x090d
    1854:	0004                	.insn	2, 0x0004
    1856:	0501                	.insn	2, 0x0501
    1858:	0315                	.insn	2, 0x0315
    185a:	00180903          	lb	s2,1(a6)
    185e:	0501                	.insn	2, 0x0501
    1860:	0324                	.insn	2, 0x0324
    1862:	0906                	.insn	2, 0x0906
    1864:	0004                	.insn	2, 0x0004
    1866:	0501                	.insn	2, 0x0501
    1868:	0900034b          	.insn	4, 0x0900034b
    186c:	0008                	.insn	2, 0x0008
    186e:	0501                	.insn	2, 0x0501
    1870:	0322                	.insn	2, 0x0322
    1872:	0900                	.insn	2, 0x0900
    1874:	0004                	.insn	2, 0x0004
    1876:	0501                	.insn	2, 0x0501
    1878:	0326                	.insn	2, 0x0326
    187a:	00080903          	lb	s2,0(a6)
    187e:	0501                	.insn	2, 0x0501
    1880:	0900030f          	.insn	4, 0x0900030f
    1884:	0008                	.insn	2, 0x0008
    1886:	0501                	.insn	2, 0x0501
    1888:	032c                	.insn	2, 0x032c
    188a:	0902                	.insn	2, 0x0902
    188c:	0004                	.insn	2, 0x0004
    188e:	0501                	.insn	2, 0x0501
    1890:	09000313          	addi	t1,zero,144
    1894:	0008                	.insn	2, 0x0008
    1896:	0501                	.insn	2, 0x0501
    1898:	031a                	.insn	2, 0x031a
    189a:	0904                	.insn	2, 0x0904
    189c:	0004                	.insn	2, 0x0004
    189e:	0501                	.insn	2, 0x0501
    18a0:	0321                	.insn	2, 0x0321
    18a2:	0905                	.insn	2, 0x0905
    18a4:	0004                	.insn	2, 0x0004
    18a6:	0501                	.insn	2, 0x0501
    18a8:	031f 0900 000c      	.insn	6, 0x000c0900031f
    18ae:	0501                	.insn	2, 0x0501
    18b0:	0319                	.insn	2, 0x0319
    18b2:	0901                	.insn	2, 0x0901
    18b4:	0008                	.insn	2, 0x0008
    18b6:	0001                	.insn	2, 0x0001
    18b8:	0402                	.insn	2, 0x0402
    18ba:	0601                	.insn	2, 0x0601
    18bc:	48090003          	lb	zero,1152(s2)
    18c0:	0100                	.insn	2, 0x0100
    18c2:	0200                	.insn	2, 0x0200
    18c4:	0304                	.insn	2, 0x0304
    18c6:	10090003          	lb	zero,256(s2)
    18ca:	0100                	.insn	2, 0x0100
    18cc:	0306                	.insn	2, 0x0306
    18ce:	0901                	.insn	2, 0x0901
    18d0:	001c                	.insn	2, 0x001c
    18d2:	0301                	.insn	2, 0x0301
    18d4:	0901                	.insn	2, 0x0901
    18d6:	0000                	.insn	2, 0x
    18d8:	0001                	.insn	2, 0x0001
    18da:	0402                	.insn	2, 0x0402
    18dc:	0601                	.insn	2, 0x0601
    18de:	48090003          	lb	zero,1152(s2)
    18e2:	0100                	.insn	2, 0x0100
    18e4:	0200                	.insn	2, 0x0200
    18e6:	0304                	.insn	2, 0x0304
    18e8:	10090003          	lb	zero,256(s2)
    18ec:	0100                	.insn	2, 0x0100
    18ee:	0306                	.insn	2, 0x0306
    18f0:	0901                	.insn	2, 0x0901
    18f2:	001c                	.insn	2, 0x001c
    18f4:	0501                	.insn	2, 0x0501
    18f6:	0326                	.insn	2, 0x0326
    18f8:	0906                	.insn	2, 0x0906
    18fa:	0110                	.insn	2, 0x0110
    18fc:	0501                	.insn	2, 0x0501
    18fe:	0341                	.insn	2, 0x0341
    1900:	0900                	.insn	2, 0x0900
    1902:	0008                	.insn	2, 0x0008
    1904:	0501                	.insn	2, 0x0501
    1906:	031f 0900 000c      	.insn	6, 0x000c0900031f
    190c:	0501                	.insn	2, 0x0501
    190e:	0902033b          	.insn	4, 0x0902033b
    1912:	0004                	.insn	2, 0x0004
    1914:	0501                	.insn	2, 0x0501
    1916:	031c                	.insn	2, 0x031c
    1918:	001c096f          	jal	s2,c2118 <__start-0x7ff3dee8>
    191c:	0501                	.insn	2, 0x0501
    191e:	0344                	.insn	2, 0x0344
    1920:	0900                	.insn	2, 0x0900
    1922:	000c                	.insn	2, 0x000c
    1924:	0501                	.insn	2, 0x0501
    1926:	09210317          	auipc	t1,0x9210
    192a:	0004                	.insn	2, 0x0004
    192c:	0501                	.insn	2, 0x0501
    192e:	0319                	.insn	2, 0x0319
    1930:	0908                	.insn	2, 0x0908
    1932:	0008                	.insn	2, 0x0008
    1934:	0501                	.insn	2, 0x0501
    1936:	0324                	.insn	2, 0x0324
    1938:	090d                	.insn	2, 0x090d
    193a:	0004                	.insn	2, 0x0004
    193c:	0501                	.insn	2, 0x0501
    193e:	0902031b          	.insn	4, 0x0902031b
    1942:	000c                	.insn	2, 0x000c
    1944:	0501                	.insn	2, 0x0501
    1946:	0325                	.insn	2, 0x0325
    1948:	0904                	.insn	2, 0x0904
    194a:	0008                	.insn	2, 0x0008
    194c:	0501                	.insn	2, 0x0501
    194e:	04020023          	sb	zero,64(tp) # 40 <__start-0x7fffffc0>
    1952:	0301                	.insn	2, 0x0301
    1954:	0900                	.insn	2, 0x0900
    1956:	0008                	.insn	2, 0x0008
    1958:	0501                	.insn	2, 0x0501
    195a:	0904033f 05010004 	.insn	8, 0x050100040904033f
    1962:	0321                	.insn	2, 0x0321
    1964:	001c0907          	.insn	4, 0x001c0907
    1968:	0501                	.insn	2, 0x0501
    196a:	0334                	.insn	2, 0x0334
    196c:	0901                	.insn	2, 0x0901
    196e:	000c                	.insn	2, 0x000c
    1970:	0501                	.insn	2, 0x0501
    1972:	032a                	.insn	2, 0x032a
    1974:	0902                	.insn	2, 0x0902
    1976:	0008                	.insn	2, 0x0008
    1978:	0501                	.insn	2, 0x0501
    197a:	09080327          	.insn	4, 0x09080327
    197e:	0008                	.insn	2, 0x0008
    1980:	0501                	.insn	2, 0x0501
    1982:	0309                	.insn	2, 0x0309
    1984:	0919                	.insn	2, 0x0919
    1986:	0018                	.insn	2, 0x0018
    1988:	0001                	.insn	2, 0x0001
    198a:	0402                	.insn	2, 0x0402
    198c:	0601                	.insn	2, 0x0601
    198e:	20090003          	lb	zero,512(s2)
    1992:	0100                	.insn	2, 0x0100
    1994:	0c05                	.insn	2, 0x0c05
    1996:	0306                	.insn	2, 0x0306
    1998:	0905                	.insn	2, 0x0905
    199a:	0004                	.insn	2, 0x0004
    199c:	0501                	.insn	2, 0x0501
    199e:	0301                	.insn	2, 0x0301
    19a0:	0901                	.insn	2, 0x0901
    19a2:	0004                	.insn	2, 0x0004
    19a4:	0301                	.insn	2, 0x0301
    19a6:	0904                	.insn	2, 0x0904
    19a8:	0014                	.insn	2, 0x0014
    19aa:	0501                	.insn	2, 0x0501
    19ac:	0310                	.insn	2, 0x0310
    19ae:	0908                	.insn	2, 0x0908
    19b0:	0010                	.insn	2, 0x0010
    19b2:	0501                	.insn	2, 0x0501
    19b4:	030c                	.insn	2, 0x030c
    19b6:	0906                	.insn	2, 0x0906
    19b8:	000c                	.insn	2, 0x000c
    19ba:	0501                	.insn	2, 0x0501
    19bc:	0301                	.insn	2, 0x0301
    19be:	0901                	.insn	2, 0x0901
    19c0:	0004                	.insn	2, 0x0004
    19c2:	0301                	.insn	2, 0x0301
    19c4:	0904                	.insn	2, 0x0904
    19c6:	0014                	.insn	2, 0x0014
    19c8:	0501                	.insn	2, 0x0501
    19ca:	031c                	.insn	2, 0x031c
    19cc:	0916                	.insn	2, 0x0916
    19ce:	0010                	.insn	2, 0x0010
    19d0:	0501                	.insn	2, 0x0501
    19d2:	0311                	.insn	2, 0x0311
    19d4:	0902                	.insn	2, 0x0902
    19d6:	0004                	.insn	2, 0x0004
    19d8:	0501                	.insn	2, 0x0501
    19da:	030c                	.insn	2, 0x030c
    19dc:	0906                	.insn	2, 0x0906
    19de:	000c                	.insn	2, 0x000c
    19e0:	0501                	.insn	2, 0x0501
    19e2:	0301                	.insn	2, 0x0301
    19e4:	0901                	.insn	2, 0x0901
    19e6:	0004                	.insn	2, 0x0004
    19e8:	0301                	.insn	2, 0x0301
    19ea:	0904                	.insn	2, 0x0904
    19ec:	0014                	.insn	2, 0x0014
    19ee:	0501                	.insn	2, 0x0501
    19f0:	030c                	.insn	2, 0x030c
    19f2:	00100907          	.insn	4, 0x00100907
    19f6:	0501                	.insn	2, 0x0501
    19f8:	0301                	.insn	2, 0x0301
    19fa:	0901                	.insn	2, 0x0901
    19fc:	0008                	.insn	2, 0x0008
    19fe:	0301                	.insn	2, 0x0301
    1a00:	0904                	.insn	2, 0x0904
    1a02:	0014                	.insn	2, 0x0014
    1a04:	0501                	.insn	2, 0x0501
    1a06:	030d                	.insn	2, 0x030d
    1a08:	00140907          	.insn	4, 0x00140907
    1a0c:	0001                	.insn	2, 0x0001
    1a0e:	0402                	.insn	2, 0x0402
    1a10:	0601                	.insn	2, 0x0601
    1a12:	08090003          	lb	zero,128(s2)
    1a16:	0100                	.insn	2, 0x0100
    1a18:	0200                	.insn	2, 0x0200
    1a1a:	0204                	.insn	2, 0x0204
    1a1c:	0c090003          	lb	zero,192(s2)
    1a20:	0100                	.insn	2, 0x0100
    1a22:	0b05                	.insn	2, 0x0b05
    1a24:	0200                	.insn	2, 0x0200
    1a26:	0404                	.insn	2, 0x0404
    1a28:	0306                	.insn	2, 0x0306
    1a2a:	0900                	.insn	2, 0x0900
    1a2c:	0004                	.insn	2, 0x0004
    1a2e:	0501                	.insn	2, 0x0501
    1a30:	030c                	.insn	2, 0x030c
    1a32:	0905                	.insn	2, 0x0905
    1a34:	0004                	.insn	2, 0x0004
    1a36:	0501                	.insn	2, 0x0501
    1a38:	0301                	.insn	2, 0x0301
    1a3a:	0901                	.insn	2, 0x0901
    1a3c:	0008                	.insn	2, 0x0008
    1a3e:	0301                	.insn	2, 0x0301
    1a40:	02e9                	.insn	2, 0x02e9
    1a42:	1409                	.insn	2, 0x1409
    1a44:	0100                	.insn	2, 0x0100
    1a46:	0505                	.insn	2, 0x0505
    1a48:	14090b03          	lb	s6,320(s2)
    1a4c:	0100                	.insn	2, 0x0100
    1a4e:	04090303          	lb	t1,64(s2)
    1a52:	0100                	.insn	2, 0x0100
    1a54:	1605                	.insn	2, 0x1605
    1a56:	18090203          	lb	tp,384(s2)
    1a5a:	0100                	.insn	2, 0x0100
    1a5c:	0505                	.insn	2, 0x0505
    1a5e:	18090203          	lb	tp,384(s2)
    1a62:	0100                	.insn	2, 0x0100
    1a64:	0200                	.insn	2, 0x0200
    1a66:	0104                	.insn	2, 0x0104
    1a68:	0306                	.insn	2, 0x0306
    1a6a:	0900                	.insn	2, 0x0900
    1a6c:	0020                	.insn	2, 0x0020
    1a6e:	0501                	.insn	2, 0x0501
    1a70:	0616                	.insn	2, 0x0616
    1a72:	04090103          	lb	sp,64(s2)
    1a76:	0100                	.insn	2, 0x0100
    1a78:	0c05                	.insn	2, 0x0c05
    1a7a:	08090403          	lb	s0,128(s2)
    1a7e:	0100                	.insn	2, 0x0100
    1a80:	0105                	.insn	2, 0x0105
    1a82:	04090103          	lb	sp,64(s2)
    1a86:	0100                	.insn	2, 0x0100
    1a88:	0900e403          	.insn	4, 0x0900e403
    1a8c:	0014                	.insn	2, 0x0014
    1a8e:	0501                	.insn	2, 0x0501
    1a90:	0310                	.insn	2, 0x0310
    1a92:	00100903          	lb	s2,1(zero) # 1 <__start-0x7fffffff>
    1a96:	0501                	.insn	2, 0x0501
    1a98:	031e                	.insn	2, 0x031e
    1a9a:	0911                	.insn	2, 0x0911
    1a9c:	0004                	.insn	2, 0x0004
    1a9e:	0501                	.insn	2, 0x0501
    1aa0:	09000307          	.insn	4, 0x09000307
    1aa4:	0008                	.insn	2, 0x0008
    1aa6:	0501                	.insn	2, 0x0501
    1aa8:	09040337          	lui	t1,0x9040
    1aac:	0004                	.insn	2, 0x0004
    1aae:	0501                	.insn	2, 0x0501
    1ab0:	031a                	.insn	2, 0x031a
    1ab2:	0900                	.insn	2, 0x0900
    1ab4:	0008                	.insn	2, 0x0008
    1ab6:	0501                	.insn	2, 0x0501
    1ab8:	0314                	.insn	2, 0x0314
    1aba:	0904                	.insn	2, 0x0904
    1abc:	0008                	.insn	2, 0x0008
    1abe:	0501                	.insn	2, 0x0501
    1ac0:	0902030b          	.insn	4, 0x0902030b
    1ac4:	000c                	.insn	2, 0x000c
    1ac6:	0501                	.insn	2, 0x0501
    1ac8:	030d                	.insn	2, 0x030d
    1aca:	0902                	.insn	2, 0x0902
    1acc:	0008                	.insn	2, 0x0008
    1ace:	0501                	.insn	2, 0x0501
    1ad0:	031d                	.insn	2, 0x031d
    1ad2:	0040090b          	.insn	4, 0x0040090b
    1ad6:	0501                	.insn	2, 0x0501
    1ad8:	0900030b          	.insn	4, 0x0900030b
    1adc:	0008                	.insn	2, 0x0008
    1ade:	0501                	.insn	2, 0x0501
    1ae0:	0315                	.insn	2, 0x0315
    1ae2:	0904                	.insn	2, 0x0904
    1ae4:	0008                	.insn	2, 0x0008
    1ae6:	0501                	.insn	2, 0x0501
    1ae8:	09000313          	addi	t1,zero,144
    1aec:	000c                	.insn	2, 0x000c
    1aee:	0501                	.insn	2, 0x0501
    1af0:	032a                	.insn	2, 0x032a
    1af2:	00040907          	.insn	4, 0x00040907
    1af6:	0501                	.insn	2, 0x0501
    1af8:	0315                	.insn	2, 0x0315
    1afa:	0901                	.insn	2, 0x0901
    1afc:	000c                	.insn	2, 0x000c
    1afe:	0501                	.insn	2, 0x0501
    1b00:	031d                	.insn	2, 0x031d
    1b02:	0004090b          	.insn	4, 0x0004090b
    1b06:	0501                	.insn	2, 0x0501
    1b08:	0900031b          	.insn	4, 0x0900031b
    1b0c:	000c                	.insn	2, 0x000c
    1b0e:	0501                	.insn	2, 0x0501
    1b10:	0320                	.insn	2, 0x0320
    1b12:	0901                	.insn	2, 0x0901
    1b14:	0008                	.insn	2, 0x0008
    1b16:	0501                	.insn	2, 0x0501
    1b18:	09020317          	auipc	t1,0x9020
    1b1c:	000c                	.insn	2, 0x000c
    1b1e:	0501                	.insn	2, 0x0501
    1b20:	032e                	.insn	2, 0x032e
    1b22:	000c0907          	.insn	4, 0x000c0907
    1b26:	0501                	.insn	2, 0x0501
    1b28:	0319                	.insn	2, 0x0319
    1b2a:	0901                	.insn	2, 0x0901
    1b2c:	000c                	.insn	2, 0x000c
    1b2e:	0501                	.insn	2, 0x0501
    1b30:	0315                	.insn	2, 0x0315
    1b32:	0908                	.insn	2, 0x0908
    1b34:	0004                	.insn	2, 0x0004
    1b36:	0001                	.insn	2, 0x0001
    1b38:	0402                	.insn	2, 0x0402
    1b3a:	0601                	.insn	2, 0x0601
    1b3c:	48090003          	lb	zero,1152(s2)
    1b40:	0100                	.insn	2, 0x0100
    1b42:	0200                	.insn	2, 0x0200
    1b44:	0304                	.insn	2, 0x0304
    1b46:	10090003          	lb	zero,256(s2)
    1b4a:	0100                	.insn	2, 0x0100
    1b4c:	1905                	.insn	2, 0x1905
    1b4e:	0306                	.insn	2, 0x0306
    1b50:	0904                	.insn	2, 0x0904
    1b52:	001c                	.insn	2, 0x001c
    1b54:	0501                	.insn	2, 0x0501
    1b56:	09000317          	auipc	t1,0x9000
    1b5a:	0008                	.insn	2, 0x0008
    1b5c:	0501                	.insn	2, 0x0501
    1b5e:	0319                	.insn	2, 0x0319
    1b60:	0902                	.insn	2, 0x0902
    1b62:	0004                	.insn	2, 0x0004
    1b64:	0001                	.insn	2, 0x0001
    1b66:	0402                	.insn	2, 0x0402
    1b68:	0601                	.insn	2, 0x0601
    1b6a:	48090003          	lb	zero,1152(s2)
    1b6e:	0100                	.insn	2, 0x0100
    1b70:	0200                	.insn	2, 0x0200
    1b72:	0304                	.insn	2, 0x0304
    1b74:	10090003          	lb	zero,256(s2)
    1b78:	0100                	.insn	2, 0x0100
    1b7a:	1505                	.insn	2, 0x1505
    1b7c:	0306                	.insn	2, 0x0306
    1b7e:	0909                	.insn	2, 0x0909
    1b80:	001c                	.insn	2, 0x001c
    1b82:	0501                	.insn	2, 0x0501
    1b84:	094b0313          	addi	t1,s6,148
    1b88:	0110                	.insn	2, 0x0110
    1b8a:	0501                	.insn	2, 0x0501
    1b8c:	0316                	.insn	2, 0x0316
    1b8e:	01bd                	.insn	2, 0x01bd
    1b90:	0409                	.insn	2, 0x0409
    1b92:	0100                	.insn	2, 0x0100
    1b94:	0c05                	.insn	2, 0x0c05
    1b96:	14090d03          	lb	s10,320(s2)
    1b9a:	0100                	.insn	2, 0x0100
    1b9c:	0105                	.insn	2, 0x0105
    1b9e:	04090103          	lb	sp,64(s2)
    1ba2:	0100                	.insn	2, 0x0100
    1ba4:	0505                	.insn	2, 0x0505
    1ba6:	09018803          	lb	a6,144(gp) # 262d4c <__start-0x7fd9d2b4>
    1baa:	0014                	.insn	2, 0x0014
    1bac:	0501                	.insn	2, 0x0501
    1bae:	0322                	.insn	2, 0x0322
    1bb0:	00100903          	lb	s2,1(zero) # 1 <__start-0x7fffffff>
    1bb4:	0501                	.insn	2, 0x0501
    1bb6:	0900030b          	.insn	4, 0x0900030b
    1bba:	0008                	.insn	2, 0x0008
    1bbc:	0501                	.insn	2, 0x0501
    1bbe:	0321                	.insn	2, 0x0321
    1bc0:	0904                	.insn	2, 0x0904
    1bc2:	0004                	.insn	2, 0x0004
    1bc4:	0501                	.insn	2, 0x0501
    1bc6:	0305                	.insn	2, 0x0305
    1bc8:	0c0900cb          	.insn	4, 0x0c0900cb
    1bcc:	0100                	.insn	2, 0x0100
    1bce:	2105                	.insn	2, 0x2105
    1bd0:	097fb903          	.insn	4, 0x097fb903
    1bd4:	0004                	.insn	2, 0x0004
    1bd6:	0501                	.insn	2, 0x0501
    1bd8:	030d                	.insn	2, 0x030d
    1bda:	092e                	.insn	2, 0x092e
    1bdc:	0008                	.insn	2, 0x0008
    1bde:	0001                	.insn	2, 0x0001
    1be0:	0402                	.insn	2, 0x0402
    1be2:	0601                	.insn	2, 0x0601
    1be4:	14090003          	lb	zero,320(s2)
    1be8:	0100                	.insn	2, 0x0100
    1bea:	0200                	.insn	2, 0x0200
    1bec:	0304                	.insn	2, 0x0304
    1bee:	6c090003          	lb	zero,1728(s2)
    1bf2:	0100                	.insn	2, 0x0100
    1bf4:	0306                	.insn	2, 0x0306
    1bf6:	0906                	.insn	2, 0x0906
    1bf8:	0014                	.insn	2, 0x0014
    1bfa:	0501                	.insn	2, 0x0501
    1bfc:	0305                	.insn	2, 0x0305
    1bfe:	00080913          	addi	s2,a6,0
    1c02:	0501                	.insn	2, 0x0501
    1c04:	0301                	.insn	2, 0x0301
    1c06:	00ea                	.insn	2, 0x00ea
    1c08:	1409                	.insn	2, 0x1409
    1c0a:	0100                	.insn	2, 0x0100
    1c0c:	2e05                	.insn	2, 0x2e05
    1c0e:	18091303          	lh	t1,384(s2)
    1c12:	0100                	.insn	2, 0x0100
    1c14:	0505                	.insn	2, 0x0505
    1c16:	08090003          	lb	zero,128(s2)
    1c1a:	0100                	.insn	2, 0x0100
    1c1c:	10090203          	lb	tp,256(s2)
    1c20:	0100                	.insn	2, 0x0100
    1c22:	0105                	.insn	2, 0x0105
    1c24:	0c090303          	lb	t1,192(s2)
    1c28:	0100                	.insn	2, 0x0100
    1c2a:	14090603          	lb	a2,320(s2)
    1c2e:	0100                	.insn	2, 0x0100
    1c30:	0505                	.insn	2, 0x0505
    1c32:	1c090c03          	lb	s8,448(s2)
    1c36:	0100                	.insn	2, 0x0100
    1c38:	18090703          	lb	a4,384(s2)
    1c3c:	0100                	.insn	2, 0x0100
    1c3e:	80090203          	lb	tp,-2048(s2)
    1c42:	0100                	.insn	2, 0x0100
    1c44:	0105                	.insn	2, 0x0105
    1c46:	0c090303          	lb	t1,192(s2)
    1c4a:	0100                	.insn	2, 0x0100
    1c4c:	14092b03          	lw	s6,320(s2)
    1c50:	0100                	.insn	2, 0x0100
    1c52:	1605                	.insn	2, 0x1605
    1c54:	14091603          	lh	a2,320(s2)
    1c58:	0100                	.insn	2, 0x0100
    1c5a:	1405                	.insn	2, 0x1405
    1c5c:	08090003          	lb	zero,128(s2)
    1c60:	0100                	.insn	2, 0x0100
    1c62:	0505                	.insn	2, 0x0505
    1c64:	08090203          	lb	tp,128(s2)
    1c68:	0100                	.insn	2, 0x0100
    1c6a:	0200                	.insn	2, 0x0200
    1c6c:	0104                	.insn	2, 0x0104
    1c6e:	0306                	.insn	2, 0x0306
    1c70:	0900                	.insn	2, 0x0900
    1c72:	0048                	.insn	2, 0x0048
    1c74:	0001                	.insn	2, 0x0001
    1c76:	0402                	.insn	2, 0x0402
    1c78:	09000303          	lb	t1,144(zero) # 90 <__start-0x7fffff70>
    1c7c:	0010                	.insn	2, 0x0010
    1c7e:	0501                	.insn	2, 0x0501
    1c80:	061e                	.insn	2, 0x061e
    1c82:	1c090203          	lb	tp,448(s2)
    1c86:	0100                	.insn	2, 0x0100
    1c88:	0705                	.insn	2, 0x0705
    1c8a:	08090003          	lb	zero,128(s2)
    1c8e:	0100                	.insn	2, 0x0100
    1c90:	0905                	.insn	2, 0x0905
    1c92:	04090203          	lb	tp,64(s2)
    1c96:	0100                	.insn	2, 0x0100
    1c98:	0200                	.insn	2, 0x0200
    1c9a:	0104                	.insn	2, 0x0104
    1c9c:	0306                	.insn	2, 0x0306
    1c9e:	0900                	.insn	2, 0x0900
    1ca0:	0048                	.insn	2, 0x0048
    1ca2:	0001                	.insn	2, 0x0001
    1ca4:	0402                	.insn	2, 0x0402
    1ca6:	09000303          	lb	t1,144(zero) # 90 <__start-0x7fffff70>
    1caa:	0010                	.insn	2, 0x0010
    1cac:	0601                	.insn	2, 0x0601
    1cae:	1c090103          	lb	sp,448(s2)
    1cb2:	0100                	.insn	2, 0x0100
    1cb4:	14091403          	lh	s0,320(s2)
    1cb8:	0101                	.insn	2, 0x0101
    1cba:	1b05                	.insn	2, 0x1b05
    1cbc:	7c090503          	lb	a0,1984(s2)
    1cc0:	0100                	.insn	2, 0x0100
    1cc2:	3605                	.insn	2, 0x3605
    1cc4:	08090003          	lb	zero,128(s2)
    1cc8:	0100                	.insn	2, 0x0100
    1cca:	0b05                	.insn	2, 0x0b05
    1ccc:	0c090003          	lb	zero,192(s2)
    1cd0:	0100                	.insn	2, 0x0100
    1cd2:	1505                	.insn	2, 0x1505
    1cd4:	04090503          	lb	a0,64(s2)
    1cd8:	0100                	.insn	2, 0x0100
    1cda:	2105                	.insn	2, 0x2105
    1cdc:	08090403          	lb	s0,128(s2)
    1ce0:	0100                	.insn	2, 0x0100
    1ce2:	1505                	.insn	2, 0x1505
    1ce4:	10090403          	lb	s0,256(s2)
    1ce8:	0100                	.insn	2, 0x0100
    1cea:	0c05                	.insn	2, 0x0c05
    1cec:	04091503          	lh	a0,64(s2)
    1cf0:	0100                	.insn	2, 0x0100
    1cf2:	0105                	.insn	2, 0x0105
    1cf4:	04090103          	lb	sp,64(s2)
    1cf8:	0100                	.insn	2, 0x0100
    1cfa:	14090503          	lb	a0,320(s2)
    1cfe:	0100                	.insn	2, 0x0100
    1d00:	0505                	.insn	2, 0x0505
    1d02:	18090a03          	lb	s4,384(s2)
    1d06:	0100                	.insn	2, 0x0100
    1d08:	1405                	.insn	2, 0x1405
    1d0a:	14090703          	lb	a4,320(s2)
    1d0e:	0100                	.insn	2, 0x0100
    1d10:	0505                	.insn	2, 0x0505
    1d12:	0c090203          	lb	tp,192(s2)
    1d16:	0100                	.insn	2, 0x0100
    1d18:	0200                	.insn	2, 0x0200
    1d1a:	0104                	.insn	2, 0x0104
    1d1c:	0306                	.insn	2, 0x0306
    1d1e:	0900                	.insn	2, 0x0900
    1d20:	0044                	.insn	2, 0x0044
    1d22:	0001                	.insn	2, 0x0001
    1d24:	0402                	.insn	2, 0x0402
    1d26:	09000303          	lb	t1,144(zero) # 90 <__start-0x7fffff70>
    1d2a:	0010                	.insn	2, 0x0010
    1d2c:	0601                	.insn	2, 0x0601
    1d2e:	1c091303          	lh	t1,448(s2)
    1d32:	0100                	.insn	2, 0x0100
    1d34:	0200                	.insn	2, 0x0200
    1d36:	0104                	.insn	2, 0x0104
    1d38:	0306                	.insn	2, 0x0306
    1d3a:	0900                	.insn	2, 0x0900
    1d3c:	0048                	.insn	2, 0x0048
    1d3e:	0001                	.insn	2, 0x0001
    1d40:	0402                	.insn	2, 0x0402
    1d42:	09000303          	lb	t1,144(zero) # 90 <__start-0x7fffff70>
    1d46:	0010                	.insn	2, 0x0010
    1d48:	0601                	.insn	2, 0x0601
    1d4a:	1c090103          	lb	sp,448(s2)
    1d4e:	0100                	.insn	2, 0x0100
    1d50:	1b05                	.insn	2, 0x1b05
    1d52:	10090403          	lb	s0,256(s2)
    1d56:	0101                	.insn	2, 0x0101
    1d58:	3605                	.insn	2, 0x3605
    1d5a:	08090003          	lb	zero,128(s2)
    1d5e:	0100                	.insn	2, 0x0100
    1d60:	0b05                	.insn	2, 0x0b05
    1d62:	0c090003          	lb	zero,192(s2)
    1d66:	0100                	.insn	2, 0x0100
    1d68:	2105                	.insn	2, 0x2105
    1d6a:	04090603          	lb	a2,64(s2)
    1d6e:	0100                	.insn	2, 0x0100
    1d70:	0105                	.insn	2, 0x0105
    1d72:	0c091203          	lh	tp,192(s2)
    1d76:	0100                	.insn	2, 0x0100
    1d78:	14090403          	lb	s0,320(s2)
    1d7c:	0100                	.insn	2, 0x0100
    1d7e:	0505                	.insn	2, 0x0505
    1d80:	14090403          	lb	s0,320(s2)
    1d84:	0100                	.insn	2, 0x0100
    1d86:	2305                	.insn	2, 0x2305
    1d88:	18090203          	lb	tp,384(s2)
    1d8c:	0100                	.insn	2, 0x0100
    1d8e:	2405                	.insn	2, 0x2405
    1d90:	10090103          	lb	sp,256(s2)
    1d94:	0100                	.insn	2, 0x0100
    1d96:	0505                	.insn	2, 0x0505
    1d98:	10090203          	lb	tp,256(s2)
    1d9c:	0100                	.insn	2, 0x0100
    1d9e:	0200                	.insn	2, 0x0200
    1da0:	0104                	.insn	2, 0x0104
    1da2:	0306                	.insn	2, 0x0306
    1da4:	0900                	.insn	2, 0x0900
    1da6:	0020                	.insn	2, 0x0020
    1da8:	0501                	.insn	2, 0x0501
    1daa:	0601                	.insn	2, 0x0601
    1dac:	04090303          	lb	t1,64(s2)
    1db0:	0100                	.insn	2, 0x0100
    1db2:	14090403          	lb	s0,320(s2)
    1db6:	0100                	.insn	2, 0x0100
    1db8:	1f05                	.insn	2, 0x1f05
    1dba:	14090403          	lb	s0,320(s2)
    1dbe:	0100                	.insn	2, 0x0100
    1dc0:	2005                	.insn	2, 0x2005
    1dc2:	10090103          	lb	sp,256(s2)
    1dc6:	0100                	.insn	2, 0x0100
    1dc8:	0105                	.insn	2, 0x0105
    1dca:	10090303          	lb	t1,256(s2)
    1dce:	0100                	.insn	2, 0x0100
    1dd0:	14090503          	lb	a0,320(s2)
    1dd4:	0100                	.insn	2, 0x0100
    1dd6:	0505                	.insn	2, 0x0505
    1dd8:	18090803          	lb	a6,384(s2)
    1ddc:	0100                	.insn	2, 0x0100
    1dde:	1a05                	.insn	2, 0x1a05
    1de0:	18090303          	lb	t1,384(s2)
    1de4:	0100                	.insn	2, 0x0100
    1de6:	4405                	.insn	2, 0x4405
    1de8:	0c090103          	lb	sp,192(s2)
    1dec:	0100                	.insn	2, 0x0100
    1dee:	1a05                	.insn	2, 0x1a05
    1df0:	08090003          	lb	zero,128(s2)
    1df4:	0100                	.insn	2, 0x0100
    1df6:	2b05                	.insn	2, 0x2b05
    1df8:	0c091803          	lh	a6,192(s2)
    1dfc:	0100                	.insn	2, 0x0100
    1dfe:	1f05                	.insn	2, 0x1f05
    1e00:	08090003          	lb	zero,128(s2)
    1e04:	0100                	.insn	2, 0x0100
    1e06:	0b05                	.insn	2, 0x0b05
    1e08:	08090003          	lb	zero,128(s2)
    1e0c:	0100                	.insn	2, 0x0100
    1e0e:	5f05                	.insn	2, 0x5f05
    1e10:	0200                	.insn	2, 0x0200
    1e12:	0104                	.insn	2, 0x0104
    1e14:	04090003          	lb	zero,64(s2)
    1e18:	0100                	.insn	2, 0x0100
    1e1a:	3e05                	.insn	2, 0x3e05
    1e1c:	0200                	.insn	2, 0x0200
    1e1e:	0104                	.insn	2, 0x0104
    1e20:	08090003          	lb	zero,128(s2)
    1e24:	0100                	.insn	2, 0x0100
    1e26:	1505                	.insn	2, 0x1505
    1e28:	08090703          	lb	a4,128(s2)
    1e2c:	0100                	.insn	2, 0x0100
    1e2e:	1c05                	.insn	2, 0x1c05
    1e30:	08090103          	lb	sp,128(s2)
    1e34:	0100                	.insn	2, 0x0100
    1e36:	2105                	.insn	2, 0x2105
    1e38:	0c090203          	lb	tp,192(s2)
    1e3c:	0100                	.insn	2, 0x0100
    1e3e:	1005                	.insn	2, 0x1005
    1e40:	08090003          	lb	zero,128(s2)
    1e44:	0100                	.insn	2, 0x0100
    1e46:	0d05                	.insn	2, 0x0d05
    1e48:	08090303          	lb	t1,128(s2)
    1e4c:	0100                	.insn	2, 0x0100
    1e4e:	1c05                	.insn	2, 0x1c05
    1e50:	08090003          	lb	zero,128(s2)
    1e54:	0100                	.insn	2, 0x0100
    1e56:	0d05                	.insn	2, 0x0d05
    1e58:	10090103          	lb	sp,256(s2)
    1e5c:	0100                	.insn	2, 0x0100
    1e5e:	1505                	.insn	2, 0x1505
    1e60:	08090103          	lb	sp,128(s2)
    1e64:	0100                	.insn	2, 0x0100
    1e66:	1c05                	.insn	2, 0x1c05
    1e68:	08090403          	lb	s0,128(s2)
    1e6c:	0100                	.insn	2, 0x0100
    1e6e:	1505                	.insn	2, 0x1505
    1e70:	08090103          	lb	sp,128(s2)
    1e74:	0100                	.insn	2, 0x0100
    1e76:	0505                	.insn	2, 0x0505
    1e78:	08090303          	lb	t1,128(s2)
    1e7c:	0100                	.insn	2, 0x0100
    1e7e:	0200                	.insn	2, 0x0200
    1e80:	0104                	.insn	2, 0x0104
    1e82:	0306                	.insn	2, 0x0306
    1e84:	0900                	.insn	2, 0x0900
    1e86:	0020                	.insn	2, 0x0020
    1e88:	0501                	.insn	2, 0x0501
    1e8a:	060c                	.insn	2, 0x060c
    1e8c:	04090403          	lb	s0,64(s2)
    1e90:	0100                	.insn	2, 0x0100
    1e92:	0105                	.insn	2, 0x0105
    1e94:	04090103          	lb	sp,64(s2)
    1e98:	0100                	.insn	2, 0x0100
    1e9a:	14090403          	lb	s0,320(s2)
    1e9e:	0100                	.insn	2, 0x0100
    1ea0:	2905                	.insn	2, 0x2905
    1ea2:	10090403          	lb	s0,256(s2)
    1ea6:	0100                	.insn	2, 0x0100
    1ea8:	0105                	.insn	2, 0x0105
    1eaa:	0c090303          	lb	t1,192(s2)
    1eae:	0100                	.insn	2, 0x0100
    1eb0:	09018a03          	lb	s4,144(gp)
    1eb4:	0014                	.insn	2, 0x0014
    1eb6:	0501                	.insn	2, 0x0501
    1eb8:	0309                	.insn	2, 0x0309
    1eba:	0918                	.insn	2, 0x0918
    1ebc:	0014                	.insn	2, 0x0014
    1ebe:	0501                	.insn	2, 0x0501
    1ec0:	000d                	.insn	2, 0x000d
    1ec2:	0402                	.insn	2, 0x0402
    1ec4:	0301                	.insn	2, 0x0301
    1ec6:	0908                	.insn	2, 0x0908
    1ec8:	0004                	.insn	2, 0x0004
    1eca:	0501                	.insn	2, 0x0501
    1ecc:	0309                	.insn	2, 0x0309
    1ece:	0978                	.insn	2, 0x0978
    1ed0:	0004                	.insn	2, 0x0004
    1ed2:	0501                	.insn	2, 0x0501
    1ed4:	0301                	.insn	2, 0x0301
    1ed6:	080901ef          	jal	gp,91f56 <__start-0x7ff6e0aa>
    1eda:	0100                	.insn	2, 0x0100
    1edc:	1505                	.insn	2, 0x1505
    1ede:	10090303          	lb	t1,256(s2)
    1ee2:	0100                	.insn	2, 0x0100
    1ee4:	0505                	.insn	2, 0x0505
    1ee6:	04090003          	lb	zero,64(s2)
    1eea:	0100                	.insn	2, 0x0100
    1eec:	0905                	.insn	2, 0x0905
    1eee:	04090203          	lb	tp,64(s2)
    1ef2:	0100                	.insn	2, 0x0100
    1ef4:	6805                	.insn	2, 0x6805
    1ef6:	0200                	.insn	2, 0x0200
    1ef8:	0304                	.insn	2, 0x0304
    1efa:	28097e03          	.insn	4, 0x28097e03
    1efe:	0100                	.insn	2, 0x0100
    1f00:	3605                	.insn	2, 0x3605
    1f02:	0200                	.insn	2, 0x0200
    1f04:	0104                	.insn	2, 0x0104
    1f06:	0c090003          	lb	zero,192(s2)
    1f0a:	0100                	.insn	2, 0x0100
    1f0c:	0505                	.insn	2, 0x0505
    1f0e:	08090503          	lb	a0,128(s2)
    1f12:	0100                	.insn	2, 0x0100
    1f14:	0c090103          	lb	sp,192(s2)
    1f18:	0100                	.insn	2, 0x0100
    1f1a:	0c090103          	lb	sp,192(s2)
    1f1e:	0100                	.insn	2, 0x0100
    1f20:	1705                	.insn	2, 0x1705
    1f22:	0c091003          	lh	zero,192(s2)
    1f26:	0100                	.insn	2, 0x0100
    1f28:	1f05                	.insn	2, 0x1f05
    1f2a:	10090103          	lb	sp,256(s2)
    1f2e:	0100                	.insn	2, 0x0100
    1f30:	0105                	.insn	2, 0x0105
    1f32:	10090103          	lb	sp,256(s2)
    1f36:	0100                	.insn	2, 0x0100
    1f38:	14090403          	lb	s0,320(s2)
    1f3c:	0100                	.insn	2, 0x0100
    1f3e:	0900c803          	lbu	a6,144(ra)
    1f42:	0010                	.insn	2, 0x0010
    1f44:	0301                	.insn	2, 0x0301
    1f46:	02d5                	.insn	2, 0x02d5
    1f48:	1409                	.insn	2, 0x1409
    1f4a:	0100                	.insn	2, 0x0100
    1f4c:	0905                	.insn	2, 0x0905
    1f4e:	10090103          	lb	sp,256(s2)
    1f52:	0100                	.insn	2, 0x0100
    1f54:	0705                	.insn	2, 0x0705
    1f56:	0c090003          	lb	zero,192(s2)
    1f5a:	0100                	.insn	2, 0x0100
    1f5c:	1e05                	.insn	2, 0x1e05
    1f5e:	04090603          	lb	a2,64(s2)
    1f62:	0100                	.insn	2, 0x0100
    1f64:	0105                	.insn	2, 0x0105
    1f66:	0c090a03          	lb	s4,192(s2)
    1f6a:	0100                	.insn	2, 0x0100
    1f6c:	2005                	.insn	2, 0x2005
    1f6e:	04097e03          	.insn	4, 0x04097e03
    1f72:	0100                	.insn	2, 0x0100
    1f74:	1e05                	.insn	2, 0x1e05
    1f76:	10090003          	lb	zero,256(s2)
    1f7a:	0100                	.insn	2, 0x0100
    1f7c:	0105                	.insn	2, 0x0105
    1f7e:	08090203          	lb	tp,128(s2)
    1f82:	0100                	.insn	2, 0x0100
    1f84:	0905                	.insn	2, 0x0905
    1f86:	14090703          	lb	a4,320(s2)
    1f8a:	0100                	.insn	2, 0x0100
    1f8c:	1505                	.insn	2, 0x1505
    1f8e:	10090803          	lb	a6,256(s2)
    1f92:	0100                	.insn	2, 0x0100
    1f94:	1405                	.insn	2, 0x1405
    1f96:	0c090403          	lb	s0,192(s2)
    1f9a:	0100                	.insn	2, 0x0100
    1f9c:	0905                	.insn	2, 0x0905
    1f9e:	04090103          	lb	sp,64(s2)
    1fa2:	0100                	.insn	2, 0x0100
    1fa4:	0505                	.insn	2, 0x0505
    1fa6:	14091603          	lh	a2,320(s2)
    1faa:	0100                	.insn	2, 0x0100
    1fac:	1605                	.insn	2, 0x1605
    1fae:	14090103          	lb	sp,320(s2)
    1fb2:	0100                	.insn	2, 0x0100
    1fb4:	0b05                	.insn	2, 0x0b05
    1fb6:	04090403          	lb	s0,64(s2)
    1fba:	0100                	.insn	2, 0x0100
    1fbc:	1905                	.insn	2, 0x1905
    1fbe:	08090303          	lb	t1,128(s2)
    1fc2:	0100                	.insn	2, 0x0100
    1fc4:	1005                	.insn	2, 0x1005
    1fc6:	0c090803          	lb	a6,192(s2)
    1fca:	0100                	.insn	2, 0x0100
    1fcc:	0505                	.insn	2, 0x0505
    1fce:	04090103          	lb	sp,64(s2)
    1fd2:	0100                	.insn	2, 0x0100
    1fd4:	0105                	.insn	2, 0x0105
    1fd6:	09088d03          	lb	s10,144(a7) # 1e433e0 <__start-0x7e1bcc20>
    1fda:	0014                	.insn	2, 0x0014
    1fdc:	0501                	.insn	2, 0x0501
    1fde:	0310                	.insn	2, 0x0310
    1fe0:	0905                	.insn	2, 0x0905
    1fe2:	0010                	.insn	2, 0x0010
    1fe4:	0501                	.insn	2, 0x0501
    1fe6:	030e                	.insn	2, 0x030e
    1fe8:	0900                	.insn	2, 0x0900
    1fea:	0008                	.insn	2, 0x0008
    1fec:	0501                	.insn	2, 0x0501
    1fee:	0305                	.insn	2, 0x0305
    1ff0:	0904                	.insn	2, 0x0904
    1ff2:	0008                	.insn	2, 0x0008
    1ff4:	0501                	.insn	2, 0x0501
    1ff6:	030c                	.insn	2, 0x030c
    1ff8:	0904                	.insn	2, 0x0904
    1ffa:	0020                	.insn	2, 0x0020
    1ffc:	0501                	.insn	2, 0x0501
    1ffe:	0301                	.insn	2, 0x0301
    2000:	0901                	.insn	2, 0x0901
    2002:	0004                	.insn	2, 0x0004
    2004:	0501                	.insn	2, 0x0501
    2006:	0305                	.insn	2, 0x0305
    2008:	0921                	.insn	2, 0x0921
    200a:	0014                	.insn	2, 0x0014
    200c:	0501                	.insn	2, 0x0501
    200e:	0325                	.insn	2, 0x0325
    2010:	0902                	.insn	2, 0x0902
    2012:	001c                	.insn	2, 0x001c
    2014:	0501                	.insn	2, 0x0501
    2016:	0309                	.insn	2, 0x0309
    2018:	0908                	.insn	2, 0x0908
    201a:	0004                	.insn	2, 0x0004
    201c:	0501                	.insn	2, 0x0501
    201e:	030d                	.insn	2, 0x030d
    2020:	0906                	.insn	2, 0x0906
    2022:	0004                	.insn	2, 0x0004
    2024:	0501                	.insn	2, 0x0501
    2026:	0321                	.insn	2, 0x0321
    2028:	00180903          	lb	s2,1(a6)
    202c:	0501                	.insn	2, 0x0501
    202e:	0332                	.insn	2, 0x0332
    2030:	0900                	.insn	2, 0x0900
    2032:	0008                	.insn	2, 0x0008
    2034:	0501                	.insn	2, 0x0501
    2036:	09000313          	addi	t1,zero,144
    203a:	0014                	.insn	2, 0x0014
    203c:	0501                	.insn	2, 0x0501
    203e:	0321                	.insn	2, 0x0321
    2040:	00040903          	lb	s2,0(s0)
    2044:	0501                	.insn	2, 0x0501
    2046:	0344                	.insn	2, 0x0344
    2048:	0900                	.insn	2, 0x0900
    204a:	0008                	.insn	2, 0x0008
    204c:	0501                	.insn	2, 0x0501
    204e:	09020317          	auipc	t1,0x9020
    2052:	0010                	.insn	2, 0x0010
    2054:	0501                	.insn	2, 0x0501
    2056:	0326                	.insn	2, 0x0326
    2058:	0902                	.insn	2, 0x0902
    205a:	0008                	.insn	2, 0x0008
    205c:	0501                	.insn	2, 0x0501
    205e:	030d                	.insn	2, 0x030d
    2060:	090c                	.insn	2, 0x090c
    2062:	0008                	.insn	2, 0x0008
    2064:	0001                	.insn	2, 0x0001
    2066:	0402                	.insn	2, 0x0402
    2068:	0601                	.insn	2, 0x0601
    206a:	20090003          	lb	zero,512(s2)
    206e:	0100                	.insn	2, 0x0100
    2070:	0f05                	.insn	2, 0x0f05
    2072:	0306                	.insn	2, 0x0306
    2074:	0905                	.insn	2, 0x0905
    2076:	0004                	.insn	2, 0x0004
    2078:	0501                	.insn	2, 0x0501
    207a:	0311                	.insn	2, 0x0311
    207c:	000c0903          	lb	s2,0(s8)
    2080:	0501                	.insn	2, 0x0501
    2082:	0907031b          	.insn	4, 0x0907031b
    2086:	000c                	.insn	2, 0x000c
    2088:	0501                	.insn	2, 0x0501
    208a:	0903030b          	.insn	4, 0x0903030b
    208e:	0008                	.insn	2, 0x0008
    2090:	0501                	.insn	2, 0x0501
    2092:	0028                	.insn	2, 0x0028
    2094:	0402                	.insn	2, 0x0402
    2096:	0301                	.insn	2, 0x0301
    2098:	0900                	.insn	2, 0x0900
    209a:	000c                	.insn	2, 0x000c
    209c:	0501                	.insn	2, 0x0501
    209e:	030d                	.insn	2, 0x030d
    20a0:	0902                	.insn	2, 0x0902
    20a2:	0008                	.insn	2, 0x0008
    20a4:	0501                	.insn	2, 0x0501
    20a6:	0309                	.insn	2, 0x0309
    20a8:	00040907          	.insn	4, 0x00040907
    20ac:	0501                	.insn	2, 0x0501
    20ae:	0324                	.insn	2, 0x0324
    20b0:	00180903          	lb	s2,1(a6)
    20b4:	0501                	.insn	2, 0x0501
    20b6:	0316                	.insn	2, 0x0316
    20b8:	0900                	.insn	2, 0x0900
    20ba:	0008                	.insn	2, 0x0008
    20bc:	0501                	.insn	2, 0x0501
    20be:	0902030f          	.insn	4, 0x0902030f
    20c2:	0018                	.insn	2, 0x0018
    20c4:	0501                	.insn	2, 0x0501
    20c6:	09020313          	addi	t1,tp,144 # 90 <__start-0x7fffff70>
    20ca:	0008                	.insn	2, 0x0008
    20cc:	0501                	.insn	2, 0x0501
    20ce:	0321                	.insn	2, 0x0321
    20d0:	0902                	.insn	2, 0x0902
    20d2:	0008                	.insn	2, 0x0008
    20d4:	0501                	.insn	2, 0x0501
    20d6:	0346                	.insn	2, 0x0346
    20d8:	0900                	.insn	2, 0x0900
    20da:	0008                	.insn	2, 0x0008
    20dc:	0501                	.insn	2, 0x0501
    20de:	0321                	.insn	2, 0x0321
    20e0:	0904                	.insn	2, 0x0904
    20e2:	0018                	.insn	2, 0x0018
    20e4:	0501                	.insn	2, 0x0501
    20e6:	0351                	.insn	2, 0x0351
    20e8:	0900                	.insn	2, 0x0900
    20ea:	0008                	.insn	2, 0x0008
    20ec:	0501                	.insn	2, 0x0501
    20ee:	0346                	.insn	2, 0x0346
    20f0:	0900                	.insn	2, 0x0900
    20f2:	0008                	.insn	2, 0x0008
    20f4:	0501                	.insn	2, 0x0501
    20f6:	0319                	.insn	2, 0x0319
    20f8:	0908                	.insn	2, 0x0908
    20fa:	0014                	.insn	2, 0x0014
    20fc:	0501                	.insn	2, 0x0501
    20fe:	033c                	.insn	2, 0x033c
    2100:	0900                	.insn	2, 0x0900
    2102:	0008                	.insn	2, 0x0008
    2104:	0501                	.insn	2, 0x0501
    2106:	0309                	.insn	2, 0x0309
    2108:	0902                	.insn	2, 0x0902
    210a:	000c                	.insn	2, 0x000c
    210c:	0001                	.insn	2, 0x0001
    210e:	0402                	.insn	2, 0x0402
    2110:	0601                	.insn	2, 0x0601
    2112:	20090003          	lb	zero,512(s2)
    2116:	0100                	.insn	2, 0x0100
    2118:	1005                	.insn	2, 0x1005
    211a:	0306                	.insn	2, 0x0306
    211c:	0904                	.insn	2, 0x0904
    211e:	0004                	.insn	2, 0x0004
    2120:	0501                	.insn	2, 0x0501
    2122:	0305                	.insn	2, 0x0305
    2124:	0901                	.insn	2, 0x0901
    2126:	0004                	.insn	2, 0x0004
    2128:	0301                	.insn	2, 0x0301
    212a:	090c                	.insn	2, 0x090c
    212c:	0014                	.insn	2, 0x0014
    212e:	0501                	.insn	2, 0x0501
    2130:	032e                	.insn	2, 0x032e
    2132:	0901                	.insn	2, 0x0901
    2134:	0024                	.insn	2, 0x0024
    2136:	0501                	.insn	2, 0x0501
    2138:	0309                	.insn	2, 0x0309
    213a:	0908                	.insn	2, 0x0908
    213c:	0004                	.insn	2, 0x0004
    213e:	0501                	.insn	2, 0x0501
    2140:	030d                	.insn	2, 0x030d
    2142:	0905                	.insn	2, 0x0905
    2144:	0004                	.insn	2, 0x0004
    2146:	0501                	.insn	2, 0x0501
    2148:	0321                	.insn	2, 0x0321
    214a:	00180903          	lb	s2,1(a6)
    214e:	0501                	.insn	2, 0x0501
    2150:	0330                	.insn	2, 0x0330
    2152:	0900                	.insn	2, 0x0900
    2154:	0008                	.insn	2, 0x0008
    2156:	0501                	.insn	2, 0x0501
    2158:	09000313          	addi	t1,zero,144
    215c:	0010                	.insn	2, 0x0010
    215e:	0501                	.insn	2, 0x0501
    2160:	0321                	.insn	2, 0x0321
    2162:	0905                	.insn	2, 0x0905
    2164:	0008                	.insn	2, 0x0008
    2166:	0501                	.insn	2, 0x0501
    2168:	0332                	.insn	2, 0x0332
    216a:	0900                	.insn	2, 0x0900
    216c:	0008                	.insn	2, 0x0008
    216e:	0501                	.insn	2, 0x0501
    2170:	0349                	.insn	2, 0x0349
    2172:	0900                	.insn	2, 0x0900
    2174:	0014                	.insn	2, 0x0014
    2176:	0501                	.insn	2, 0x0501
    2178:	0346                	.insn	2, 0x0346
    217a:	0900                	.insn	2, 0x0900
    217c:	0008                	.insn	2, 0x0008
    217e:	0501                	.insn	2, 0x0501
    2180:	0321                	.insn	2, 0x0321
    2182:	00180903          	lb	s2,1(a6)
    2186:	0501                	.insn	2, 0x0501
    2188:	0344                	.insn	2, 0x0344
    218a:	0900                	.insn	2, 0x0900
    218c:	0008                	.insn	2, 0x0008
    218e:	0501                	.insn	2, 0x0501
    2190:	09020317          	auipc	t1,0x9020
    2194:	0010                	.insn	2, 0x0010
    2196:	0501                	.insn	2, 0x0501
    2198:	0326                	.insn	2, 0x0326
    219a:	0902                	.insn	2, 0x0902
    219c:	0008                	.insn	2, 0x0008
    219e:	0501                	.insn	2, 0x0501
    21a0:	030d                	.insn	2, 0x030d
    21a2:	090c                	.insn	2, 0x090c
    21a4:	0008                	.insn	2, 0x0008
    21a6:	0001                	.insn	2, 0x0001
    21a8:	0402                	.insn	2, 0x0402
    21aa:	0601                	.insn	2, 0x0601
    21ac:	20090003          	lb	zero,512(s2)
    21b0:	0100                	.insn	2, 0x0100
    21b2:	0f05                	.insn	2, 0x0f05
    21b4:	0306                	.insn	2, 0x0306
    21b6:	0905                	.insn	2, 0x0905
    21b8:	0004                	.insn	2, 0x0004
    21ba:	0501                	.insn	2, 0x0501
    21bc:	0311                	.insn	2, 0x0311
    21be:	000c0903          	lb	s2,0(s8)
    21c2:	0501                	.insn	2, 0x0501
    21c4:	0907031b          	.insn	4, 0x0907031b
    21c8:	000c                	.insn	2, 0x000c
    21ca:	0501                	.insn	2, 0x0501
    21cc:	0903030b          	.insn	4, 0x0903030b
    21d0:	0008                	.insn	2, 0x0008
    21d2:	0501                	.insn	2, 0x0501
    21d4:	0028                	.insn	2, 0x0028
    21d6:	0402                	.insn	2, 0x0402
    21d8:	0301                	.insn	2, 0x0301
    21da:	0900                	.insn	2, 0x0900
    21dc:	000c                	.insn	2, 0x000c
    21de:	0501                	.insn	2, 0x0501
    21e0:	030d                	.insn	2, 0x030d
    21e2:	0902                	.insn	2, 0x0902
    21e4:	0008                	.insn	2, 0x0008
    21e6:	0501                	.insn	2, 0x0501
    21e8:	0309                	.insn	2, 0x0309
    21ea:	00040907          	.insn	4, 0x00040907
    21ee:	0501                	.insn	2, 0x0501
    21f0:	0904030f          	.insn	4, 0x0904030f
    21f4:	0018                	.insn	2, 0x0018
    21f6:	0501                	.insn	2, 0x0501
    21f8:	0335                	.insn	2, 0x0335
    21fa:	0904                	.insn	2, 0x0904
    21fc:	0008                	.insn	2, 0x0008
    21fe:	0501                	.insn	2, 0x0501
    2200:	0346                	.insn	2, 0x0346
    2202:	0900                	.insn	2, 0x0900
    2204:	0008                	.insn	2, 0x0008
    2206:	0501                	.insn	2, 0x0501
    2208:	09000327          	.insn	4, 0x09000327
    220c:	0014                	.insn	2, 0x0014
    220e:	0501                	.insn	2, 0x0501
    2210:	031d                	.insn	2, 0x031d
    2212:	00080907          	.insn	4, 0x00080907
    2216:	0501                	.insn	2, 0x0501
    2218:	032c                	.insn	2, 0x032c
    221a:	0900                	.insn	2, 0x0900
    221c:	0008                	.insn	2, 0x0008
    221e:	0501                	.insn	2, 0x0501
    2220:	0900030f          	.insn	4, 0x0900030f
    2224:	0010                	.insn	2, 0x0010
    2226:	0501                	.insn	2, 0x0501
    2228:	0319                	.insn	2, 0x0319
    222a:	00080903          	lb	s2,0(a6)
    222e:	0501                	.insn	2, 0x0501
    2230:	031d                	.insn	2, 0x031d
    2232:	0906                	.insn	2, 0x0906
    2234:	0008                	.insn	2, 0x0008
    2236:	0501                	.insn	2, 0x0501
    2238:	032e                	.insn	2, 0x032e
    223a:	0900                	.insn	2, 0x0900
    223c:	0008                	.insn	2, 0x0008
    223e:	0501                	.insn	2, 0x0501
    2240:	0345                	.insn	2, 0x0345
    2242:	0900                	.insn	2, 0x0900
    2244:	0014                	.insn	2, 0x0014
    2246:	0501                	.insn	2, 0x0501
    2248:	0342                	.insn	2, 0x0342
    224a:	0900                	.insn	2, 0x0900
    224c:	0008                	.insn	2, 0x0008
    224e:	0501                	.insn	2, 0x0501
    2250:	0319                	.insn	2, 0x0319
    2252:	0901                	.insn	2, 0x0901
    2254:	0018                	.insn	2, 0x0018
    2256:	0301                	.insn	2, 0x0301
    2258:	00080903          	lb	s2,0(a6)
    225c:	0501                	.insn	2, 0x0501
    225e:	033c                	.insn	2, 0x033c
    2260:	0900                	.insn	2, 0x0900
    2262:	0008                	.insn	2, 0x0008
    2264:	0501                	.insn	2, 0x0501
    2266:	0309                	.insn	2, 0x0309
    2268:	0902                	.insn	2, 0x0902
    226a:	000c                	.insn	2, 0x000c
    226c:	0001                	.insn	2, 0x0001
    226e:	0402                	.insn	2, 0x0402
    2270:	0601                	.insn	2, 0x0601
    2272:	20090003          	lb	zero,512(s2)
    2276:	0100                	.insn	2, 0x0100
    2278:	1005                	.insn	2, 0x1005
    227a:	0306                	.insn	2, 0x0306
    227c:	0904                	.insn	2, 0x0904
    227e:	0004                	.insn	2, 0x0004
    2280:	0501                	.insn	2, 0x0501
    2282:	0305                	.insn	2, 0x0305
    2284:	0901                	.insn	2, 0x0901
    2286:	0004                	.insn	2, 0x0004
    2288:	0301                	.insn	2, 0x0301
    228a:	090c                	.insn	2, 0x090c
    228c:	0014                	.insn	2, 0x0014
    228e:	0501                	.insn	2, 0x0501
    2290:	0314                	.insn	2, 0x0314
    2292:	0902                	.insn	2, 0x0902
    2294:	0024                	.insn	2, 0x0024
    2296:	0501                	.insn	2, 0x0501
    2298:	0907030f          	.insn	4, 0x0907030f
    229c:	0008                	.insn	2, 0x0008
    229e:	0501                	.insn	2, 0x0501
    22a0:	0309                	.insn	2, 0x0309
    22a2:	0902                	.insn	2, 0x0902
    22a4:	0008                	.insn	2, 0x0008
    22a6:	0501                	.insn	2, 0x0501
    22a8:	0902030f          	.insn	4, 0x0902030f
    22ac:	0018                	.insn	2, 0x0018
    22ae:	0501                	.insn	2, 0x0501
    22b0:	09020347          	.insn	4, 0x09020347
    22b4:	0008                	.insn	2, 0x0008
    22b6:	0501                	.insn	2, 0x0501
    22b8:	0900032f          	.insn	4, 0x0900032f
    22bc:	0018                	.insn	2, 0x0018
    22be:	0501                	.insn	2, 0x0501
    22c0:	09030323          	sb	a6,134(t1) # 9022216 <__start-0x76fdddea>
    22c4:	0008                	.insn	2, 0x0008
    22c6:	0501                	.insn	2, 0x0501
    22c8:	0335                	.insn	2, 0x0335
    22ca:	0902                	.insn	2, 0x0902
    22cc:	0014                	.insn	2, 0x0014
    22ce:	0501                	.insn	2, 0x0501
    22d0:	030d                	.insn	2, 0x030d
    22d2:	0902                	.insn	2, 0x0902
    22d4:	0014                	.insn	2, 0x0014
    22d6:	0501                	.insn	2, 0x0501
    22d8:	0903032b          	.insn	4, 0x0903032b
    22dc:	0028                	.insn	2, 0x0028
    22de:	0501                	.insn	2, 0x0501
    22e0:	0900033f 05010018 	.insn	8, 0x050100180900033f
    22e8:	0315                	.insn	2, 0x0315
    22ea:	0901                	.insn	2, 0x0901
    22ec:	0020                	.insn	2, 0x0020
    22ee:	0501                	.insn	2, 0x0501
    22f0:	032d                	.insn	2, 0x032d
    22f2:	00040903          	lb	s2,0(s0)
    22f6:	0501                	.insn	2, 0x0501
    22f8:	0342                	.insn	2, 0x0342
    22fa:	0900                	.insn	2, 0x0900
    22fc:	0018                	.insn	2, 0x0018
    22fe:	0501                	.insn	2, 0x0501
    2300:	0315                	.insn	2, 0x0315
    2302:	0901                	.insn	2, 0x0901
    2304:	001c                	.insn	2, 0x001c
    2306:	0501                	.insn	2, 0x0501
    2308:	0903033f 05010004 	.insn	8, 0x050100040903033f
    2310:	0315                	.insn	2, 0x0315
    2312:	0901                	.insn	2, 0x0901
    2314:	001c                	.insn	2, 0x001c
    2316:	0501                	.insn	2, 0x0501
    2318:	09040317          	auipc	t1,0x9040
    231c:	0004                	.insn	2, 0x0004
    231e:	0501                	.insn	2, 0x0501
    2320:	09020343          	.insn	4, 0x09020343
    2324:	000c                	.insn	2, 0x000c
    2326:	0501                	.insn	2, 0x0501
    2328:	0315                	.insn	2, 0x0315
    232a:	0908                	.insn	2, 0x0908
    232c:	001c                	.insn	2, 0x001c
    232e:	0501                	.insn	2, 0x0501
    2330:	0321                	.insn	2, 0x0321
    2332:	097d                	.insn	2, 0x097d
    2334:	0004                	.insn	2, 0x0004
    2336:	0501                	.insn	2, 0x0501
    2338:	0315                	.insn	2, 0x0315
    233a:	00040903          	lb	s2,0(s0)
    233e:	0301                	.insn	2, 0x0301
    2340:	0004090f          	.insn	4, 0x0004090f
    2344:	0301                	.insn	2, 0x0301
    2346:	00080977          	.insn	4, 0x00080977
    234a:	0501                	.insn	2, 0x0501
    234c:	0910030f          	.insn	4, 0x0910030f
    2350:	0004                	.insn	2, 0x0004
    2352:	0501                	.insn	2, 0x0501
    2354:	0311                	.insn	2, 0x0311
    2356:	0902                	.insn	2, 0x0902
    2358:	000c                	.insn	2, 0x000c
    235a:	0001                	.insn	2, 0x0001
    235c:	0402                	.insn	2, 0x0402
    235e:	0601                	.insn	2, 0x0601
    2360:	48090003          	lb	zero,1152(s2)
    2364:	0100                	.insn	2, 0x0100
    2366:	0200                	.insn	2, 0x0200
    2368:	0304                	.insn	2, 0x0304
    236a:	10090003          	lb	zero,256(s2)
    236e:	0100                	.insn	2, 0x0100
    2370:	0306                	.insn	2, 0x0306
    2372:	0901                	.insn	2, 0x0901
    2374:	001c                	.insn	2, 0x001c
    2376:	0501                	.insn	2, 0x0501
    2378:	0309                	.insn	2, 0x0309
    237a:	091e                	.insn	2, 0x091e
    237c:	0110                	.insn	2, 0x0110
    237e:	0001                	.insn	2, 0x0001
    2380:	0402                	.insn	2, 0x0402
    2382:	0601                	.insn	2, 0x0601
    2384:	20090003          	lb	zero,512(s2)
    2388:	0100                	.insn	2, 0x0100
    238a:	1005                	.insn	2, 0x1005
    238c:	0306                	.insn	2, 0x0306
    238e:	0904                	.insn	2, 0x0904
    2390:	0004                	.insn	2, 0x0004
    2392:	0501                	.insn	2, 0x0501
    2394:	0305                	.insn	2, 0x0305
    2396:	0901                	.insn	2, 0x0901
    2398:	0004                	.insn	2, 0x0004
    239a:	0301                	.insn	2, 0x0301
    239c:	090d                	.insn	2, 0x090d
    239e:	0014                	.insn	2, 0x0014
    23a0:	0501                	.insn	2, 0x0501
    23a2:	0314                	.insn	2, 0x0314
    23a4:	00280903          	lb	s2,2(a6)
    23a8:	0501                	.insn	2, 0x0501
    23aa:	091a030f          	.insn	4, 0x091a030f
    23ae:	0008                	.insn	2, 0x0008
    23b0:	0501                	.insn	2, 0x0501
    23b2:	0320                	.insn	2, 0x0320
    23b4:	0905                	.insn	2, 0x0905
    23b6:	0008                	.insn	2, 0x0008
    23b8:	0501                	.insn	2, 0x0501
    23ba:	0902030f          	.insn	4, 0x0902030f
    23be:	0004                	.insn	2, 0x0004
    23c0:	0501                	.insn	2, 0x0501
    23c2:	09020347          	.insn	4, 0x09020347
    23c6:	0008                	.insn	2, 0x0008
    23c8:	0501                	.insn	2, 0x0501
    23ca:	0900032f          	.insn	4, 0x0900032f
    23ce:	0018                	.insn	2, 0x0018
    23d0:	0501                	.insn	2, 0x0501
    23d2:	09030323          	sb	a6,134(t1) # 904239e <__start-0x76fbdc62>
    23d6:	0008                	.insn	2, 0x0008
    23d8:	0501                	.insn	2, 0x0501
    23da:	0335                	.insn	2, 0x0335
    23dc:	0901                	.insn	2, 0x0901
    23de:	0014                	.insn	2, 0x0014
    23e0:	0501                	.insn	2, 0x0501
    23e2:	030d                	.insn	2, 0x030d
    23e4:	0902                	.insn	2, 0x0902
    23e6:	0014                	.insn	2, 0x0014
    23e8:	0501                	.insn	2, 0x0501
    23ea:	0903032b          	.insn	4, 0x0903032b
    23ee:	0028                	.insn	2, 0x0028
    23f0:	0501                	.insn	2, 0x0501
    23f2:	0900033f 05010018 	.insn	8, 0x050100180900033f
    23fa:	0315                	.insn	2, 0x0315
    23fc:	0901                	.insn	2, 0x0901
    23fe:	0020                	.insn	2, 0x0020
    2400:	0501                	.insn	2, 0x0501
    2402:	032d                	.insn	2, 0x032d
    2404:	00040903          	lb	s2,0(s0)
    2408:	0501                	.insn	2, 0x0501
    240a:	0342                	.insn	2, 0x0342
    240c:	0900                	.insn	2, 0x0900
    240e:	0018                	.insn	2, 0x0018
    2410:	0501                	.insn	2, 0x0501
    2412:	0315                	.insn	2, 0x0315
    2414:	0901                	.insn	2, 0x0901
    2416:	001c                	.insn	2, 0x001c
    2418:	0501                	.insn	2, 0x0501
    241a:	0903033f 05010004 	.insn	8, 0x050100040903033f
    2422:	0315                	.insn	2, 0x0315
    2424:	0901                	.insn	2, 0x0901
    2426:	001c                	.insn	2, 0x001c
    2428:	0501                	.insn	2, 0x0501
    242a:	09040317          	auipc	t1,0x9040
    242e:	0004                	.insn	2, 0x0004
    2430:	0501                	.insn	2, 0x0501
    2432:	09020343          	.insn	4, 0x09020343
    2436:	000c                	.insn	2, 0x000c
    2438:	0501                	.insn	2, 0x0501
    243a:	0315                	.insn	2, 0x0315
    243c:	0908                	.insn	2, 0x0908
    243e:	001c                	.insn	2, 0x001c
    2440:	0501                	.insn	2, 0x0501
    2442:	0321                	.insn	2, 0x0321
    2444:	097d                	.insn	2, 0x097d
    2446:	0004                	.insn	2, 0x0004
    2448:	0501                	.insn	2, 0x0501
    244a:	0315                	.insn	2, 0x0315
    244c:	00040903          	lb	s2,0(s0)
    2450:	0301                	.insn	2, 0x0301
    2452:	090e                	.insn	2, 0x090e
    2454:	0004                	.insn	2, 0x0004
    2456:	0301                	.insn	2, 0x0301
    2458:	0978                	.insn	2, 0x0978
    245a:	0008                	.insn	2, 0x0008
    245c:	0501                	.insn	2, 0x0501
    245e:	090f030f          	.insn	4, 0x090f030f
    2462:	0004                	.insn	2, 0x0004
    2464:	0501                	.insn	2, 0x0501
    2466:	032a                	.insn	2, 0x032a
    2468:	0905                	.insn	2, 0x0905
    246a:	000c                	.insn	2, 0x000c
    246c:	0501                	.insn	2, 0x0501
    246e:	09000313          	addi	t1,zero,144
    2472:	0008                	.insn	2, 0x0008
    2474:	0501                	.insn	2, 0x0501
    2476:	0315                	.insn	2, 0x0315
    2478:	0902                	.insn	2, 0x0902
    247a:	0004                	.insn	2, 0x0004
    247c:	0001                	.insn	2, 0x0001
    247e:	0402                	.insn	2, 0x0402
    2480:	0601                	.insn	2, 0x0601
    2482:	48090003          	lb	zero,1152(s2)
    2486:	0100                	.insn	2, 0x0100
    2488:	0200                	.insn	2, 0x0200
    248a:	0304                	.insn	2, 0x0304
    248c:	10090003          	lb	zero,256(s2)
    2490:	0100                	.insn	2, 0x0100
    2492:	0306                	.insn	2, 0x0306
    2494:	0901                	.insn	2, 0x0901
    2496:	001c                	.insn	2, 0x001c
    2498:	0301                	.insn	2, 0x0301
    249a:	0906                	.insn	2, 0x0906
    249c:	0114                	.insn	2, 0x0114
    249e:	0501                	.insn	2, 0x0501
    24a0:	031e                	.insn	2, 0x031e
    24a2:	0905                	.insn	2, 0x0905
    24a4:	007c                	.insn	2, 0x007c
    24a6:	0501                	.insn	2, 0x0501
    24a8:	0339                	.insn	2, 0x0339
    24aa:	0900                	.insn	2, 0x0900
    24ac:	0008                	.insn	2, 0x0008
    24ae:	0501                	.insn	2, 0x0501
    24b0:	09000317          	auipc	t1,0x9000
    24b4:	000c                	.insn	2, 0x000c
    24b6:	0501                	.insn	2, 0x0501
    24b8:	0904031b          	.insn	4, 0x0904031b
    24bc:	0004                	.insn	2, 0x0004
    24be:	0501                	.insn	2, 0x0501
    24c0:	0338                	.insn	2, 0x0338
    24c2:	0902                	.insn	2, 0x0902
    24c4:	0008                	.insn	2, 0x0008
    24c6:	0501                	.insn	2, 0x0501
    24c8:	032d                	.insn	2, 0x032d
    24ca:	0906                	.insn	2, 0x0906
    24cc:	000c                	.insn	2, 0x000c
    24ce:	0501                	.insn	2, 0x0501
    24d0:	0310                	.insn	2, 0x0310
    24d2:	091e                	.insn	2, 0x091e
    24d4:	000c                	.insn	2, 0x000c
    24d6:	0501                	.insn	2, 0x0501
    24d8:	0305                	.insn	2, 0x0305
    24da:	0901                	.insn	2, 0x0901
    24dc:	0004                	.insn	2, 0x0004
    24de:	0301                	.insn	2, 0x0301
    24e0:	090a                	.insn	2, 0x090a
    24e2:	0014                	.insn	2, 0x0014
    24e4:	0501                	.insn	2, 0x0501
    24e6:	091c030f          	.insn	4, 0x091c030f
    24ea:	001c                	.insn	2, 0x001c
    24ec:	0501                	.insn	2, 0x0501
    24ee:	0320                	.insn	2, 0x0320
    24f0:	0905                	.insn	2, 0x0905
    24f2:	0008                	.insn	2, 0x0008
    24f4:	0501                	.insn	2, 0x0501
    24f6:	09020323          	sb	a6,134(tp) # 86 <__start-0x7fffff7a>
    24fa:	0004                	.insn	2, 0x0004
    24fc:	0501                	.insn	2, 0x0501
    24fe:	0335                	.insn	2, 0x0335
    2500:	0901                	.insn	2, 0x0901
    2502:	0014                	.insn	2, 0x0014
    2504:	0501                	.insn	2, 0x0501
    2506:	0325                	.insn	2, 0x0325
    2508:	0904                	.insn	2, 0x0904
    250a:	0014                	.insn	2, 0x0014
    250c:	0501                	.insn	2, 0x0501
    250e:	033a                	.insn	2, 0x033a
    2510:	0900                	.insn	2, 0x0900
    2512:	0018                	.insn	2, 0x0018
    2514:	0501                	.insn	2, 0x0501
    2516:	0906030f          	.insn	4, 0x0906030f
    251a:	001c                	.insn	2, 0x001c
    251c:	0501                	.insn	2, 0x0501
    251e:	032a                	.insn	2, 0x032a
    2520:	0905                	.insn	2, 0x0905
    2522:	000c                	.insn	2, 0x000c
    2524:	0501                	.insn	2, 0x0501
    2526:	09000313          	addi	t1,zero,144
    252a:	0008                	.insn	2, 0x0008
    252c:	0501                	.insn	2, 0x0501
    252e:	0315                	.insn	2, 0x0315
    2530:	0902                	.insn	2, 0x0902
    2532:	0004                	.insn	2, 0x0004
    2534:	0001                	.insn	2, 0x0001
    2536:	0402                	.insn	2, 0x0402
    2538:	0601                	.insn	2, 0x0601
    253a:	48090003          	lb	zero,1152(s2)
    253e:	0100                	.insn	2, 0x0100
    2540:	0200                	.insn	2, 0x0200
    2542:	0304                	.insn	2, 0x0304
    2544:	10090003          	lb	zero,256(s2)
    2548:	0100                	.insn	2, 0x0100
    254a:	0306                	.insn	2, 0x0306
    254c:	0901                	.insn	2, 0x0901
    254e:	001c                	.insn	2, 0x001c
    2550:	0301                	.insn	2, 0x0301
    2552:	0906                	.insn	2, 0x0906
    2554:	0114                	.insn	2, 0x0114
    2556:	0501                	.insn	2, 0x0501
    2558:	031e                	.insn	2, 0x031e
    255a:	0905                	.insn	2, 0x0905
    255c:	007c                	.insn	2, 0x007c
    255e:	0501                	.insn	2, 0x0501
    2560:	0339                	.insn	2, 0x0339
    2562:	0900                	.insn	2, 0x0900
    2564:	0008                	.insn	2, 0x0008
    2566:	0501                	.insn	2, 0x0501
    2568:	09000317          	auipc	t1,0x9000
    256c:	000c                	.insn	2, 0x000c
    256e:	0501                	.insn	2, 0x0501
    2570:	0904031b          	.insn	4, 0x0904031b
    2574:	0004                	.insn	2, 0x0004
    2576:	0501                	.insn	2, 0x0501
    2578:	0338                	.insn	2, 0x0338
    257a:	0902                	.insn	2, 0x0902
    257c:	0008                	.insn	2, 0x0008
    257e:	0501                	.insn	2, 0x0501
    2580:	032d                	.insn	2, 0x032d
    2582:	0906                	.insn	2, 0x0906
    2584:	000c                	.insn	2, 0x000c
    2586:	0501                	.insn	2, 0x0501
    2588:	0305                	.insn	2, 0x0305
    258a:	091d                	.insn	2, 0x091d
    258c:	000c                	.insn	2, 0x000c
    258e:	0301                	.insn	2, 0x0301
    2590:	0909                	.insn	2, 0x0909
    2592:	0014                	.insn	2, 0x0014
    2594:	0501                	.insn	2, 0x0501
    2596:	0311                	.insn	2, 0x0311
    2598:	090a                	.insn	2, 0x090a
    259a:	0018                	.insn	2, 0x0018
    259c:	0001                	.insn	2, 0x0001
    259e:	0402                	.insn	2, 0x0402
    25a0:	0601                	.insn	2, 0x0601
    25a2:	08090003          	lb	zero,128(s2)
    25a6:	0100                	.insn	2, 0x0100
    25a8:	0200                	.insn	2, 0x0200
    25aa:	0204                	.insn	2, 0x0204
    25ac:	0c090003          	lb	zero,192(s2)
    25b0:	0100                	.insn	2, 0x0100
    25b2:	0f05                	.insn	2, 0x0f05
    25b4:	0200                	.insn	2, 0x0200
    25b6:	0404                	.insn	2, 0x0404
    25b8:	0306                	.insn	2, 0x0306
    25ba:	0900                	.insn	2, 0x0900
    25bc:	0004                	.insn	2, 0x0004
    25be:	0501                	.insn	2, 0x0501
    25c0:	0309                	.insn	2, 0x0309
    25c2:	0902                	.insn	2, 0x0902
    25c4:	0004                	.insn	2, 0x0004
    25c6:	0501                	.insn	2, 0x0501
    25c8:	0325                	.insn	2, 0x0325
    25ca:	0902                	.insn	2, 0x0902
    25cc:	0018                	.insn	2, 0x0018
    25ce:	0501                	.insn	2, 0x0501
    25d0:	0900030f          	.insn	4, 0x0900030f
    25d4:	0014                	.insn	2, 0x0014
    25d6:	0501                	.insn	2, 0x0501
    25d8:	0338                	.insn	2, 0x0338
    25da:	0902                	.insn	2, 0x0902
    25dc:	0008                	.insn	2, 0x0008
    25de:	0501                	.insn	2, 0x0501
    25e0:	0319                	.insn	2, 0x0319
    25e2:	0901                	.insn	2, 0x0901
    25e4:	0010                	.insn	2, 0x0010
    25e6:	0301                	.insn	2, 0x0301
    25e8:	0904                	.insn	2, 0x0904
    25ea:	000c                	.insn	2, 0x000c
    25ec:	0501                	.insn	2, 0x0501
    25ee:	0309                	.insn	2, 0x0309
    25f0:	00040903          	lb	s2,0(s0)
    25f4:	0001                	.insn	2, 0x0001
    25f6:	0402                	.insn	2, 0x0402
    25f8:	0601                	.insn	2, 0x0601
    25fa:	20090003          	lb	zero,512(s2)
    25fe:	0100                	.insn	2, 0x0100
    2600:	1005                	.insn	2, 0x1005
    2602:	0306                	.insn	2, 0x0306
    2604:	0904                	.insn	2, 0x0904
    2606:	0004                	.insn	2, 0x0004
    2608:	0501                	.insn	2, 0x0501
    260a:	0305                	.insn	2, 0x0305
    260c:	0901                	.insn	2, 0x0901
    260e:	0004                	.insn	2, 0x0004
    2610:	0301                	.insn	2, 0x0301
    2612:	090a                	.insn	2, 0x090a
    2614:	0014                	.insn	2, 0x0014
    2616:	0501                	.insn	2, 0x0501
    2618:	0311                	.insn	2, 0x0311
    261a:	090a                	.insn	2, 0x090a
    261c:	001c                	.insn	2, 0x001c
    261e:	0001                	.insn	2, 0x0001
    2620:	0402                	.insn	2, 0x0402
    2622:	0601                	.insn	2, 0x0601
    2624:	08090003          	lb	zero,128(s2)
    2628:	0100                	.insn	2, 0x0100
    262a:	0200                	.insn	2, 0x0200
    262c:	0204                	.insn	2, 0x0204
    262e:	0c090003          	lb	zero,192(s2)
    2632:	0100                	.insn	2, 0x0100
    2634:	0f05                	.insn	2, 0x0f05
    2636:	0200                	.insn	2, 0x0200
    2638:	0404                	.insn	2, 0x0404
    263a:	0306                	.insn	2, 0x0306
    263c:	0900                	.insn	2, 0x0900
    263e:	0004                	.insn	2, 0x0004
    2640:	0501                	.insn	2, 0x0501
    2642:	0309                	.insn	2, 0x0309
    2644:	0902                	.insn	2, 0x0902
    2646:	0004                	.insn	2, 0x0004
    2648:	0501                	.insn	2, 0x0501
    264a:	0316                	.insn	2, 0x0316
    264c:	0904                	.insn	2, 0x0904
    264e:	0018                	.insn	2, 0x0018
    2650:	0501                	.insn	2, 0x0501
    2652:	09010323          	sb	a6,134(sp) # 86 <__start-0x7fffff7a>
    2656:	001c                	.insn	2, 0x001c
    2658:	0501                	.insn	2, 0x0501
    265a:	0339                	.insn	2, 0x0339
    265c:	0900                	.insn	2, 0x0900
    265e:	0018                	.insn	2, 0x0018
    2660:	0501                	.insn	2, 0x0501
    2662:	0336                	.insn	2, 0x0336
    2664:	0900                	.insn	2, 0x0900
    2666:	0008                	.insn	2, 0x0008
    2668:	0501                	.insn	2, 0x0501
    266a:	0309                	.insn	2, 0x0309
    266c:	0902                	.insn	2, 0x0902
    266e:	001c                	.insn	2, 0x001c
    2670:	0001                	.insn	2, 0x0001
    2672:	0402                	.insn	2, 0x0402
    2674:	0601                	.insn	2, 0x0601
    2676:	20090003          	lb	zero,512(s2)
    267a:	0100                	.insn	2, 0x0100
    267c:	1005                	.insn	2, 0x1005
    267e:	0306                	.insn	2, 0x0306
    2680:	0904                	.insn	2, 0x0904
    2682:	0004                	.insn	2, 0x0004
    2684:	0501                	.insn	2, 0x0501
    2686:	0305                	.insn	2, 0x0305
    2688:	0901                	.insn	2, 0x0901
    268a:	0004                	.insn	2, 0x0004
    268c:	0501                	.insn	2, 0x0501
    268e:	0301                	.insn	2, 0x0301
    2690:	00f6                	.insn	2, 0x00f6
    2692:	1409                	.insn	2, 0x1409
    2694:	0100                	.insn	2, 0x0100
    2696:	1605                	.insn	2, 0x1605
    2698:	18090203          	lb	tp,384(s2)
    269c:	0100                	.insn	2, 0x0100
    269e:	1405                	.insn	2, 0x1405
    26a0:	0c090103          	lb	sp,192(s2)
    26a4:	0100                	.insn	2, 0x0100
    26a6:	0c090103          	lb	sp,192(s2)
    26aa:	0100                	.insn	2, 0x0100
    26ac:	2605                	.insn	2, 0x2605
    26ae:	0c090d03          	lb	s10,192(s2)
    26b2:	0100                	.insn	2, 0x0100
    26b4:	0905                	.insn	2, 0x0905
    26b6:	08090003          	lb	zero,128(s2)
    26ba:	0100                	.insn	2, 0x0100
    26bc:	0705                	.insn	2, 0x0705
    26be:	0200                	.insn	2, 0x0200
    26c0:	0104                	.insn	2, 0x0104
    26c2:	10090003          	lb	zero,256(s2)
    26c6:	0100                	.insn	2, 0x0100
    26c8:	0905                	.insn	2, 0x0905
    26ca:	04090403          	lb	s0,64(s2)
    26ce:	0100                	.insn	2, 0x0100
    26d0:	1505                	.insn	2, 0x1505
    26d2:	2c093b03          	.insn	4, 0x2c093b03
    26d6:	0100                	.insn	2, 0x0100
    26d8:	0905                	.insn	2, 0x0905
    26da:	10090303          	lb	t1,256(s2)
    26de:	0100                	.insn	2, 0x0100
    26e0:	0b05                	.insn	2, 0x0b05
    26e2:	10090203          	lb	tp,256(s2)
    26e6:	0100                	.insn	2, 0x0100
    26e8:	4005                	.insn	2, 0x4005
    26ea:	0c090403          	lb	s0,192(s2)
    26ee:	0100                	.insn	2, 0x0100
    26f0:	0d05                	.insn	2, 0x0d05
    26f2:	08090003          	lb	zero,128(s2)
    26f6:	0100                	.insn	2, 0x0100
    26f8:	0105                	.insn	2, 0x0105
    26fa:	10091903          	lh	s2,256(s2)
    26fe:	0100                	.insn	2, 0x0100
    2700:	3805                	.insn	2, 0x3805
    2702:	04096d03          	.insn	4, 0x04096d03
    2706:	0100                	.insn	2, 0x0100
    2708:	0d05                	.insn	2, 0x0d05
    270a:	08090003          	lb	zero,128(s2)
    270e:	0100                	.insn	2, 0x0100
    2710:	1d05                	.insn	2, 0x1d05
    2712:	10090503          	lb	a0,256(s2)
    2716:	0100                	.insn	2, 0x0100
    2718:	0f05                	.insn	2, 0x0f05
    271a:	08090003          	lb	zero,128(s2)
    271e:	0100                	.insn	2, 0x0100
    2720:	2605                	.insn	2, 0x2605
    2722:	08090203          	lb	tp,128(s2)
    2726:	0100                	.insn	2, 0x0100
    2728:	0105                	.insn	2, 0x0105
    272a:	0c090c03          	lb	s8,192(s2)
    272e:	0100                	.insn	2, 0x0100
    2730:	0900f303          	.insn	4, 0x0900f303
    2734:	0014                	.insn	2, 0x0014
    2736:	0501                	.insn	2, 0x0501
    2738:	0316                	.insn	2, 0x0316
    273a:	0906                	.insn	2, 0x0906
    273c:	0010                	.insn	2, 0x0010
    273e:	0501                	.insn	2, 0x0501
    2740:	031c                	.insn	2, 0x031c
    2742:	0911                	.insn	2, 0x0911
    2744:	0008                	.insn	2, 0x0008
    2746:	0501                	.insn	2, 0x0501
    2748:	0310                	.insn	2, 0x0310
    274a:	0901                	.insn	2, 0x0901
    274c:	0008                	.insn	2, 0x0008
    274e:	0501                	.insn	2, 0x0501
    2750:	0318                	.insn	2, 0x0318
    2752:	0901                	.insn	2, 0x0901
    2754:	0008                	.insn	2, 0x0008
    2756:	0501                	.insn	2, 0x0501
    2758:	09010317          	auipc	t1,0x9010
    275c:	0008                	.insn	2, 0x0008
    275e:	0501                	.insn	2, 0x0501
    2760:	0312                	.insn	2, 0x0312
    2762:	0901                	.insn	2, 0x0901
    2764:	0008                	.insn	2, 0x0008
    2766:	0301                	.insn	2, 0x0301
    2768:	0902                	.insn	2, 0x0902
    276a:	0008                	.insn	2, 0x0008
    276c:	0501                	.insn	2, 0x0501
    276e:	0305                	.insn	2, 0x0305
    2770:	0900                	.insn	2, 0x0900
    2772:	0004                	.insn	2, 0x0004
    2774:	0501                	.insn	2, 0x0501
    2776:	09020323          	sb	a6,134(tp) # 86 <__start-0x7fffff7a>
    277a:	0004                	.insn	2, 0x0004
    277c:	0501                	.insn	2, 0x0501
    277e:	0402003f 097e0303 	.insn	8, 0x097e03030402003f
    2786:	0018                	.insn	2, 0x0018
    2788:	0501                	.insn	2, 0x0501
    278a:	001f 0402 0301      	.insn	6, 0x03010402001f
    2790:	0900                	.insn	2, 0x0900
    2792:	000c                	.insn	2, 0x000c
    2794:	0501                	.insn	2, 0x0501
    2796:	0315                	.insn	2, 0x0315
    2798:	0905                	.insn	2, 0x0905
    279a:	0008                	.insn	2, 0x0008
    279c:	0501                	.insn	2, 0x0501
    279e:	0312                	.insn	2, 0x0312
    27a0:	0901                	.insn	2, 0x0901
    27a2:	0008                	.insn	2, 0x0008
    27a4:	0501                	.insn	2, 0x0501
    27a6:	031a                	.insn	2, 0x031a
    27a8:	0901                	.insn	2, 0x0901
    27aa:	0008                	.insn	2, 0x0008
    27ac:	0301                	.insn	2, 0x0301
    27ae:	0902                	.insn	2, 0x0902
    27b0:	0008                	.insn	2, 0x0008
    27b2:	0501                	.insn	2, 0x0501
    27b4:	0301                	.insn	2, 0x0301
    27b6:	0008090b          	.insn	4, 0x0008090b
    27ba:	0901                	.insn	2, 0x0901
    27bc:	0014                	.insn	2, 0x0014
    27be:	0100                	.insn	2, 0x0100
    27c0:	5601                	.insn	2, 0x5601
    27c2:	0001                	.insn	2, 0x0001
    27c4:	0500                	.insn	2, 0x0500
    27c6:	0400                	.insn	2, 0x0400
    27c8:	4100                	.insn	2, 0x4100
    27ca:	0000                	.insn	2, 0x
    27cc:	0100                	.insn	2, 0x0100
    27ce:	0101                	.insn	2, 0x0101
    27d0:	000d0efb          	.insn	4, 0x000d0efb
    27d4:	0101                	.insn	2, 0x0101
    27d6:	0101                	.insn	2, 0x0101
    27d8:	0000                	.insn	2, 0x
    27da:	0100                	.insn	2, 0x0100
    27dc:	0000                	.insn	2, 0x
    27de:	0101                	.insn	2, 0x0101
    27e0:	1f01                	.insn	2, 0x1f01
    27e2:	00000003          	lb	zero,0(zero) # 0 <__start-0x80000000>
    27e6:	9f00                	.insn	2, 0x9f00
    27e8:	0000                	.insn	2, 0x
    27ea:	6300                	.insn	2, 0x6300
    27ec:	0000                	.insn	2, 0x
    27ee:	0200                	.insn	2, 0x0200
    27f0:	1f01                	.insn	2, 0x1f01
    27f2:	0f02                	.insn	2, 0x0f02
    27f4:	df05                	.insn	2, 0xdf05
    27f6:	0001                	.insn	2, 0x0001
    27f8:	0100                	.insn	2, 0x0100
    27fa:	01df 0000 5601      	.insn	6, 0x5601000001df
    2800:	0001                	.insn	2, 0x0001
    2802:	0200                	.insn	2, 0x0200
    2804:	000000db          	.insn	4, 0x00db
    2808:	e802                	.insn	2, 0xe802
    280a:	0000                	.insn	2, 0x
    280c:	0100                	.insn	2, 0x0100
    280e:	0505                	.insn	2, 0x0505
    2810:	0500                	.insn	2, 0x0500
    2812:	e002                	.insn	2, 0xe002
    2814:	03800047          	.insn	4, 0x03800047
    2818:	0182                	.insn	2, 0x0182
    281a:	0501                	.insn	2, 0x0501
    281c:	09020323          	sb	a6,134(tp) # 86 <__start-0x7fffff7a>
    2820:	0010                	.insn	2, 0x0010
    2822:	0301                	.insn	2, 0x0301
    2824:	0901                	.insn	2, 0x0901
    2826:	000c                	.insn	2, 0x000c
    2828:	0501                	.insn	2, 0x0501
    282a:	0309                	.insn	2, 0x0309
    282c:	000c0903          	lb	s2,0(s8)
    2830:	0501                	.insn	2, 0x0501
    2832:	0375                	.insn	2, 0x0375
    2834:	0902                	.insn	2, 0x0902
    2836:	0008                	.insn	2, 0x0008
    2838:	0501                	.insn	2, 0x0501
    283a:	0368                	.insn	2, 0x0368
    283c:	0900                	.insn	2, 0x0900
    283e:	0008                	.insn	2, 0x0008
    2840:	0501                	.insn	2, 0x0501
    2842:	0900032b          	.insn	4, 0x0900032b
    2846:	000c                	.insn	2, 0x000c
    2848:	0501                	.insn	2, 0x0501
    284a:	0329                	.insn	2, 0x0329
    284c:	0900                	.insn	2, 0x0900
    284e:	0004                	.insn	2, 0x0004
    2850:	0501                	.insn	2, 0x0501
    2852:	031f 0904 0008      	.insn	6, 0x00080904031f
    2858:	0501                	.insn	2, 0x0501
    285a:	031e                	.insn	2, 0x031e
    285c:	0901                	.insn	2, 0x0901
    285e:	000c                	.insn	2, 0x000c
    2860:	0501                	.insn	2, 0x0501
    2862:	04020027          	.insn	4, 0x04020027
    2866:	0301                	.insn	2, 0x0301
    2868:	0901                	.insn	2, 0x0901
    286a:	000c                	.insn	2, 0x000c
    286c:	0501                	.insn	2, 0x0501
    286e:	0024                	.insn	2, 0x0024
    2870:	0402                	.insn	2, 0x0402
    2872:	0301                	.insn	2, 0x0301
    2874:	0900                	.insn	2, 0x0900
    2876:	0008                	.insn	2, 0x0008
    2878:	0501                	.insn	2, 0x0501
    287a:	09020317          	auipc	t1,0x9020
    287e:	0008                	.insn	2, 0x0008
    2880:	0501                	.insn	2, 0x0501
    2882:	0315                	.insn	2, 0x0315
    2884:	0900                	.insn	2, 0x0900
    2886:	000c                	.insn	2, 0x000c
    2888:	0301                	.insn	2, 0x0301
    288a:	0901                	.insn	2, 0x0901
    288c:	000c                	.insn	2, 0x000c
    288e:	0501                	.insn	2, 0x0501
    2890:	0318                	.insn	2, 0x0318
    2892:	0901                	.insn	2, 0x0901
    2894:	0020                	.insn	2, 0x0020
    2896:	0501                	.insn	2, 0x0501
    2898:	0315                	.insn	2, 0x0315
    289a:	0900                	.insn	2, 0x0900
    289c:	000c                	.insn	2, 0x000c
    289e:	0501                	.insn	2, 0x0501
    28a0:	0318                	.insn	2, 0x0318
    28a2:	0901                	.insn	2, 0x0901
    28a4:	0020                	.insn	2, 0x0020
    28a6:	0501                	.insn	2, 0x0501
    28a8:	0315                	.insn	2, 0x0315
    28aa:	0900                	.insn	2, 0x0900
    28ac:	0010                	.insn	2, 0x0010
    28ae:	0501                	.insn	2, 0x0501
    28b0:	0309                	.insn	2, 0x0309
    28b2:	0901                	.insn	2, 0x0901
    28b4:	0030                	.insn	2, 0x0030
    28b6:	0501                	.insn	2, 0x0501
    28b8:	032a                	.insn	2, 0x032a
    28ba:	0900                	.insn	2, 0x0900
    28bc:	0008                	.insn	2, 0x0008
    28be:	0501                	.insn	2, 0x0501
    28c0:	0318                	.insn	2, 0x0318
    28c2:	00140903          	lb	s2,1(s0)
    28c6:	0501                	.insn	2, 0x0501
    28c8:	0315                	.insn	2, 0x0315
    28ca:	0900                	.insn	2, 0x0900
    28cc:	0010                	.insn	2, 0x0010
    28ce:	0501                	.insn	2, 0x0501
    28d0:	0305                	.insn	2, 0x0305
    28d2:	0901                	.insn	2, 0x0901
    28d4:	0030                	.insn	2, 0x0030
    28d6:	0501                	.insn	2, 0x0501
    28d8:	0301                	.insn	2, 0x0301
    28da:	0906                	.insn	2, 0x0906
    28dc:	0014                	.insn	2, 0x0014
    28de:	0501                	.insn	2, 0x0501
    28e0:	0305                	.insn	2, 0x0305
    28e2:	0915                	.insn	2, 0x0915
    28e4:	0010                	.insn	2, 0x0010
    28e6:	0501                	.insn	2, 0x0501
    28e8:	0309                	.insn	2, 0x0309
    28ea:	00040907          	.insn	4, 0x00040907
    28ee:	0501                	.insn	2, 0x0501
    28f0:	0305                	.insn	2, 0x0305
    28f2:	0904                	.insn	2, 0x0904
    28f4:	000c                	.insn	2, 0x000c
    28f6:	0501                	.insn	2, 0x0501
    28f8:	030c                	.insn	2, 0x030c
    28fa:	0904                	.insn	2, 0x0904
    28fc:	0004                	.insn	2, 0x0004
    28fe:	0501                	.insn	2, 0x0501
    2900:	0301                	.insn	2, 0x0301
    2902:	0901                	.insn	2, 0x0901
    2904:	0004                	.insn	2, 0x0004
    2906:	0301                	.insn	2, 0x0301
    2908:	0904                	.insn	2, 0x0904
    290a:	0014                	.insn	2, 0x0014
    290c:	0501                	.insn	2, 0x0501
    290e:	0305                	.insn	2, 0x0305
    2910:	0902                	.insn	2, 0x0902
    2912:	0010                	.insn	2, 0x0010
    2914:	0901                	.insn	2, 0x0901
    2916:	0008                	.insn	2, 0x0008
    2918:	0100                	.insn	2, 0x0100
    291a:	2a01                	.insn	2, 0x2a01
    291c:	02000003          	lb	zero,32(zero) # 20 <__start-0x7fffffe0>
    2920:	4100                	.insn	2, 0x4100
    2922:	0000                	.insn	2, 0x
    2924:	0100                	.insn	2, 0x0100
    2926:	fb01                	.insn	2, 0xfb01
    2928:	0a0e                	.insn	2, 0x0a0e
    292a:	0100                	.insn	2, 0x0100
    292c:	0101                	.insn	2, 0x0101
    292e:	0001                	.insn	2, 0x0001
    2930:	0000                	.insn	2, 0x
    2932:	4601                	.insn	2, 0x4601
    2934:	6572                	.insn	2, 0x6572
    2936:	5265                	.insn	2, 0x5265
    2938:	4f54                	.insn	2, 0x4f54
    293a:	654b2d53          	.insn	4, 0x654b2d53
    293e:	6e72                	.insn	2, 0x6e72
    2940:	6c65                	.insn	2, 0x6c65
    2942:	726f702f          	.insn	4, 0x726f702f
    2946:	6174                	.insn	2, 0x6174
    2948:	6c62                	.insn	2, 0x6c62
    294a:	2f65                	.insn	2, 0x2f65
    294c:	2f434347          	.insn	4, 0x2f434347
    2950:	4952                	.insn	2, 0x4952
    2952:	562d4353          	.insn	4, 0x562d4353
    2956:	0000                	.insn	2, 0x
    2958:	6f70                	.insn	2, 0x6f70
    295a:	7472                	.insn	2, 0x7472
    295c:	5341                	.insn	2, 0x5341
    295e:	2e4d                	.insn	2, 0x2e4d
    2960:	00010053          	.insn	4, 0x00010053
    2964:	0000                	.insn	2, 0x
    2966:	0500                	.insn	2, 0x0500
    2968:	c002                	.insn	2, 0xc002
    296a:	0049                	.insn	2, 0x0049
    296c:	0380                	.insn	2, 0x0380
    296e:	01c6                	.insn	2, 0x01c6
    2970:	0301                	.insn	2, 0x0301
    2972:	0901                	.insn	2, 0x0901
    2974:	0004                	.insn	2, 0x0004
    2976:	0301                	.insn	2, 0x0301
    2978:	0901                	.insn	2, 0x0901
    297a:	0004                	.insn	2, 0x0004
    297c:	0301                	.insn	2, 0x0301
    297e:	0901                	.insn	2, 0x0901
    2980:	0004                	.insn	2, 0x0004
    2982:	0301                	.insn	2, 0x0301
    2984:	0901                	.insn	2, 0x0901
    2986:	0004                	.insn	2, 0x0004
    2988:	0301                	.insn	2, 0x0301
    298a:	0902                	.insn	2, 0x0902
    298c:	0004                	.insn	2, 0x0004
    298e:	0301                	.insn	2, 0x0301
    2990:	0901                	.insn	2, 0x0901
    2992:	0004                	.insn	2, 0x0004
    2994:	0301                	.insn	2, 0x0301
    2996:	0901                	.insn	2, 0x0901
    2998:	0004                	.insn	2, 0x0004
    299a:	0301                	.insn	2, 0x0301
    299c:	0901                	.insn	2, 0x0901
    299e:	0004                	.insn	2, 0x0004
    29a0:	0301                	.insn	2, 0x0301
    29a2:	0905                	.insn	2, 0x0905
    29a4:	0004                	.insn	2, 0x0004
    29a6:	0301                	.insn	2, 0x0301
    29a8:	0902                	.insn	2, 0x0902
    29aa:	0004                	.insn	2, 0x0004
    29ac:	0301                	.insn	2, 0x0301
    29ae:	0901                	.insn	2, 0x0901
    29b0:	0004                	.insn	2, 0x0004
    29b2:	0301                	.insn	2, 0x0301
    29b4:	0901                	.insn	2, 0x0901
    29b6:	0004                	.insn	2, 0x0004
    29b8:	0301                	.insn	2, 0x0301
    29ba:	0901                	.insn	2, 0x0901
    29bc:	0008                	.insn	2, 0x0008
    29be:	0301                	.insn	2, 0x0301
    29c0:	0901                	.insn	2, 0x0901
    29c2:	0004                	.insn	2, 0x0004
    29c4:	0301                	.insn	2, 0x0301
    29c6:	0902                	.insn	2, 0x0902
    29c8:	0004                	.insn	2, 0x0004
    29ca:	0301                	.insn	2, 0x0301
    29cc:	0901                	.insn	2, 0x0901
    29ce:	0004                	.insn	2, 0x0004
    29d0:	0301                	.insn	2, 0x0301
    29d2:	0901                	.insn	2, 0x0901
    29d4:	0004                	.insn	2, 0x0004
    29d6:	0301                	.insn	2, 0x0301
    29d8:	0901                	.insn	2, 0x0901
    29da:	0004                	.insn	2, 0x0004
    29dc:	0301                	.insn	2, 0x0301
    29de:	0901                	.insn	2, 0x0901
    29e0:	0004                	.insn	2, 0x0004
    29e2:	0301                	.insn	2, 0x0301
    29e4:	0902                	.insn	2, 0x0902
    29e6:	0004                	.insn	2, 0x0004
    29e8:	0301                	.insn	2, 0x0301
    29ea:	0901                	.insn	2, 0x0901
    29ec:	0004                	.insn	2, 0x0004
    29ee:	0301                	.insn	2, 0x0301
    29f0:	0901                	.insn	2, 0x0901
    29f2:	0004                	.insn	2, 0x0004
    29f4:	0301                	.insn	2, 0x0301
    29f6:	0904                	.insn	2, 0x0904
    29f8:	0004                	.insn	2, 0x0004
    29fa:	0301                	.insn	2, 0x0301
    29fc:	0901                	.insn	2, 0x0901
    29fe:	0008                	.insn	2, 0x0008
    2a00:	0301                	.insn	2, 0x0301
    2a02:	0902                	.insn	2, 0x0902
    2a04:	0004                	.insn	2, 0x0004
    2a06:	0301                	.insn	2, 0x0301
    2a08:	0904                	.insn	2, 0x0904
    2a0a:	0004                	.insn	2, 0x0004
    2a0c:	0301                	.insn	2, 0x0301
    2a0e:	0901                	.insn	2, 0x0901
    2a10:	0004                	.insn	2, 0x0004
    2a12:	0301                	.insn	2, 0x0301
    2a14:	0901                	.insn	2, 0x0901
    2a16:	0004                	.insn	2, 0x0004
    2a18:	0301                	.insn	2, 0x0301
    2a1a:	0901                	.insn	2, 0x0901
    2a1c:	0004                	.insn	2, 0x0004
    2a1e:	0301                	.insn	2, 0x0301
    2a20:	0901                	.insn	2, 0x0901
    2a22:	0004                	.insn	2, 0x0004
    2a24:	0301                	.insn	2, 0x0301
    2a26:	0901                	.insn	2, 0x0901
    2a28:	0004                	.insn	2, 0x0004
    2a2a:	0301                	.insn	2, 0x0301
    2a2c:	0901                	.insn	2, 0x0901
    2a2e:	0004                	.insn	2, 0x0004
    2a30:	0301                	.insn	2, 0x0301
    2a32:	0901                	.insn	2, 0x0901
    2a34:	0004                	.insn	2, 0x0004
    2a36:	0301                	.insn	2, 0x0301
    2a38:	0901                	.insn	2, 0x0901
    2a3a:	0004                	.insn	2, 0x0004
    2a3c:	0301                	.insn	2, 0x0301
    2a3e:	0902                	.insn	2, 0x0902
    2a40:	0004                	.insn	2, 0x0004
    2a42:	0301                	.insn	2, 0x0301
    2a44:	0901                	.insn	2, 0x0901
    2a46:	0004                	.insn	2, 0x0004
    2a48:	0301                	.insn	2, 0x0301
    2a4a:	0901                	.insn	2, 0x0901
    2a4c:	0004                	.insn	2, 0x0004
    2a4e:	0301                	.insn	2, 0x0301
    2a50:	0901                	.insn	2, 0x0901
    2a52:	0004                	.insn	2, 0x0004
    2a54:	0301                	.insn	2, 0x0301
    2a56:	0901                	.insn	2, 0x0901
    2a58:	0004                	.insn	2, 0x0004
    2a5a:	0301                	.insn	2, 0x0301
    2a5c:	0901                	.insn	2, 0x0901
    2a5e:	0004                	.insn	2, 0x0004
    2a60:	0301                	.insn	2, 0x0301
    2a62:	0901                	.insn	2, 0x0901
    2a64:	0004                	.insn	2, 0x0004
    2a66:	0301                	.insn	2, 0x0301
    2a68:	0901                	.insn	2, 0x0901
    2a6a:	0004                	.insn	2, 0x0004
    2a6c:	0301                	.insn	2, 0x0301
    2a6e:	0901                	.insn	2, 0x0901
    2a70:	0004                	.insn	2, 0x0004
    2a72:	0301                	.insn	2, 0x0301
    2a74:	0901                	.insn	2, 0x0901
    2a76:	0004                	.insn	2, 0x0004
    2a78:	0301                	.insn	2, 0x0301
    2a7a:	0901                	.insn	2, 0x0901
    2a7c:	0004                	.insn	2, 0x0004
    2a7e:	0301                	.insn	2, 0x0301
    2a80:	0901                	.insn	2, 0x0901
    2a82:	0004                	.insn	2, 0x0004
    2a84:	0301                	.insn	2, 0x0301
    2a86:	0901                	.insn	2, 0x0901
    2a88:	0004                	.insn	2, 0x0004
    2a8a:	0301                	.insn	2, 0x0301
    2a8c:	0901                	.insn	2, 0x0901
    2a8e:	0004                	.insn	2, 0x0004
    2a90:	0301                	.insn	2, 0x0301
    2a92:	0901                	.insn	2, 0x0901
    2a94:	0004                	.insn	2, 0x0004
    2a96:	0301                	.insn	2, 0x0301
    2a98:	0901                	.insn	2, 0x0901
    2a9a:	0004                	.insn	2, 0x0004
    2a9c:	0301                	.insn	2, 0x0301
    2a9e:	00040903          	lb	s2,0(s0)
    2aa2:	0301                	.insn	2, 0x0301
    2aa4:	0901                	.insn	2, 0x0901
    2aa6:	0004                	.insn	2, 0x0004
    2aa8:	0301                	.insn	2, 0x0301
    2aaa:	0901                	.insn	2, 0x0901
    2aac:	0008                	.insn	2, 0x0008
    2aae:	0301                	.insn	2, 0x0301
    2ab0:	0902                	.insn	2, 0x0902
    2ab2:	0004                	.insn	2, 0x0004
    2ab4:	0301                	.insn	2, 0x0301
    2ab6:	0901                	.insn	2, 0x0901
    2ab8:	0004                	.insn	2, 0x0004
    2aba:	0301                	.insn	2, 0x0301
    2abc:	0901                	.insn	2, 0x0901
    2abe:	0004                	.insn	2, 0x0004
    2ac0:	0301                	.insn	2, 0x0301
    2ac2:	0902                	.insn	2, 0x0902
    2ac4:	0004                	.insn	2, 0x0004
    2ac6:	0301                	.insn	2, 0x0301
    2ac8:	0901                	.insn	2, 0x0901
    2aca:	0004                	.insn	2, 0x0004
    2acc:	0301                	.insn	2, 0x0301
    2ace:	0902                	.insn	2, 0x0902
    2ad0:	0004                	.insn	2, 0x0004
    2ad2:	0301                	.insn	2, 0x0301
    2ad4:	0901                	.insn	2, 0x0901
    2ad6:	0004                	.insn	2, 0x0004
    2ad8:	0301                	.insn	2, 0x0301
    2ada:	0904                	.insn	2, 0x0904
    2adc:	0004                	.insn	2, 0x0004
    2ade:	0301                	.insn	2, 0x0301
    2ae0:	0901                	.insn	2, 0x0901
    2ae2:	0004                	.insn	2, 0x0004
    2ae4:	0301                	.insn	2, 0x0301
    2ae6:	0901                	.insn	2, 0x0901
    2ae8:	0004                	.insn	2, 0x0004
    2aea:	0301                	.insn	2, 0x0301
    2aec:	0901                	.insn	2, 0x0901
    2aee:	0004                	.insn	2, 0x0004
    2af0:	0301                	.insn	2, 0x0301
    2af2:	0904                	.insn	2, 0x0904
    2af4:	0004                	.insn	2, 0x0004
    2af6:	0301                	.insn	2, 0x0301
    2af8:	0901                	.insn	2, 0x0901
    2afa:	0004                	.insn	2, 0x0004
    2afc:	0301                	.insn	2, 0x0301
    2afe:	0901                	.insn	2, 0x0901
    2b00:	0004                	.insn	2, 0x0004
    2b02:	0301                	.insn	2, 0x0301
    2b04:	0901                	.insn	2, 0x0901
    2b06:	0004                	.insn	2, 0x0004
    2b08:	0901                	.insn	2, 0x0901
    2b0a:	0004                	.insn	2, 0x0004
    2b0c:	0100                	.insn	2, 0x0100
    2b0e:	0001                	.insn	2, 0x0001
    2b10:	0205                	.insn	2, 0x0205
    2b12:	4ae0                	.insn	2, 0x4ae0
    2b14:	8000                	.insn	2, 0x8000
    2b16:	0102aa03          	lw	s4,16(t0)
    2b1a:	ac090203          	lb	tp,-1344(s2)
    2b1e:	0100                	.insn	2, 0x0100
    2b20:	04090103          	lb	sp,64(s2)
    2b24:	0100                	.insn	2, 0x0100
    2b26:	04090103          	lb	sp,64(s2)
    2b2a:	0100                	.insn	2, 0x0100
    2b2c:	04090103          	lb	sp,64(s2)
    2b30:	0100                	.insn	2, 0x0100
    2b32:	a4090303          	lb	t1,-1472(s2)
    2b36:	0100                	.insn	2, 0x0100
    2b38:	04090103          	lb	sp,64(s2)
    2b3c:	0100                	.insn	2, 0x0100
    2b3e:	a409                	.insn	2, 0xa409
    2b40:	0000                	.insn	2, 0x
    2b42:	0101                	.insn	2, 0x0101
    2b44:	0500                	.insn	2, 0x0500
    2b46:	e402                	.insn	2, 0xe402
    2b48:	004c                	.insn	2, 0x004c
    2b4a:	0380                	.insn	2, 0x0380
    2b4c:	02b8                	.insn	2, 0x02b8
    2b4e:	0301                	.insn	2, 0x0301
    2b50:	0901                	.insn	2, 0x0901
    2b52:	00a8                	.insn	2, 0x00a8
    2b54:	0301                	.insn	2, 0x0301
    2b56:	0901                	.insn	2, 0x0901
    2b58:	0004                	.insn	2, 0x0004
    2b5a:	0901                	.insn	2, 0x0901
    2b5c:	00a4                	.insn	2, 0x00a4
    2b5e:	0100                	.insn	2, 0x0100
    2b60:	0001                	.insn	2, 0x0001
    2b62:	0205                	.insn	2, 0x0205
    2b64:	4e34                	.insn	2, 0x4e34
    2b66:	8000                	.insn	2, 0x8000
    2b68:	0102bf03          	.insn	4, 0x0102bf03
    2b6c:	a8090103          	lb	sp,-1408(s2)
    2b70:	0100                	.insn	2, 0x0100
    2b72:	44090103          	lb	sp,1088(s2)
    2b76:	0100                	.insn	2, 0x0100
    2b78:	04090103          	lb	sp,64(s2)
    2b7c:	0100                	.insn	2, 0x0100
    2b7e:	04090103          	lb	sp,64(s2)
    2b82:	0100                	.insn	2, 0x0100
    2b84:	04090203          	lb	tp,64(s2)
    2b88:	0100                	.insn	2, 0x0100
    2b8a:	a409                	.insn	2, 0xa409
    2b8c:	0000                	.insn	2, 0x
    2b8e:	0101                	.insn	2, 0x0101
    2b90:	0500                	.insn	2, 0x0500
    2b92:	0002                	.insn	2, 0x0002
    2b94:	0050                	.insn	2, 0x0050
    2b96:	0380                	.insn	2, 0x0380
    2b98:	030102cb          	.insn	4, 0x030102cb
    2b9c:	0902                	.insn	2, 0x0902
    2b9e:	0094                	.insn	2, 0x0094
    2ba0:	0301                	.insn	2, 0x0301
    2ba2:	0901                	.insn	2, 0x0901
    2ba4:	0004                	.insn	2, 0x0004
    2ba6:	0301                	.insn	2, 0x0301
    2ba8:	0902                	.insn	2, 0x0902
    2baa:	0004                	.insn	2, 0x0004
    2bac:	0301                	.insn	2, 0x0301
    2bae:	00040903          	lb	s2,0(s0)
    2bb2:	0301                	.insn	2, 0x0301
    2bb4:	0901                	.insn	2, 0x0901
    2bb6:	0004                	.insn	2, 0x0004
    2bb8:	0301                	.insn	2, 0x0301
    2bba:	0901                	.insn	2, 0x0901
    2bbc:	0008                	.insn	2, 0x0008
    2bbe:	0301                	.insn	2, 0x0301
    2bc0:	00040903          	lb	s2,0(s0)
    2bc4:	0301                	.insn	2, 0x0301
    2bc6:	0901                	.insn	2, 0x0901
    2bc8:	0004                	.insn	2, 0x0004
    2bca:	0301                	.insn	2, 0x0301
    2bcc:	0901                	.insn	2, 0x0901
    2bce:	0004                	.insn	2, 0x0004
    2bd0:	0301                	.insn	2, 0x0301
    2bd2:	0901                	.insn	2, 0x0901
    2bd4:	0008                	.insn	2, 0x0008
    2bd6:	0301                	.insn	2, 0x0301
    2bd8:	0906                	.insn	2, 0x0906
    2bda:	0004                	.insn	2, 0x0004
    2bdc:	0301                	.insn	2, 0x0301
    2bde:	0901                	.insn	2, 0x0901
    2be0:	0004                	.insn	2, 0x0004
    2be2:	0301                	.insn	2, 0x0301
    2be4:	0901                	.insn	2, 0x0901
    2be6:	0004                	.insn	2, 0x0004
    2be8:	0301                	.insn	2, 0x0301
    2bea:	0901                	.insn	2, 0x0901
    2bec:	0004                	.insn	2, 0x0004
    2bee:	0301                	.insn	2, 0x0301
    2bf0:	0902                	.insn	2, 0x0902
    2bf2:	0004                	.insn	2, 0x0004
    2bf4:	0301                	.insn	2, 0x0301
    2bf6:	0901                	.insn	2, 0x0901
    2bf8:	0044                	.insn	2, 0x0044
    2bfa:	0301                	.insn	2, 0x0301
    2bfc:	0901                	.insn	2, 0x0901
    2bfe:	0004                	.insn	2, 0x0004
    2c00:	0301                	.insn	2, 0x0301
    2c02:	0901                	.insn	2, 0x0901
    2c04:	0004                	.insn	2, 0x0004
    2c06:	0301                	.insn	2, 0x0301
    2c08:	0901                	.insn	2, 0x0901
    2c0a:	0004                	.insn	2, 0x0004
    2c0c:	0301                	.insn	2, 0x0301
    2c0e:	0905                	.insn	2, 0x0905
    2c10:	0004                	.insn	2, 0x0004
    2c12:	0301                	.insn	2, 0x0301
    2c14:	0901                	.insn	2, 0x0901
    2c16:	0004                	.insn	2, 0x0004
    2c18:	0301                	.insn	2, 0x0301
    2c1a:	0904                	.insn	2, 0x0904
    2c1c:	0004                	.insn	2, 0x0004
    2c1e:	0301                	.insn	2, 0x0301
    2c20:	0901                	.insn	2, 0x0901
    2c22:	0004                	.insn	2, 0x0004
    2c24:	0301                	.insn	2, 0x0301
    2c26:	0901                	.insn	2, 0x0901
    2c28:	0004                	.insn	2, 0x0004
    2c2a:	0301                	.insn	2, 0x0301
    2c2c:	0901                	.insn	2, 0x0901
    2c2e:	0004                	.insn	2, 0x0004
    2c30:	0301                	.insn	2, 0x0301
    2c32:	00040903          	lb	s2,0(s0)
    2c36:	0301                	.insn	2, 0x0301
    2c38:	0901                	.insn	2, 0x0901
    2c3a:	0004                	.insn	2, 0x0004
    2c3c:	0301                	.insn	2, 0x0301
    2c3e:	00040903          	lb	s2,0(s0)
    2c42:	0901                	.insn	2, 0x0901
    2c44:	00a4                	.insn	2, 0x00a4
    2c46:	0100                	.insn	2, 0x0100
    2c48:	e301                	.insn	2, 0xe301
    2c4a:	0006                	.insn	2, 0x0006
    2c4c:	0500                	.insn	2, 0x0500
    2c4e:	0400                	.insn	2, 0x0400
    2c50:	6a00                	.insn	2, 0x6a00
    2c52:	0000                	.insn	2, 0x
    2c54:	0100                	.insn	2, 0x0100
    2c56:	0101                	.insn	2, 0x0101
    2c58:	000d0efb          	.insn	4, 0x000d0efb
    2c5c:	0101                	.insn	2, 0x0101
    2c5e:	0101                	.insn	2, 0x0101
    2c60:	0000                	.insn	2, 0x
    2c62:	0100                	.insn	2, 0x0100
    2c64:	0000                	.insn	2, 0x
    2c66:	0101                	.insn	2, 0x0101
    2c68:	1f01                	.insn	2, 0x1f01
    2c6a:	00000007          	.insn	4, 0x0007
    2c6e:	1000                	.insn	2, 0x1000
    2c70:	0002                	.insn	2, 0x0002
    2c72:	6300                	.insn	2, 0x6300
    2c74:	0000                	.insn	2, 0x
    2c76:	1300                	.insn	2, 0x1300
    2c78:	0001                	.insn	2, 0x0001
    2c7a:	9f00                	.insn	2, 0x9f00
    2c7c:	0000                	.insn	2, 0x
    2c7e:	c300                	.insn	2, 0xc300
    2c80:	0000                	.insn	2, 0x
    2c82:	3700                	.insn	2, 0x3700
    2c84:	0001                	.insn	2, 0x0001
    2c86:	0200                	.insn	2, 0x0200
    2c88:	1f01                	.insn	2, 0x1f01
    2c8a:	0f02                	.insn	2, 0x0f02
    2c8c:	070a                	.insn	2, 0x070a
    2c8e:	0002                	.insn	2, 0x0002
    2c90:	0100                	.insn	2, 0x0100
    2c92:	00000207          	.insn	4, 0x0207
    2c96:	5601                	.insn	2, 0x5601
    2c98:	0001                	.insn	2, 0x0001
    2c9a:	0200                	.insn	2, 0x0200
    2c9c:	015f 0000 6703      	.insn	6, 0x67030000015f
    2ca2:	0001                	.insn	2, 0x0001
    2ca4:	0300                	.insn	2, 0x0300
    2ca6:	000000db          	.insn	4, 0x00db
    2caa:	e802                	.insn	2, 0xe802
    2cac:	0000                	.insn	2, 0x
    2cae:	0400                	.insn	2, 0x0400
    2cb0:	0184                	.insn	2, 0x0184
    2cb2:	0000                	.insn	2, 0x
    2cb4:	8f05                	.insn	2, 0x8f05
    2cb6:	0001                	.insn	2, 0x0001
    2cb8:	0600                	.insn	2, 0x0600
    2cba:	0175                	.insn	2, 0x0175
    2cbc:	0000                	.insn	2, 0x
    2cbe:	0505                	.insn	2, 0x0505
    2cc0:	0001                	.insn	2, 0x0001
    2cc2:	0205                	.insn	2, 0x0205
    2cc4:	51f0                	.insn	2, 0x51f0
    2cc6:	8000                	.insn	2, 0x8000
    2cc8:	0101ad03          	lw	s10,16(gp)
    2ccc:	0c05                	.insn	2, 0x0c05
    2cce:	14090403          	lb	s0,320(s2)
    2cd2:	0100                	.insn	2, 0x0100
    2cd4:	0705                	.insn	2, 0x0705
    2cd6:	04090303          	lb	t1,64(s2)
    2cda:	0100                	.insn	2, 0x0100
    2cdc:	0d05                	.insn	2, 0x0d05
    2cde:	08090403          	lb	s0,128(s2)
    2ce2:	0100                	.insn	2, 0x0100
    2ce4:	0b05                	.insn	2, 0x0b05
    2ce6:	08090003          	lb	zero,128(s2)
    2cea:	0100                	.insn	2, 0x0100
    2cec:	1905                	.insn	2, 0x1905
    2cee:	08090203          	lb	tp,128(s2)
    2cf2:	0100                	.insn	2, 0x0100
    2cf4:	1f05                	.insn	2, 0x1f05
    2cf6:	10090403          	lb	s0,256(s2)
    2cfa:	0100                	.insn	2, 0x0100
    2cfc:	0f05                	.insn	2, 0x0f05
    2cfe:	08090003          	lb	zero,128(s2)
    2d02:	0100                	.insn	2, 0x0100
    2d04:	4e05                	.insn	2, 0x4e05
    2d06:	04090303          	lb	t1,64(s2)
    2d0a:	0100                	.insn	2, 0x0100
    2d0c:	2905                	.insn	2, 0x2905
    2d0e:	08090003          	lb	zero,128(s2)
    2d12:	0100                	.insn	2, 0x0100
    2d14:	1505                	.insn	2, 0x1505
    2d16:	0c090203          	lb	tp,192(s2)
    2d1a:	0100                	.insn	2, 0x0100
    2d1c:	1305                	.insn	2, 0x1305
    2d1e:	08090003          	lb	zero,128(s2)
    2d22:	0100                	.insn	2, 0x0100
    2d24:	2105                	.insn	2, 0x2105
    2d26:	08090203          	lb	tp,128(s2)
    2d2a:	0100                	.insn	2, 0x0100
    2d2c:	14090403          	lb	s0,320(s2)
    2d30:	0100                	.insn	2, 0x0100
    2d32:	1905                	.insn	2, 0x1905
    2d34:	08090a03          	lb	s4,128(s2)
    2d38:	0100                	.insn	2, 0x0100
    2d3a:	0505                	.insn	2, 0x0505
    2d3c:	04090803          	lb	a6,64(s2)
    2d40:	0100                	.insn	2, 0x0100
    2d42:	1305                	.insn	2, 0x1305
    2d44:	04090403          	lb	s0,64(s2)
    2d48:	0100                	.insn	2, 0x0100
    2d4a:	0b05                	.insn	2, 0x0b05
    2d4c:	08090003          	lb	zero,128(s2)
    2d50:	0100                	.insn	2, 0x0100
    2d52:	0d05                	.insn	2, 0x0d05
    2d54:	04090203          	lb	tp,64(s2)
    2d58:	0100                	.insn	2, 0x0100
    2d5a:	04090b03          	lb	s6,64(s2)
    2d5e:	0100                	.insn	2, 0x0100
    2d60:	0b05                	.insn	2, 0x0b05
    2d62:	04090003          	lb	zero,64(s2)
    2d66:	0100                	.insn	2, 0x0100
    2d68:	0f05                	.insn	2, 0x0f05
    2d6a:	04090203          	lb	tp,64(s2)
    2d6e:	0100                	.insn	2, 0x0100
    2d70:	3605                	.insn	2, 0x3605
    2d72:	0200                	.insn	2, 0x0200
    2d74:	0104                	.insn	2, 0x0104
    2d76:	08090003          	lb	zero,128(s2)
    2d7a:	0100                	.insn	2, 0x0100
    2d7c:	2505                	.insn	2, 0x2505
    2d7e:	0200                	.insn	2, 0x0200
    2d80:	0104                	.insn	2, 0x0104
    2d82:	08090003          	lb	zero,128(s2)
    2d86:	0100                	.insn	2, 0x0100
    2d88:	2105                	.insn	2, 0x2105
    2d8a:	08090403          	lb	s0,128(s2)
    2d8e:	0100                	.insn	2, 0x0100
    2d90:	1905                	.insn	2, 0x1905
    2d92:	0c090103          	lb	sp,192(s2)
    2d96:	0100                	.insn	2, 0x0100
    2d98:	1605                	.insn	2, 0x1605
    2d9a:	10090303          	lb	t1,256(s2)
    2d9e:	0100                	.insn	2, 0x0100
    2da0:	2505                	.insn	2, 0x2505
    2da2:	04090203          	lb	tp,64(s2)
    2da6:	0100                	.insn	2, 0x0100
    2da8:	1d05                	.insn	2, 0x1d05
    2daa:	08090103          	lb	sp,128(s2)
    2dae:	0100                	.insn	2, 0x0100
    2db0:	2105                	.insn	2, 0x2105
    2db2:	0c097d03          	.insn	4, 0x0c097d03
    2db6:	0100                	.insn	2, 0x0100
    2db8:	3e05                	.insn	2, 0x3e05
    2dba:	08090003          	lb	zero,128(s2)
    2dbe:	0100                	.insn	2, 0x0100
    2dc0:	4a05                	.insn	2, 0x4a05
    2dc2:	0200                	.insn	2, 0x0200
    2dc4:	0104                	.insn	2, 0x0104
    2dc6:	08090003          	lb	zero,128(s2)
    2dca:	0100                	.insn	2, 0x0100
    2dcc:	3e05                	.insn	2, 0x3e05
    2dce:	0200                	.insn	2, 0x0200
    2dd0:	0104                	.insn	2, 0x0104
    2dd2:	08090003          	lb	zero,128(s2)
    2dd6:	0100                	.insn	2, 0x0100
    2dd8:	1d05                	.insn	2, 0x1d05
    2dda:	04090903          	lb	s2,64(s2)
    2dde:	0100                	.insn	2, 0x0100
    2de0:	1305                	.insn	2, 0x1305
    2de2:	08090003          	lb	zero,128(s2)
    2de6:	0100                	.insn	2, 0x0100
    2de8:	3d05                	.insn	2, 0x3d05
    2dea:	08090403          	lb	s0,128(s2)
    2dee:	0100                	.insn	2, 0x0100
    2df0:	2005                	.insn	2, 0x2005
    2df2:	08090003          	lb	zero,128(s2)
    2df6:	0100                	.insn	2, 0x0100
    2df8:	1e05                	.insn	2, 0x1e05
    2dfa:	04090003          	lb	zero,64(s2)
    2dfe:	0100                	.insn	2, 0x0100
    2e00:	3f05                	.insn	2, 0x3f05
    2e02:	08090503          	lb	a0,128(s2)
    2e06:	0100                	.insn	2, 0x0100
    2e08:	3605                	.insn	2, 0x3605
    2e0a:	08090003          	lb	zero,128(s2)
    2e0e:	0100                	.insn	2, 0x0100
    2e10:	2205                	.insn	2, 0x2205
    2e12:	08090603          	lb	a2,128(s2)
    2e16:	0100                	.insn	2, 0x0100
    2e18:	2f05                	.insn	2, 0x2f05
    2e1a:	08090003          	lb	zero,128(s2)
    2e1e:	0100                	.insn	2, 0x0100
    2e20:	4105                	.insn	2, 0x4105
    2e22:	08090003          	lb	zero,128(s2)
    2e26:	0100                	.insn	2, 0x0100
    2e28:	1705                	.insn	2, 0x1705
    2e2a:	08090003          	lb	zero,128(s2)
    2e2e:	0100                	.insn	2, 0x0100
    2e30:	2805                	.insn	2, 0x2805
    2e32:	04090603          	lb	a2,64(s2)
    2e36:	0100                	.insn	2, 0x0100
    2e38:	3d05                	.insn	2, 0x3d05
    2e3a:	10090503          	lb	a0,256(s2)
    2e3e:	0100                	.insn	2, 0x0100
    2e40:	4a05                	.insn	2, 0x4a05
    2e42:	08090003          	lb	zero,128(s2)
    2e46:	0100                	.insn	2, 0x0100
    2e48:	3405                	.insn	2, 0x3405
    2e4a:	08090003          	lb	zero,128(s2)
    2e4e:	0100                	.insn	2, 0x0100
    2e50:	2d05                	.insn	2, 0x2d05
    2e52:	08090103          	lb	sp,128(s2)
    2e56:	0100                	.insn	2, 0x0100
    2e58:	4a05                	.insn	2, 0x4a05
    2e5a:	0c090303          	lb	t1,192(s2)
    2e5e:	0100                	.insn	2, 0x0100
    2e60:	3905                	.insn	2, 0x3905
    2e62:	08090003          	lb	zero,128(s2)
    2e66:	0100                	.insn	2, 0x0100
    2e68:	3a05                	.insn	2, 0x3a05
    2e6a:	08090103          	lb	sp,128(s2)
    2e6e:	0100                	.insn	2, 0x0100
    2e70:	2905                	.insn	2, 0x2905
    2e72:	0c090703          	lb	a4,192(s2)
    2e76:	0100                	.insn	2, 0x0100
    2e78:	3305                	.insn	2, 0x3305
    2e7a:	08090003          	lb	zero,128(s2)
    2e7e:	0100                	.insn	2, 0x0100
    2e80:	2905                	.insn	2, 0x2905
    2e82:	08090003          	lb	zero,128(s2)
    2e86:	0100                	.insn	2, 0x0100
    2e88:	2d05                	.insn	2, 0x2d05
    2e8a:	0c090203          	lb	tp,192(s2)
    2e8e:	0100                	.insn	2, 0x0100
    2e90:	1705                	.insn	2, 0x1705
    2e92:	10090003          	lb	zero,256(s2)
    2e96:	0100                	.insn	2, 0x0100
    2e98:	3805                	.insn	2, 0x3805
    2e9a:	04090203          	lb	tp,64(s2)
    2e9e:	0100                	.insn	2, 0x0100
    2ea0:	1505                	.insn	2, 0x1505
    2ea2:	10090903          	lb	s2,256(s2)
    2ea6:	0100                	.insn	2, 0x0100
    2ea8:	2e05                	.insn	2, 0x2e05
    2eaa:	18090103          	lb	sp,384(s2)
    2eae:	0100                	.insn	2, 0x0100
    2eb0:	3305                	.insn	2, 0x3305
    2eb2:	08090103          	lb	sp,128(s2)
    2eb6:	0100                	.insn	2, 0x0100
    2eb8:	0e05                	.insn	2, 0x0e05
    2eba:	14091303          	lh	t1,320(s2)
    2ebe:	0100                	.insn	2, 0x0100
    2ec0:	0c05                	.insn	2, 0x0c05
    2ec2:	04091003          	lh	zero,64(s2)
    2ec6:	0100                	.insn	2, 0x0100
    2ec8:	0105                	.insn	2, 0x0105
    2eca:	04090103          	lb	sp,64(s2)
    2ece:	0100                	.insn	2, 0x0100
    2ed0:	14090403          	lb	s0,320(s2)
    2ed4:	0100                	.insn	2, 0x0100
    2ed6:	0f05                	.insn	2, 0x0f05
    2ed8:	14090103          	lb	sp,320(s2)
    2edc:	0100                	.insn	2, 0x0100
    2ede:	0705                	.insn	2, 0x0705
    2ee0:	08090303          	lb	t1,128(s2)
    2ee4:	0100                	.insn	2, 0x0100
    2ee6:	0d05                	.insn	2, 0x0d05
    2ee8:	08090403          	lb	s0,128(s2)
    2eec:	0100                	.insn	2, 0x0100
    2eee:	1005                	.insn	2, 0x1005
    2ef0:	14090303          	lb	t1,320(s2)
    2ef4:	0100                	.insn	2, 0x0100
    2ef6:	0d05                	.insn	2, 0x0d05
    2ef8:	08090603          	lb	a2,128(s2)
    2efc:	0100                	.insn	2, 0x0100
    2efe:	0b05                	.insn	2, 0x0b05
    2f00:	08090003          	lb	zero,128(s2)
    2f04:	0100                	.insn	2, 0x0100
    2f06:	1705                	.insn	2, 0x1705
    2f08:	04090203          	lb	tp,64(s2)
    2f0c:	0100                	.insn	2, 0x0100
    2f0e:	0f05                	.insn	2, 0x0f05
    2f10:	08090003          	lb	zero,128(s2)
    2f14:	0100                	.insn	2, 0x0100
    2f16:	1105                	.insn	2, 0x1105
    2f18:	04090403          	lb	s0,64(s2)
    2f1c:	0100                	.insn	2, 0x0100
    2f1e:	1c090c03          	lb	s8,448(s2)
    2f22:	0100                	.insn	2, 0x0100
    2f24:	3205                	.insn	2, 0x3205
    2f26:	04090303          	lb	t1,64(s2)
    2f2a:	0100                	.insn	2, 0x0100
    2f2c:	2905                	.insn	2, 0x2905
    2f2e:	08090003          	lb	zero,128(s2)
    2f32:	0100                	.insn	2, 0x0100
    2f34:	1505                	.insn	2, 0x1505
    2f36:	14090203          	lb	tp,320(s2)
    2f3a:	0100                	.insn	2, 0x0100
    2f3c:	2d05                	.insn	2, 0x2d05
    2f3e:	08090103          	lb	sp,128(s2)
    2f42:	0100                	.insn	2, 0x0100
    2f44:	1a05                	.insn	2, 0x1a05
    2f46:	14090203          	lb	tp,320(s2)
    2f4a:	0100                	.insn	2, 0x0100
    2f4c:	0105                	.insn	2, 0x0105
    2f4e:	04090c03          	lb	s8,64(s2)
    2f52:	0100                	.insn	2, 0x0100
    2f54:	14090403          	lb	s0,320(s2)
    2f58:	0100                	.insn	2, 0x0100
    2f5a:	0c05                	.insn	2, 0x0c05
    2f5c:	10090103          	lb	sp,256(s2)
    2f60:	0100                	.insn	2, 0x0100
    2f62:	0105                	.insn	2, 0x0105
    2f64:	08090103          	lb	sp,128(s2)
    2f68:	0100                	.insn	2, 0x0100
    2f6a:	14090403          	lb	s0,320(s2)
    2f6e:	0100                	.insn	2, 0x0100
    2f70:	0c05                	.insn	2, 0x0c05
    2f72:	10090103          	lb	sp,256(s2)
    2f76:	0100                	.insn	2, 0x0100
    2f78:	0105                	.insn	2, 0x0105
    2f7a:	08090103          	lb	sp,128(s2)
    2f7e:	0100                	.insn	2, 0x0100
    2f80:	14090403          	lb	s0,320(s2)
    2f84:	0100                	.insn	2, 0x0100
    2f86:	10090203          	lb	tp,256(s2)
    2f8a:	0100                	.insn	2, 0x0100
    2f8c:	14090503          	lb	a0,320(s2)
    2f90:	0100                	.insn	2, 0x0100
    2f92:	0c05                	.insn	2, 0x0c05
    2f94:	18090103          	lb	sp,384(s2)
    2f98:	0100                	.insn	2, 0x0100
    2f9a:	0905                	.insn	2, 0x0905
    2f9c:	04090203          	lb	tp,64(s2)
    2fa0:	0100                	.insn	2, 0x0100
    2fa2:	0200                	.insn	2, 0x0200
    2fa4:	0104                	.insn	2, 0x0104
    2fa6:	0306                	.insn	2, 0x0306
    2fa8:	0900                	.insn	2, 0x0900
    2faa:	0008                	.insn	2, 0x0008
    2fac:	0001                	.insn	2, 0x0001
    2fae:	0402                	.insn	2, 0x0402
    2fb0:	09000303          	lb	t1,144(zero) # 90 <__start-0x7fffff70>
    2fb4:	001c                	.insn	2, 0x001c
    2fb6:	0301                	.insn	2, 0x0301
    2fb8:	0900                	.insn	2, 0x0900
    2fba:	0004                	.insn	2, 0x0004
    2fbc:	0001                	.insn	2, 0x0001
    2fbe:	0402                	.insn	2, 0x0402
    2fc0:	0304                	.insn	2, 0x0304
    2fc2:	0900                	.insn	2, 0x0900
    2fc4:	0004                	.insn	2, 0x0004
    2fc6:	0501                	.insn	2, 0x0501
    2fc8:	04020007          	.insn	4, 0x04020007
    2fcc:	0606                	.insn	2, 0x0606
    2fce:	04090003          	lb	zero,64(s2)
    2fd2:	0100                	.insn	2, 0x0100
    2fd4:	0e05                	.insn	2, 0x0e05
    2fd6:	04090203          	lb	tp,64(s2)
    2fda:	0100                	.insn	2, 0x0100
    2fdc:	0b05                	.insn	2, 0x0b05
    2fde:	1c090203          	lb	tp,448(s2)
    2fe2:	0100                	.insn	2, 0x0100
    2fe4:	1605                	.insn	2, 0x1605
    2fe6:	08090203          	lb	tp,128(s2)
    2fea:	0100                	.insn	2, 0x0100
    2fec:	0c05                	.insn	2, 0x0c05
    2fee:	20090403          	lb	s0,512(s2)
    2ff2:	0100                	.insn	2, 0x0100
    2ff4:	0105                	.insn	2, 0x0105
    2ff6:	04090103          	lb	sp,64(s2)
    2ffa:	0100                	.insn	2, 0x0100
    2ffc:	14090403          	lb	s0,320(s2)
    3000:	0100                	.insn	2, 0x0100
    3002:	0c05                	.insn	2, 0x0c05
    3004:	10090303          	lb	t1,256(s2)
    3008:	0100                	.insn	2, 0x0100
    300a:	1405                	.insn	2, 0x1405
    300c:	08090303          	lb	t1,128(s2)
    3010:	0100                	.insn	2, 0x0100
    3012:	1a05                	.insn	2, 0x1a05
    3014:	0c090203          	lb	tp,192(s2)
    3018:	0100                	.insn	2, 0x0100
    301a:	0705                	.insn	2, 0x0705
    301c:	08090003          	lb	zero,128(s2)
    3020:	0100                	.insn	2, 0x0100
    3022:	1805                	.insn	2, 0x1805
    3024:	04090203          	lb	tp,64(s2)
    3028:	0100                	.insn	2, 0x0100
    302a:	0c090103          	lb	sp,192(s2)
    302e:	0100                	.insn	2, 0x0100
    3030:	0c090103          	lb	sp,192(s2)
    3034:	0100                	.insn	2, 0x0100
    3036:	1e05                	.insn	2, 0x1e05
    3038:	1c090b03          	lb	s6,448(s2)
    303c:	0100                	.insn	2, 0x0100
    303e:	1c05                	.insn	2, 0x1c05
    3040:	04090003          	lb	zero,64(s2)
    3044:	0100                	.insn	2, 0x0100
    3046:	1705                	.insn	2, 0x1705
    3048:	0c090103          	lb	sp,192(s2)
    304c:	0100                	.insn	2, 0x0100
    304e:	1205                	.insn	2, 0x1205
    3050:	0c090403          	lb	s0,192(s2)
    3054:	0100                	.insn	2, 0x0100
    3056:	1505                	.insn	2, 0x1505
    3058:	10090103          	lb	sp,256(s2)
    305c:	0100                	.insn	2, 0x0100
    305e:	1205                	.insn	2, 0x1205
    3060:	04090003          	lb	zero,64(s2)
    3064:	0100                	.insn	2, 0x0100
    3066:	0c090103          	lb	sp,192(s2)
    306a:	0100                	.insn	2, 0x0100
    306c:	0d05                	.insn	2, 0x0d05
    306e:	0c090103          	lb	sp,192(s2)
    3072:	0100                	.insn	2, 0x0100
    3074:	0b05                	.insn	2, 0x0b05
    3076:	04090003          	lb	zero,64(s2)
    307a:	0100                	.insn	2, 0x0100
    307c:	0a05                	.insn	2, 0x0a05
    307e:	08090103          	lb	sp,128(s2)
    3082:	0100                	.insn	2, 0x0100
    3084:	1705                	.insn	2, 0x1705
    3086:	08090003          	lb	zero,128(s2)
    308a:	0100                	.insn	2, 0x0100
    308c:	0a05                	.insn	2, 0x0a05
    308e:	04090103          	lb	sp,64(s2)
    3092:	0100                	.insn	2, 0x0100
    3094:	1c05                	.insn	2, 0x1c05
    3096:	08090003          	lb	zero,128(s2)
    309a:	0100                	.insn	2, 0x0100
    309c:	1605                	.insn	2, 0x1605
    309e:	04090403          	lb	s0,64(s2)
    30a2:	0100                	.insn	2, 0x0100
    30a4:	4005                	.insn	2, 0x4005
    30a6:	08090103          	lb	sp,128(s2)
    30aa:	0100                	.insn	2, 0x0100
    30ac:	3e05                	.insn	2, 0x3e05
    30ae:	04090003          	lb	zero,64(s2)
    30b2:	0100                	.insn	2, 0x0100
    30b4:	2205                	.insn	2, 0x2205
    30b6:	08090003          	lb	zero,128(s2)
    30ba:	0100                	.insn	2, 0x0100
    30bc:	2705                	.insn	2, 0x2705
    30be:	08090103          	lb	sp,128(s2)
    30c2:	0100                	.insn	2, 0x0100
    30c4:	3605                	.insn	2, 0x3605
    30c6:	10090303          	lb	t1,256(s2)
    30ca:	0100                	.insn	2, 0x0100
    30cc:	2405                	.insn	2, 0x2405
    30ce:	08090003          	lb	zero,128(s2)
    30d2:	0100                	.insn	2, 0x0100
    30d4:	2b05                	.insn	2, 0x2b05
    30d6:	08090103          	lb	sp,128(s2)
    30da:	0100                	.insn	2, 0x0100
    30dc:	1905                	.insn	2, 0x1905
    30de:	08090003          	lb	zero,128(s2)
    30e2:	0100                	.insn	2, 0x0100
    30e4:	0105                	.insn	2, 0x0105
    30e6:	08090103          	lb	sp,128(s2)
    30ea:	0100                	.insn	2, 0x0100
    30ec:	14090403          	lb	s0,320(s2)
    30f0:	0100                	.insn	2, 0x0100
    30f2:	1505                	.insn	2, 0x1505
    30f4:	14090603          	lb	a2,320(s2)
    30f8:	0100                	.insn	2, 0x0100
    30fa:	0505                	.insn	2, 0x0505
    30fc:	0c090003          	lb	zero,192(s2)
    3100:	0100                	.insn	2, 0x0100
    3102:	7705                	.insn	2, 0x7705
    3104:	0200                	.insn	2, 0x0200
    3106:	0304                	.insn	2, 0x0304
    3108:	04090003          	lb	zero,64(s2)
    310c:	0100                	.insn	2, 0x0100
    310e:	2005                	.insn	2, 0x2005
    3110:	0200                	.insn	2, 0x0200
    3112:	0104                	.insn	2, 0x0104
    3114:	0c090003          	lb	zero,192(s2)
    3118:	0100                	.insn	2, 0x0100
    311a:	5905                	.insn	2, 0x5905
    311c:	0200                	.insn	2, 0x0200
    311e:	0104                	.insn	2, 0x0104
    3120:	08090003          	lb	zero,128(s2)
    3124:	0100                	.insn	2, 0x0100
    3126:	0905                	.insn	2, 0x0905
    3128:	08090c03          	lb	s8,128(s2)
    312c:	0100                	.insn	2, 0x0100
    312e:	1b05                	.insn	2, 0x1b05
    3130:	08090203          	lb	tp,128(s2)
    3134:	0100                	.insn	2, 0x0100
    3136:	0f05                	.insn	2, 0x0f05
    3138:	08090003          	lb	zero,128(s2)
    313c:	0100                	.insn	2, 0x0100
    313e:	0705                	.insn	2, 0x0705
    3140:	08090003          	lb	zero,128(s2)
    3144:	0100                	.insn	2, 0x0100
    3146:	1305                	.insn	2, 0x1305
    3148:	08090203          	lb	tp,128(s2)
    314c:	0100                	.insn	2, 0x0100
    314e:	3205                	.insn	2, 0x3205
    3150:	08090003          	lb	zero,128(s2)
    3154:	0100                	.insn	2, 0x0100
    3156:	2005                	.insn	2, 0x2005
    3158:	08090003          	lb	zero,128(s2)
    315c:	0100                	.insn	2, 0x0100
    315e:	1905                	.insn	2, 0x1905
    3160:	0c090103          	lb	sp,192(s2)
    3164:	0100                	.insn	2, 0x0100
    3166:	0905                	.insn	2, 0x0905
    3168:	08090903          	lb	s2,128(s2)
    316c:	0100                	.insn	2, 0x0100
    316e:	2005                	.insn	2, 0x2005
    3170:	08090203          	lb	tp,128(s2)
    3174:	0100                	.insn	2, 0x0100
    3176:	0f05                	.insn	2, 0x0f05
    3178:	08090003          	lb	zero,128(s2)
    317c:	0100                	.insn	2, 0x0100
    317e:	4005                	.insn	2, 0x4005
    3180:	08090003          	lb	zero,128(s2)
    3184:	0100                	.insn	2, 0x0100
    3186:	0705                	.insn	2, 0x0705
    3188:	08090003          	lb	zero,128(s2)
    318c:	0100                	.insn	2, 0x0100
    318e:	0d05                	.insn	2, 0x0d05
    3190:	04090203          	lb	tp,64(s2)
    3194:	0100                	.insn	2, 0x0100
    3196:	4605                	.insn	2, 0x4605
    3198:	08090003          	lb	zero,128(s2)
    319c:	0100                	.insn	2, 0x0100
    319e:	0b05                	.insn	2, 0x0b05
    31a0:	08090003          	lb	zero,128(s2)
    31a4:	0100                	.insn	2, 0x0100
    31a6:	1c05                	.insn	2, 0x1c05
    31a8:	04090303          	lb	t1,64(s2)
    31ac:	0100                	.insn	2, 0x0100
    31ae:	2c05                	.insn	2, 0x2c05
    31b0:	08090003          	lb	zero,128(s2)
    31b4:	0100                	.insn	2, 0x0100
    31b6:	6405                	.insn	2, 0x6405
    31b8:	08090003          	lb	zero,128(s2)
    31bc:	0100                	.insn	2, 0x0100
    31be:	2905                	.insn	2, 0x2905
    31c0:	04090003          	lb	zero,64(s2)
    31c4:	0100                	.insn	2, 0x0100
    31c6:	3005                	.insn	2, 0x3005
    31c8:	0c090103          	lb	sp,192(s2)
    31cc:	0100                	.insn	2, 0x0100
    31ce:	6805                	.insn	2, 0x6805
    31d0:	08090003          	lb	zero,128(s2)
    31d4:	0100                	.insn	2, 0x0100
    31d6:	2e05                	.insn	2, 0x2e05
    31d8:	04090003          	lb	zero,64(s2)
    31dc:	0100                	.insn	2, 0x0100
    31de:	0c090403          	lb	s0,192(s2)
    31e2:	0100                	.insn	2, 0x0100
    31e4:	3605                	.insn	2, 0x3605
    31e6:	14090503          	lb	a0,320(s2)
    31ea:	0100                	.insn	2, 0x0100
    31ec:	2a05                	.insn	2, 0x2a05
    31ee:	08090003          	lb	zero,128(s2)
    31f2:	0100                	.insn	2, 0x0100
    31f4:	0705                	.insn	2, 0x0705
    31f6:	08090703          	lb	a4,128(s2)
    31fa:	0100                	.insn	2, 0x0100
    31fc:	2505                	.insn	2, 0x2505
    31fe:	0c090203          	lb	tp,192(s2)
    3202:	0100                	.insn	2, 0x0100
    3204:	0105                	.insn	2, 0x0105
    3206:	0c090603          	lb	a2,192(s2)
    320a:	0100                	.insn	2, 0x0100
    320c:	14090403          	lb	s0,320(s2)
    3210:	0100                	.insn	2, 0x0100
    3212:	0c05                	.insn	2, 0x0c05
    3214:	14090203          	lb	tp,320(s2)
    3218:	0100                	.insn	2, 0x0100
    321a:	1905                	.insn	2, 0x1905
    321c:	04090003          	lb	zero,64(s2)
    3220:	0100                	.insn	2, 0x0100
    3222:	2705                	.insn	2, 0x2705
    3224:	04090003          	lb	zero,64(s2)
    3228:	0100                	.insn	2, 0x0100
    322a:	0505                	.insn	2, 0x0505
    322c:	08090203          	lb	tp,128(s2)
    3230:	0100                	.insn	2, 0x0100
    3232:	1105                	.insn	2, 0x1105
    3234:	04090203          	lb	tp,64(s2)
    3238:	0100                	.insn	2, 0x0100
    323a:	0b05                	.insn	2, 0x0b05
    323c:	10090403          	lb	s0,256(s2)
    3240:	0100                	.insn	2, 0x0100
    3242:	1205                	.insn	2, 0x1205
    3244:	08090203          	lb	tp,128(s2)
    3248:	0100                	.insn	2, 0x0100
    324a:	1805                	.insn	2, 0x1805
    324c:	04090403          	lb	s0,64(s2)
    3250:	0100                	.insn	2, 0x0100
    3252:	1c05                	.insn	2, 0x1c05
    3254:	0c090203          	lb	tp,192(s2)
    3258:	0100                	.insn	2, 0x0100
    325a:	1305                	.insn	2, 0x1305
    325c:	08090003          	lb	zero,128(s2)
    3260:	0100                	.insn	2, 0x0100
    3262:	1e05                	.insn	2, 0x1e05
    3264:	08090203          	lb	tp,128(s2)
    3268:	0100                	.insn	2, 0x0100
    326a:	1c05                	.insn	2, 0x1c05
    326c:	0c090303          	lb	t1,192(s2)
    3270:	0100                	.insn	2, 0x0100
    3272:	1305                	.insn	2, 0x1305
    3274:	08090003          	lb	zero,128(s2)
    3278:	0100                	.insn	2, 0x0100
    327a:	1e05                	.insn	2, 0x1e05
    327c:	08090203          	lb	tp,128(s2)
    3280:	0100                	.insn	2, 0x0100
    3282:	1905                	.insn	2, 0x1905
    3284:	0c090503          	lb	a0,192(s2)
    3288:	0100                	.insn	2, 0x0100
    328a:	1c05                	.insn	2, 0x1c05
    328c:	0c096e03          	.insn	4, 0x0c096e03
    3290:	0100                	.insn	2, 0x0100
    3292:	0e05                	.insn	2, 0x0e05
    3294:	10091603          	lh	a2,256(s2)
    3298:	0100                	.insn	2, 0x0100
    329a:	3105                	.insn	2, 0x3105
    329c:	04090203          	lb	tp,64(s2)
    32a0:	0100                	.insn	2, 0x0100
    32a2:	3205                	.insn	2, 0x3205
    32a4:	0c090103          	lb	sp,192(s2)
    32a8:	0100                	.insn	2, 0x0100
    32aa:	2605                	.insn	2, 0x2605
    32ac:	0c090103          	lb	sp,192(s2)
    32b0:	0100                	.insn	2, 0x0100
    32b2:	0505                	.insn	2, 0x0505
    32b4:	0c090203          	lb	tp,192(s2)
    32b8:	0100                	.insn	2, 0x0100
    32ba:	3105                	.insn	2, 0x3105
    32bc:	18090203          	lb	tp,384(s2)
    32c0:	0100                	.insn	2, 0x0100
    32c2:	3505                	.insn	2, 0x3505
    32c4:	10090103          	lb	sp,256(s2)
    32c8:	0100                	.insn	2, 0x0100
    32ca:	2f05                	.insn	2, 0x2f05
    32cc:	10090103          	lb	sp,256(s2)
    32d0:	0100                	.insn	2, 0x0100
    32d2:	3505                	.insn	2, 0x3505
    32d4:	10090103          	lb	sp,256(s2)
    32d8:	0100                	.insn	2, 0x0100
    32da:	0505                	.insn	2, 0x0505
    32dc:	10090203          	lb	tp,256(s2)
    32e0:	0100                	.insn	2, 0x0100
    32e2:	0200                	.insn	2, 0x0200
    32e4:	0104                	.insn	2, 0x0104
    32e6:	0306                	.insn	2, 0x0306
    32e8:	0900                	.insn	2, 0x0900
    32ea:	0020                	.insn	2, 0x0020
    32ec:	0501                	.insn	2, 0x0501
    32ee:	0601                	.insn	2, 0x0601
    32f0:	04090103          	lb	sp,64(s2)
    32f4:	0100                	.insn	2, 0x0100
    32f6:	14090903          	lb	s2,320(s2)
    32fa:	0100                	.insn	2, 0x0100
    32fc:	0b05                	.insn	2, 0x0b05
    32fe:	10090103          	lb	sp,256(s2)
    3302:	0100                	.insn	2, 0x0100
    3304:	1905                	.insn	2, 0x1905
    3306:	08090203          	lb	tp,128(s2)
    330a:	0100                	.insn	2, 0x0100
    330c:	2405                	.insn	2, 0x2405
    330e:	08090103          	lb	sp,128(s2)
    3312:	0100                	.insn	2, 0x0100
    3314:	08090103          	lb	sp,128(s2)
    3318:	0100                	.insn	2, 0x0100
    331a:	1e05                	.insn	2, 0x1e05
    331c:	08090103          	lb	sp,128(s2)
    3320:	0100                	.insn	2, 0x0100
    3322:	0105                	.insn	2, 0x0105
    3324:	08090103          	lb	sp,128(s2)
    3328:	0100                	.insn	2, 0x0100
    332a:	1409                	.insn	2, 0x1409
    332c:	0000                	.insn	2, 0x
    332e:	0101                	.insn	2, 0x0101
    3330:	0045                	.insn	2, 0x0045
    3332:	0000                	.insn	2, 0x
    3334:	0002                	.insn	2, 0x0002
    3336:	0025                	.insn	2, 0x0025
    3338:	0000                	.insn	2, 0x
    333a:	0101                	.insn	2, 0x0101
    333c:	000a0efb          	.insn	4, 0x000a0efb
    3340:	0101                	.insn	2, 0x0101
    3342:	0101                	.insn	2, 0x0101
    3344:	0000                	.insn	2, 0x
    3346:	0100                	.insn	2, 0x0100
    3348:	00637273          	csrrci	tp,0x6,6
    334c:	6200                	.insn	2, 0x6200
    334e:	5f746f6f          	jal	t5,4a144 <__start-0x7ffb5ebc>
    3352:	6f6c                	.insn	2, 0x6f6c
    3354:	6461                	.insn	2, 0x6461
    3356:	7265                	.insn	2, 0x7265
    3358:	732e                	.insn	2, 0x732e
    335a:	0100                	.insn	2, 0x0100
    335c:	0000                	.insn	2, 0x
    335e:	0000                	.insn	2, 0x
    3360:	0205                	.insn	2, 0x0205
    3362:	0000                	.insn	2, 0x
    3364:	8000                	.insn	2, 0x8000
    3366:	0312                	.insn	2, 0x0312
    3368:	0901                	.insn	2, 0x0901
    336a:	0008                	.insn	2, 0x0008
    336c:	0301                	.insn	2, 0x0301
    336e:	0901                	.insn	2, 0x0901
    3370:	0004                	.insn	2, 0x0004
    3372:	0901                	.insn	2, 0x0901
    3374:	0004                	.insn	2, 0x0004
    3376:	0100                	.insn	2, 0x0100
    3378:	be01                	.insn	2, 0xbe01
    337a:	0002                	.insn	2, 0x0002
    337c:	0500                	.insn	2, 0x0500
    337e:	0400                	.insn	2, 0x0400
    3380:	3c00                	.insn	2, 0x3c00
    3382:	0000                	.insn	2, 0x
    3384:	0100                	.insn	2, 0x0100
    3386:	0101                	.insn	2, 0x0101
    3388:	000d0efb          	.insn	4, 0x000d0efb
    338c:	0101                	.insn	2, 0x0101
    338e:	0101                	.insn	2, 0x0101
    3390:	0000                	.insn	2, 0x
    3392:	0100                	.insn	2, 0x0100
    3394:	0000                	.insn	2, 0x
    3396:	0101                	.insn	2, 0x0101
    3398:	1f01                	.insn	2, 0x1f01
    339a:	00000003          	lb	zero,0(zero) # 0 <__start-0x80000000>
    339e:	4600                	.insn	2, 0x4600
    33a0:	0002                	.insn	2, 0x0002
    33a2:	6300                	.insn	2, 0x6300
    33a4:	0000                	.insn	2, 0x
    33a6:	0200                	.insn	2, 0x0200
    33a8:	1f01                	.insn	2, 0x1f01
    33aa:	0f02                	.insn	2, 0x0f02
    33ac:	3a04                	.insn	2, 0x3a04
    33ae:	0002                	.insn	2, 0x0002
    33b0:	0100                	.insn	2, 0x0100
    33b2:	023a                	.insn	2, 0x023a
    33b4:	0000                	.insn	2, 0x
    33b6:	db01                	.insn	2, 0xdb01
    33b8:	0000                	.insn	2, 0x
    33ba:	0200                	.insn	2, 0x0200
    33bc:	0156                	.insn	2, 0x0156
    33be:	0000                	.insn	2, 0x
    33c0:	0502                	.insn	2, 0x0502
    33c2:	0028                	.insn	2, 0x0028
    33c4:	0205                	.insn	2, 0x0205
    33c6:	5a40                	.insn	2, 0x5a40
    33c8:	8000                	.insn	2, 0x8000
    33ca:	0518                	.insn	2, 0x0518
    33cc:	030d                	.insn	2, 0x030d
    33ce:	0901                	.insn	2, 0x0901
    33d0:	0018                	.insn	2, 0x0018
    33d2:	0501                	.insn	2, 0x0501
    33d4:	031c                	.insn	2, 0x031c
    33d6:	0901                	.insn	2, 0x0901
    33d8:	0004                	.insn	2, 0x0004
    33da:	0501                	.insn	2, 0x0501
    33dc:	0309                	.insn	2, 0x0309
    33de:	0900                	.insn	2, 0x0900
    33e0:	0014                	.insn	2, 0x0014
    33e2:	0501                	.insn	2, 0x0501
    33e4:	031f 0903 0004      	.insn	6, 0x00040903031f
    33ea:	0501                	.insn	2, 0x0501
    33ec:	030e                	.insn	2, 0x030e
    33ee:	0900                	.insn	2, 0x0900
    33f0:	0014                	.insn	2, 0x0014
    33f2:	0501                	.insn	2, 0x0501
    33f4:	031f 0901 0004      	.insn	6, 0x00040901031f
    33fa:	0501                	.insn	2, 0x0501
    33fc:	030e                	.insn	2, 0x030e
    33fe:	0900                	.insn	2, 0x0900
    3400:	0014                	.insn	2, 0x0014
    3402:	0501                	.insn	2, 0x0501
    3404:	0902030b          	.insn	4, 0x0902030b
    3408:	0004                	.insn	2, 0x0004
    340a:	0501                	.insn	2, 0x0501
    340c:	0901030f          	.insn	4, 0x0901030f
    3410:	0004                	.insn	2, 0x0004
    3412:	0501                	.insn	2, 0x0501
    3414:	030c                	.insn	2, 0x030c
    3416:	0900                	.insn	2, 0x0900
    3418:	0008                	.insn	2, 0x0008
    341a:	0501                	.insn	2, 0x0501
    341c:	0314                	.insn	2, 0x0314
    341e:	0901                	.insn	2, 0x0901
    3420:	0004                	.insn	2, 0x0004
    3422:	0501                	.insn	2, 0x0501
    3424:	0902030b          	.insn	4, 0x0902030b
    3428:	0010                	.insn	2, 0x0010
    342a:	0301                	.insn	2, 0x0301
    342c:	0901                	.insn	2, 0x0901
    342e:	000c                	.insn	2, 0x000c
    3430:	0501                	.insn	2, 0x0501
    3432:	030c                	.insn	2, 0x030c
    3434:	000c097b          	.insn	4, 0x000c097b
    3438:	0501                	.insn	2, 0x0501
    343a:	031f 0908 0008      	.insn	6, 0x00080908031f
    3440:	0001                	.insn	2, 0x0001
    3442:	0402                	.insn	2, 0x0402
    3444:	0601                	.insn	2, 0x0601
    3446:	08090003          	lb	zero,128(s2)
    344a:	0100                	.insn	2, 0x0100
    344c:	08090003          	lb	zero,128(s2)
    3450:	0100                	.insn	2, 0x0100
    3452:	0200                	.insn	2, 0x0200
    3454:	0204                	.insn	2, 0x0204
    3456:	04090003          	lb	zero,64(s2)
    345a:	0100                	.insn	2, 0x0100
    345c:	0105                	.insn	2, 0x0105
    345e:	0306                	.insn	2, 0x0306
    3460:	0901                	.insn	2, 0x0901
    3462:	0004                	.insn	2, 0x0004
    3464:	0501                	.insn	2, 0x0501
    3466:	031e                	.insn	2, 0x031e
    3468:	00140903          	lb	s2,1(s0)
    346c:	0501                	.insn	2, 0x0501
    346e:	0308                	.insn	2, 0x0308
    3470:	0901                	.insn	2, 0x0901
    3472:	0014                	.insn	2, 0x0014
    3474:	0501                	.insn	2, 0x0501
    3476:	0018                	.insn	2, 0x0018
    3478:	0402                	.insn	2, 0x0402
    347a:	0301                	.insn	2, 0x0301
    347c:	0900                	.insn	2, 0x0900
    347e:	0008                	.insn	2, 0x0008
    3480:	0601                	.insn	2, 0x0601
    3482:	04090003          	lb	zero,64(s2)
    3486:	0100                	.insn	2, 0x0100
    3488:	0905                	.insn	2, 0x0905
    348a:	0306                	.insn	2, 0x0306
    348c:	0901                	.insn	2, 0x0901
    348e:	0004                	.insn	2, 0x0004
    3490:	0501                	.insn	2, 0x0501
    3492:	0312                	.insn	2, 0x0312
    3494:	0901                	.insn	2, 0x0901
    3496:	0004                	.insn	2, 0x0004
    3498:	0501                	.insn	2, 0x0501
    349a:	0305                	.insn	2, 0x0305
    349c:	0900                	.insn	2, 0x0900
    349e:	0008                	.insn	2, 0x0008
    34a0:	0501                	.insn	2, 0x0501
    34a2:	030e                	.insn	2, 0x030e
    34a4:	0901                	.insn	2, 0x0901
    34a6:	0004                	.insn	2, 0x0004
    34a8:	0501                	.insn	2, 0x0501
    34aa:	0402003b          	.insn	4, 0x0402003b
    34ae:	097f0303          	lb	t1,151(t5) # cb867 <__start-0x7ff34799>
    34b2:	000c                	.insn	2, 0x000c
    34b4:	0501                	.insn	2, 0x0501
    34b6:	0028                	.insn	2, 0x0028
    34b8:	0402                	.insn	2, 0x0402
    34ba:	0301                	.insn	2, 0x0301
    34bc:	0900                	.insn	2, 0x0900
    34be:	000c                	.insn	2, 0x000c
    34c0:	0501                	.insn	2, 0x0501
    34c2:	0030                	.insn	2, 0x0030
    34c4:	0402                	.insn	2, 0x0402
    34c6:	0301                	.insn	2, 0x0301
    34c8:	0900                	.insn	2, 0x0900
    34ca:	000c                	.insn	2, 0x000c
    34cc:	0501                	.insn	2, 0x0501
    34ce:	030c                	.insn	2, 0x030c
    34d0:	00040903          	lb	s2,0(s0)
    34d4:	0501                	.insn	2, 0x0501
    34d6:	0301                	.insn	2, 0x0301
    34d8:	0901                	.insn	2, 0x0901
    34da:	0004                	.insn	2, 0x0004
    34dc:	0501                	.insn	2, 0x0501
    34de:	0338                	.insn	2, 0x0338
    34e0:	0902                	.insn	2, 0x0902
    34e2:	0014                	.insn	2, 0x0014
    34e4:	0501                	.insn	2, 0x0501
    34e6:	0312                	.insn	2, 0x0312
    34e8:	0901                	.insn	2, 0x0901
    34ea:	0018                	.insn	2, 0x0018
    34ec:	0301                	.insn	2, 0x0301
    34ee:	0901                	.insn	2, 0x0901
    34f0:	0004                	.insn	2, 0x0004
    34f2:	0501                	.insn	2, 0x0501
    34f4:	030e                	.insn	2, 0x030e
    34f6:	00040903          	lb	s2,0(s0)
    34fa:	0501                	.insn	2, 0x0501
    34fc:	0305                	.insn	2, 0x0305
    34fe:	0900                	.insn	2, 0x0900
    3500:	0008                	.insn	2, 0x0008
    3502:	0501                	.insn	2, 0x0501
    3504:	0310                	.insn	2, 0x0310
    3506:	0902                	.insn	2, 0x0902
    3508:	0004                	.insn	2, 0x0004
    350a:	0501                	.insn	2, 0x0501
    350c:	031c                	.insn	2, 0x031c
    350e:	0900                	.insn	2, 0x0900
    3510:	0008                	.insn	2, 0x0008
    3512:	0501                	.insn	2, 0x0501
    3514:	0322                	.insn	2, 0x0322
    3516:	0900                	.insn	2, 0x0900
    3518:	000c                	.insn	2, 0x000c
    351a:	0501                	.insn	2, 0x0501
    351c:	0900030b          	.insn	4, 0x0900030b
    3520:	0004                	.insn	2, 0x0004
    3522:	0501                	.insn	2, 0x0501
    3524:	030c                	.insn	2, 0x030c
    3526:	00080903          	lb	s2,0(a6)
    352a:	0501                	.insn	2, 0x0501
    352c:	0901030f          	.insn	4, 0x0901030f
    3530:	000c                	.insn	2, 0x000c
    3532:	0501                	.insn	2, 0x0501
    3534:	0316                	.insn	2, 0x0316
    3536:	0901                	.insn	2, 0x0901
    3538:	0010                	.insn	2, 0x0010
    353a:	0501                	.insn	2, 0x0501
    353c:	0900030f          	.insn	4, 0x0900030f
    3540:	000c                	.insn	2, 0x000c
    3542:	0501                	.insn	2, 0x0501
    3544:	001e                	.insn	2, 0x001e
    3546:	0402                	.insn	2, 0x0402
    3548:	0302                	.insn	2, 0x0302
    354a:	0979                	.insn	2, 0x0979
    354c:	000c                	.insn	2, 0x000c
    354e:	0501                	.insn	2, 0x0501
    3550:	0018                	.insn	2, 0x0018
    3552:	0402                	.insn	2, 0x0402
    3554:	0301                	.insn	2, 0x0301
    3556:	0900                	.insn	2, 0x0900
    3558:	000c                	.insn	2, 0x000c
    355a:	0501                	.insn	2, 0x0501
    355c:	030c                	.insn	2, 0x030c
    355e:	0008090b          	.insn	4, 0x0008090b
    3562:	0501                	.insn	2, 0x0501
    3564:	0301                	.insn	2, 0x0301
    3566:	0901                	.insn	2, 0x0901
    3568:	0004                	.insn	2, 0x0004
    356a:	0501                	.insn	2, 0x0501
    356c:	0335                	.insn	2, 0x0335
    356e:	00140903          	lb	s2,1(s0)
    3572:	0501                	.insn	2, 0x0501
    3574:	0901030b          	.insn	4, 0x0901030b
    3578:	001c                	.insn	2, 0x001c
    357a:	0501                	.insn	2, 0x0501
    357c:	0311                	.insn	2, 0x0311
    357e:	0901                	.insn	2, 0x0901
    3580:	0008                	.insn	2, 0x0008
    3582:	0501                	.insn	2, 0x0501
    3584:	0901030b          	.insn	4, 0x0901030b
    3588:	0008                	.insn	2, 0x0008
    358a:	0501                	.insn	2, 0x0501
    358c:	001a                	.insn	2, 0x001a
    358e:	0402                	.insn	2, 0x0402
    3590:	0302                	.insn	2, 0x0302
    3592:	0900                	.insn	2, 0x0900
    3594:	0004                	.insn	2, 0x0004
    3596:	0501                	.insn	2, 0x0501
    3598:	04020013          	addi	zero,tp,64 # 40 <__start-0x7fffffc0>
    359c:	0302                	.insn	2, 0x0302
    359e:	0900                	.insn	2, 0x0900
    35a0:	000c                	.insn	2, 0x000c
    35a2:	0501                	.insn	2, 0x0501
    35a4:	0018                	.insn	2, 0x0018
    35a6:	0402                	.insn	2, 0x0402
    35a8:	0302                	.insn	2, 0x0302
    35aa:	0900                	.insn	2, 0x0900
    35ac:	000c                	.insn	2, 0x000c
    35ae:	0501                	.insn	2, 0x0501
    35b0:	0016                	.insn	2, 0x0016
    35b2:	0402                	.insn	2, 0x0402
    35b4:	0302                	.insn	2, 0x0302
    35b6:	0900                	.insn	2, 0x0900
    35b8:	0004                	.insn	2, 0x0004
    35ba:	0501                	.insn	2, 0x0501
    35bc:	000d                	.insn	2, 0x000d
    35be:	0402                	.insn	2, 0x0402
    35c0:	0301                	.insn	2, 0x0301
    35c2:	0900                	.insn	2, 0x0900
    35c4:	0004                	.insn	2, 0x0004
    35c6:	0501                	.insn	2, 0x0501
    35c8:	000c                	.insn	2, 0x000c
    35ca:	0402                	.insn	2, 0x0402
    35cc:	0301                	.insn	2, 0x0301
    35ce:	0900                	.insn	2, 0x0900
    35d0:	000c                	.insn	2, 0x000c
    35d2:	0301                	.insn	2, 0x0301
    35d4:	0901                	.insn	2, 0x0901
    35d6:	0004                	.insn	2, 0x0004
    35d8:	0501                	.insn	2, 0x0501
    35da:	0301                	.insn	2, 0x0301
    35dc:	0901                	.insn	2, 0x0901
    35de:	0004                	.insn	2, 0x0004
    35e0:	0501                	.insn	2, 0x0501
    35e2:	0328                	.insn	2, 0x0328
    35e4:	0902                	.insn	2, 0x0902
    35e6:	0014                	.insn	2, 0x0014
    35e8:	0501                	.insn	2, 0x0501
    35ea:	0901030b          	.insn	4, 0x0901030b
    35ee:	001c                	.insn	2, 0x001c
    35f0:	0301                	.insn	2, 0x0301
    35f2:	0901                	.insn	2, 0x0901
    35f4:	0008                	.insn	2, 0x0008
    35f6:	0501                	.insn	2, 0x0501
    35f8:	04020013          	addi	zero,tp,64 # 40 <__start-0x7fffffc0>
    35fc:	0302                	.insn	2, 0x0302
    35fe:	0900                	.insn	2, 0x0900
    3600:	0004                	.insn	2, 0x0004
    3602:	0501                	.insn	2, 0x0501
    3604:	0016                	.insn	2, 0x0016
    3606:	0402                	.insn	2, 0x0402
    3608:	0302                	.insn	2, 0x0302
    360a:	0900                	.insn	2, 0x0900
    360c:	000c                	.insn	2, 0x000c
    360e:	0501                	.insn	2, 0x0501
    3610:	000d                	.insn	2, 0x000d
    3612:	0402                	.insn	2, 0x0402
    3614:	0301                	.insn	2, 0x0301
    3616:	0900                	.insn	2, 0x0900
    3618:	000c                	.insn	2, 0x000c
    361a:	0501                	.insn	2, 0x0501
    361c:	000c                	.insn	2, 0x000c
    361e:	0402                	.insn	2, 0x0402
    3620:	0301                	.insn	2, 0x0301
    3622:	0900                	.insn	2, 0x0900
    3624:	000c                	.insn	2, 0x000c
    3626:	0301                	.insn	2, 0x0301
    3628:	0901                	.insn	2, 0x0901
    362a:	0004                	.insn	2, 0x0004
    362c:	0501                	.insn	2, 0x0501
    362e:	0301                	.insn	2, 0x0301
    3630:	0901                	.insn	2, 0x0901
    3632:	0004                	.insn	2, 0x0004
    3634:	0901                	.insn	2, 0x0901
    3636:	0014                	.insn	2, 0x0014
    3638:	0100                	.insn	2, 0x0100
    363a:	Address 0x363a is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
       0:	6e75                	.insn	2, 0x6e75
       2:	6e676973          	csrrsi	s2,0x6e6,14
       6:	6465                	.insn	2, 0x6465
       8:	6320                	.insn	2, 0x6320
       a:	6168                	.insn	2, 0x6168
       c:	0072                	.insn	2, 0x0072
       e:	726f6873          	csrrsi	a6,mhpmevent6h,30
      12:	2074                	.insn	2, 0x2074
      14:	6e75                	.insn	2, 0x6e75
      16:	6e676973          	csrrsi	s2,0x6e6,14
      1a:	6465                	.insn	2, 0x6465
      1c:	6920                	.insn	2, 0x6920
      1e:	746e                	.insn	2, 0x746e
      20:	7600                	.insn	2, 0x7600
      22:	7041                	.insn	2, 0x7041
      24:	6c70                	.insn	2, 0x6c70
      26:	6369                	.insn	2, 0x6369
      28:	7461                	.insn	2, 0x7461
      2a:	6f69                	.insn	2, 0x6f69
      2c:	476e                	.insn	2, 0x476e
      2e:	7465                	.insn	2, 0x7465
      30:	6954                	.insn	2, 0x6954
      32:	656d                	.insn	2, 0x656d
      34:	5472                	.insn	2, 0x5472
      36:	7361                	.insn	2, 0x7361
      38:	6d654d6b          	.insn	4, 0x6d654d6b
      3c:	0079726f          	jal	tp,97842 <__start-0x7ff687be>
      40:	616d                	.insn	2, 0x616d
      42:	6e69                	.insn	2, 0x6e69
      44:	7600                	.insn	2, 0x7600
      46:	7041                	.insn	2, 0x7041
      48:	6c70                	.insn	2, 0x6c70
      4a:	6369                	.insn	2, 0x6369
      4c:	7461                	.insn	2, 0x7461
      4e:	6f69                	.insn	2, 0x6f69
      50:	476e                	.insn	2, 0x476e
      52:	7465                	.insn	2, 0x7465
      54:	6449                	.insn	2, 0x6449
      56:	656c                	.insn	2, 0x656c
      58:	6154                	.insn	2, 0x6154
      5a:	654d6b73          	csrrsi	s6,0x654,26
      5e:	6f6d                	.insn	2, 0x6f6d
      60:	7972                	.insn	2, 0x7972
      62:	4700                	.insn	2, 0x4700
      64:	554e                	.insn	2, 0x554e
      66:	4320                	.insn	2, 0x4320
      68:	3731                	.insn	2, 0x3731
      6a:	3120                	.insn	2, 0x3120
      6c:	2e34                	.insn	2, 0x2e34
      6e:	2e32                	.insn	2, 0x2e32
      70:	2030                	.insn	2, 0x2030
      72:	6d2d                	.insn	2, 0x6d2d
      74:	6261                	.insn	2, 0x6261
      76:	3d69                	.insn	2, 0x3d69
      78:	6c69                	.insn	2, 0x6c69
      7a:	3370                	.insn	2, 0x3370
      7c:	2032                	.insn	2, 0x2032
      7e:	6d2d                	.insn	2, 0x6d2d
      80:	7574                	.insn	2, 0x7574
      82:	656e                	.insn	2, 0x656e
      84:	723d                	.insn	2, 0x723d
      86:	656b636f          	jal	t1,b66dc <__start-0x7ff49924>
      8a:	2074                	.insn	2, 0x2074
      8c:	6d2d                	.insn	2, 0x6d2d
      8e:	7369                	.insn	2, 0x7369
      90:	2d61                	.insn	2, 0x2d61
      92:	63657073          	csrrci	zero,0x636,10
      96:	323d                	.insn	2, 0x323d
      98:	3130                	.insn	2, 0x3130
      9a:	3139                	.insn	2, 0x3139
      9c:	3132                	.insn	2, 0x3132
      9e:	6d2d2033          	.insn	4, 0x6d2d2033
      a2:	6c74                	.insn	2, 0x6c74
      a4:	69642d73          	csrrs	s10,0x696,s0
      a8:	6c61                	.insn	2, 0x6c61
      aa:	6365                	.insn	2, 0x6365
      ac:	3d74                	.insn	2, 0x3d74
      ae:	7274                	.insn	2, 0x7274
      b0:	6461                	.insn	2, 0x6461
      b2:	2d20                	.insn	2, 0x2d20
      b4:	616d                	.insn	2, 0x616d
      b6:	6372                	.insn	2, 0x6372
      b8:	3d68                	.insn	2, 0x3d68
      ba:	7672                	.insn	2, 0x7672
      bc:	5f693233          	.insn	4, 0x5f693233
      c0:	697a                	.insn	2, 0x697a
      c2:	20727363          	bgeu	tp,t2,2c8 <__start-0x7ffffd38>
      c6:	672d                	.insn	2, 0x672d
      c8:	2d20                	.insn	2, 0x2d20
      ca:	6666                	.insn	2, 0x6666
      cc:	6572                	.insn	2, 0x6572
      ce:	7365                	.insn	2, 0x7365
      d0:	6174                	.insn	2, 0x6174
      d2:	646e                	.insn	2, 0x646e
      d4:	6e69                	.insn	2, 0x6e69
      d6:	6f6c0067          	jalr	zero,1782(s8)
      da:	676e                	.insn	2, 0x676e
      dc:	6c20                	.insn	2, 0x6c20
      de:	20676e6f          	jal	t3,762e4 <__start-0x7ff89d1c>
      e2:	6e75                	.insn	2, 0x6e75
      e4:	6e676973          	csrrsi	s2,0x6e6,14
      e8:	6465                	.insn	2, 0x6465
      ea:	6920                	.insn	2, 0x6920
      ec:	746e                	.insn	2, 0x746e
      ee:	6c00                	.insn	2, 0x6c00
      f0:	20676e6f          	jal	t3,762f6 <__start-0x7ff89d0a>
      f4:	6f6c                	.insn	2, 0x6f6c
      f6:	676e                	.insn	2, 0x676e
      f8:	6920                	.insn	2, 0x6920
      fa:	746e                	.insn	2, 0x746e
      fc:	7300                	.insn	2, 0x7300
      fe:	6f68                	.insn	2, 0x6f68
     100:	7472                	.insn	2, 0x7472
     102:	6920                	.insn	2, 0x6920
     104:	746e                	.insn	2, 0x746e
     106:	7600                	.insn	2, 0x7600
     108:	7041                	.insn	2, 0x7041
     10a:	6c70                	.insn	2, 0x6c70
     10c:	6369                	.insn	2, 0x6369
     10e:	7461                	.insn	2, 0x7461
     110:	6f69                	.insn	2, 0x6f69
     112:	546e                	.insn	2, 0x546e
     114:	6369                	.insn	2, 0x6369
     116:	6f6f486b          	.insn	4, 0x6f6f486b
     11a:	6f6c006b          	.insn	4, 0x6f6c006b
     11e:	676e                	.insn	2, 0x676e
     120:	6420                	.insn	2, 0x6420
     122:	6c62756f          	jal	a0,277e8 <__start-0x7ffd8818>
     126:	0065                	.insn	2, 0x0065
     128:	4176                	.insn	2, 0x4176
     12a:	7070                	.insn	2, 0x7070
     12c:	696c                	.insn	2, 0x696c
     12e:	69746163          	bltu	s0,s7,7b0 <__start-0x7ffff850>
     132:	74536e6f          	jal	t3,37076 <__start-0x7ffc8f8a>
     136:	6361                	.insn	2, 0x6361
     138:	65764f6b          	.insn	4, 0x65764f6b
     13c:	6672                	.insn	2, 0x6672
     13e:	6f6c                	.insn	2, 0x6f6c
     140:	6f6f4877          	.insn	4, 0x6f6f4877
     144:	4176006b          	.insn	4, 0x4176006b
     148:	7070                	.insn	2, 0x7070
     14a:	696c                	.insn	2, 0x696c
     14c:	69746163          	bltu	s0,s7,7ce <__start-0x7ffff832>
     150:	64496e6f          	jal	t3,96794 <__start-0x7ff6986c>
     154:	656c                	.insn	2, 0x656c
     156:	6f48                	.insn	2, 0x6f48
     158:	70006b6f          	jal	s6,6858 <__start-0x7fff97a8>
     15c:	4376                	.insn	2, 0x4376
     15e:	61746e6f          	jal	t3,46f74 <__start-0x7ffb908c>
     162:	6e69                	.insn	2, 0x6e69
     164:	7265                	.insn	2, 0x7265
     166:	5400                	.insn	2, 0x5400
     168:	6369                	.insn	2, 0x6369
     16a:	7079546b          	.insn	4, 0x7079546b
     16e:	5f65                	.insn	2, 0x5f65
     170:	0074                	.insn	2, 0x0074
     172:	694d                	.insn	2, 0x694d
     174:	696e                	.insn	2, 0x696e
     176:	694c                	.insn	2, 0x694c
     178:	74497473          	csrrci	s0,0x744,18
     17c:	6d65                	.insn	2, 0x6d65
     17e:	745f 7800 7449      	.insn	6, 0x74497800745f
     184:	6d65                	.insn	2, 0x6d65
     186:	6156                	.insn	2, 0x6156
     188:	756c                	.insn	2, 0x756c
     18a:	0065                	.insn	2, 0x0065
     18c:	4c78                	.insn	2, 0x4c78
     18e:	7369                	.insn	2, 0x7369
     190:	4574                	.insn	2, 0x4574
     192:	646e                	.insn	2, 0x646e
     194:	7000                	.insn	2, 0x7000
     196:	4f76                	.insn	2, 0x4f76
     198:	72656e77          	.insn	4, 0x72656e77
     19c:	7800                	.insn	2, 0x7800
     19e:	494c                	.insn	2, 0x494c
     1a0:	495f5453          	.insn	4, 0x495f5453
     1a4:	4554                	.insn	2, 0x4554
     1a6:	004d                	.insn	2, 0x004d
     1a8:	7870                	.insn	2, 0x7870
     1aa:	7449                	.insn	2, 0x7449
     1ac:	6d65                	.insn	2, 0x6d65
     1ae:	6f54                	.insn	2, 0x6f54
     1b0:	6552                	.insn	2, 0x6552
     1b2:	6f6d                	.insn	2, 0x6f6d
     1b4:	6576                	.insn	2, 0x6576
     1b6:	7600                	.insn	2, 0x7600
     1b8:	694c                	.insn	2, 0x694c
     1ba:	6e497473          	csrrci	s0,0x6e4,18
     1be:	7469                	.insn	2, 0x7469
     1c0:	6169                	.insn	2, 0x6169
     1c2:	696c                	.insn	2, 0x696c
     1c4:	74496573          	csrrsi	a0,0x744,18
     1c8:	6d65                	.insn	2, 0x6d65
     1ca:	4c00                	.insn	2, 0x4c00
     1cc:	7369                	.insn	2, 0x7369
     1ce:	5f74                	.insn	2, 0x5f74
     1d0:	0074                	.insn	2, 0x0074
     1d2:	7875                	.insn	2, 0x7875
     1d4:	754e                	.insn	2, 0x754e
     1d6:	626d                	.insn	2, 0x626d
     1d8:	7265                	.insn	2, 0x7265
     1da:	7449664f          	.insn	4, 0x7449664f
     1de:	6d65                	.insn	2, 0x6d65
     1e0:	4c760073          	.insn	4, 0x4c760073
     1e4:	7369                	.insn	2, 0x7369
     1e6:	4974                	.insn	2, 0x4974
     1e8:	736e                	.insn	2, 0x736e
     1ea:	7265                	.insn	2, 0x7265
     1ec:	4574                	.insn	2, 0x4574
     1ee:	646e                	.insn	2, 0x646e
     1f0:	7000                	.insn	2, 0x7000
     1f2:	4e78                	.insn	2, 0x4e78
     1f4:	7865                	.insn	2, 0x7865
     1f6:	0074                	.insn	2, 0x0074
     1f8:	4c76                	.insn	2, 0x4c76
     1fa:	7369                	.insn	2, 0x7369
     1fc:	4974                	.insn	2, 0x4974
     1fe:	696e                	.insn	2, 0x696e
     200:	6974                	.insn	2, 0x6974
     202:	6c61                	.insn	2, 0x6c61
     204:	7369                	.insn	2, 0x7369
     206:	0065                	.insn	2, 0x0065
     208:	5678                	.insn	2, 0x5678
     20a:	6c61                	.insn	2, 0x6c61
     20c:	6575                	.insn	2, 0x6575
     20e:	6e49664f          	.insn	4, 0x6e49664f
     212:	74726573          	csrrsi	a0,0x747,4
     216:	6f69                	.insn	2, 0x6f69
     218:	006e                	.insn	2, 0x006e
     21a:	7870                	.insn	2, 0x7870
     21c:	7449                	.insn	2, 0x7449
     21e:	6d65                	.insn	2, 0x6d65
     220:	5500                	.insn	2, 0x5500
     222:	6142                	.insn	2, 0x6142
     224:	79546573          	csrrsi	a0,0x795,8
     228:	6570                	.insn	2, 0x6570
     22a:	745f 7000 4978      	.insn	6, 0x49787000745f
     230:	6574                	.insn	2, 0x6574
     232:	6172                	.insn	2, 0x6172
     234:	6f74                	.insn	2, 0x6f74
     236:	0072                	.insn	2, 0x0072
     238:	7870                	.insn	2, 0x7870
     23a:	6e49                	.insn	2, 0x6e49
     23c:	6564                	.insn	2, 0x6564
     23e:	0078                	.insn	2, 0x0078
     240:	7870                	.insn	2, 0x7870
     242:	7250                	.insn	2, 0x7250
     244:	7665                	.insn	2, 0x7665
     246:	6f69                	.insn	2, 0x6f69
     248:	7375                	.insn	2, 0x7375
     24a:	7500                	.insn	2, 0x7500
     24c:	6e69                	.insn	2, 0x6e69
     24e:	3374                	.insn	2, 0x3374
     250:	5f32                	.insn	2, 0x5f32
     252:	0074                	.insn	2, 0x0074
     254:	4d78                	.insn	2, 0x4d78
     256:	4e49                	.insn	2, 0x4e49
     258:	5f49                	.insn	2, 0x5f49
     25a:	494c                	.insn	2, 0x494c
     25c:	495f5453          	.insn	4, 0x495f5453
     260:	4554                	.insn	2, 0x4554
     262:	004d                	.insn	2, 0x004d
     264:	7870                	.insn	2, 0x7870
     266:	694c                	.insn	2, 0x694c
     268:	78007473          	csrrci	s0,0x780,0
     26c:	494c                	.insn	2, 0x494c
     26e:	75005453          	.insn	4, 0x75005453
     272:	4c78                	.insn	2, 0x4c78
     274:	7369                	.insn	2, 0x7369
     276:	5274                	.insn	2, 0x5274
     278:	6d65                	.insn	2, 0x6d65
     27a:	0065766f          	jal	a2,57280 <__start-0x7ffa8d80>
     27e:	7870                	.insn	2, 0x7870
     280:	654e                	.insn	2, 0x654e
     282:	73694c77          	.insn	4, 0x73694c77
     286:	4974                	.insn	2, 0x4974
     288:	6574                	.insn	2, 0x6574
     28a:	006d                	.insn	2, 0x006d
     28c:	4c76                	.insn	2, 0x4c76
     28e:	7369                	.insn	2, 0x7369
     290:	4974                	.insn	2, 0x4974
     292:	736e                	.insn	2, 0x736e
     294:	7265                	.insn	2, 0x7265
     296:	0074                	.insn	2, 0x0074
     298:	7875                	.insn	2, 0x7875
     29a:	7250                	.insn	2, 0x7250
     29c:	7665                	.insn	2, 0x7665
     29e:	6f69                	.insn	2, 0x6f69
     2a0:	7375                	.insn	2, 0x7375
     2a2:	654d                	.insn	2, 0x654d
     2a4:	67617373          	csrrci	t1,0x676,2
     2a8:	7365                	.insn	2, 0x7365
     2aa:	74696157          	.insn	4, 0x74696157
     2ae:	6e69                	.insn	2, 0x6e69
     2b0:	63750067          	jalr	zero,1591(a0)
     2b4:	7551                	.insn	2, 0x7551
     2b6:	7565                	.insn	2, 0x7565
     2b8:	5465                	.insn	2, 0x5465
     2ba:	7079                	.insn	2, 0x7079
     2bc:	0065                	.insn	2, 0x0065
     2be:	5178                	.insn	2, 0x5178
     2c0:	6575                	.insn	2, 0x6575
     2c2:	6575                	.insn	2, 0x6575
     2c4:	656e6547          	.insn	4, 0x656e6547
     2c8:	6972                	.insn	2, 0x6972
     2ca:	6e655363          	bge	a0,t1,9b0 <__start-0x7ffff650>
     2ce:	4664                	.insn	2, 0x4664
     2d0:	6f72                	.insn	2, 0x6f72
     2d2:	496d                	.insn	2, 0x496d
     2d4:	75005253          	.insn	4, 0x75005253
     2d8:	5178                	.insn	2, 0x5178
     2da:	6575                	.insn	2, 0x6575
     2dc:	6575                	.insn	2, 0x6575
     2de:	654d                	.insn	2, 0x654d
     2e0:	67617373          	csrrci	t1,0x676,2
     2e4:	7365                	.insn	2, 0x7365
     2e6:	74696157          	.insn	4, 0x74696157
     2ea:	6e69                	.insn	2, 0x6e69
     2ec:	69730067          	jalr	zero,1687(t1) # 9022f11 <__start-0x76fdd0ef>
     2f0:	657a                	.insn	2, 0x657a
     2f2:	745f 5400 6d69      	.insn	6, 0x6d695400745f
     2f8:	4f65                	.insn	2, 0x4f65
     2fa:	7475                	.insn	2, 0x7475
     2fc:	745f 7000 4878      	.insn	6, 0x48787000745f
     302:	6769                	.insn	2, 0x6769
     304:	6568                	.insn	2, 0x6568
     306:	5072                	.insn	2, 0x5072
     308:	6972                	.insn	2, 0x6972
     30a:	7469726f          	jal	tp,97a50 <__start-0x7ff685b0>
     30e:	5479                	.insn	2, 0x5479
     310:	7361                	.insn	2, 0x7361
     312:	6b6f576b          	.insn	4, 0x6b6f576b
     316:	6e65                	.insn	2, 0x6e65
     318:	7800                	.insn	2, 0x7800
     31a:	7551                	.insn	2, 0x7551
     31c:	7565                	.insn	2, 0x7565
     31e:	4965                	.insn	2, 0x4965
     320:	65755173          	csrrwi	sp,hviprio2h,10
     324:	6575                	.insn	2, 0x6575
     326:	6d45                	.insn	2, 0x6d45
     328:	7470                	.insn	2, 0x7470
     32a:	4679                	.insn	2, 0x4679
     32c:	6f72                	.insn	2, 0x6f72
     32e:	496d                	.insn	2, 0x496d
     330:	70005253          	.insn	4, 0x70005253
     334:	7672                	.insn	2, 0x7672
     336:	7349                	.insn	2, 0x7349
     338:	7551                	.insn	2, 0x7551
     33a:	7565                	.insn	2, 0x7565
     33c:	4565                	.insn	2, 0x4565
     33e:	706d                	.insn	2, 0x706d
     340:	7974                	.insn	2, 0x7974
     342:	7800                	.insn	2, 0x7800
     344:	7551                	.insn	2, 0x7551
     346:	7565                	.insn	2, 0x7565
     348:	5065                	.insn	2, 0x5065
     34a:	6565                	.insn	2, 0x6565
     34c:	5178006b          	.insn	4, 0x5178006b
     350:	6575                	.insn	2, 0x6575
     352:	6575                	.insn	2, 0x6575
     354:	6550                	.insn	2, 0x6550
     356:	6b65                	.insn	2, 0x6b65
     358:	7246                	.insn	2, 0x7246
     35a:	53496d6f          	jal	s10,9688e <__start-0x7ff69772>
     35e:	0052                	.insn	2, 0x0052
     360:	7875                	.insn	2, 0x7875
     362:	7551                	.insn	2, 0x7551
     364:	7565                	.insn	2, 0x7565
     366:	4765                	.insn	2, 0x4765
     368:	7465                	.insn	2, 0x7465
     36a:	7551                	.insn	2, 0x7551
     36c:	7565                	.insn	2, 0x7565
     36e:	4965                	.insn	2, 0x4965
     370:	6574                	.insn	2, 0x6574
     372:	536d                	.insn	2, 0x536d
     374:	7a69                	.insn	2, 0x7a69
     376:	0065                	.insn	2, 0x0065
     378:	7270                	.insn	2, 0x7270
     37a:	4376                	.insn	2, 0x4376
     37c:	4479706f          	jal	zero,97fc2 <__start-0x7ff6803e>
     380:	7461                	.insn	2, 0x7461
     382:	4661                	.insn	2, 0x4661
     384:	6f72                	.insn	2, 0x6f72
     386:	516d                	.insn	2, 0x516d
     388:	6575                	.insn	2, 0x6575
     38a:	6575                	.insn	2, 0x6575
     38c:	7000                	.insn	2, 0x7000
     38e:	4e78                	.insn	2, 0x4e78
     390:	7765                	.insn	2, 0x7765
     392:	7551                	.insn	2, 0x7551
     394:	7565                	.insn	2, 0x7565
     396:	0065                	.insn	2, 0x0065
     398:	7270                	.insn	2, 0x7270
     39a:	4376                	.insn	2, 0x4376
     39c:	4479706f          	jal	zero,97fe2 <__start-0x7ff6801e>
     3a0:	7461                	.insn	2, 0x7461
     3a2:	5461                	.insn	2, 0x5461
     3a4:	6575516f          	jal	sp,561fa <__start-0x7ffa9e06>
     3a8:	6575                	.insn	2, 0x6575
     3aa:	5100                	.insn	2, 0x5100
     3ac:	6575                	.insn	2, 0x6575
     3ae:	6575                	.insn	2, 0x6575
     3b0:	6148                	.insn	2, 0x6148
     3b2:	646e                	.insn	2, 0x646e
     3b4:	656c                	.insn	2, 0x656c
     3b6:	745f 7800 4954      	.insn	6, 0x49547800745f
     3bc:	454d                	.insn	2, 0x454d
     3be:	4f5f 5455 7000      	.insn	6, 0x700054554f5f
     3c4:	69724f63          	blt	tp,s7,a62 <__start-0x7ffff59e>
     3c8:	616e6967          	.insn	4, 0x616e6967
     3cc:	526c                	.insn	2, 0x526c
     3ce:	6165                	.insn	2, 0x6165
     3d0:	5064                	.insn	2, 0x5064
     3d2:	7469736f          	jal	t1,97b18 <__start-0x7ff684e8>
     3d6:	6f69                	.insn	2, 0x6f69
     3d8:	006e                	.insn	2, 0x006e
     3da:	5178                	.insn	2, 0x5178
     3dc:	6575                	.insn	2, 0x6575
     3de:	6575                	.insn	2, 0x6575
     3e0:	65766947          	.insn	4, 0x65766947
     3e4:	7246                	.insn	2, 0x7246
     3e6:	53496d6f          	jal	s10,9691a <__start-0x7ff696e6>
     3ea:	0052                	.insn	2, 0x0052
     3ec:	7374                	.insn	2, 0x7374
     3ee:	7361546b          	.insn	4, 0x7361546b
     3f2:	6e6f436b          	.insn	4, 0x6e6f436b
     3f6:	7274                	.insn	2, 0x7274
     3f8:	6c426c6f          	jal	s8,26abc <__start-0x7ffd9544>
     3fc:	006b636f          	jal	t1,b6402 <__start-0x7ff49bfe>
     400:	4c785463          	bge	a6,t2,8c8 <__start-0x7ffff738>
     404:	006b636f          	jal	t1,b640a <__start-0x7ff49bf6>
     408:	6154                	.insn	2, 0x6154
     40a:	61486b73          	csrrsi	s6,0x614,16
     40e:	646e                	.insn	2, 0x646e
     410:	656c                	.insn	2, 0x656c
     412:	745f 6d00 6d65      	.insn	6, 0x6d656d00745f
     418:	00797063          	bgeu	s2,t2,418 <__start-0x7ffffbe8>
     41c:	6370                	.insn	2, 0x6370
     41e:	6552                	.insn	2, 0x6552
     420:	6461                	.insn	2, 0x6461
     422:	7246                	.insn	2, 0x7246
     424:	75006d6f          	jal	s10,6b74 <__start-0x7fff948c>
     428:	5378                	.insn	2, 0x5378
     42a:	6d65                	.insn	2, 0x6d65
     42c:	7061                	.insn	2, 0x7061
     42e:	6f68                	.insn	2, 0x6f68
     430:	6572                	.insn	2, 0x6572
     432:	6e756f43          	.insn	4, 0x6e756f43
     436:	0074                	.insn	2, 0x0074
     438:	7270                	.insn	2, 0x7270
     43a:	4976                	.insn	2, 0x4976
     43c:	696e                	.insn	2, 0x696e
     43e:	6974                	.insn	2, 0x6974
     440:	6c61                	.insn	2, 0x6c61
     442:	7369                	.insn	2, 0x7369
     444:	4e65                	.insn	2, 0x4e65
     446:	7765                	.insn	2, 0x7765
     448:	7551                	.insn	2, 0x7551
     44a:	7565                	.insn	2, 0x7565
     44c:	0065                	.insn	2, 0x0065
     44e:	4f78                	.insn	2, 0x4f78
     450:	6576                	.insn	2, 0x6576
     452:	6672                	.insn	2, 0x6672
     454:	6f6c                	.insn	2, 0x6f6c
     456:	756f4377          	.insn	4, 0x756f4377
     45a:	746e                	.insn	2, 0x746e
     45c:	7000                	.insn	2, 0x7000
     45e:	5076                	.insn	2, 0x5076
     460:	4d74726f          	jal	tp,48136 <__start-0x7ffb7eca>
     464:	6c61                	.insn	2, 0x6c61
     466:	6f6c                	.insn	2, 0x6f6c
     468:	51760063          	beq	a2,s7,968 <__start-0x7ffff698>
     46c:	6575                	.insn	2, 0x6575
     46e:	6575                	.insn	2, 0x6575
     470:	6544                	.insn	2, 0x6544
     472:	656c                	.insn	2, 0x656c
     474:	6574                	.insn	2, 0x6574
     476:	7500                	.insn	2, 0x7500
     478:	4c78                	.insn	2, 0x4c78
     47a:	6e65                	.insn	2, 0x6e65
     47c:	00687467          	.insn	4, 0x00687467
     480:	5476                	.insn	2, 0x5476
     482:	7361                	.insn	2, 0x7361
     484:	616c506b          	.insn	4, 0x616c506b
     488:	6e4f6563          	bltu	t5,tp,b72 <__start-0x7ffff48e>
     48c:	7645                	.insn	2, 0x7645
     48e:	6e65                	.insn	2, 0x6e65
     490:	4c74                	.insn	2, 0x4c74
     492:	7369                	.insn	2, 0x7369
     494:	0074                	.insn	2, 0x0074
     496:	6370                	.insn	2, 0x6370
     498:	6548                	.insn	2, 0x6548
     49a:	6461                	.insn	2, 0x6461
     49c:	7800                	.insn	2, 0x7800
     49e:	6954                	.insn	2, 0x6954
     4a0:	656d                	.insn	2, 0x656d
     4a2:	6e456e4f          	.insn	4, 0x6e456e4f
     4a6:	6574                	.insn	2, 0x6574
     4a8:	6972                	.insn	2, 0x6972
     4aa:	676e                	.insn	2, 0x676e
     4ac:	7800                	.insn	2, 0x7800
     4ae:	79706f43          	.insn	4, 0x79706f43
     4b2:	6f50                	.insn	2, 0x6f50
     4b4:	69746973          	csrrsi	s2,0x697,8
     4b8:	78006e6f          	jal	t3,6c38 <__start-0x7fff93c8>
     4bc:	7551                	.insn	2, 0x7551
     4be:	7565                	.insn	2, 0x7565
     4c0:	5365                	.insn	2, 0x5365
     4c2:	6d65                	.insn	2, 0x6d65
     4c4:	7061                	.insn	2, 0x7061
     4c6:	6f68                	.insn	2, 0x6f68
     4c8:	6572                	.insn	2, 0x6572
     4ca:	6154                	.insn	2, 0x6154
     4cc:	7800656b          	.insn	4, 0x7800656b
     4d0:	7551                	.insn	2, 0x7551
     4d2:	7565                	.insn	2, 0x7565
     4d4:	4765                	.insn	2, 0x4765
     4d6:	6e65                	.insn	2, 0x6e65
     4d8:	7265                	.insn	2, 0x7265
     4da:	6369                	.insn	2, 0x6369
     4dc:	646e6553          	.insn	4, 0x646e6553
     4e0:	7800                	.insn	2, 0x7800
     4e2:	6959                	.insn	2, 0x6959
     4e4:	6c65                	.insn	2, 0x6c65
     4e6:	5264                	.insn	2, 0x5264
     4e8:	7165                	.insn	2, 0x7165
     4ea:	6975                	.insn	2, 0x6975
     4ec:	6572                	.insn	2, 0x6572
     4ee:	0064                	.insn	2, 0x0064
     4f0:	5178                	.insn	2, 0x5178
     4f2:	6575                	.insn	2, 0x6575
     4f4:	6575                	.insn	2, 0x6575
     4f6:	6552                	.insn	2, 0x6552
     4f8:	76696563          	bltu	s2,t1,c62 <__start-0x7ffff39e>
     4fc:	0065                	.insn	2, 0x0065
     4fe:	7875                	.insn	2, 0x7875
     500:	6552                	.insn	2, 0x6552
     502:	7574                	.insn	2, 0x7574
     504:	6e72                	.insn	2, 0x6e72
     506:	7800                	.insn	2, 0x7800
     508:	754d                	.insn	2, 0x754d
     50a:	6574                	.insn	2, 0x6574
     50c:	4878                	.insn	2, 0x4878
     50e:	65646c6f          	jal	s8,46b64 <__start-0x7ffb949c>
     512:	0072                	.insn	2, 0x0072
     514:	5076                	.insn	2, 0x5076
     516:	4674726f          	jal	tp,4817c <__start-0x7ffb7e84>
     51a:	6572                	.insn	2, 0x6572
     51c:	0065                	.insn	2, 0x0065
     51e:	5178                	.insn	2, 0x5178
     520:	6575                	.insn	2, 0x6575
     522:	6575                	.insn	2, 0x6575
     524:	6552                	.insn	2, 0x6552
     526:	76696563          	bltu	s2,t1,c90 <__start-0x7ffff370>
     52a:	4665                	.insn	2, 0x4665
     52c:	6f72                	.insn	2, 0x6f72
     52e:	496d                	.insn	2, 0x496d
     530:	75005253          	.insn	4, 0x75005253
     534:	5178                	.insn	2, 0x5178
     536:	6575                	.insn	2, 0x6575
     538:	6575                	.insn	2, 0x6575
     53a:	51746547          	.insn	4, 0x51746547
     53e:	6575                	.insn	2, 0x6575
     540:	6575                	.insn	2, 0x6575
     542:	654c                	.insn	2, 0x654c
     544:	676e                	.insn	2, 0x676e
     546:	6874                	.insn	2, 0x6874
     548:	5100                	.insn	2, 0x5100
     54a:	6575                	.insn	2, 0x6575
     54c:	6575                	.insn	2, 0x6575
     54e:	6f50                	.insn	2, 0x6f50
     550:	6e69                	.insn	2, 0x6e69
     552:	6574                	.insn	2, 0x6574
     554:	7372                	.insn	2, 0x7372
     556:	7000                	.insn	2, 0x7000
     558:	7672                	.insn	2, 0x7672
     55a:	7349                	.insn	2, 0x7349
     55c:	7551                	.insn	2, 0x7551
     55e:	7565                	.insn	2, 0x7565
     560:	4665                	.insn	2, 0x4665
     562:	6c75                	.insn	2, 0x6c75
     564:	006c                	.insn	2, 0x006c
     566:	616d6553          	.insn	4, 0x616d6553
     56a:	6870                	.insn	2, 0x6870
     56c:	4465726f          	jal	tp,579b2 <__start-0x7ffa864e>
     570:	7461                	.insn	2, 0x7461
     572:	5f61                	.insn	2, 0x5f61
     574:	0074                	.insn	2, 0x0074
     576:	7551                	.insn	2, 0x7551
     578:	7565                	.insn	2, 0x7565
     57a:	5f65                	.insn	2, 0x5f65
     57c:	0074                	.insn	2, 0x0074
     57e:	7875                	.insn	2, 0x7875
     580:	7551                	.insn	2, 0x7551
     582:	7565                	.insn	2, 0x7565
     584:	4c65                	.insn	2, 0x4c65
     586:	6e65                	.insn	2, 0x6e65
     588:	00687467          	.insn	4, 0x00687467
     58c:	7875                	.insn	2, 0x7875
     58e:	754e                	.insn	2, 0x754e
     590:	626d                	.insn	2, 0x626d
     592:	7265                	.insn	2, 0x7265
     594:	6154664f          	.insn	4, 0x6154664f
     598:	00736b73          	csrrsi	s6,0x7,6
     59c:	5478                	.insn	2, 0x5478
     59e:	7361                	.insn	2, 0x7361
     5a0:	6157736b          	.insn	4, 0x6157736b
     5a4:	7469                	.insn	2, 0x7469
     5a6:	6e69                	.insn	2, 0x6e69
     5a8:	526f5467          	.insn	4, 0x526f5467
     5ac:	6365                	.insn	2, 0x6365
     5ae:	6965                	.insn	2, 0x6965
     5b0:	6576                	.insn	2, 0x6576
     5b2:	7500                	.insn	2, 0x7500
     5b4:	5178                	.insn	2, 0x5178
     5b6:	6575                	.insn	2, 0x6575
     5b8:	6575                	.insn	2, 0x6575
     5ba:	654d                	.insn	2, 0x654d
     5bc:	67617373          	csrrci	t1,0x676,2
     5c0:	7365                	.insn	2, 0x7365
     5c2:	74696157          	.insn	4, 0x74696157
     5c6:	6e69                	.insn	2, 0x6e69
     5c8:	6f724667          	.insn	4, 0x6f724667
     5cc:	496d                	.insn	2, 0x496d
     5ce:	78005253          	.insn	4, 0x78005253
     5d2:	616d6553          	.insn	4, 0x616d6553
     5d6:	6870                	.insn	2, 0x6870
     5d8:	0065726f          	jal	tp,575de <__start-0x7ffa8a22>
     5dc:	7670                	.insn	2, 0x7670
     5de:	7449                	.insn	2, 0x7449
     5e0:	6d65                	.insn	2, 0x6d65
     5e2:	6f54                	.insn	2, 0x6f54
     5e4:	7551                	.insn	2, 0x7551
     5e6:	7565                	.insn	2, 0x7565
     5e8:	0065                	.insn	2, 0x0065
     5ea:	5178                	.insn	2, 0x5178
     5ec:	4555                	.insn	2, 0x4555
     5ee:	4555                	.insn	2, 0x4555
     5f0:	7800                	.insn	2, 0x7800
     5f2:	6e45                	.insn	2, 0x6e45
     5f4:	7274                	.insn	2, 0x7274
     5f6:	5479                	.insn	2, 0x5479
     5f8:	6d69                	.insn	2, 0x6d69
     5fa:	5365                	.insn	2, 0x5365
     5fc:	7465                	.insn	2, 0x7465
     5fe:	5100                	.insn	2, 0x5100
     600:	6575                	.insn	2, 0x6575
     602:	6575                	.insn	2, 0x6575
     604:	6544                	.insn	2, 0x6544
     606:	6966                	.insn	2, 0x6966
     608:	696e                	.insn	2, 0x696e
     60a:	6974                	.insn	2, 0x6974
     60c:	53006e6f          	jal	t3,6b3c <__start-0x7fff94c4>
     610:	6d65                	.insn	2, 0x6d65
     612:	7061                	.insn	2, 0x7061
     614:	6f68                	.insn	2, 0x6f68
     616:	6572                	.insn	2, 0x6572
     618:	6144                	.insn	2, 0x6144
     61a:	6174                	.insn	2, 0x6174
     61c:	5f00                	.insn	2, 0x5f00
     61e:	695f 746e 5f38      	.insn	6, 0x5f38746e695f
     624:	0074                	.insn	2, 0x0074
     626:	7875                	.insn	2, 0x7875
     628:	6552                	.insn	2, 0x6552
     62a:	73727563          	bgeu	tp,s7,d54 <__start-0x7ffff2ac>
     62e:	7669                	.insn	2, 0x7669
     630:	4365                	.insn	2, 0x4365
     632:	6c61                	.insn	2, 0x6c61
     634:	436c                	.insn	2, 0x436c
     636:	746e756f          	jal	a0,e7d7c <__start-0x7ff18284>
     63a:	6300                	.insn	2, 0x6300
     63c:	7852                	.insn	2, 0x7852
     63e:	6f4c                	.insn	2, 0x6f4c
     640:	51006b63          	bltu	zero,a6,b56 <__start-0x7ffff4aa>
     644:	6575                	.insn	2, 0x6575
     646:	6575                	.insn	2, 0x6575
     648:	6f50                	.insn	2, 0x6f50
     64a:	6e69                	.insn	2, 0x6e69
     64c:	6574                	.insn	2, 0x6574
     64e:	7372                	.insn	2, 0x7372
     650:	745f 7800 6154      	.insn	6, 0x61547800745f
     656:	65526b73          	csrrsi	s6,hviph,4
     65a:	656d7573          	csrrci	a0,hviprio1h,26
     65e:	6c41                	.insn	2, 0x6c41
     660:	006c                	.insn	2, 0x006c
     662:	5178                	.insn	2, 0x5178
     664:	6575                	.insn	2, 0x6575
     666:	6575                	.insn	2, 0x6575
     668:	7349                	.insn	2, 0x7349
     66a:	7551                	.insn	2, 0x7551
     66c:	7565                	.insn	2, 0x7565
     66e:	4665                	.insn	2, 0x4665
     670:	6c75                	.insn	2, 0x6c75
     672:	466c                	.insn	2, 0x466c
     674:	6f72                	.insn	2, 0x6f72
     676:	496d                	.insn	2, 0x496d
     678:	78005253          	.insn	4, 0x78005253
     67c:	7551                	.insn	2, 0x7551
     67e:	7565                	.insn	2, 0x7565
     680:	4765                	.insn	2, 0x4765
     682:	6e65                	.insn	2, 0x6e65
     684:	7265                	.insn	2, 0x7265
     686:	6369                	.insn	2, 0x6369
     688:	61657243          	.insn	4, 0x61657243
     68c:	6574                	.insn	2, 0x6574
     68e:	7600                	.insn	2, 0x7600
     690:	6154                	.insn	2, 0x6154
     692:	694d6b73          	csrrsi	s6,0x694,26
     696:	64657373          	csrrci	t1,hviprio1,10
     69a:	6959                	.insn	2, 0x6959
     69c:	6c65                	.insn	2, 0x6c65
     69e:	0064                	.insn	2, 0x0064
     6a0:	7875                	.insn	2, 0x7875
     6a2:	65766153          	.insn	4, 0x65766153
     6a6:	4964                	.insn	2, 0x4964
     6a8:	746e                	.insn	2, 0x746e
     6aa:	7265                	.insn	2, 0x7265
     6ac:	7572                	.insn	2, 0x7572
     6ae:	7470                	.insn	2, 0x7470
     6b0:	74617453          	.insn	4, 0x74617453
     6b4:	7375                	.insn	2, 0x7375
     6b6:	7500                	.insn	2, 0x7500
     6b8:	4d78                	.insn	2, 0x4d78
     6ba:	7365                	.insn	2, 0x7365
     6bc:	65676173          	csrrsi	sp,hviprio1h,14
     6c0:	69615773          	csrrwi	a4,0x696,2
     6c4:	6974                	.insn	2, 0x6974
     6c6:	676e                	.insn	2, 0x676e
     6c8:	7000                	.insn	2, 0x7000
     6ca:	4276                	.insn	2, 0x4276
     6cc:	6675                	.insn	2, 0x6675
     6ce:	6566                	.insn	2, 0x6566
     6d0:	0072                	.insn	2, 0x0072
     6d2:	5178                	.insn	2, 0x5178
     6d4:	6575                	.insn	2, 0x6575
     6d6:	6575                	.insn	2, 0x6575
     6d8:	656e6547          	.insn	4, 0x656e6547
     6dc:	6972                	.insn	2, 0x6972
     6de:	73655263          	bge	a0,s6,e02 <__start-0x7ffff1fe>
     6e2:	7465                	.insn	2, 0x7465
     6e4:	7800                	.insn	2, 0x7800
     6e6:	6154                	.insn	2, 0x6154
     6e8:	65526b73          	csrrsi	s6,hviph,4
     6ec:	6f6d                	.insn	2, 0x6f6d
     6ee:	6576                	.insn	2, 0x6576
     6f0:	7246                	.insn	2, 0x7246
     6f2:	76456d6f          	jal	s10,56e56 <__start-0x7ffa91aa>
     6f6:	6e65                	.insn	2, 0x6e65
     6f8:	4c74                	.insn	2, 0x4c74
     6fa:	7369                	.insn	2, 0x7369
     6fc:	0074                	.insn	2, 0x0074
     6fe:	7270                	.insn	2, 0x7270
     700:	5576                	.insn	2, 0x5576
     702:	6c6e                	.insn	2, 0x6c6e
     704:	516b636f          	jal	t1,b6c1a <__start-0x7ff493e6>
     708:	6575                	.insn	2, 0x6575
     70a:	6575                	.insn	2, 0x6575
     70c:	7000                	.insn	2, 0x7000
     70e:	69615463          	bge	sp,s6,d96 <__start-0x7ffff26a>
     712:	006c                	.insn	2, 0x006c
     714:	5f5f 6e69 3374      	.insn	6, 0x33746e695f5f
     71a:	5f32                	.insn	2, 0x5f32
     71c:	0074                	.insn	2, 0x0074
     71e:	5478                	.insn	2, 0x5478
     720:	7361                	.insn	2, 0x7361
     722:	6568436b          	.insn	4, 0x6568436b
     726:	6f466b63          	bltu	a2,s4,e1c <__start-0x7ffff1e4>
     72a:	5472                	.insn	2, 0x5472
     72c:	6d69                	.insn	2, 0x6d69
     72e:	4f65                	.insn	2, 0x4f65
     730:	7475                	.insn	2, 0x7475
     732:	7000                	.insn	2, 0x7000
     734:	6375                	.insn	2, 0x6375
     736:	7551                	.insn	2, 0x7551
     738:	7565                	.insn	2, 0x7565
     73a:	5365                	.insn	2, 0x5365
     73c:	6f74                	.insn	2, 0x6f74
     73e:	6172                	.insn	2, 0x6172
     740:	75006567          	.insn	4, 0x75006567
     744:	5478                	.insn	2, 0x5478
     746:	7361                	.insn	2, 0x7361
     748:	7465476b          	.insn	4, 0x7465476b
     74c:	754e                	.insn	2, 0x754e
     74e:	626d                	.insn	2, 0x626d
     750:	7265                	.insn	2, 0x7265
     752:	6154664f          	.insn	4, 0x6154664f
     756:	00736b73          	csrrsi	s6,0x7,6
     75a:	5078                	.insn	2, 0x5078
     75c:	7469736f          	jal	t1,97ea2 <__start-0x7ff6815e>
     760:	6f69                	.insn	2, 0x6f69
     762:	006e                	.insn	2, 0x006e
     764:	5476                	.insn	2, 0x5476
     766:	7361                	.insn	2, 0x7361
     768:	7375536b          	.insn	4, 0x7375536b
     76c:	6570                	.insn	2, 0x6570
     76e:	646e                	.insn	2, 0x646e
     770:	6c41                	.insn	2, 0x6c41
     772:	006c                	.insn	2, 0x006c
     774:	5476                	.insn	2, 0x5476
     776:	7361                	.insn	2, 0x7361
     778:	746e496b          	.insn	4, 0x746e496b
     77c:	7265                	.insn	2, 0x7265
     77e:	616e                	.insn	2, 0x616e
     780:	536c                	.insn	2, 0x536c
     782:	7465                	.insn	2, 0x7465
     784:	6954                	.insn	2, 0x6954
     786:	656d                	.insn	2, 0x656d
     788:	5374754f          	.insn	4, 0x5374754f
     78c:	6174                	.insn	2, 0x6174
     78e:	6574                	.insn	2, 0x6574
     790:	7800                	.insn	2, 0x7800
     792:	6154                	.insn	2, 0x6154
     794:	57736b73          	csrrsi	s6,0x577,6
     798:	6961                	.insn	2, 0x6961
     79a:	6974                	.insn	2, 0x6974
     79c:	676e                	.insn	2, 0x676e
     79e:	6f54                	.insn	2, 0x6f54
     7a0:	646e6553          	.insn	4, 0x646e6553
     7a4:	7800                	.insn	2, 0x7800
     7a6:	7551                	.insn	2, 0x7551
     7a8:	7565                	.insn	2, 0x7565
     7aa:	5365                	.insn	2, 0x5365
     7ac:	7a69                	.insn	2, 0x7a69
     7ae:	4965                	.insn	2, 0x4965
     7b0:	426e                	.insn	2, 0x426e
     7b2:	7479                	.insn	2, 0x7479
     7b4:	7365                	.insn	2, 0x7365
     7b6:	7000                	.insn	2, 0x7000
     7b8:	5178                	.insn	2, 0x5178
     7ba:	6575                	.insn	2, 0x6575
     7bc:	6575                	.insn	2, 0x6575
     7be:	7500                	.insn	2, 0x7500
     7c0:	6e69                	.insn	2, 0x6e69
     7c2:	3874                	.insn	2, 0x3874
     7c4:	745f 7000 5763      	.insn	6, 0x57637000745f
     7ca:	6972                	.insn	2, 0x6972
     7cc:	6574                	.insn	2, 0x6574
     7ce:	6f54                	.insn	2, 0x6f54
     7d0:	7500                	.insn	2, 0x7500
     7d2:	4978                	.insn	2, 0x4978
     7d4:	6574                	.insn	2, 0x6574
     7d6:	536d                	.insn	2, 0x536d
     7d8:	7a69                	.insn	2, 0x7a69
     7da:	0065                	.insn	2, 0x0065
     7dc:	7875                	.insn	2, 0x7875
     7de:	7551                	.insn	2, 0x7551
     7e0:	7565                	.insn	2, 0x7565
     7e2:	5365                	.insn	2, 0x5365
     7e4:	6170                	.insn	2, 0x6170
     7e6:	41736563          	bltu	t1,s7,bf0 <__start-0x7ffff410>
     7ea:	6176                	.insn	2, 0x6176
     7ec:	6c69                	.insn	2, 0x6c69
     7ee:	6261                	.insn	2, 0x6261
     7f0:	656c                	.insn	2, 0x656c
     7f2:	7800                	.insn	2, 0x7800
     7f4:	65726f43          	.insn	4, 0x65726f43
     7f8:	4449                	.insn	2, 0x4449
     7fa:	7000                	.insn	2, 0x7000
     7fc:	73615463          	bge	sp,s6,f24 <__start-0x7ffff0dc>
     800:	6d614e6b          	.insn	4, 0x6d614e6b
     804:	0065                	.insn	2, 0x0065
     806:	5078                	.insn	2, 0x5078
     808:	5374726f          	jal	tp,4853e <__start-0x7ffb7ac2>
     80c:	6174                	.insn	2, 0x6174
     80e:	7472                	.insn	2, 0x7472
     810:	65686353          	.insn	4, 0x65686353
     814:	7564                	.insn	2, 0x7564
     816:	656c                	.insn	2, 0x656c
     818:	0072                	.insn	2, 0x0072
     81a:	7875                	.insn	2, 0x7875
     81c:	7250                	.insn	2, 0x7250
     81e:	6f69                	.insn	2, 0x6f69
     820:	6972                	.insn	2, 0x6972
     822:	7974                	.insn	2, 0x7974
     824:	7000                	.insn	2, 0x7000
     826:	4378                	.insn	2, 0x4378
     828:	74736e6f          	jal	t3,3776e <__start-0x7ffc8892>
     82c:	694c                	.insn	2, 0x694c
     82e:	75007473          	csrrci	s0,0x750,0
     832:	426c                	.insn	2, 0x426c
     834:	7469                	.insn	2, 0x7469
     836:	436f5473          	csrrwi	s0,0x436,30
     83a:	656c                	.insn	2, 0x656c
     83c:	7261                	.insn	2, 0x7261
     83e:	78456e4f          	.insn	4, 0x78456e4f
     842:	7469                	.insn	2, 0x7469
     844:	6500                	.insn	2, 0x6500
     846:	6f4e                	.insn	2, 0x6f4e
     848:	6341                	.insn	2, 0x6341
     84a:	6974                	.insn	2, 0x6974
     84c:	75006e6f          	jal	t3,6f9c <__start-0x7fff9064>
     850:	5478                	.insn	2, 0x5478
     852:	6552706f          	jal	zero,286a6 <__start-0x7ffd795a>
     856:	6461                	.insn	2, 0x6461
     858:	5079                	.insn	2, 0x5079
     85a:	6972                	.insn	2, 0x6972
     85c:	7469726f          	jal	tp,97fa2 <__start-0x7ff6805e>
     860:	0079                	.insn	2, 0x0079
     862:	7870                	.insn	2, 0x7870
     864:	6544                	.insn	2, 0x6544
     866:	616c                	.insn	2, 0x616c
     868:	6579                	.insn	2, 0x6579
     86a:	4c64                	.insn	2, 0x4c64
     86c:	7369                	.insn	2, 0x7369
     86e:	0074                	.insn	2, 0x0074
     870:	7870                	.insn	2, 0x7870
     872:	7645                	.insn	2, 0x7645
     874:	6e65                	.insn	2, 0x6e65
     876:	4c74                	.insn	2, 0x4c74
     878:	7369                	.insn	2, 0x7369
     87a:	0074                	.insn	2, 0x0074
     87c:	5378                	.insn	2, 0x5378
     87e:	64656863          	bltu	a0,t1,ece <__start-0x7ffff132>
     882:	6c75                	.insn	2, 0x6c75
     884:	7265                	.insn	2, 0x7265
     886:	7552                	.insn	2, 0x7552
     888:	6e6e                	.insn	2, 0x6e6e
     88a:	6e69                	.insn	2, 0x6e69
     88c:	74530067          	jalr	zero,1861(t1)
     890:	6361                	.insn	2, 0x6361
     892:	7079546b          	.insn	4, 0x7079546b
     896:	5f65                	.insn	2, 0x5f65
     898:	0074                	.insn	2, 0x0074
     89a:	6c75                	.insn	2, 0x6c75
     89c:	6942                	.insn	2, 0x6942
     89e:	7374                	.insn	2, 0x7374
     8a0:	6f54                	.insn	2, 0x6f54
     8a2:	61656c43          	.insn	4, 0x61656c43
     8a6:	0072                	.insn	2, 0x0072
     8a8:	5078                	.insn	2, 0x5078
     8aa:	6e65                	.insn	2, 0x6e65
     8ac:	6564                	.insn	2, 0x6564
     8ae:	4364                	.insn	2, 0x4364
     8b0:	746e756f          	jal	a0,e7ff6 <__start-0x7ff1800a>
     8b4:	78700073          	.insn	4, 0x78700073
     8b8:	6552                	.insn	2, 0x6552
     8ba:	6461                	.insn	2, 0x6461
     8bc:	5479                	.insn	2, 0x5479
     8be:	7361                	.insn	2, 0x7361
     8c0:	694c736b          	.insn	4, 0x694c736b
     8c4:	00737473          	csrrci	s0,0x7,6
     8c8:	6375                	.insn	2, 0x6375
     8ca:	6769724f          	.insn	4, 0x6769724f
     8ce:	6e69                	.insn	2, 0x6e69
     8d0:	6c61                	.insn	2, 0x6c61
     8d2:	6f4e                	.insn	2, 0x6f4e
     8d4:	6974                	.insn	2, 0x6974
     8d6:	7966                	.insn	2, 0x7966
     8d8:	74617453          	.insn	4, 0x74617453
     8dc:	0065                	.insn	2, 0x0065
     8de:	5476                	.insn	2, 0x5476
     8e0:	7361                	.insn	2, 0x7361
     8e2:	7465536b          	.insn	4, 0x7465536b
     8e6:	6954                	.insn	2, 0x6954
     8e8:	656d                	.insn	2, 0x656d
     8ea:	5374754f          	.insn	4, 0x5374754f
     8ee:	6174                	.insn	2, 0x6174
     8f0:	6574                	.insn	2, 0x6574
     8f2:	7800                	.insn	2, 0x7800
     8f4:	6154                	.insn	2, 0x6154
     8f6:	65476b73          	csrrsi	s6,0x654,14
     8fa:	656e                	.insn	2, 0x656e
     8fc:	6972                	.insn	2, 0x6972
     8fe:	746f4e63          	blt	t5,t1,105a <__start-0x7fffefa6>
     902:	6669                	.insn	2, 0x6669
     904:	4679                	.insn	2, 0x4679
     906:	6f72                	.insn	2, 0x6f72
     908:	496d                	.insn	2, 0x496d
     90a:	78005253          	.insn	4, 0x78005253
     90e:	6959                	.insn	2, 0x6959
     910:	6c65                	.insn	2, 0x6c65
     912:	5064                	.insn	2, 0x5064
     914:	6e65                	.insn	2, 0x6e65
     916:	6964                	.insn	2, 0x6964
     918:	676e                	.insn	2, 0x676e
     91a:	54780073          	.insn	4, 0x54780073
     91e:	7361                	.insn	2, 0x7361
     920:	636e496b          	.insn	4, 0x636e496b
     924:	6572                	.insn	2, 0x6572
     926:	656d                	.insn	2, 0x656d
     928:	746e                	.insn	2, 0x746e
     92a:	6954                	.insn	2, 0x6954
     92c:	78006b63          	bltu	zero,zero,10c2 <__start-0x7fffef3e>
     930:	6544                	.insn	2, 0x6544
     932:	616c                	.insn	2, 0x616c
     934:	6579                	.insn	2, 0x6579
     936:	5464                	.insn	2, 0x5464
     938:	7361                	.insn	2, 0x7361
     93a:	73694c6b          	.insn	4, 0x73694c6b
     93e:	3174                	.insn	2, 0x3174
     940:	7800                	.insn	2, 0x7800
     942:	6544                	.insn	2, 0x6544
     944:	616c                	.insn	2, 0x616c
     946:	6579                	.insn	2, 0x6579
     948:	5464                	.insn	2, 0x5464
     94a:	7361                	.insn	2, 0x7361
     94c:	73694c6b          	.insn	4, 0x73694c6b
     950:	3274                	.insn	2, 0x3274
     952:	7800                	.insn	2, 0x7800
     954:	6154                	.insn	2, 0x6154
     956:	61436b73          	csrrsi	s6,0x614,6
     95a:	6374                	.insn	2, 0x6374
     95c:	5568                	.insn	2, 0x5568
     95e:	5470                	.insn	2, 0x5470
     960:	6369                	.insn	2, 0x6369
     962:	7500736b          	.insn	4, 0x7500736b
     966:	506c                	.insn	2, 0x506c
     968:	7261                	.insn	2, 0x7261
     96a:	6d61                	.insn	2, 0x6d61
     96c:	7465                	.insn	2, 0x7465
     96e:	7265                	.insn	2, 0x7265
     970:	78750073          	.insn	4, 0x78750073
     974:	6e49                	.insn	2, 0x6e49
     976:	6564                	.insn	2, 0x6564
     978:	5478                	.insn	2, 0x5478
     97a:	656c436f          	jal	t1,c4fd0 <__start-0x7ff3b030>
     97e:	7261                	.insn	2, 0x7261
     980:	7400                	.insn	2, 0x7400
     982:	43546b73          	csrrsi	s6,0x435,8
     986:	0042                	.insn	2, 0x0042
     988:	6375                	.insn	2, 0x6375
     98a:	6f4e                	.insn	2, 0x6f4e
     98c:	6974                	.insn	2, 0x6974
     98e:	7966                	.insn	2, 0x7966
     990:	74617453          	.insn	4, 0x74617453
     994:	0065                	.insn	2, 0x0065
     996:	5478                	.insn	2, 0x5478
     998:	7361                	.insn	2, 0x7361
     99a:	6e65476b          	.insn	4, 0x6e65476b
     99e:	7265                	.insn	2, 0x7265
     9a0:	6369                	.insn	2, 0x6369
     9a2:	6f4e                	.insn	2, 0x6f4e
     9a4:	6974                	.insn	2, 0x6974
     9a6:	7966                	.insn	2, 0x7966
     9a8:	7000                	.insn	2, 0x7000
     9aa:	5578                	.insn	2, 0x5578
     9ac:	626e                	.insn	2, 0x626e
     9ae:	6f6c                	.insn	2, 0x6f6c
     9b0:	64656b63          	bltu	a0,t1,1006 <__start-0x7fffeffa>
     9b4:	4354                	.insn	2, 0x4354
     9b6:	0042                	.insn	2, 0x0042
     9b8:	4378                	.insn	2, 0x4378
     9ba:	656c                	.insn	2, 0x656c
     9bc:	7261                	.insn	2, 0x7261
     9be:	6e756f43          	.insn	4, 0x6e756f43
     9c2:	4f74                	.insn	2, 0x4f74
     9c4:	456e                	.insn	2, 0x456e
     9c6:	6978                	.insn	2, 0x6978
     9c8:	0074                	.insn	2, 0x0074
     9ca:	7270                	.insn	2, 0x7270
     9cc:	4376                	.insn	2, 0x4376
     9ce:	6572                	.insn	2, 0x6572
     9d0:	7461                	.insn	2, 0x7461
     9d2:	5465                	.insn	2, 0x5465
     9d4:	7361                	.insn	2, 0x7361
     9d6:	4578006b          	.insn	4, 0x4578006b
     9da:	616c                	.insn	2, 0x616c
     9dc:	7370                	.insn	2, 0x7370
     9de:	6465                	.insn	2, 0x6465
     9e0:	6954                	.insn	2, 0x6954
     9e2:	656d                	.insn	2, 0x656d
     9e4:	6500                	.insn	2, 0x6500
     9e6:	56746553          	.insn	4, 0x56746553
     9ea:	6c61                	.insn	2, 0x6c61
     9ec:	6575                	.insn	2, 0x6575
     9ee:	68746957          	.insn	4, 0x68746957
     9f2:	7265764f          	.insn	4, 0x7265764f
     9f6:	74697277          	.insn	4, 0x74697277
     9fa:	0065                	.insn	2, 0x0065
     9fc:	5478                	.insn	2, 0x5478
     9fe:	7361                	.insn	2, 0x7361
     a00:	7465476b          	.insn	4, 0x7465476b
     a04:	6954                	.insn	2, 0x6954
     a06:	6f436b63          	bltu	t1,s4,10fc <__start-0x7fffef04>
     a0a:	6e75                	.insn	2, 0x6e75
     a0c:	4674                	.insn	2, 0x4674
     a0e:	6f72                	.insn	2, 0x6f72
     a10:	496d                	.insn	2, 0x496d
     a12:	75005253          	.insn	4, 0x75005253
     a16:	426c                	.insn	2, 0x426c
     a18:	7469                	.insn	2, 0x7469
     a1a:	436f5473          	csrrwi	s0,0x436,30
     a1e:	656c                	.insn	2, 0x656c
     a20:	7261                	.insn	2, 0x7261
     a22:	6e456e4f          	.insn	4, 0x6e456e4f
     a26:	7274                	.insn	2, 0x7274
     a28:	0079                	.insn	2, 0x0079
     a2a:	4978                	.insn	2, 0x4978
     a2c:	6c64                	.insn	2, 0x6c64
     a2e:	5465                	.insn	2, 0x5465
     a30:	7361                	.insn	2, 0x7361
     a32:	6d614e6b          	.insn	4, 0x6d614e6b
     a36:	4965                	.insn	2, 0x4965
     a38:	646e                	.insn	2, 0x646e
     a3a:	7865                	.insn	2, 0x7865
     a3c:	7800                	.insn	2, 0x7800
     a3e:	6550                	.insn	2, 0x6550
     a40:	646e                	.insn	2, 0x646e
     a42:	6e69                	.insn	2, 0x6e69
     a44:	61655267          	.insn	4, 0x61655267
     a48:	7964                	.insn	2, 0x7964
     a4a:	694c                	.insn	2, 0x694c
     a4c:	70007473          	csrrci	s0,0x700,0
     a50:	7672                	.insn	2, 0x7672
     a52:	6e49                	.insn	2, 0x6e49
     a54:	7469                	.insn	2, 0x7469
     a56:	6169                	.insn	2, 0x6169
     a58:	696c                	.insn	2, 0x696c
     a5a:	61546573          	csrrsi	a0,htimedeltah,8
     a5e:	694c6b73          	csrrsi	s6,0x694,24
     a62:	00737473          	csrrci	s0,0x7,6
     a66:	5476                	.insn	2, 0x5476
     a68:	7361                	.insn	2, 0x7361
     a6a:	7365526b          	.insn	4, 0x7365526b
     a6e:	7465                	.insn	2, 0x7465
     a70:	74617453          	.insn	4, 0x74617453
     a74:	0065                	.insn	2, 0x0065
     a76:	7870                	.insn	2, 0x7870
     a78:	6554                	.insn	2, 0x6554
     a7a:	706d                	.insn	2, 0x706d
     a7c:	7500                	.insn	2, 0x7500
     a7e:	5478                	.insn	2, 0x5478
     a80:	7355706f          	jal	zero,589b4 <__start-0x7ffa764c>
     a84:	6465                	.insn	2, 0x6465
     a86:	7250                	.insn	2, 0x7250
     a88:	6f69                	.insn	2, 0x6f69
     a8a:	6972                	.insn	2, 0x6972
     a8c:	7974                	.insn	2, 0x7974
     a8e:	7500                	.insn	2, 0x7500
     a90:	5378                	.insn	2, 0x5378
     a92:	6174                	.insn	2, 0x6174
     a94:	65446b63          	bltu	s0,s4,10ea <__start-0x7fffef16>
     a98:	7470                	.insn	2, 0x7470
     a9a:	0068                	.insn	2, 0x0068
     a9c:	4e65                	.insn	2, 0x4e65
     a9e:	6669746f          	jal	s0,98104 <__start-0x7ff67efc>
     aa2:	4179                	.insn	2, 0x4179
     aa4:	6f697463          	bgeu	s2,s6,118c <__start-0x7fffee74>
     aa8:	006e                	.insn	2, 0x006e
     aaa:	4965                	.insn	2, 0x4965
     aac:	636e                	.insn	2, 0x636e
     aae:	6572                	.insn	2, 0x6572
     ab0:	656d                	.insn	2, 0x656d
     ab2:	746e                	.insn	2, 0x746e
     ab4:	7800                	.insn	2, 0x7800
     ab6:	6954                	.insn	2, 0x6954
     ab8:	6f436b63          	bltu	t1,s4,11ae <__start-0x7fffee52>
     abc:	6e75                	.insn	2, 0x6e75
     abe:	0074                	.insn	2, 0x0074
     ac0:	5476                	.insn	2, 0x5476
     ac2:	7361                	.insn	2, 0x7361
     ac4:	646e456b          	.insn	4, 0x646e456b
     ac8:	65686353          	.insn	4, 0x65686353
     acc:	7564                	.insn	2, 0x7564
     ace:	656c                	.insn	2, 0x656c
     ad0:	0072                	.insn	2, 0x0072
     ad2:	4378                	.insn	2, 0x4378
     ad4:	74736e6f          	jal	t3,37a1a <__start-0x7ffc85e6>
     ad8:	6954                	.insn	2, 0x6954
     ada:	6f436b63          	bltu	t1,s4,11d0 <__start-0x7fffee30>
     ade:	6e75                	.insn	2, 0x6e75
     ae0:	0074                	.insn	2, 0x0074
     ae2:	6370                	.insn	2, 0x6370
     ae4:	614e                	.insn	2, 0x614e
     ae6:	656d                	.insn	2, 0x656d
     ae8:	7000                	.insn	2, 0x7000
     aea:	4f78                	.insn	2, 0x4f78
     aec:	6576                	.insn	2, 0x6576
     aee:	6672                	.insn	2, 0x6672
     af0:	6f6c                	.insn	2, 0x6f6c
     af2:	6c654477          	.insn	4, 0x6c654477
     af6:	7961                	.insn	2, 0x7961
     af8:	6465                	.insn	2, 0x6465
     afa:	6154                	.insn	2, 0x6154
     afc:	694c6b73          	csrrsi	s6,0x694,24
     b00:	78007473          	csrrci	s0,0x780,0
     b04:	6449                	.insn	2, 0x6449
     b06:	656c                	.insn	2, 0x656c
     b08:	6154                	.insn	2, 0x6154
     b0a:	61486b73          	csrrsi	s6,0x614,16
     b0e:	646e                	.insn	2, 0x646e
     b10:	656c                	.insn	2, 0x656c
     b12:	6c750073          	.insn	4, 0x6c750073
     b16:	6f4e                	.insn	2, 0x6f4e
     b18:	6974                	.insn	2, 0x6974
     b1a:	6966                	.insn	2, 0x6966
     b1c:	6465                	.insn	2, 0x6465
     b1e:	6156                	.insn	2, 0x6156
     b20:	756c                	.insn	2, 0x756c
     b22:	0065                	.insn	2, 0x0065
     b24:	5476                	.insn	2, 0x5476
     b26:	7361                	.insn	2, 0x7361
     b28:	6d65526b          	.insn	4, 0x6d65526b
     b2c:	4665766f          	jal	a2,57f92 <__start-0x7ffa806e>
     b30:	6f72                	.insn	2, 0x6f72
     b32:	556d                	.insn	2, 0x556d
     b34:	6f6e                	.insn	2, 0x6f6e
     b36:	6472                	.insn	2, 0x6472
     b38:	7265                	.insn	2, 0x7265
     b3a:	6465                	.insn	2, 0x6465
     b3c:	7645                	.insn	2, 0x7645
     b3e:	6e65                	.insn	2, 0x6e65
     b40:	4c74                	.insn	2, 0x4c74
     b42:	7369                	.insn	2, 0x7369
     b44:	0074                	.insn	2, 0x0074
     b46:	5365                	.insn	2, 0x5365
     b48:	7465                	.insn	2, 0x7465
     b4a:	6156                	.insn	2, 0x6156
     b4c:	756c                	.insn	2, 0x756c
     b4e:	5765                	.insn	2, 0x5765
     b50:	7469                	.insn	2, 0x7469
     b52:	6f68                	.insn	2, 0x6f68
     b54:	7475                	.insn	2, 0x7475
     b56:	7265764f          	.insn	4, 0x7265764f
     b5a:	74697277          	.insn	4, 0x74697277
     b5e:	0065                	.insn	2, 0x0065
     b60:	5478                	.insn	2, 0x5478
     b62:	7361                	.insn	2, 0x7361
     b64:	6e65476b          	.insn	4, 0x6e65476b
     b68:	7265                	.insn	2, 0x7265
     b6a:	6369                	.insn	2, 0x6369
     b6c:	6f4e                	.insn	2, 0x6f4e
     b6e:	6974                	.insn	2, 0x6974
     b70:	7966                	.insn	2, 0x7966
     b72:	74696157          	.insn	4, 0x74696157
     b76:	7000                	.insn	2, 0x7000
     b78:	7672                	.insn	2, 0x7672
     b7a:	6449                	.insn	2, 0x6449
     b7c:	656c                	.insn	2, 0x656c
     b7e:	6154                	.insn	2, 0x6154
     b80:	75006b73          	csrrsi	s6,0x750,0
     b84:	546c                	.insn	2, 0x546c
     b86:	7361                	.insn	2, 0x7361
     b88:	6e65476b          	.insn	4, 0x6e65476b
     b8c:	7265                	.insn	2, 0x7265
     b8e:	6369                	.insn	2, 0x6369
     b90:	6f4e                	.insn	2, 0x6f4e
     b92:	6974                	.insn	2, 0x6974
     b94:	7966                	.insn	2, 0x7966
     b96:	6154                	.insn	2, 0x6154
     b98:	7800656b          	.insn	4, 0x7800656b
     b9c:	6154                	.insn	2, 0x6154
     b9e:	72436b73          	csrrsi	s6,mhpmevent4h,6
     ba2:	6165                	.insn	2, 0x6165
     ba4:	6574                	.insn	2, 0x6574
     ba6:	7000                	.insn	2, 0x7000
     ba8:	7672                	.insn	2, 0x7672
     baa:	6441                	.insn	2, 0x6441
     bac:	4e64                	.insn	2, 0x4e64
     bae:	7765                	.insn	2, 0x7765
     bb0:	6154                	.insn	2, 0x6154
     bb2:	6f546b73          	csrrsi	s6,0x6f5,8
     bb6:	6552                	.insn	2, 0x6552
     bb8:	6461                	.insn	2, 0x6461
     bba:	4c79                	.insn	2, 0x4c79
     bbc:	7369                	.insn	2, 0x7369
     bbe:	0074                	.insn	2, 0x0074
     bc0:	7270                	.insn	2, 0x7270
     bc2:	4376                	.insn	2, 0x4376
     bc4:	6572                	.insn	2, 0x6572
     bc6:	7461                	.insn	2, 0x7461
     bc8:	4965                	.insn	2, 0x4965
     bca:	6c64                	.insn	2, 0x6c64
     bcc:	5465                	.insn	2, 0x5465
     bce:	7361                	.insn	2, 0x7361
     bd0:	7000736b          	.insn	4, 0x7000736b
     bd4:	4e78                	.insn	2, 0x4e78
     bd6:	7765                	.insn	2, 0x7765
     bd8:	4354                	.insn	2, 0x4354
     bda:	0042                	.insn	2, 0x0042
     bdc:	7870                	.insn	2, 0x7870
     bde:	6154                	.insn	2, 0x6154
     be0:	6f436b73          	csrrsi	s6,0x6f4,6
     be4:	6564                	.insn	2, 0x6564
     be6:	7800                	.insn	2, 0x7800
     be8:	6959                	.insn	2, 0x6959
     bea:	6c65                	.insn	2, 0x6c65
     bec:	4f64                	.insn	2, 0x4f64
     bee:	72756363          	bltu	a0,t2,1314 <__start-0x7fffecec>
     bf2:	6572                	.insn	2, 0x6572
     bf4:	0064                	.insn	2, 0x0064
     bf6:	654d                	.insn	2, 0x654d
     bf8:	6f6d                	.insn	2, 0x6f6d
     bfa:	7972                	.insn	2, 0x7972
     bfc:	6552                	.insn	2, 0x6552
     bfe:	6e6f6967          	.insn	4, 0x6e6f6967
     c02:	745f 7800 654e      	.insn	6, 0x654e7800745f
     c08:	7478                	.insn	2, 0x7478
     c0a:	6154                	.insn	2, 0x6154
     c0c:	6e556b73          	csrrsi	s6,0x6e5,10
     c10:	6c62                	.insn	2, 0x6c62
     c12:	546b636f          	jal	t1,b7158 <__start-0x7ff48ea8>
     c16:	6d69                	.insn	2, 0x6d69
     c18:	0065                	.insn	2, 0x0065
     c1a:	7870                	.insn	2, 0x7870
     c1c:	6f50                	.insn	2, 0x6f50
     c1e:	7472                	.insn	2, 0x7472
     c20:	6e49                	.insn	2, 0x6e49
     c22:	7469                	.insn	2, 0x7469
     c24:	6169                	.insn	2, 0x6169
     c26:	696c                	.insn	2, 0x696c
     c28:	74536573          	csrrsi	a0,0x745,6
     c2c:	6361                	.insn	2, 0x6361
     c2e:	6c75006b          	.insn	4, 0x6c75006b
     c32:	6552                	.insn	2, 0x6552
     c34:	7574                	.insn	2, 0x7574
     c36:	6e72                	.insn	2, 0x6e72
     c38:	7500                	.insn	2, 0x7500
     c3a:	546c                	.insn	2, 0x546c
     c3c:	7361                	.insn	2, 0x7361
     c3e:	6e65476b          	.insn	4, 0x6e65476b
     c42:	7265                	.insn	2, 0x7265
     c44:	6369                	.insn	2, 0x6369
     c46:	6f4e                	.insn	2, 0x6f4e
     c48:	6974                	.insn	2, 0x6974
     c4a:	7966                	.insn	2, 0x7966
     c4c:	6156                	.insn	2, 0x6156
     c4e:	756c                	.insn	2, 0x756c
     c50:	4365                	.insn	2, 0x4365
     c52:	656c                	.insn	2, 0x656c
     c54:	7261                	.insn	2, 0x7261
     c56:	7500                	.insn	2, 0x7500
     c58:	4c6c                	.insn	2, 0x4c6c
     c5a:	6e65                	.insn	2, 0x6e65
     c5c:	49687467          	.insn	4, 0x49687467
     c60:	426e                	.insn	2, 0x426e
     c62:	7479                	.insn	2, 0x7479
     c64:	7365                	.insn	2, 0x7365
     c66:	7000                	.insn	2, 0x7000
     c68:	7672                	.insn	2, 0x7672
     c6a:	6552                	.insn	2, 0x6552
     c6c:	4e746573          	csrrsi	a0,0x4e7,8
     c70:	7865                	.insn	2, 0x7865
     c72:	5474                	.insn	2, 0x5474
     c74:	7361                	.insn	2, 0x7361
     c76:	626e556b          	.insn	4, 0x626e556b
     c7a:	6f6c                	.insn	2, 0x6f6c
     c7c:	69546b63          	bltu	s0,s5,1312 <__start-0x7fffecee>
     c80:	656d                	.insn	2, 0x656d
     c82:	5400                	.insn	2, 0x5400
     c84:	7361                	.insn	2, 0x7361
     c86:	6e75466b          	.insn	4, 0x6e75466b
     c8a:	6f697463          	bgeu	s2,s6,1372 <__start-0x7fffec8e>
     c8e:	5f6e                	.insn	2, 0x5f6e
     c90:	0074                	.insn	2, 0x0074
     c92:	7570                	.insn	2, 0x7570
     c94:	506c                	.insn	2, 0x506c
     c96:	6572                	.insn	2, 0x6572
     c98:	6976                	.insn	2, 0x6976
     c9a:	4e73756f          	jal	a0,38980 <__start-0x7ffc7680>
     c9e:	6669746f          	jal	s0,98304 <__start-0x7ff67cfc>
     ca2:	6369                	.insn	2, 0x6369
     ca4:	7461                	.insn	2, 0x7461
     ca6:	6f69                	.insn	2, 0x6f69
     ca8:	566e                	.insn	2, 0x566e
     caa:	6c61                	.insn	2, 0x6c61
     cac:	6575                	.insn	2, 0x6575
     cae:	6d00                	.insn	2, 0x6d00
     cb0:	6d65                	.insn	2, 0x6d65
     cb2:	00746573          	csrrsi	a0,0x7,8
     cb6:	7870                	.insn	2, 0x7870
     cb8:	6954                	.insn	2, 0x6954
     cba:	656d                	.insn	2, 0x656d
     cbc:	0074754f          	.insn	4, 0x0074754f
     cc0:	5478                	.insn	2, 0x5478
     cc2:	7361                	.insn	2, 0x7361
     cc4:	7465476b          	.insn	4, 0x7465476b
     cc8:	6954                	.insn	2, 0x6954
     cca:	6f436b63          	bltu	t1,s4,13c0 <__start-0x7fffec40>
     cce:	6e75                	.insn	2, 0x6e75
     cd0:	0074                	.insn	2, 0x0074
     cd2:	7875                	.insn	2, 0x7875
     cd4:	6154                	.insn	2, 0x6154
     cd6:	754e6b73          	csrrsi	s6,0x754,28
     cda:	626d                	.insn	2, 0x626d
     cdc:	7265                	.insn	2, 0x7265
     cde:	6500                	.insn	2, 0x6500
     ce0:	6341                	.insn	2, 0x6341
     ce2:	6974                	.insn	2, 0x6974
     ce4:	75006e6f          	jal	t3,7434 <__start-0x7fff8bcc>
     ce8:	5478                	.insn	2, 0x5478
     cea:	7361                	.insn	2, 0x7361
     cec:	7365526b          	.insn	4, 0x7365526b
     cf0:	7465                	.insn	2, 0x7465
     cf2:	7645                	.insn	2, 0x7645
     cf4:	6e65                	.insn	2, 0x6e65
     cf6:	4974                	.insn	2, 0x4974
     cf8:	6574                	.insn	2, 0x6574
     cfa:	566d                	.insn	2, 0x566d
     cfc:	6c61                	.insn	2, 0x6c61
     cfe:	6575                	.insn	2, 0x6575
     d00:	7800                	.insn	2, 0x7800
     d02:	6154                	.insn	2, 0x6154
     d04:	6f546b73          	csrrsi	s6,0x6f5,8
     d08:	7551                	.insn	2, 0x7551
     d0a:	7265                	.insn	2, 0x7265
     d0c:	0079                	.insn	2, 0x0079
     d0e:	5478                	.insn	2, 0x5478
     d10:	7361                	.insn	2, 0x7361
     d12:	4e6f546b          	.insn	4, 0x4e6f546b
     d16:	6669746f          	jal	s0,9837c <__start-0x7ff67c84>
     d1a:	0079                	.insn	2, 0x0079
     d1c:	5478                	.insn	2, 0x5478
     d1e:	7361                	.insn	2, 0x7361
     d20:	5365006b          	.insn	4, 0x5365006b
     d24:	7465                	.insn	2, 0x7465
     d26:	6942                	.insn	2, 0x6942
     d28:	7374                	.insn	2, 0x7374
     d2a:	7800                	.insn	2, 0x7800
     d2c:	454d                	.insn	2, 0x454d
     d2e:	4f4d                	.insn	2, 0x4f4d
     d30:	5952                	.insn	2, 0x5952
     d32:	525f 4745 4f49      	.insn	6, 0x4f494745525f
     d38:	004e                	.insn	2, 0x004e
     d3a:	5476                	.insn	2, 0x5476
     d3c:	7361                	.insn	2, 0x7361
     d3e:	6977536b          	.insn	4, 0x6977536b
     d42:	6374                	.insn	2, 0x6374
     d44:	4368                	.insn	2, 0x4368
     d46:	65746e6f          	jal	t3,47b9c <__start-0x7ffb8464>
     d4a:	7478                	.insn	2, 0x7478
     d4c:	7800                	.insn	2, 0x7800
     d4e:	754e                	.insn	2, 0x754e
     d50:	4f6d                	.insn	2, 0x4f6d
     d52:	4f66                	.insn	2, 0x4f66
     d54:	6576                	.insn	2, 0x6576
     d56:	6672                	.insn	2, 0x6672
     d58:	6f6c                	.insn	2, 0x6f6c
     d5a:	70007377          	.insn	4, 0x70007377
     d5e:	4378                	.insn	2, 0x4378
     d60:	7275                	.insn	2, 0x7275
     d62:	6572                	.insn	2, 0x6572
     d64:	746e                	.insn	2, 0x746e
     d66:	4354                	.insn	2, 0x4354
     d68:	0042                	.insn	2, 0x0042
     d6a:	5378                	.insn	2, 0x5378
     d6c:	6f68                	.insn	2, 0x6f68
     d6e:	6c75                	.insn	2, 0x6c75
     d70:	4264                	.insn	2, 0x4264
     d72:	6f6c                	.insn	2, 0x6f6c
     d74:	63006b63          	bltu	zero,a6,13aa <__start-0x7fffec56>
     d78:	6449                	.insn	2, 0x6449
     d7a:	656c                	.insn	2, 0x656c
     d7c:	614e                	.insn	2, 0x614e
     d7e:	656d                	.insn	2, 0x656d
     d80:	7000                	.insn	2, 0x7000
     d82:	7672                	.insn	2, 0x7672
     d84:	6e49                	.insn	2, 0x6e49
     d86:	7469                	.insn	2, 0x7469
     d88:	6169                	.insn	2, 0x6169
     d8a:	696c                	.insn	2, 0x696c
     d8c:	654e6573          	csrrsi	a0,0x654,28
     d90:	73615477          	.insn	4, 0x73615477
     d94:	7670006b          	.insn	4, 0x7670006b
     d98:	6150                	.insn	2, 0x6150
     d9a:	6172                	.insn	2, 0x6172
     d9c:	656d                	.insn	2, 0x656d
     d9e:	6574                	.insn	2, 0x6574
     da0:	7372                	.insn	2, 0x7372
     da2:	7000                	.insn	2, 0x7000
     da4:	4478                	.insn	2, 0x4478
     da6:	6c65                	.insn	2, 0x6c65
     da8:	7961                	.insn	2, 0x7961
     daa:	6465                	.insn	2, 0x6465
     dac:	6154                	.insn	2, 0x6154
     dae:	694c6b73          	csrrsi	s6,0x694,24
     db2:	78007473          	csrrci	s0,0x780,0
     db6:	74697753          	.insn	4, 0x74697753
     dba:	65526863          	bltu	tp,s5,140a <__start-0x7fffebf6>
     dbe:	7571                	.insn	2, 0x7571
     dc0:	7269                	.insn	2, 0x7269
     dc2:	6465                	.insn	2, 0x6465
     dc4:	7000                	.insn	2, 0x7000
     dc6:	5378                	.insn	2, 0x5378
     dc8:	6174                	.insn	2, 0x6174
     dca:	75006b63          	bltu	zero,a6,1520 <__start-0x7fffeae0>
     dce:	566c                	.insn	2, 0x566c
     dd0:	6c61                	.insn	2, 0x6c61
     dd2:	6575                	.insn	2, 0x6575
     dd4:	7000                	.insn	2, 0x7000
     dd6:	4978                	.insn	2, 0x4978
     dd8:	6c64                	.insn	2, 0x6c64
     dda:	5465                	.insn	2, 0x5465
     ddc:	7361                	.insn	2, 0x7361
     dde:	6e75466b          	.insn	4, 0x6e75466b
     de2:	6f697463          	bgeu	s2,s6,14ca <__start-0x7fffeb36>
     de6:	006e                	.insn	2, 0x006e
     de8:	7570                	.insn	2, 0x7570
     dea:	4e6c                	.insn	2, 0x4e6c
     dec:	6669746f          	jal	s0,98452 <__start-0x7ff67bae>
     df0:	6369                	.insn	2, 0x6369
     df2:	7461                	.insn	2, 0x7461
     df4:	6f69                	.insn	2, 0x6f69
     df6:	566e                	.insn	2, 0x566e
     df8:	6c61                	.insn	2, 0x6c61
     dfa:	6575                	.insn	2, 0x6575
     dfc:	7000                	.insn	2, 0x7000
     dfe:	73615463          	bge	sp,s6,1526 <__start-0x7fffeada>
     e02:	7465476b          	.insn	4, 0x7465476b
     e06:	614e                	.insn	2, 0x614e
     e08:	656d                	.insn	2, 0x656d
     e0a:	7800                	.insn	2, 0x7800
     e0c:	6954                	.insn	2, 0x6954
     e0e:	00736b63          	bltu	t1,t2,e24 <__start-0x7ffff1dc>
     e12:	5476                	.insn	2, 0x5476
     e14:	7361                	.insn	2, 0x7361
     e16:	6174536b          	.insn	4, 0x6174536b
     e1a:	7472                	.insn	2, 0x7472
     e1c:	65686353          	.insn	4, 0x65686353
     e20:	7564                	.insn	2, 0x7564
     e22:	656c                	.insn	2, 0x656c
     e24:	0072                	.insn	2, 0x0072
     e26:	4378                	.insn	2, 0x4378
     e28:	6e61                	.insn	2, 0x6e61
     e2a:	6c42                	.insn	2, 0x6c42
     e2c:	496b636f          	jal	t1,b72c2 <__start-0x7ff48d3e>
     e30:	646e                	.insn	2, 0x646e
     e32:	6665                	.insn	2, 0x6665
     e34:	6e69                	.insn	2, 0x6e69
     e36:	7469                	.insn	2, 0x7469
     e38:	6c65                	.insn	2, 0x6c65
     e3a:	0079                	.insn	2, 0x0079
     e3c:	7670                	.insn	2, 0x7670
     e3e:	6142                	.insn	2, 0x6142
     e40:	64416573          	csrrsi	a0,hip,2
     e44:	7264                	.insn	2, 0x7264
     e46:	7365                	.insn	2, 0x7365
     e48:	54760073          	.insn	4, 0x54760073
     e4c:	7361                	.insn	2, 0x7361
     e4e:	6e65476b          	.insn	4, 0x6e65476b
     e52:	7265                	.insn	2, 0x7265
     e54:	6369                	.insn	2, 0x6369
     e56:	6f4e                	.insn	2, 0x6f4e
     e58:	6974                	.insn	2, 0x6974
     e5a:	7966                	.insn	2, 0x7966
     e5c:	65766947          	.insn	4, 0x65766947
     e60:	7246                	.insn	2, 0x7246
     e62:	53496d6f          	jal	s10,97396 <__start-0x7ff68c6a>
     e66:	0052                	.insn	2, 0x0052
     e68:	5476                	.insn	2, 0x5476
     e6a:	7361                	.insn	2, 0x7361
     e6c:	616c506b          	.insn	4, 0x616c506b
     e70:	6e4f6563          	bltu	t5,tp,155a <__start-0x7fffeaa6>
     e74:	6e55                	.insn	2, 0x6e55
     e76:	6564726f          	jal	tp,484cc <__start-0x7ffb7b34>
     e7a:	6572                	.insn	2, 0x6572
     e7c:	4564                	.insn	2, 0x4564
     e7e:	6576                	.insn	2, 0x6576
     e80:	746e                	.insn	2, 0x746e
     e82:	694c                	.insn	2, 0x694c
     e84:	70007473          	csrrci	s0,0x700,0
     e88:	5478                	.insn	2, 0x5478
     e8a:	6369                	.insn	2, 0x6369
     e8c:	6f54736b          	.insn	4, 0x6f54736b
     e90:	74696157          	.insn	4, 0x74696157
     e94:	7500                	.insn	2, 0x7500
     e96:	5478                	.insn	2, 0x5478
     e98:	7250706f          	jal	zero,8dbc <__start-0x7fff7244>
     e9c:	6f69                	.insn	2, 0x6f69
     e9e:	6972                	.insn	2, 0x6972
     ea0:	7974                	.insn	2, 0x7974
     ea2:	5400                	.insn	2, 0x5400
     ea4:	745f4243          	.insn	4, 0x745f4243
     ea8:	7800                	.insn	2, 0x7800
     eaa:	6c41                	.insn	2, 0x6c41
     eac:	6572                	.insn	2, 0x6572
     eae:	6461                	.insn	2, 0x6461
     eb0:	5979                	.insn	2, 0x5979
     eb2:	6569                	.insn	2, 0x6569
     eb4:	646c                	.insn	2, 0x646c
     eb6:	6465                	.insn	2, 0x6465
     eb8:	7800                	.insn	2, 0x7800
     eba:	6154                	.insn	2, 0x6154
     ebc:	65476b73          	csrrsi	s6,0x654,14
     ec0:	4374                	.insn	2, 0x4374
     ec2:	7275                	.insn	2, 0x7275
     ec4:	6572                	.insn	2, 0x6572
     ec6:	746e                	.insn	2, 0x746e
     ec8:	6154                	.insn	2, 0x6154
     eca:	61486b73          	csrrsi	s6,0x614,16
     ece:	646e                	.insn	2, 0x646e
     ed0:	656c                	.insn	2, 0x656c
     ed2:	7000                	.insn	2, 0x7000
     ed4:	4578                	.insn	2, 0x4578
     ed6:	6576                	.insn	2, 0x6576
     ed8:	746e                	.insn	2, 0x746e
     eda:	694c                	.insn	2, 0x694c
     edc:	74497473          	csrrci	s0,0x744,18
     ee0:	6d65                	.insn	2, 0x6d65
     ee2:	7800                	.insn	2, 0x7800
     ee4:	6550                	.insn	2, 0x6550
     ee6:	646e                	.insn	2, 0x646e
     ee8:	6465                	.insn	2, 0x6465
     eea:	6954                	.insn	2, 0x6954
     eec:	00736b63          	bltu	t1,t2,f02 <__start-0x7ffff0fe>
     ef0:	5478                	.insn	2, 0x5478
     ef2:	6369                	.insn	2, 0x6369
     ef4:	6f54736b          	.insn	4, 0x6f54736b
     ef8:	63746143          	.insn	4, 0x63746143
     efc:	5568                	.insn	2, 0x5568
     efe:	0070                	.insn	2, 0x0070
     f00:	5278                	.insn	2, 0x5278
     f02:	6765                	.insn	2, 0x6765
     f04:	6f69                	.insn	2, 0x6f69
     f06:	736e                	.insn	2, 0x736e
     f08:	7000                	.insn	2, 0x7000
     f0a:	7672                	.insn	2, 0x7672
     f0c:	6441                	.insn	2, 0x6441
     f0e:	4364                	.insn	2, 0x4364
     f10:	7275                	.insn	2, 0x7275
     f12:	6572                	.insn	2, 0x6572
     f14:	746e                	.insn	2, 0x746e
     f16:	6154                	.insn	2, 0x6154
     f18:	6f546b73          	csrrsi	s6,0x6f5,8
     f1c:	6544                	.insn	2, 0x6544
     f1e:	616c                	.insn	2, 0x616c
     f20:	6579                	.insn	2, 0x6579
     f22:	4c64                	.insn	2, 0x4c64
     f24:	7369                	.insn	2, 0x7369
     f26:	0074                	.insn	2, 0x0074
     f28:	5478                	.insn	2, 0x5478
     f2a:	7361                	.insn	2, 0x7361
     f2c:	7465476b          	.insn	4, 0x7465476b
     f30:	72727543          	.insn	4, 0x72727543
     f34:	6e65                	.insn	2, 0x6e65
     f36:	5474                	.insn	2, 0x5474
     f38:	7361                	.insn	2, 0x7361
     f3a:	6e61486b          	.insn	4, 0x6e61486b
     f3e:	6c64                	.insn	2, 0x6c64
     f40:	4665                	.insn	2, 0x4665
     f42:	6f43726f          	jal	tp,38636 <__start-0x7ffc79ca>
     f46:	6572                	.insn	2, 0x6572
     f48:	7500                	.insn	2, 0x7500
     f4a:	4378                	.insn	2, 0x4378
     f4c:	7275                	.insn	2, 0x7275
     f4e:	6572                	.insn	2, 0x6572
     f50:	746e                	.insn	2, 0x746e
     f52:	754e                	.insn	2, 0x754e
     f54:	626d                	.insn	2, 0x626d
     f56:	7265                	.insn	2, 0x7265
     f58:	6154664f          	.insn	4, 0x6154664f
     f5c:	00736b73          	csrrsi	s6,0x7,6
     f60:	5478                	.insn	2, 0x5478
     f62:	6d69                	.insn	2, 0x6d69
     f64:	5465                	.insn	2, 0x5465
     f66:	6b61576f          	jal	a4,1661c <__start-0x7ffe99e4>
     f6a:	0065                	.insn	2, 0x0065
     f6c:	5378                	.insn	2, 0x5378
     f6e:	6174                	.insn	2, 0x6174
     f70:	6574                	.insn	2, 0x6574
     f72:	694c                	.insn	2, 0x694c
     f74:	74497473          	csrrci	s0,0x744,18
     f78:	6d65                	.insn	2, 0x6d65
     f7a:	7000                	.insn	2, 0x7000
     f7c:	5478                	.insn	2, 0x5478
     f7e:	78004243          	.insn	4, 0x78004243
     f82:	6154                	.insn	2, 0x6154
     f84:	65476b73          	csrrsi	s6,0x654,14
     f88:	656e                	.insn	2, 0x656e
     f8a:	6972                	.insn	2, 0x6972
     f8c:	746f4e63          	blt	t5,t1,16e8 <__start-0x7fffe918>
     f90:	6669                	.insn	2, 0x6669
     f92:	5379                	.insn	2, 0x5379
     f94:	6174                	.insn	2, 0x6174
     f96:	6574                	.insn	2, 0x6574
     f98:	61656c43          	.insn	4, 0x61656c43
     f9c:	0072                	.insn	2, 0x0072
     f9e:	7875                	.insn	2, 0x7875
     fa0:	65686353          	.insn	4, 0x65686353
     fa4:	7564                	.insn	2, 0x7564
     fa6:	656c                	.insn	2, 0x656c
     fa8:	5372                	.insn	2, 0x5372
     faa:	7375                	.insn	2, 0x7375
     fac:	6570                	.insn	2, 0x6570
     fae:	646e                	.insn	2, 0x646e
     fb0:	6465                	.insn	2, 0x6465
     fb2:	7000                	.insn	2, 0x7000
     fb4:	5478                	.insn	2, 0x5478
     fb6:	664f706f          	jal	zero,f861a <__start-0x7ff079e6>
     fba:	63617453          	.insn	4, 0x63617453
     fbe:	5076006b          	.insn	4, 0x5076006b
     fc2:	4574726f          	jal	tp,48c18 <__start-0x7ffb73e8>
     fc6:	646e                	.insn	2, 0x646e
     fc8:	65686353          	.insn	4, 0x65686353
     fcc:	7564                	.insn	2, 0x7564
     fce:	656c                	.insn	2, 0x656c
     fd0:	0072                	.insn	2, 0x0072
     fd2:	7875                	.insn	2, 0x7875
     fd4:	6e49                	.insn	2, 0x6e49
     fd6:	6564                	.insn	2, 0x6564
     fd8:	5478                	.insn	2, 0x5478
     fda:	746f4e6f          	jal	t3,f5720 <__start-0x7ff0a8e0>
     fde:	6669                	.insn	2, 0x6669
     fe0:	0079                	.insn	2, 0x0079
     fe2:	7870                	.insn	2, 0x7870
     fe4:	61657243          	.insn	4, 0x61657243
     fe8:	6574                	.insn	2, 0x6574
     fea:	5464                	.insn	2, 0x5464
     fec:	7361                	.insn	2, 0x7361
     fee:	7270006b          	.insn	4, 0x7270006b
     ff2:	4376                	.insn	2, 0x4376
     ff4:	6568                	.insn	2, 0x6568
     ff6:	61546b63          	bltu	s0,s5,160c <__start-0x7fffe9f4>
     ffa:	57736b73          	csrrsi	s6,0x577,6
     ffe:	6961                	.insn	2, 0x6961
    1000:	6974                	.insn	2, 0x6974
    1002:	676e                	.insn	2, 0x676e
    1004:	6554                	.insn	2, 0x6554
    1006:	6d72                	.insn	2, 0x6d72
    1008:	6e69                	.insn	2, 0x6e69
    100a:	7461                	.insn	2, 0x7461
    100c:	6f69                	.insn	2, 0x6f69
    100e:	006e                	.insn	2, 0x006e
    1010:	7870                	.insn	2, 0x7870
    1012:	7265764f          	.insn	4, 0x7265764f
    1016:	6c66                	.insn	2, 0x6c66
    1018:	6544776f          	jal	a4,4866c <__start-0x7ffb7994>
    101c:	616c                	.insn	2, 0x616c
    101e:	6579                	.insn	2, 0x6579
    1020:	4c64                	.insn	2, 0x4c64
    1022:	7369                	.insn	2, 0x7369
    1024:	0074                	.insn	2, 0x0074
    1026:	7875                	.insn	2, 0x7875
    1028:	6e49                	.insn	2, 0x6e49
    102a:	6564                	.insn	2, 0x6564
    102c:	5478                	.insn	2, 0x5478
    102e:	6961576f          	jal	a4,166c4 <__start-0x7ffe993c>
    1032:	4f74                	.insn	2, 0x4f74
    1034:	006e                	.insn	2, 0x006e
    1036:	6c75                	.insn	2, 0x6c75
    1038:	6148                	.insn	2, 0x6148
    103a:	7472                	.insn	2, 0x7472
    103c:	6449                	.insn	2, 0x6449
    103e:	7500                	.insn	2, 0x7500
    1040:	6e69                	.insn	2, 0x6e69
    1042:	3674                	.insn	2, 0x3674
    1044:	5f34                	.insn	2, 0x5f34
    1046:	0074                	.insn	2, 0x0074
    1048:	7570                	.insn	2, 0x7570
    104a:	546c                	.insn	2, 0x546c
    104c:	6d69                	.insn	2, 0x6d69
    104e:	4c65                	.insn	2, 0x4c65
    1050:	7800776f          	jal	a4,87d0 <__start-0x7fff7830>
    1054:	6154                	.insn	2, 0x6154
    1056:	65526b73          	csrrsi	s6,hviph,4
    105a:	7574                	.insn	2, 0x7574
    105c:	6e72                	.insn	2, 0x6e72
    105e:	6441                	.insn	2, 0x6441
    1060:	7264                	.insn	2, 0x7264
    1062:	7365                	.insn	2, 0x7365
    1064:	49780073          	.insn	4, 0x49780073
    1068:	74535253          	.insn	4, 0x74535253
    106c:	6361                	.insn	2, 0x6361
    106e:	7875006b          	.insn	4, 0x7875006b
    1072:	6954                	.insn	2, 0x6954
    1074:	656d                	.insn	2, 0x656d
    1076:	4972                	.insn	2, 0x4972
    1078:	636e                	.insn	2, 0x636e
    107a:	6572                	.insn	2, 0x6572
    107c:	656d                	.insn	2, 0x656d
    107e:	746e                	.insn	2, 0x746e
    1080:	726f4673          	.insn	4, 0x726f4673
    1084:	54656e4f          	.insn	4, 0x54656e4f
    1088:	6369                	.insn	2, 0x6369
    108a:	7870006b          	.insn	4, 0x7870006b
    108e:	74697243          	.insn	4, 0x74697243
    1092:	6369                	.insn	2, 0x6369
    1094:	6c61                	.insn	2, 0x6c61
    1096:	654e                	.insn	2, 0x654e
    1098:	6e697473          	csrrci	s0,0x6e6,18
    109c:	75700067          	jalr	zero,1879(zero) # 757 <__start-0x7ffff8a9>
    10a0:	6c6c                	.insn	2, 0x6c6c
    10a2:	654e                	.insn	2, 0x654e
    10a4:	7478                	.insn	2, 0x7478
    10a6:	6954                	.insn	2, 0x6954
    10a8:	656d                	.insn	2, 0x656d
    10aa:	7500                	.insn	2, 0x7500
    10ac:	436c                	.insn	2, 0x436c
    10ae:	7275                	.insn	2, 0x7275
    10b0:	6572                	.insn	2, 0x6572
    10b2:	746e                	.insn	2, 0x746e
    10b4:	6954                	.insn	2, 0x6954
    10b6:	656d                	.insn	2, 0x656d
    10b8:	6948                	.insn	2, 0x6948
    10ba:	76006867          	.insn	4, 0x76006867
    10be:	6f50                	.insn	2, 0x6f50
    10c0:	7472                	.insn	2, 0x7472
    10c2:	75746553          	.insn	4, 0x75746553
    10c6:	5470                	.insn	2, 0x5470
    10c8:	6d69                	.insn	2, 0x6d69
    10ca:	7265                	.insn	2, 0x7265
    10cc:	6e49                	.insn	2, 0x6e49
    10ce:	6574                	.insn	2, 0x6574
    10d0:	7272                	.insn	2, 0x7272
    10d2:	7075                	.insn	2, 0x7075
    10d4:	0074                	.insn	2, 0x0074
    10d6:	5078                	.insn	2, 0x5078
    10d8:	5374726f          	jal	tp,48e0e <__start-0x7ffb71f2>
    10dc:	6174                	.insn	2, 0x6174
    10de:	7472                	.insn	2, 0x7472
    10e0:	6946                	.insn	2, 0x6946
    10e2:	7372                	.insn	2, 0x7372
    10e4:	5474                	.insn	2, 0x5474
    10e6:	7361                	.insn	2, 0x7361
    10e8:	7570006b          	.insn	4, 0x7570006b
    10ec:	546c                	.insn	2, 0x546c
    10ee:	6d69                	.insn	2, 0x6d69
    10f0:	4865                	.insn	2, 0x4865
    10f2:	6769                	.insn	2, 0x6769
    10f4:	0068                	.insn	2, 0x0068
    10f6:	4978                	.insn	2, 0x4978
    10f8:	74535253          	.insn	4, 0x74535253
    10fc:	6361                	.insn	2, 0x6361
    10fe:	706f546b          	.insn	4, 0x706f546b
    1102:	7500                	.insn	2, 0x7500
    1104:	6c6c                	.insn	2, 0x6c6c
    1106:	614d                	.insn	2, 0x614d
    1108:	6e696863          	bltu	s2,t1,17f8 <__start-0x7fffe808>
    110c:	5465                	.insn	2, 0x5465
    110e:	6d69                	.insn	2, 0x6d69
    1110:	7265                	.insn	2, 0x7265
    1112:	706d6f43          	.insn	4, 0x706d6f43
    1116:	7261                	.insn	2, 0x7261
    1118:	5265                	.insn	2, 0x5265
    111a:	6765                	.insn	2, 0x6765
    111c:	7369                	.insn	2, 0x7369
    111e:	6574                	.insn	2, 0x6574
    1120:	4272                	.insn	2, 0x4272
    1122:	7361                	.insn	2, 0x7361
    1124:	0065                	.insn	2, 0x0065
    1126:	6c75                	.insn	2, 0x6c75
    1128:	72727543          	.insn	4, 0x72727543
    112c:	6e65                	.insn	2, 0x6e65
    112e:	5474                	.insn	2, 0x5474
    1130:	6d69                	.insn	2, 0x6d69
    1132:	4c65                	.insn	2, 0x4c65
    1134:	7000776f          	jal	a4,8834 <__start-0x7fff77cc>
    1138:	6c75                	.insn	2, 0x6c75
    113a:	4d6c                	.insn	2, 0x4d6c
    113c:	6361                	.insn	2, 0x6361
    113e:	6968                	.insn	2, 0x6968
    1140:	656e                	.insn	2, 0x656e
    1142:	6954                	.insn	2, 0x6954
    1144:	656d                	.insn	2, 0x656d
    1146:	4372                	.insn	2, 0x4372
    1148:	61706d6f          	jal	s10,7f5e <__start-0x7fff80a2>
    114c:	6572                	.insn	2, 0x6572
    114e:	6552                	.insn	2, 0x6552
    1150:	74736967          	.insn	4, 0x74736967
    1154:	7265                	.insn	2, 0x7265
    1156:	4600                	.insn	2, 0x4600
    1158:	6572                	.insn	2, 0x6572
    115a:	5265                	.insn	2, 0x5265
    115c:	4f54                	.insn	2, 0x4f54
    115e:	654b2d53          	.insn	4, 0x654b2d53
    1162:	6e72                	.insn	2, 0x6e72
    1164:	6c65                	.insn	2, 0x6c65
    1166:	726f702f          	.insn	4, 0x726f702f
    116a:	6174                	.insn	2, 0x6174
    116c:	6c62                	.insn	2, 0x6c62
    116e:	2f65                	.insn	2, 0x2f65
    1170:	2f434347          	.insn	4, 0x2f434347
    1174:	4952                	.insn	2, 0x4952
    1176:	562d4353          	.insn	4, 0x562d4353
    117a:	726f702f          	.insn	4, 0x726f702f
    117e:	4174                	.insn	2, 0x4174
    1180:	532e4d53          	.insn	4, 0x532e4d53
    1184:	2f00                	.insn	2, 0x2f00
    1186:	6f68                	.insn	2, 0x6f68
    1188:	656d                	.insn	2, 0x656d
    118a:	7275722f          	.insn	4, 0x7275722f
    118e:	6b31                	.insn	2, 0x6b31
    1190:	6e69462f          	.insn	4, 0x6e69462f
    1194:	6c61                	.insn	2, 0x6c61
    1196:	6154                	.insn	2, 0x6154
    1198:	6570                	.insn	2, 0x6570
    119a:	2f74756f          	jal	a0,48c90 <__start-0x7ffb7370>
    119e:	6946                	.insn	2, 0x6946
    11a0:	616e                	.insn	2, 0x616e
    11a2:	546c                	.insn	2, 0x546c
    11a4:	7061                	.insn	2, 0x7061
    11a6:	6f65                	.insn	2, 0x6f65
    11a8:	7475                	.insn	2, 0x7475
    11aa:	435f432f          	.insn	4, 0x435f432f
    11ae:	0065646f          	jal	s0,571b4 <__start-0x7ffa8e4c>
    11b2:	20554e47          	.insn	4, 0x20554e47
    11b6:	5341                	.insn	2, 0x5341
    11b8:	3220                	.insn	2, 0x3220
    11ba:	342e                	.insn	2, 0x342e
    11bc:	00312e33          	slt	t3,sp,gp
    11c0:	7870                	.insn	2, 0x7870
    11c2:	7250                	.insn	2, 0x7250
    11c4:	7665                	.insn	2, 0x7665
    11c6:	6f69                	.insn	2, 0x6f69
    11c8:	7375                	.insn	2, 0x7375
    11ca:	6c42                	.insn	2, 0x6c42
    11cc:	006b636f          	jal	t1,b71d2 <__start-0x7ff48e2e>
    11d0:	7870                	.insn	2, 0x7870
    11d2:	6548                	.insn	2, 0x6548
    11d4:	7061                	.insn	2, 0x7061
    11d6:	74617453          	.insn	4, 0x74617453
    11da:	4d780073          	.insn	4, 0x4d780073
    11de:	6e69                	.insn	2, 0x6e69
    11e0:	6d69                	.insn	2, 0x6d69
    11e2:	6d75                	.insn	2, 0x6d75
    11e4:	7645                	.insn	2, 0x7645
    11e6:	7265                	.insn	2, 0x7265
    11e8:	7246                	.insn	2, 0x7246
    11ea:	6565                	.insn	2, 0x6565
    11ec:	7942                	.insn	2, 0x7942
    11ee:	6574                	.insn	2, 0x6574
    11f0:	6d655273          	csrrwi	tp,0x6d6,10
    11f4:	6961                	.insn	2, 0x6961
    11f6:	696e                	.insn	2, 0x696e
    11f8:	676e                	.insn	2, 0x676e
    11fa:	4800                	.insn	2, 0x4800
    11fc:	6165                	.insn	2, 0x6165
    11fe:	5370                	.insn	2, 0x5370
    1200:	6174                	.insn	2, 0x6174
    1202:	7374                	.insn	2, 0x7374
    1204:	745f 7000 4e78      	.insn	6, 0x4e787000745f
    120a:	7865                	.insn	2, 0x7865
    120c:	4674                	.insn	2, 0x4674
    120e:	6572                	.insn	2, 0x6572
    1210:	4265                	.insn	2, 0x4265
    1212:	6f6c                	.insn	2, 0x6f6c
    1214:	70006b63          	bltu	zero,zero,192a <__start-0x7fffe6d6>
    1218:	4278                	.insn	2, 0x4278
    121a:	6f6c                	.insn	2, 0x6f6c
    121c:	78006b63          	bltu	zero,zero,19b2 <__start-0x7fffe64e>
    1220:	694d                	.insn	2, 0x694d
    1222:	536e                	.insn	2, 0x536e
    1224:	7a69                	.insn	2, 0x7a69
    1226:	0065                	.insn	2, 0x0065
    1228:	4e78                	.insn	2, 0x4e78
    122a:	6d75                	.insn	2, 0x6d75
    122c:	6562                	.insn	2, 0x6562
    122e:	4f72                	.insn	2, 0x4f72
    1230:	4666                	.insn	2, 0x4666
    1232:	6572                	.insn	2, 0x6572
    1234:	4265                	.insn	2, 0x4265
    1236:	6f6c                	.insn	2, 0x6f6c
    1238:	00736b63          	bltu	t1,t2,124e <__start-0x7fffedb2>
    123c:	7870                	.insn	2, 0x7870
    123e:	6e45                	.insn	2, 0x6e45
    1240:	0064                	.insn	2, 0x0064
    1242:	7270                	.insn	2, 0x7270
    1244:	4976                	.insn	2, 0x4976
    1246:	736e                	.insn	2, 0x736e
    1248:	7265                	.insn	2, 0x7265
    124a:	4274                	.insn	2, 0x4274
    124c:	6f6c                	.insn	2, 0x6f6c
    124e:	6e496b63          	bltu	s2,tp,1944 <__start-0x7fffe6bc>
    1252:	6f74                	.insn	2, 0x6f74
    1254:	7246                	.insn	2, 0x7246
    1256:	6565                	.insn	2, 0x6565
    1258:	694c                	.insn	2, 0x694c
    125a:	41007473          	csrrci	s0,0x410,0
    125e:	425f 4f4c 4b43      	.insn	6, 0x4b434f4c425f
    1264:	4c5f 4e49 004b      	.insn	6, 0x004b4e494c5f
    126a:	7875                	.insn	2, 0x7875
    126c:	72617453          	.insn	4, 0x72617453
    1270:	4174                	.insn	2, 0x4174
    1272:	6464                	.insn	2, 0x6464
    1274:	6572                	.insn	2, 0x6572
    1276:	78007373          	csrrci	t1,0x780,0
    127a:	657a6953          	.insn	4, 0x657a6953
    127e:	6d53664f          	.insn	4, 0x6d53664f
    1282:	6c61                	.insn	2, 0x6c61
    1284:	656c                	.insn	2, 0x656c
    1286:	72467473          	csrrci	s0,mhpmevent4h,12
    128a:	6565                	.insn	2, 0x6565
    128c:	6c42                	.insn	2, 0x6c42
    128e:	496b636f          	jal	t1,b7724 <__start-0x7ff488dc>
    1292:	426e                	.insn	2, 0x426e
    1294:	7479                	.insn	2, 0x7479
    1296:	7365                	.insn	2, 0x7365
    1298:	7500                	.insn	2, 0x7500
    129a:	4578                	.insn	2, 0x4578
    129c:	646e                	.insn	2, 0x646e
    129e:	6441                	.insn	2, 0x6441
    12a0:	7264                	.insn	2, 0x7264
    12a2:	7365                	.insn	2, 0x7365
    12a4:	78700073          	.insn	4, 0x78700073
    12a8:	654e                	.insn	2, 0x654e
    12aa:	6f6c4277          	.insn	4, 0x6f6c4277
    12ae:	694c6b63          	bltu	s8,s4,1944 <__start-0x7fffe6bc>
    12b2:	6b6e                	.insn	2, 0x6b6e
    12b4:	7800                	.insn	2, 0x7800
    12b6:	6f50                	.insn	2, 0x6f50
    12b8:	7472                	.insn	2, 0x7472
    12ba:	46746547          	.insn	4, 0x46746547
    12be:	6572                	.insn	2, 0x6572
    12c0:	4865                	.insn	2, 0x4865
    12c2:	6165                	.insn	2, 0x6165
    12c4:	5370                	.insn	2, 0x5370
    12c6:	7a69                	.insn	2, 0x7a69
    12c8:	0065                	.insn	2, 0x0065
    12ca:	4178                	.insn	2, 0x4178
    12cc:	6464                	.insn	2, 0x6464
    12ce:	7469                	.insn	2, 0x7469
    12d0:	6f69                	.insn	2, 0x6f69
    12d2:	616e                	.insn	2, 0x616e
    12d4:	526c                	.insn	2, 0x526c
    12d6:	7165                	.insn	2, 0x7165
    12d8:	6975                	.insn	2, 0x6975
    12da:	6572                	.insn	2, 0x6572
    12dc:	5364                	.insn	2, 0x5364
    12de:	7a69                	.insn	2, 0x7a69
    12e0:	0065                	.insn	2, 0x0065
    12e2:	7670                	.insn	2, 0x7670
    12e4:	6552                	.insn	2, 0x6552
    12e6:	7574                	.insn	2, 0x7574
    12e8:	6e72                	.insn	2, 0x6e72
    12ea:	7600                	.insn	2, 0x7600
    12ec:	6f50                	.insn	2, 0x6f50
    12ee:	7472                	.insn	2, 0x7472
    12f0:	6548                	.insn	2, 0x6548
    12f2:	7061                	.insn	2, 0x7061
    12f4:	6552                	.insn	2, 0x6552
    12f6:	53746573          	csrrsi	a0,0x537,8
    12fa:	6174                	.insn	2, 0x6174
    12fc:	6574                	.insn	2, 0x6574
    12fe:	7800                	.insn	2, 0x7800
    1300:	614d                	.insn	2, 0x614d
    1302:	5378                	.insn	2, 0x5378
    1304:	7a69                	.insn	2, 0x7a69
    1306:	0065                	.insn	2, 0x0065
    1308:	5078                	.insn	2, 0x5078
    130a:	4774726f          	jal	tp,48f80 <__start-0x7ffb7080>
    130e:	7465                	.insn	2, 0x7465
    1310:	694d                	.insn	2, 0x694d
    1312:	696e                	.insn	2, 0x696e
    1314:	756d                	.insn	2, 0x756d
    1316:	456d                	.insn	2, 0x456d
    1318:	6576                	.insn	2, 0x6576
    131a:	4672                	.insn	2, 0x4672
    131c:	6572                	.insn	2, 0x6572
    131e:	4865                	.insn	2, 0x4865
    1320:	6165                	.insn	2, 0x6165
    1322:	5370                	.insn	2, 0x5370
    1324:	7a69                	.insn	2, 0x7a69
    1326:	0065                	.insn	2, 0x0065
    1328:	6c42                	.insn	2, 0x6c42
    132a:	4c6b636f          	jal	t1,b77f0 <__start-0x7ff48810>
    132e:	6e69                	.insn	2, 0x6e69
    1330:	00745f6b          	.insn	4, 0x00745f6b
    1334:	4e78                	.insn	2, 0x4e78
    1336:	6d75                	.insn	2, 0x6d75
    1338:	6562                	.insn	2, 0x6562
    133a:	4f72                	.insn	2, 0x4f72
    133c:	5366                	.insn	2, 0x5366
    133e:	6375                	.insn	2, 0x6375
    1340:	73736563          	bltu	t1,s7,1a6a <__start-0x7fffe596>
    1344:	7566                	.insn	2, 0x7566
    1346:	416c                	.insn	2, 0x416c
    1348:	6c6c                	.insn	2, 0x6c6c
    134a:	7461636f          	jal	t1,17a90 <__start-0x7ffe8570>
    134e:	6f69                	.insn	2, 0x6f69
    1350:	736e                	.insn	2, 0x736e
    1352:	7800                	.insn	2, 0x7800
    1354:	7641                	.insn	2, 0x7641
    1356:	6961                	.insn	2, 0x6961
    1358:	616c                	.insn	2, 0x616c
    135a:	6c62                	.insn	2, 0x6c62
    135c:	4865                	.insn	2, 0x4865
    135e:	6165                	.insn	2, 0x6165
    1360:	5370                	.insn	2, 0x5370
    1362:	6170                	.insn	2, 0x6170
    1364:	6e496563          	bltu	s2,tp,1a4e <__start-0x7fffe5b2>
    1368:	7942                	.insn	2, 0x7942
    136a:	6574                	.insn	2, 0x6574
    136c:	48780073          	.insn	4, 0x48780073
    1370:	6165                	.insn	2, 0x6165
    1372:	5370                	.insn	2, 0x5370
    1374:	7274                	.insn	2, 0x7274
    1376:	6375                	.insn	2, 0x6375
    1378:	5374                	.insn	2, 0x5374
    137a:	7a69                	.insn	2, 0x7a69
    137c:	0065                	.insn	2, 0x0065
    137e:	7670                	.insn	2, 0x7670
    1380:	6f50                	.insn	2, 0x6f50
    1382:	7472                	.insn	2, 0x7472
    1384:	6c6c6143          	.insn	4, 0x6c6c6143
    1388:	7800636f          	jal	t1,7b08 <__start-0x7fff84f8>
    138c:	7246                	.insn	2, 0x7246
    138e:	6565                	.insn	2, 0x6565
    1390:	7942                	.insn	2, 0x7942
    1392:	6574                	.insn	2, 0x6574
    1394:	6d655273          	csrrwi	tp,0x6d6,10
    1398:	6961                	.insn	2, 0x6961
    139a:	696e                	.insn	2, 0x696e
    139c:	676e                	.insn	2, 0x676e
    139e:	7800                	.insn	2, 0x7800
    13a0:	657a6953          	.insn	4, 0x657a6953
    13a4:	614c664f          	.insn	4, 0x614c664f
    13a8:	6772                	.insn	2, 0x6772
    13aa:	7365                	.insn	2, 0x7365
    13ac:	4674                	.insn	2, 0x4674
    13ae:	6572                	.insn	2, 0x6572
    13b0:	4265                	.insn	2, 0x4265
    13b2:	6f6c                	.insn	2, 0x6f6c
    13b4:	6e496b63          	bltu	s2,tp,1aaa <__start-0x7fffe556>
    13b8:	7942                	.insn	2, 0x7942
    13ba:	6574                	.insn	2, 0x6574
    13bc:	72700073          	.insn	4, 0x72700073
    13c0:	4876                	.insn	2, 0x4876
    13c2:	6165                	.insn	2, 0x6165
    13c4:	4970                	.insn	2, 0x4970
    13c6:	696e                	.insn	2, 0x696e
    13c8:	0074                	.insn	2, 0x0074
    13ca:	7870                	.insn	2, 0x7870
    13cc:	6c42                	.insn	2, 0x6c42
    13ce:	546b636f          	jal	t1,b7914 <__start-0x7ff486ec>
    13d2:	736e496f          	jal	s2,e5b08 <__start-0x7ff1a4f8>
    13d6:	7265                	.insn	2, 0x7265
    13d8:	0074                	.insn	2, 0x0074
    13da:	5478                	.insn	2, 0x5478
    13dc:	6c61746f          	jal	s0,18aa2 <__start-0x7ffe755e>
    13e0:	6548                	.insn	2, 0x6548
    13e2:	7061                	.insn	2, 0x7061
    13e4:	657a6953          	.insn	4, 0x657a6953
    13e8:	7800                	.insn	2, 0x7800
    13ea:	754e                	.insn	2, 0x754e
    13ec:	626d                	.insn	2, 0x626d
    13ee:	7265                	.insn	2, 0x7265
    13f0:	7553664f          	.insn	4, 0x7553664f
    13f4:	73656363          	bltu	a0,s6,1b1a <__start-0x7fffe4e6>
    13f8:	6c756673          	csrrsi	a2,0x6c7,10
    13fc:	7246                	.insn	2, 0x7246
    13fe:	6565                	.insn	2, 0x6565
    1400:	42780073          	.insn	4, 0x42780073
    1404:	6f6c                	.insn	2, 0x6f6c
    1406:	69536b63          	bltu	t1,s5,1a9c <__start-0x7fffe564>
    140a:	657a                	.insn	2, 0x657a
    140c:	7800                	.insn	2, 0x7800
    140e:	72617453          	.insn	4, 0x72617453
    1412:	0074                	.insn	2, 0x0074
    1414:	4278                	.insn	2, 0x4278
    1416:	6f6c                	.insn	2, 0x6f6c
    1418:	00736b63          	bltu	t1,t2,142e <__start-0x7fffebd2>
    141c:	4e78                	.insn	2, 0x4e78
    141e:	6d75                	.insn	2, 0x6d75
    1420:	7000                	.insn	2, 0x7000
    1422:	4678                	.insn	2, 0x4678
    1424:	7269                	.insn	2, 0x7269
    1426:	72467473          	csrrci	s0,mhpmevent4h,12
    142a:	6565                	.insn	2, 0x6565
    142c:	6c42                	.insn	2, 0x6c42
    142e:	006b636f          	jal	t1,b7434 <__start-0x7ff48bcc>
    1432:	5778                	.insn	2, 0x5778
    1434:	6e61                	.insn	2, 0x6e61
    1436:	6574                	.insn	2, 0x6574
    1438:	5364                	.insn	2, 0x5364
    143a:	7a69                	.insn	2, 0x7a69
    143c:	0065                	.insn	2, 0x0065
    143e:	5076                	.insn	2, 0x5076
    1440:	4974726f          	jal	tp,490d6 <__start-0x7ffb6f2a>
    1444:	696e                	.insn	2, 0x696e
    1446:	6974                	.insn	2, 0x6974
    1448:	6c61                	.insn	2, 0x6c61
    144a:	7369                	.insn	2, 0x7369
    144c:	4265                	.insn	2, 0x4265
    144e:	6f6c                	.insn	2, 0x6f6c
    1450:	00736b63          	bltu	t1,t2,1466 <__start-0x7fffeb9a>
    1454:	5076                	.insn	2, 0x5076
    1456:	4774726f          	jal	tp,490cc <__start-0x7ffb6f34>
    145a:	7465                	.insn	2, 0x7465
    145c:	6548                	.insn	2, 0x6548
    145e:	7061                	.insn	2, 0x7061
    1460:	74617453          	.insn	4, 0x74617453
    1464:	78700073          	.insn	4, 0x78700073
    1468:	694c                	.insn	2, 0x694c
    146a:	6b6e                	.insn	2, 0x6b6e
    146c:	7500                	.insn	2, 0x7500
    146e:	61654863          	blt	a0,s6,1a7e <__start-0x7fffe582>
    1472:	0070                	.insn	2, 0x0070
    1474:	2f637273          	csrrci	tp,0x2f6,6
    1478:	6f62                	.insn	2, 0x6f62
    147a:	6c5f746f          	jal	s0,f933e <__start-0x7ff06cc2>
    147e:	6564616f          	jal	sp,47ad4 <__start-0x7ffb852c>
    1482:	2e72                	.insn	2, 0x2e72
    1484:	616d0073          	.insn	4, 0x616d0073
    1488:	5f006b73          	csrrsi	s6,0x5f0,0
    148c:	635f 7a6c 6973      	.insn	6, 0x69737a6c635f
    1492:	0032                	.insn	2, 0x0032
    1494:	6564                	.insn	2, 0x6564
    1496:	5f007473          	csrrci	s0,0x5f0,0
    149a:	6d5f 6c75 6973      	.insn	6, 0x69736c756d5f
    14a0:	65720033          	.insn	4, 0x65720033
    14a4:	746c7573          	csrrci	a0,0x746,24
    14a8:	6300                	.insn	2, 0x6300
    14aa:	746e756f          	jal	a0,e8bf0 <__start-0x7ff17410>
    14ae:	5f00                	.insn	2, 0x5f00
    14b0:	755f 6964 7376      	.insn	6, 0x73766964755f
    14b6:	3369                	.insn	2, 0x3369
    14b8:	6e00                	.insn	2, 0x6e00
    14ba:	6765                	.insn	2, 0x6765
    14bc:	7461                	.insn	2, 0x7461
    14be:	7669                	.insn	2, 0x7669
    14c0:	0065                	.insn	2, 0x0065

Disassembly of section .debug_line_str:

00000000 <.debug_line_str>:
   0:	6d6f682f          	.insn	4, 0x6d6f682f
   4:	2f65                	.insn	2, 0x2f65
   6:	7572                	.insn	2, 0x7572
   8:	3172                	.insn	2, 0x3172
   a:	69462f6b          	.insn	4, 0x69462f6b
   e:	616e                	.insn	2, 0x616e
  10:	546c                	.insn	2, 0x546c
  12:	7061                	.insn	2, 0x7061
  14:	6f65                	.insn	2, 0x6f65
  16:	7475                	.insn	2, 0x7475
  18:	6e69462f          	.insn	4, 0x6e69462f
  1c:	6c61                	.insn	2, 0x6c61
  1e:	6154                	.insn	2, 0x6154
  20:	6570                	.insn	2, 0x6570
  22:	2f74756f          	jal	a0,47b18 <__start-0x7ffb84e8>
  26:	6f435f43          	.insn	4, 0x6f435f43
  2a:	6564                	.insn	2, 0x6564
  2c:	7300                	.insn	2, 0x7300
  2e:	6372                	.insn	2, 0x6372
  30:	69616d2f          	.insn	4, 0x69616d2f
  34:	2e6e                	.insn	2, 0x2e6e
  36:	72730063          	beq	t1,t2,756 <__start-0x7ffff8aa>
  3a:	72460063          	beq	a2,tp,75a <__start-0x7ffff8a6>
  3e:	6565                	.insn	2, 0x6565
  40:	5452                	.insn	2, 0x5452
  42:	4b2d534f          	.insn	4, 0x4b2d534f
  46:	7265                	.insn	2, 0x7265
  48:	656e                	.insn	2, 0x656e
  4a:	2f6c                	.insn	2, 0x2f6c
  4c:	696c                	.insn	2, 0x696c
  4e:	632e7473          	csrrci	s0,0x632,28
  52:	4600                	.insn	2, 0x4600
  54:	6572                	.insn	2, 0x6572
  56:	5265                	.insn	2, 0x5265
  58:	4f54                	.insn	2, 0x4f54
  5a:	654b2d53          	.insn	4, 0x654b2d53
  5e:	6e72                	.insn	2, 0x6e72
  60:	6c65                	.insn	2, 0x6c65
  62:	2f00                	.insn	2, 0x2f00
  64:	2f74706f          	jal	zero,47b5a <__start-0x7ffb84a6>
  68:	6972                	.insn	2, 0x6972
  6a:	2f766373          	csrrsi	t1,0x2f7,12
  6e:	696c                	.insn	2, 0x696c
  70:	2f62                	.insn	2, 0x2f62
  72:	2f636367          	.insn	4, 0x2f636367
  76:	6972                	.insn	2, 0x6972
  78:	36766373          	csrrsi	t1,0x367,12
  7c:	2d34                	.insn	2, 0x2d34
  7e:	6e75                	.insn	2, 0x6e75
  80:	776f6e6b          	.insn	4, 0x776f6e6b
  84:	2d6e                	.insn	2, 0x2d6e
  86:	696c                	.insn	2, 0x696c
  88:	756e                	.insn	2, 0x756e
  8a:	2d78                	.insn	2, 0x2d78
  8c:	2f756e67          	.insn	4, 0x2f756e67
  90:	3431                	.insn	2, 0x3431
  92:	322e                	.insn	2, 0x322e
  94:	302e                	.insn	2, 0x302e
  96:	636e692f          	.insn	4, 0x636e692f
  9a:	756c                	.insn	2, 0x756c
  9c:	6564                	.insn	2, 0x6564
  9e:	4600                	.insn	2, 0x4600
  a0:	6572                	.insn	2, 0x6572
  a2:	5265                	.insn	2, 0x5265
  a4:	4f54                	.insn	2, 0x4f54
  a6:	654b2d53          	.insn	4, 0x654b2d53
  aa:	6e72                	.insn	2, 0x6e72
  ac:	6c65                	.insn	2, 0x6c65
  ae:	726f702f          	.insn	4, 0x726f702f
  b2:	6174                	.insn	2, 0x6174
  b4:	6c62                	.insn	2, 0x6c62
  b6:	2f65                	.insn	2, 0x2f65
  b8:	2f434347          	.insn	4, 0x2f434347
  bc:	4952                	.insn	2, 0x4952
  be:	562d4353          	.insn	4, 0x562d4353
  c2:	4600                	.insn	2, 0x4600
  c4:	6572                	.insn	2, 0x6572
  c6:	5265                	.insn	2, 0x5265
  c8:	4f54                	.insn	2, 0x4f54
  ca:	654b2d53          	.insn	4, 0x654b2d53
  ce:	6e72                	.insn	2, 0x6e72
  d0:	6c65                	.insn	2, 0x6c65
  d2:	636e692f          	.insn	4, 0x636e692f
  d6:	756c                	.insn	2, 0x756c
  d8:	6564                	.insn	2, 0x6564
  da:	7300                	.insn	2, 0x7300
  dc:	6474                	.insn	2, 0x6474
  de:	6e69                	.insn	2, 0x6e69
  e0:	2d74                	.insn	2, 0x2d74
  e2:	2e636367          	.insn	4, 0x2e636367
  e6:	0068                	.insn	2, 0x0068
  e8:	6f70                	.insn	2, 0x6f70
  ea:	7472                	.insn	2, 0x7472
  ec:	616d                	.insn	2, 0x616d
  ee:	2e6f7263          	bgeu	t5,t1,3d2 <__start-0x7ffffc2e>
  f2:	0068                	.insn	2, 0x0068
  f4:	696c                	.insn	2, 0x696c
  f6:	682e7473          	csrrci	s0,0x682,28
  fa:	4600                	.insn	2, 0x4600
  fc:	6572                	.insn	2, 0x6572
  fe:	5265                	.insn	2, 0x5265
 100:	4f54                	.insn	2, 0x4f54
 102:	654b2d53          	.insn	4, 0x654b2d53
 106:	6e72                	.insn	2, 0x6e72
 108:	6c65                	.insn	2, 0x6c65
 10a:	6575712f          	.insn	4, 0x6575712f
 10e:	6575                	.insn	2, 0x6575
 110:	632e                	.insn	2, 0x632e
 112:	2f00                	.insn	2, 0x2f00
 114:	2f74706f          	jal	zero,47c0a <__start-0x7ffb83f6>
 118:	6972                	.insn	2, 0x6972
 11a:	2f766373          	csrrsi	t1,0x2f7,12
 11e:	72737973          	csrrci	s2,mhpmevent7h,6
 122:	2f746f6f          	jal	t5,46c18 <__start-0x7ffb93e8>
 126:	7375                	.insn	2, 0x7375
 128:	2f72                	.insn	2, 0x2f72
 12a:	6e69                	.insn	2, 0x6e69
 12c:	64756c63          	bltu	a0,t2,784 <__start-0x7ffff87c>
 130:	2f65                	.insn	2, 0x2f65
 132:	6962                	.insn	2, 0x6962
 134:	7374                	.insn	2, 0x7374
 136:	2f00                	.insn	2, 0x2f00
 138:	2f74706f          	jal	zero,47c2e <__start-0x7ffb83d2>
 13c:	6972                	.insn	2, 0x6972
 13e:	2f766373          	csrrsi	t1,0x2f7,12
 142:	72737973          	csrrci	s2,mhpmevent7h,6
 146:	2f746f6f          	jal	t5,46c3c <__start-0x7ffb93c4>
 14a:	7375                	.insn	2, 0x7375
 14c:	2f72                	.insn	2, 0x2f72
 14e:	6e69                	.insn	2, 0x6e69
 150:	64756c63          	bltu	a0,t2,7a8 <__start-0x7ffff858>
 154:	0065                	.insn	2, 0x0065
 156:	64647473          	csrrci	s0,hviprio1,8
 15a:	6665                	.insn	2, 0x6665
 15c:	682e                	.insn	2, 0x682e
 15e:	7400                	.insn	2, 0x7400
 160:	7079                	.insn	2, 0x7079
 162:	7365                	.insn	2, 0x7365
 164:	682e                	.insn	2, 0x682e
 166:	7300                	.insn	2, 0x7300
 168:	6474                	.insn	2, 0x6474
 16a:	6e69                	.insn	2, 0x6e69
 16c:	2d74                	.insn	2, 0x2d74
 16e:	6e69                	.insn	2, 0x6e69
 170:	6e74                	.insn	2, 0x6e74
 172:	682e                	.insn	2, 0x682e
 174:	7400                	.insn	2, 0x7400
 176:	7361                	.insn	2, 0x7361
 178:	00682e6b          	.insn	4, 0x00682e6b
 17c:	7571                	.insn	2, 0x7571
 17e:	7565                	.insn	2, 0x7565
 180:	2e65                	.insn	2, 0x2e65
 182:	0068                	.insn	2, 0x0068
 184:	6f70                	.insn	2, 0x6f70
 186:	7472                	.insn	2, 0x7472
 188:	6261                	.insn	2, 0x6261
 18a:	656c                	.insn	2, 0x656c
 18c:	682e                	.insn	2, 0x682e
 18e:	7300                	.insn	2, 0x7300
 190:	7274                	.insn	2, 0x7274
 192:	6e69                	.insn	2, 0x6e69
 194:	00682e67          	.insn	4, 0x00682e67
 198:	7246                	.insn	2, 0x7246
 19a:	6565                	.insn	2, 0x6565
 19c:	5452                	.insn	2, 0x5452
 19e:	4b2d534f          	.insn	4, 0x4b2d534f
 1a2:	7265                	.insn	2, 0x7265
 1a4:	656e                	.insn	2, 0x656e
 1a6:	2f6c                	.insn	2, 0x2f6c
 1a8:	6174                	.insn	2, 0x6174
 1aa:	2e736b73          	csrrsi	s6,0x2e7,6
 1ae:	72700063          	beq	zero,t2,8ce <__start-0x7ffff732>
 1b2:	65646a6f          	jal	s4,46808 <__start-0x7ffb97f8>
 1b6:	7366                	.insn	2, 0x7366
 1b8:	682e                	.insn	2, 0x682e
 1ba:	4600                	.insn	2, 0x4600
 1bc:	6572                	.insn	2, 0x6572
 1be:	5265                	.insn	2, 0x5265
 1c0:	4f54                	.insn	2, 0x4f54
 1c2:	654b2d53          	.insn	4, 0x654b2d53
 1c6:	6e72                	.insn	2, 0x6e72
 1c8:	6c65                	.insn	2, 0x6c65
 1ca:	726f702f          	.insn	4, 0x726f702f
 1ce:	6174                	.insn	2, 0x6174
 1d0:	6c62                	.insn	2, 0x6c62
 1d2:	2f65                	.insn	2, 0x2f65
 1d4:	2f434347          	.insn	4, 0x2f434347
 1d8:	4952                	.insn	2, 0x4952
 1da:	562d4353          	.insn	4, 0x562d4353
 1de:	726f702f          	.insn	4, 0x726f702f
 1e2:	2e74                	.insn	2, 0x2e74
 1e4:	72460063          	beq	a2,tp,904 <__start-0x7ffff6fc>
 1e8:	6565                	.insn	2, 0x6565
 1ea:	5452                	.insn	2, 0x5452
 1ec:	4b2d534f          	.insn	4, 0x4b2d534f
 1f0:	7265                	.insn	2, 0x7265
 1f2:	656e                	.insn	2, 0x656e
 1f4:	2f6c                	.insn	2, 0x2f6c
 1f6:	6f70                	.insn	2, 0x6f70
 1f8:	7472                	.insn	2, 0x7472
 1fa:	6261                	.insn	2, 0x6261
 1fc:	656c                	.insn	2, 0x656c
 1fe:	6d654d2f          	.insn	4, 0x6d654d2f
 202:	614d                	.insn	2, 0x614d
 204:	676e                	.insn	2, 0x676e
 206:	6165682f          	.insn	4, 0x6165682f
 20a:	5f70                	.insn	2, 0x5f70
 20c:	2e34                	.insn	2, 0x2e34
 20e:	72460063          	beq	a2,tp,92e <__start-0x7ffff6d2>
 212:	6565                	.insn	2, 0x6565
 214:	5452                	.insn	2, 0x5452
 216:	4b2d534f          	.insn	4, 0x4b2d534f
 21a:	7265                	.insn	2, 0x7265
 21c:	656e                	.insn	2, 0x656e
 21e:	2f6c                	.insn	2, 0x2f6c
 220:	6f70                	.insn	2, 0x6f70
 222:	7472                	.insn	2, 0x7472
 224:	6261                	.insn	2, 0x6261
 226:	656c                	.insn	2, 0x656c
 228:	6d654d2f          	.insn	4, 0x6d654d2f
 22c:	614d                	.insn	2, 0x614d
 22e:	676e                	.insn	2, 0x676e
 230:	6900                	.insn	2, 0x6900
 232:	636e                	.insn	2, 0x636e
 234:	756c                	.insn	2, 0x756c
 236:	6564                	.insn	2, 0x6564
 238:	75662f73          	csrrs	t5,0x756,a2
 23c:	636e                	.insn	2, 0x636e
 23e:	6974                	.insn	2, 0x6974
 240:	2e736e6f          	jal	t3,36d26 <__start-0x7ffc92da>
 244:	6e690063          	beq	s2,t1,924 <__start-0x7ffff6dc>
 248:	64756c63          	bltu	a0,t2,8a0 <__start-0x7ffff760>
 24c:	7365                	.insn	2, 0x7365
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347          	.insn	4, 0x3a434347
   4:	2820                	.insn	2, 0x2820
   6:	2029                	.insn	2, 0x2029
   8:	3431                	.insn	2, 0x3431
   a:	322e                	.insn	2, 0x322e
   c:	302e                	.insn	2, 0x302e
	...

Disassembly of section .riscv.attributes:

00000000 <.riscv.attributes>:
   0:	2841                	.insn	2, 0x2841
   2:	0000                	.insn	2, 0x
   4:	7200                	.insn	2, 0x7200
   6:	7369                	.insn	2, 0x7369
   8:	01007663          	bgeu	zero,a6,14 <__start-0x7fffffec>
   c:	001e                	.insn	2, 0x001e
   e:	0000                	.insn	2, 0x
  10:	1004                	.insn	2, 0x1004
  12:	7205                	.insn	2, 0x7205
  14:	3376                	.insn	2, 0x3376
  16:	6932                	.insn	2, 0x6932
  18:	7032                	.insn	2, 0x7032
  1a:	5f31                	.insn	2, 0x5f31
  1c:	697a                	.insn	2, 0x697a
  1e:	32727363          	bgeu	tp,t2,344 <__start-0x7ffffcbc>
  22:	3070                	.insn	2, 0x3070
  24:	0800                	.insn	2, 0x0800
  26:	0a01                	.insn	2, 0x0a01
  28:	Address 0x28 is out of bounds.


Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	ffff                	.insn	2, 0xffff
   2:	ffff                	.insn	2, 0xffff
   4:	0000                	.insn	2, 0x
   6:	0000                	.insn	2, 0x
   8:	49c0                	.insn	2, 0x49c0
   a:	8000                	.insn	2, 0x8000
   c:	4ae0                	.insn	2, 0x4ae0
   e:	8000                	.insn	2, 0x8000
  10:	4ae0                	.insn	2, 0x4ae0
  12:	8000                	.insn	2, 0x8000
  14:	4ce4                	.insn	2, 0x4ce4
  16:	8000                	.insn	2, 0x8000
  18:	4ce4                	.insn	2, 0x4ce4
  1a:	8000                	.insn	2, 0x8000
  1c:	4e34                	.insn	2, 0x4e34
  1e:	8000                	.insn	2, 0x8000
  20:	4e34                	.insn	2, 0x4e34
  22:	8000                	.insn	2, 0x8000
  24:	4fd0                	.insn	2, 0x4fd0
  26:	8000                	.insn	2, 0x8000
  28:	5000                	.insn	2, 0x5000
  2a:	8000                	.insn	2, 0x8000
  2c:	51ec                	.insn	2, 0x51ec
  2e:	8000                	.insn	2, 0x8000
	...
